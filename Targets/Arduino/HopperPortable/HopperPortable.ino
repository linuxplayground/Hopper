// Platform

unsigned char * memoryBlock = nullptr;
bool exited;

// Machine

//#define CHECKED

#define INLINED
#define INCLUDELONGS

typedef unsigned char  Byte;
typedef unsigned char  Char;
typedef unsigned short UInt;
typedef   signed short Int;
typedef           bool Bool;

enum Type
{
    tNone,
    tChar = 1,
    tInt = 2,
    tByte = 3,
    tUInt = 4,
    tReference = 5,
    tBool = 6,
    tEnum = 7,
    tFlags = 8,

    tDelegate = 0x0B,
    tType = 0x0C,

    tHeapTypes = 0x0D,
    tLong = 0x0E,
    tString = 0x0F,
};

const UInt stackSize = 512;
const UInt callStackSize = 512;

UInt valuestack[stackSize];
Type typestack [stackSize];
UInt callstack [callStackSize];

UInt sp;
UInt bp;
UInt csp;
Byte lastError;

// Platform


void Platform_Initialize()
{
    if (nullptr != memoryBlock)
    {
        Platform_Release();
    }
    memoryBlock = (unsigned char* )calloc(1024*48, sizeof(unsigned char)); // 48K
}

void Platform_Release()
{
    free(memoryBlock);
    memoryBlock = nullptr;
}


void Serial_WriteChar(Byte /*iOverload*/)
{
    Char value = (Char)PopStack();
    if (value == (Char)0x0D)
    {
        value = (Char)0x0A;
    }
    char str[2];
    str[0] = value;
    str[1] = 0;
    Serial.print(str);
}

void Serial_ReadChar(Byte /*iOverload*/)
{
    while (Serial.available() == 0)
    {
        //digitalWrite(LED_BUILTIN, HIGH);
        //delay(300);
        //digitalWrite(LED_BUILTIN, LOW);
        //delay(300);

        yield();
    }
    int ch = Serial.read();
    if (ch == (Char)0x0A)
    {
        ch = 0x0D;
    }
    PushStack((Char)ch, Type::tChar);
}
void Serial_IsAvailable_Get(Byte /*iOverload*/)
{
    yield();
    PushStack((Serial.available() != 0) ? 1 : 0, Type::tBool); // TODO MCU
}


void Memory_ReadByte(Byte /* iOverload */)
{
#ifdef INLINED
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]];
    typestack [sp-1] = Type::tByte;
#else
    UInt address = PopStack();
    PushStack(memoryBlock[address], Type::tByte);
#endif
}

void Memory_WriteByte(Byte /* iOverload */)
{
#ifdef INLINED
    sp = sp - 2;
    memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];
#else
    Byte value   = (Byte)PopStack();
    UInt address = PopStack();
    memoryBlock[address] = value;
#endif
}

void External_UIntToInt()
{
    UInt ui = PopStack();
    Int i = (Int)ui;
    PushStack(i, Type::tInt);
}
void External_IntToUInt()
{
    Int i = PopStackI();
    UInt ui = (UInt)i;
    PushStack(ui, Type::tUInt);
}

void HRLong_New(void);

void External_GetMillis()
{
    unsigned long ticks = millis();
    External_hopperLongFromNativeLong((long)ticks);
}
void External_Delay()
{
    UInt ms = PopStack();
    delay(ms);
}

void External_PinMode()
{
    Byte value = (Byte)PopStack();
    Byte pin  = (Byte)PopStack();
    pinMode(pin, value);
}

void External_DigitalWrite()
{
    Byte value = (Byte)PopStack();
    Byte pin  = (Byte)PopStack();
    digitalWrite(pin, value);
}

void External_DigitalRead()
{
    Byte pin  = (Byte)PopStack();
    Byte value = digitalRead(pin);
    PushStack(value, Type::tByte);
}

void External_hopperLongFromNativeLong(long nativeLong)
{
    Byte* bytes = (Byte*)(&nativeLong);
    HRLong_New();
    UInt hopperLong = PopStack();

    memoryBlock[hopperLong + 2] = *(bytes + 0);
    memoryBlock[hopperLong + 3] = *(bytes + 1);
    memoryBlock[hopperLong + 4] = *(bytes + 2);
    memoryBlock[hopperLong + 5] = *(bytes + 3);
    
    PushStack(hopperLong, Type::tLong);
}
long External_nativeLongFromHopperLong()
{
    long nativeLong = 0;
    Byte* bytes = (Byte*)(&nativeLong);

    UInt hopperLong = PopStack();

    *(bytes + 0) = memoryBlock[hopperLong + 2];
    *(bytes + 1) = memoryBlock[hopperLong + 3];
    *(bytes + 2) = memoryBlock[hopperLong + 4];
    *(bytes + 3) = memoryBlock[hopperLong + 5];
    
    return nativeLong;
}

void External_LongEQ()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    PushStack(next == top? 1 : 0, Type::tBool);
}
void External_LongGT()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    PushStack(next > top ? 1 : 0, Type::tBool);
}
void External_LongLT()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    PushStack(next < top ? 1 : 0, Type::tBool);
}
void External_LongGE()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    PushStack(next >= top ? 1 : 0, Type::tBool);
}
void External_LongLE()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    PushStack(next <= top ? 1 : 0, Type::tBool);
}

void External_LongAdd()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    External_hopperLongFromNativeLong(next + top);
}
void External_LongSub()
{
    long top  = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    External_hopperLongFromNativeLong(next - top);
}
void External_LongDiv()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    External_hopperLongFromNativeLong(next / top); // TODO : division by zero
}
void External_LongMul()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    External_hopperLongFromNativeLong(next * top);
}
void External_LongMod()
{
    long top = External_nativeLongFromHopperLong();
    long next = External_nativeLongFromHopperLong();
    External_hopperLongFromNativeLong(next % top); // TODO : division by zero
}

void External_WatchDog()
{
    yield();
}


// Machine




void Machine_Initialize()
{
    sp = 0;
    bp = 0;
    csp = 0;
    lastError = 0;
}
void DecSP(UInt delta)
{
#ifdef CHECKED  
    if (sp < delta)
    {
        Error(0x07);
    }
    else
#endif    
    {
        sp = sp - delta;
    }
}
UInt PopStack(Type * type)
{
    UInt value = 0;
#ifdef CHECKED      
    if (sp == 0)
    {
        Error(0x07);
    }
    else
#endif    
    {
        sp--;
        *type = typestack[sp];
        value = valuestack[sp];
    }
    return value;
}
UInt PopStack()
{
    Type type;
    return PopStack(&type);
}
Int PopStackI()
{
    Type type;
    return (Int)PopStack(&type);
}

Type GetStackType(UInt address)
{
    return typestack[address];
}
UInt GetStack(UInt address, Type * type)
{
    *type = typestack[address];
    return valuestack[address];
}
UInt GetStack(UInt address)
{
    return valuestack[address];
}
void PushStackI(Int value)
{
#ifdef CHECKED    
    if (sp == stackSize)
    {
        Error(0x07);
    }
    else
#endif
    {
        typestack[sp] = Type::tInt;
        valuestack[sp] = (UInt)value;
        sp++;
    }
}

void PushStack(UInt value, Type type)
{
#ifdef CHECKED  
    if (sp == stackSize)
    {
        Error(0x07);
    }
    else
#endif
    {
        typestack[sp] = type;
        valuestack[sp] = value;
        sp++;
    }
}
void PutStack(UInt address, UInt value, Type type)
{
    typestack[address]  = type;
    valuestack[address] = value;
}
void PutStackType(UInt address, Type type)
{
    typestack[address] = type;
}
void PutStack(UInt address, UInt value)
{
    valuestack[address] = value;
}

void PushBP()
{
#ifdef CHECKED    
    if (sp == callStackSize)
    {
        Error(0x06);
    }
    else
#endif
    {
        callstack[csp] = bp;
        bp = sp;
        csp++;
    }
}
void PopBP()
{
#ifdef CHECKED    
    if (csp == 0)
    {
        Error(0x06);
    }
    else
#endif
    {
        csp--;
        bp = callstack[csp];
    }
}



// lastError codes:
//   0x00 - ok
//   0x01 - list index out of range
//   0x02 - array index out of range
//   0x03 - no entry for key in dictionary
//   0x04 - division by zero attempted
//   0x05 - string index out of range
//   0x06 - call stack overflow
//   0x07 - argument stack overflow
//   0x08 - failed dynamic cast
//   0x09 - invalid variant type
//   0x0A - feature not implemented
//   0x0B - system failure (internal error)
//   0x0C - memory allocation failure
//   0x0D - numeric type out of range / overflow
//   0x0E - error returned from a failing child exe

void Error(Byte error, UInt pc)
{
    lastError = error;
    if (0 != error)
    {
        char buffer[40];
        sprintf(buffer, "Error: 0x%02x (PC=0x%04x)\n", error, pc);
        Serial.print(buffer);
        exited = true;
    }
}
void Error(Byte error)
{
    lastError = error;
    if (0 != error)
    {
        char buffer[40];
        sprintf(buffer, "Error: 0x%02x\n", error);
        Serial.print(buffer);
        exited = true;
    }
}

void Diagnostics_SetError(Byte /*iOverload*/)
{
    Byte value = (Byte)PopStack();
    Error(value);
}



void HopperEntryPoint();


void setup() 
{
  Serial.begin(57600, SERIAL_8N1);
  delay(500);
  
  pinMode(LED_BUILTIN, OUTPUT);

  memoryBlock = nullptr;
  exited = false;
  
  Machine_Initialize();
  Platform_Initialize();

  for (int i = 0; i < 5; i++)
  {
    digitalWrite(LED_BUILTIN, HIGH);
    delay(50);
    digitalWrite(LED_BUILTIN, LOW);
    delay(50);
  }
}

void loop() 
{
  if (!exited)
  {
    HopperEntryPoint();

    Platform_Release();

    exited = true;
  }
}






const Byte constantData[] = {
0x00     };

void Runtime_main_0x0000();
void Runtime_MCU_0x000C();
void Runtime_FromHex_0x0001();
void Runtime_WaitForEnter_0x0008();
void Runtime_DumpPage_0x000B();
void Runtime_Out4Hex_0x0009();
void Runtime_Out2Hex_0x000A();
void Runtime_SerialLoadIHex_0x0007();
void Runtime_TryReadSerialByte_0x0006();
void HopperVM_Restart_0x009F();
void HopperVM_ClearBreakpoints_0x0099();
void HopperVM_SetBreakpoint_0x009B();
void HopperVM_Initialize_0x009C();
void HopperVM_Execute_0x00BA();
void HopperVM_ExecuteStepTo_0x00B8();
void HopperVM_ExecuteWarp_0x00B9();
void HopperVM_GetBreakpoint_0x009A();
void HopperVM_GetCS_0x00AC();
void HopperVM_Get_0x00A3();
void HopperVM_MemoryReset_0x009D();
void HopperVM_ExecuteOpCode_0x00B7();
void HopperVM_Pop_0x00AB();
void HopperVM_Push_0x00A9();
void HopperVM_PopI_0x00A7();
void HopperVM_PushI_0x00A4();
void HopperVM_ReadWordOperand_0x00AF();
void HopperVM_ReadByteOperand_0x00B0();
void HopperVM_ReadByteOffsetOperand_0x00B1();
void HopperVM_Put_0x00A2();
void HopperVM_ReadWordOffsetOperand_0x00B2();
void HopperVM_Pop_0x00AA();
void HopperVM_PopI_0x00A6();
void HopperVM_ExecuteSysCall_0x00A1();
void HopperVM_PushCS_0x00AD();
void HopperVM_LookupMethod_0x00A0();
void HopperVM_PopCS_0x00AE();
void Memory_Free_0x0018();
void Memory_Initialize_0x0016();
void Memory_Allocate_0x0017();
void Memory_Set_0x001B();
void Char_ToHex_0x00C1();
void Minimal_Error_Set_0x000D();
void IO_IsBreak_0x00E5();
void IO_WriteLn_0x00E0();
void IO_Write_0x00DE();
void IO_Clear_0x00D8();
void IO_WriteHex_0x00DD();
void IO_WriteHex_0x00DC();
void IO_PushKey_0x00E6();
void HRArray_Release_0x0024();
void HRArray_Initialize_0x0023();
void HRArray_New();
void HRArray_GetItem_0x0028();
void HRArray_SetItem_0x0029();
void HRArray_GetCount_0x0027();
void Runtime_ErrorDump_0x0004();
void Types_IsReferenceType_0x001C();
void GC_AddReference_0x001F();
void GC_Release_0x0020();
void GC_Clone_0x001E();
void GC_New();
void HRString_GetLength_0x0060();
void HRString_GetChar_0x0061();
void HRString_NewFromConstant0();
void HRString_NewFromConstant1();
void HRString_New();
void HRString_InsertChar_0x0065();
void HRString_EndsWith_0x0072();
void HRString_EndsWith_0x0073();
void HRString_Compare_0x0074();
void HRString_Replace_0x0067();
void HRString_Replace_0x0068();
void HRString_Append_0x0062();
void HRString_Append_0x0066();
void HRString_Substring_0x0064();
void HRString_Substring_0x0063();
void HRString_Substring_0x006D();
void HRString_Build_0x006A();
void HRString_Build_0x006B();
void HRString_Build_0x0069();
void HRString_BuildFront_0x006C();
void HRString_Trim_0x006F();
void HRString_TrimRight_0x0071();
void HRString_TrimLeft_0x0070();
void HRString_TrimLeft_0x006E();
void HRString_Clone_0x005D();
void HRString_clone_0x005E();
void HRString_getCapacity_0x005F();
void HRLong_NewFromConstant();
void HRLong_ToBytes_0x0053();
void HRLong_ToUInt_0x0051();
void HRLong_LongNegate_0x0052();
void HRLong_New();
void HRLong_Clone_0x0050();
void HRFloat_NewFromConstant();
void HRFloat_ToBytes_0x003C();
void HRList_New();
void HRList_GetLength_0x0045();
void HRList_Append_0x0049();
void HRList_SetItem_0x0047();
void HRList_Insert_0x0048();
void HRList_GetItem_0x0046();
void HRList_Clear_0x0043();
void HRList_Remove_0x004B();
void HRList_Contains_0x004A();
void HRList_Clone_0x0040();
void HRList_createItem_0x0044();
void HRList_clearAllItems_0x0042();
void HRList_clearItem_0x0041();
void HRPair_New();
void HRPair_GetValue_0x0058();
void HRPair_GetKey_0x0057();
void HRPair_Clear_0x0056();
void HRPair_Clone_0x0055();
void HRVariant_New();
void HRVariant_Clear_0x007D();
void HRVariant_Clone_0x007C();
void HRVariant_CreateValueVariant_0x0077();
void HRVariant_GetValue_0x007A();
void HRVariant_IsEqual_0x007E();
void HRDictionary_New();
void HRDictionary_GetCount_0x002C();
void HRDictionary_Set_0x0035();
void HRDictionary_Next_0x0034();
void HRDictionary_Contains_0x0037();
void HRDictionary_Get_0x0036();
void HRDictionary_Clear_0x002F();
void HRDictionary_Clone_0x002E();
void HRDictionary_adjustCapacity_0x0033();
void HRDictionary_hashKey16_0x002A();
void HRDictionary_findEntry_0x0031();
void HRDictionary_next_0x0030();
void HRDictionary_validEntry_0x0032();
void HRUInt_ToLong_0x0076();
void HRInt_ToLong_0x003D();
void HRInt_ToBytes_0x003E();
void IO_WriteUInt_0x00DB();
void IO_writeDigit_0x00D9();
void HRVariant_UnBox_0x007B();
void Char_ToDigit_0x00BE();

void HopperEntryPoint()
{
    PushBP(); // place holder push for final return
    Runtime_main_0x0000();
}

void Runtime_main_0x0000()
{
    Type htype = Type::tNone;

    // 0x0000  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0001  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0002  0x1F 0x00       POPGLOBALB 0x00
    PutStack(0, PopStack(&htype), htype);
    // 0x0004  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x37 0x00 0x80  PUSHIW 0x8000
    PushStack(0x8000, Type::tUInt);
    // 0x0009  0x1F 0x04       POPGLOBALB 0x04
    PutStack(2, PopStack(&htype), htype);
    // 0x000B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000C  0x37 0x00 0x40  PUSHIW 0x4000
    PushStack(0x4000, Type::tUInt);
    // 0x000F  0x1F 0x06       POPGLOBALB 0x06
    PutStack(3, PopStack(&htype), htype);
    // 0x0011  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0012  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0015  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0016  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0017  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0018  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0019  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0020  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0021  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0022  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0023  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0024  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0025  0x49            ENTER
    PushBP();

    // MCU();                                                                   runtime.hs:873
    // 
    // 0x0026  0x2C 0x0C       CALLB 0x0C     // Runtime.MCU
    Runtime_MCU_0x000C();

    // }                                                                        runtime.hs:877
    // 
    // 0x0028  0x2A 0x30       RETB 0x30
    DecSP(24); PopBP();
    return;
}

void Runtime_MCU_0x000C()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // loaded = false;                                                          runtime.hs:666
    // 
    // 0x0002  0x1F 0x00       POPGLOBALB 0x00
    PutStack(0, PopStack(&htype), htype);

    // HopperVM.Restart();                                                      runtime.hs:667
    // 
    // 0x0004  0x2C 0x9F       CALLB 0x9F     // HopperVM.Restart
    HopperVM_Restart_0x009F();

    // HopperVM.Restart();                                                      runtime.hs:667
    // 
    // 0x0006  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0007  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Serial.WriteChar(char(slash)); // ready                                  runtime.hs:669
    // 
    // 0x0009  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x000B  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // char ch = Serial.ReadChar();                                             runtime.hs:672
    // 
runtime_MCU_0x000D:
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0010  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (ch == char(escape)) // <esc> from Debugger                           runtime.hs:673
    // 
    // 0x0011  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0012  0x1A 0x1B       PUSHIB 0x1B
    PushStack(0x1B, Type::tByte);
    // 0x0014  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0015  0x31 0x5B 0x02  JZW 0x0270 (+603)
    if (PopStack() == 0) { goto runtime_MCU_0x0270; }

    // Serial.WriteChar(char(slash)); // '\' response -> ready for command
    // 
    // 0x0018  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x001A  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // ch = Serial.ReadChar(); // single letter command                         runtime.hs:676
    // 
    // 0x001C  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x001E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // switch (ch)                                                              runtime.hs:677
    // 
    // 0x001F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0020  0x33 0x26 0x02  JW 0x0246 (+550)
    goto runtime_MCU_0x0246;

    // byte msn = FromHex(Serial.ReadChar());                                   runtime.hs:681
    // 
runtime_MCU_0x0023:
    // 0x0023  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0024  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0026  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x0028  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // byte lsn = FromHex(Serial.ReadChar());                                   runtime.hs:682
    // 
    // 0x002A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002B  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x002D  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x002F  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // WaitForEnter();                                                          runtime.hs:683
    // 
    // 0x0031  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:683
    // 
    // 0x0033  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0034  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0036  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0038  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0039  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x003B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003C  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // DumpPage(iPage, false);                                                  runtime.hs:686
    // 
    // 0x003E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0040  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0041  0x2C 0x0B       CALLB 0x0B     // Runtime.DumpPage
    Runtime_DumpPage_0x000B();

    // Serial.WriteChar(char(slash)); // confirm data                           runtime.hs:687
    // 
    // 0x0043  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x0045  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        runtime.hs:688
    // 
    // 0x0047  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x0049  0x33 0x27 0x02  JW 0x0270 (+551)
    goto runtime_MCU_0x0270;

    // byte msn = FromHex(Serial.ReadChar());                                   runtime.hs:691
    // 
runtime_MCU_0x004C:
    // 0x004C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004D  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x004F  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x0051  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // byte lsn = FromHex(Serial.ReadChar());                                   runtime.hs:692
    // 
    // 0x0053  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0054  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0056  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x0058  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // WaitForEnter();                                                          runtime.hs:693
    // 
    // 0x005A  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:693
    // 
    // 0x005C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x005D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x005F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0061  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0062  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0064  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0065  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // DumpPage(iPage, true);                                                   runtime.hs:696
    // 
    // 0x0067  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0069  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x006A  0x2C 0x0B       CALLB 0x0B     // Runtime.DumpPage
    Runtime_DumpPage_0x000B();

    // Serial.WriteChar(char(slash)); // confirm data                           runtime.hs:697
    // 
    // 0x006C  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x006E  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        runtime.hs:698
    // 
    // 0x0070  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x0072  0x33 0xFE 0x01  JW 0x0270 (+510)
    goto runtime_MCU_0x0270;

    // char arg = Serial.ReadChar();                                            runtime.hs:701
    // 
runtime_MCU_0x0075:
    // 0x0075  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0076  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0078  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (arg == 'X')                                                          runtime.hs:702
    // 
    // 0x007A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x007C  0x1A 0x58       PUSHIB 0x58
    PushStack(0x58, Type::tByte);
    // 0x007E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x007F  0x2E 0x07       JZB 0x0086 (+7)
    if (PopStack() == 0) { goto runtime_MCU_0x0086; }

    // HopperVM.ClearBreakpoints(false);                                        runtime.hs:704
    // 
    // 0x0081  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0082  0x2C 0x99       CALLB 0x99     // HopperVM.ClearBreakpoints
    HopperVM_ClearBreakpoints_0x0099();

    // }                                                                        runtime.hs:705
    // 
    // 0x0084  0x30 0x43       JB 0x00C7 (+67)
    goto runtime_MCU_0x00C7;

    // byte n  = FromHex(arg);                                                  runtime.hs:708
    // 
runtime_MCU_0x0086:
    // 0x0086  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0087  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0089  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x008B  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // byte a3 = FromHex(Serial.ReadChar());                                    runtime.hs:709
    // 
    // 0x008D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x008E  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0090  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x0092  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // byte a2 = FromHex(Serial.ReadChar());                                    runtime.hs:710
    // 
    // 0x0094  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0095  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0097  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x0099  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // byte a1 = FromHex(Serial.ReadChar());                                    runtime.hs:711
    // 
    // 0x009B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x009C  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x009E  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x00A0  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // byte a0 = FromHex(Serial.ReadChar());                                    runtime.hs:712
    // 
    // 0x00A2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A3  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x00A5  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x00A7  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // uint address = (a3 << 12) + (a2 << 8) + (a1 << 4) + a0;                  runtime.hs:713
    // 
    // 0x00A9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00AA  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00AC  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x00AE  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00AF  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00B1  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x00B3  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00B4  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B5  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00B7  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00B9  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00BA  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00BB  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00BD  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00BE  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // HopperVM.SetBreakpoint(n, address);                                      runtime.hs:714
    // 
    // 0x00C0  0x56 0x06 0x10  PUSHLOCALBB 0x1006
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+8, &htype), htype);
    // 0x00C3  0x2C 0x9B       CALLB 0x9B     // HopperVM.SetBreakpoint
    HopperVM_SetBreakpoint_0x009B();

    // }                                                                        runtime.hs:715
    // 
    // 0x00C5  0x28 0x0C       DECSP 0x0C
    DecSP(6);

    // }                                                                        runtime.hs:715
    // 
runtime_MCU_0x00C7:
    // 0x00C7  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // }                                                                        runtime.hs:715
    // 
    // 0x00C9  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x00CB  0x33 0xA5 0x01  JW 0x0270 (+421)
    goto runtime_MCU_0x0270;

    // WaitForEnter();                                                          runtime.hs:720
    // 
runtime_MCU_0x00CE:
    // 0x00CE  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:720
    // 
    // 0x00D0  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x00D2  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out4Hex(HopperVM.PC);                                                    runtime.hs:723
    // 
    // 0x00D4  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x00D6  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(char(slash)); // confirm data                           runtime.hs:724
    // 
    // 0x00D8  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x00DA  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);
    // 0x00DC  0x33 0x94 0x01  JW 0x0270 (+404)
    goto runtime_MCU_0x0270;

    // WaitForEnter();                                                          runtime.hs:728
    // 
runtime_MCU_0x00DF:
    // 0x00DF  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:728
    // 
    // 0x00E1  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x00E3  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('P');                                                   runtime.hs:731
    // 
    // 0x00E5  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x00E7  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('C');                                                   runtime.hs:732
    // 
    // 0x00E9  0x1A 0x43       PUSHIB 0x43
    PushStack(0x43, Type::tByte);
    // 0x00EB  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('=');                                                   runtime.hs:733
    // 
    // 0x00ED  0x1A 0x3D       PUSHIB 0x3D
    PushStack(0x3D, Type::tByte);
    // 0x00EF  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out4Hex(HopperVM.PC);                                                    runtime.hs:734
    // 
    // 0x00F1  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x00F3  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(' ');                                                   runtime.hs:735
    // 
    // 0x00F5  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x00F7  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('C');                                                   runtime.hs:737
    // 
    // 0x00F9  0x1A 0x43       PUSHIB 0x43
    PushStack(0x43, Type::tByte);
    // 0x00FB  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('S');                                                   runtime.hs:738
    // 
    // 0x00FD  0x1A 0x53       PUSHIB 0x53
    PushStack(0x53, Type::tByte);
    // 0x00FF  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('P');                                                   runtime.hs:739
    // 
    // 0x0101  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x0103  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('=');                                                   runtime.hs:740
    // 
    // 0x0105  0x1A 0x3D       PUSHIB 0x3D
    PushStack(0x3D, Type::tByte);
    // 0x0107  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(HopperVM.CSP));                                             runtime.hs:741
    // 
    // 0x0109  0x20 0x26       PUSHGLOBALB 0x26
    PushStack(GetStack(19, &htype), htype);
    // 0x010B  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x010D  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // Serial.WriteChar(' ');                                                   runtime.hs:742
    // 
    // 0x010F  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0111  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('S');                                                   runtime.hs:744
    // 
    // 0x0113  0x1A 0x53       PUSHIB 0x53
    PushStack(0x53, Type::tByte);
    // 0x0115  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('P');                                                   runtime.hs:745
    // 
    // 0x0117  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x0119  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('=');                                                   runtime.hs:746
    // 
    // 0x011B  0x1A 0x3D       PUSHIB 0x3D
    PushStack(0x3D, Type::tByte);
    // 0x011D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out4Hex(HopperVM.SP + 0x0600);                                           runtime.hs:747
    // 
    // 0x011F  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x0121  0x37 0x00 0x06  PUSHIW 0x0600
    PushStack(0x0600, Type::tUInt);
    // 0x0124  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0125  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(' ');                                                   runtime.hs:748
    // 
    // 0x0127  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0129  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('T');                                                   runtime.hs:750
    // 
    // 0x012B  0x1A 0x54       PUSHIB 0x54
    PushStack(0x54, Type::tByte);
    // 0x012D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('S');                                                   runtime.hs:751
    // 
    // 0x012F  0x1A 0x53       PUSHIB 0x53
    PushStack(0x53, Type::tByte);
    // 0x0131  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('P');                                                   runtime.hs:752
    // 
    // 0x0133  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x0135  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('=');                                                   runtime.hs:753
    // 
    // 0x0137  0x1A 0x3D       PUSHIB 0x3D
    PushStack(0x3D, Type::tByte);
    // 0x0139  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out4Hex(HopperVM.SP + 0x0500);                                           runtime.hs:754
    // 
    // 0x013B  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x013D  0x37 0x00 0x05  PUSHIW 0x0500
    PushStack(0x0500, Type::tUInt);
    // 0x0140  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0141  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(' ');                                                   runtime.hs:755
    // 
    // 0x0143  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0145  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('B');                                                   runtime.hs:757
    // 
    // 0x0147  0x1A 0x42       PUSHIB 0x42
    PushStack(0x42, Type::tByte);
    // 0x0149  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('P');                                                   runtime.hs:758
    // 
    // 0x014B  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x014D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('=');                                                   runtime.hs:759
    // 
    // 0x014F  0x1A 0x3D       PUSHIB 0x3D
    PushStack(0x3D, Type::tByte);
    // 0x0151  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out4Hex(HopperVM.BP + 0x0600);                                           runtime.hs:760
    // 
    // 0x0153  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0155  0x37 0x00 0x06  PUSHIW 0x0600
    PushStack(0x0600, Type::tUInt);
    // 0x0158  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0159  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(char(slash)); // confirm data                           runtime.hs:762
    // 
    // 0x015B  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x015D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);
    // 0x015F  0x33 0x11 0x01  JW 0x0270 (+273)
    goto runtime_MCU_0x0270;

    // WaitForEnter();                                                          runtime.hs:766
    // 
runtime_MCU_0x0162:
    // 0x0162  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:766
    // 
    // 0x0164  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // WaitForEnter();                                                          runtime.hs:766
    // 
    // 0x0165  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint loadedAddress;                                                      runtime.hs:768
    // 
    // 0x0166  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0168  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x016A  0x2C 0x07       CALLB 0x07     // Runtime.SerialLoadIHex
    Runtime_SerialLoadIHex_0x0007();
    // 0x016C  0x1F 0x00       POPGLOBALB 0x00
    PutStack(0, PopStack(&htype), htype);

    // Serial.WriteChar(char(enter));                                           runtime.hs:772
    // 
    // 0x016E  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0170  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (loaded)                                                              runtime.hs:773
    // 
    // 0x0172  0x20 0x00       PUSHGLOBALB 0x00
    PushStack(GetStack(0, &htype), htype);
    // 0x0174  0x2E 0x21       JZB 0x0195 (+33)
    if (PopStack() == 0) { goto runtime_MCU_0x0195; }

    // HopperVM.Initialize(loadedAddress, codeLength);                          runtime.hs:775
    // 
    // 0x0176  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0179  0x2C 0x9C       CALLB 0x9C     // HopperVM.Initialize
    HopperVM_Initialize_0x009C();

    // HopperVM.Restart();                                                      runtime.hs:776
    // 
    // 0x017B  0x2C 0x9F       CALLB 0x9F     // HopperVM.Restart
    HopperVM_Restart_0x009F();

    // HopperVM.Restart();                                                      runtime.hs:776
    // 
    // 0x017D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x017F  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(' ');                                                   runtime.hs:780
    // 
    // 0x0181  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0183  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out4Hex(Memory.HeapStart);                                               runtime.hs:783
    // 
    // 0x0185  0x20 0x04       PUSHGLOBALB 0x04
    PushStack(GetStack(2, &htype), htype);
    // 0x0187  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(' ');                                                   runtime.hs:784
    // 
    // 0x0189  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x018B  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out4Hex(Memory.HeapSize);                                                runtime.hs:787
    // 
    // 0x018D  0x20 0x06       PUSHGLOBALB 0x06
    PushStack(GetStack(3, &htype), htype);
    // 0x018F  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(' ');                                                   runtime.hs:788
    // 
    // 0x0191  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0193  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // ch = Serial.ReadChar();                                                  runtime.hs:796
    // 
runtime_MCU_0x0195:
    // 0x0195  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0197  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if ((ch == '!') || (ch == '*'))                                          runtime.hs:797
    // 
    // 0x0198  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0199  0x1A 0x21       PUSHIB 0x21
    PushStack(0x21, Type::tByte);
    // 0x019B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x019C  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x019E  0x2F 0x07       JNZB 0x01A5 (+7)
    if (PopStack() != 0) { goto runtime_MCU_0x01A5; }
    // 0x01A0  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x01A1  0x1A 0x2A       PUSHIB 0x2A
    PushStack(0x2A, Type::tByte);
    // 0x01A3  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01A4  0x0B            BOOLOR
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next || top), Type::tBool);
runtime_MCU_0x01A5:
    // 0x01A5  0x2E 0xF0       JZB 0x0195 (-16)
    if (PopStack() == 0) { goto runtime_MCU_0x0195; }

    // break;                                                                   runtime.hs:799
    // 
    // 0x01A7  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x01A9  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar(loaded ? '*' : '!');                                    runtime.hs:803
    // 
    // 0x01AB  0x20 0x00       PUSHGLOBALB 0x00
    PushStack(GetStack(0, &htype), htype);
    // 0x01AD  0x2E 0x06       JZB 0x01B3 (+6)
    if (PopStack() == 0) { goto runtime_MCU_0x01B3; }
    // 0x01AF  0x1A 0x2A       PUSHIB 0x2A
    PushStack(0x2A, Type::tByte);
    // 0x01B1  0x30 0x04       JB 0x01B5 (+4)
    goto runtime_MCU_0x01B5;
runtime_MCU_0x01B3:
    // 0x01B3  0x1A 0x21       PUSHIB 0x21
    PushStack(0x21, Type::tByte);
runtime_MCU_0x01B5:
    // 0x01B5  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar(char(slash)); // confirm the data                       runtime.hs:805
    // 
    // 0x01B7  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x01B9  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // } // L                                                                   runtime.hs:806
    // 
    // 0x01BB  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x01BD  0x33 0xB3 0x00  JW 0x0270 (+179)
    goto runtime_MCU_0x0270;

    // if (loaded)                                                              runtime.hs:809
    // 
runtime_MCU_0x01C0:
    // 0x01C0  0x20 0x00       PUSHGLOBALB 0x00
    PushStack(GetStack(0, &htype), htype);
    // 0x01C2  0x31 0xAE 0x00  JZW 0x0270 (+174)
    if (PopStack() == 0) { goto runtime_MCU_0x0270; }

    // switch (ch)                                                              runtime.hs:811
    // 
    // 0x01C5  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x01C6  0x30 0x64       JB 0x022A (+100)
    goto runtime_MCU_0x022A;

    // WaitForEnter();                                                          runtime.hs:815
    // 
runtime_MCU_0x01C8:
    // 0x01C8  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:815
    // 
    // 0x01CA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01CB  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x01CD  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // OpCode opCode = OpCode(ReadByte(pc));                                    runtime.hs:818
    // 
    // 0x01CF  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01D0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01D2  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x01D4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (opCode == OpCode.CALLW)                                              runtime.hs:820
    // 
    // 0x01D6  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x01D8  0x1A 0x34       PUSHIB 0x34
    PushStack(0x34, Type::tByte);
    // 0x01DA  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01DB  0x2E 0x0E       JZB 0x01E9 (+14)
    if (PopStack() == 0) { goto runtime_MCU_0x01E9; }

    // HopperVM.SetBreakpoint(0, pc+3);                                         runtime.hs:824
    // 
    // 0x01DD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01DE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01E0  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x01E2  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x01E3  0x2C 0x9B       CALLB 0x9B     // HopperVM.SetBreakpoint
    HopperVM_SetBreakpoint_0x009B();

    // HopperVM.Execute();                                                      runtime.hs:825
    // 
    // 0x01E5  0x2C 0xBA       CALLB 0xBA     // HopperVM.Execute
    HopperVM_Execute_0x00BA();

    // HopperVM.Execute();                                                      runtime.hs:825
    // 
    // 0x01E7  0x30 0x17       JB 0x01FE (+23)
    goto runtime_MCU_0x01FE;

    // HopperVM.Execute();                                                      runtime.hs:825
    // 
runtime_MCU_0x01E9:
    // 0x01E9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x01EB  0x1A 0x2C       PUSHIB 0x2C
    PushStack(0x2C, Type::tByte);
    // 0x01ED  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01EE  0x2E 0x0E       JZB 0x01FC (+14)
    if (PopStack() == 0) { goto runtime_MCU_0x01FC; }

    // HopperVM.SetBreakpoint(0, pc+2);                                         runtime.hs:830
    // 
    // 0x01F0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01F1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01F3  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x01F5  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x01F6  0x2C 0x9B       CALLB 0x9B     // HopperVM.SetBreakpoint
    HopperVM_SetBreakpoint_0x009B();

    // HopperVM.Execute();                                                      runtime.hs:831
    // 
    // 0x01F8  0x2C 0xBA       CALLB 0xBA     // HopperVM.Execute
    HopperVM_Execute_0x00BA();

    // HopperVM.Execute();                                                      runtime.hs:831
    // 
    // 0x01FA  0x30 0x04       JB 0x01FE (+4)
    goto runtime_MCU_0x01FE;

    // HopperVM.Execute();                                                      runtime.hs:831
    // 
runtime_MCU_0x01FC:
    // 0x01FC  0x2C 0xB8       CALLB 0xB8     // HopperVM.ExecuteStepTo
    HopperVM_ExecuteStepTo_0x00B8();

    // HopperVM.Execute();                                                      runtime.hs:831
    // 
runtime_MCU_0x01FE:
    // 0x01FE  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x0200  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        runtime.hs:839
    // 
    // 0x0202  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0204  0x30 0x6C       JB 0x0270 (+108)
    goto runtime_MCU_0x0270;

    // WaitForEnter();                                                          runtime.hs:842
    // 
runtime_MCU_0x0206:
    // 0x0206  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:842
    // 
    // 0x0208  0x2C 0xB8       CALLB 0xB8     // HopperVM.ExecuteStepTo
    HopperVM_ExecuteStepTo_0x00B8();

    // WaitForEnter();                                                          runtime.hs:842
    // 
    // 0x020A  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x020C  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);
    // 0x020E  0x30 0x62       JB 0x0270 (+98)
    goto runtime_MCU_0x0270;

    // WaitForEnter();                                                          runtime.hs:848
    // 
runtime_MCU_0x0210:
    // 0x0210  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:848
    // 
    // 0x0212  0x2C 0xBA       CALLB 0xBA     // HopperVM.Execute
    HopperVM_Execute_0x00BA();

    // WaitForEnter();                                                          runtime.hs:848
    // 
    // 0x0214  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x0216  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);
    // 0x0218  0x30 0x58       JB 0x0270 (+88)
    goto runtime_MCU_0x0270;

    // WaitForEnter();                                                          runtime.hs:854
    // 
runtime_MCU_0x021A:
    // 0x021A  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:854
    // 
    // 0x021C  0x2C 0xB9       CALLB 0xB9     // HopperVM.ExecuteWarp
    HopperVM_ExecuteWarp_0x00B9();

    // WaitForEnter();                                                          runtime.hs:854
    // 
    // 0x021E  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x0220  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);
    // 0x0222  0x30 0x4E       JB 0x0270 (+78)
    goto runtime_MCU_0x0270;

    // WaitForEnter();                                                          runtime.hs:860
    // 
runtime_MCU_0x0224:
    // 0x0224  0x2C 0x08       CALLB 0x08     // Runtime.WaitForEnter
    Runtime_WaitForEnter_0x0008();

    // WaitForEnter();                                                          runtime.hs:860
    // 
    // 0x0226  0x2C 0x9F       CALLB 0x9F     // HopperVM.Restart
    HopperVM_Restart_0x009F();
    // 0x0228  0x30 0x48       JB 0x0270 (+72)
    goto runtime_MCU_0x0270;
runtime_MCU_0x022A:
    // 0x022A  0x68 0x44 0x58  JIXB [0x44..0x58] -0x0064

    switch(PopStack())
    {
        case 0x44: { goto runtime_MCU_0x0210; }
        case 0x49: { goto runtime_MCU_0x0206; }
        case 0x4F: { goto runtime_MCU_0x01C8; }
        case 0x57: { goto runtime_MCU_0x0224; }
        case 0x58: { goto runtime_MCU_0x021A; }
    }

    // } // loaded                                                              runtime.hs:864
    // 
    // 0x0244  0x30 0x2C       JB 0x0270 (+44)
    goto runtime_MCU_0x0270;
runtime_MCU_0x0246:
    // 0x0246  0x69 0x42 0x52  JIXW [0x42..0x52] -0x0226

    switch(PopStack())
    {
        case 0x42: { goto runtime_MCU_0x0075; }
        case 0x46: { goto runtime_MCU_0x0023; }
        case 0x4C: { goto runtime_MCU_0x0162; }
        case 0x4D: { goto runtime_MCU_0x004C; }
        case 0x50: { goto runtime_MCU_0x00CE; }
        case 0x52: { goto runtime_MCU_0x00DF; }
    }
    // 0x026D  0x33 0x53 0xFF  JW 0x01C0 (-173)
    goto runtime_MCU_0x01C0;

    // } // loop                                                                runtime.hs:868
    // 
runtime_MCU_0x0270:
    // 0x0270  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0272  0x33 0x9B 0xFD  JW 0x000D (-613)
    goto runtime_MCU_0x000D;
}

void Runtime_FromHex_0x0001()
{
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // switch (ch)                                                              runtime.hs:46
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x30 0x40       JB 0x0043 (+64)
    goto runtime_FromHex_0x0043;

    // case '0': { return 0x00; }                                               runtime.hs:48
    // 
runtime_FromHex_0x0005:
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '1': { return 0x01; }                                               runtime.hs:49
    // 
runtime_FromHex_0x0008:
    // 0x0008  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0009  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '2': { return 0x02; }                                               runtime.hs:50
    // 
runtime_FromHex_0x000B:
    // 0x000B  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000D  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '3': { return 0x03; }                                               runtime.hs:51
    // 
runtime_FromHex_0x000F:
    // 0x000F  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0011  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '4': { return 0x04; }                                               runtime.hs:52
    // 
runtime_FromHex_0x0013:
    // 0x0013  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0015  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '5': { return 0x05; }                                               runtime.hs:53
    // 
runtime_FromHex_0x0017:
    // 0x0017  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0019  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '6': { return 0x06; }                                               runtime.hs:54
    // 
runtime_FromHex_0x001B:
    // 0x001B  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x001D  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '7': { return 0x07; }                                               runtime.hs:55
    // 
runtime_FromHex_0x001F:
    // 0x001F  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0021  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '8': { return 0x08; }                                               runtime.hs:56
    // 
runtime_FromHex_0x0023:
    // 0x0023  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0025  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case '9': { return 0x09; }                                               runtime.hs:57
    // 
runtime_FromHex_0x0027:
    // 0x0027  0x1A 0x09       PUSHIB 0x09
    PushStack(0x09, Type::tByte);
    // 0x0029  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case 'a': case 'A': { return 0x0A; }                                     runtime.hs:58
    // 
runtime_FromHex_0x002B:
    // 0x002B  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x002D  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case 'b': case 'B': { return 0x0B; }                                     runtime.hs:59
    // 
runtime_FromHex_0x002F:
    // 0x002F  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x0031  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case 'c': case 'C': { return 0x0C; }                                     runtime.hs:60
    // 
runtime_FromHex_0x0033:
    // 0x0033  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0035  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case 'd': case 'D': { return 0x0D; }                                     runtime.hs:61
    // 
runtime_FromHex_0x0037:
    // 0x0037  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0039  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case 'e': case 'E': { return 0x0E; }                                     runtime.hs:62
    // 
runtime_FromHex_0x003B:
    // 0x003B  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x003D  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // case 'f': case 'F': { return 0x0F; }                                     runtime.hs:63
    // 
runtime_FromHex_0x003F:
    // 0x003F  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0041  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
runtime_FromHex_0x0043:
    // 0x0043  0x68 0x30 0x66  JIXB [0x30..0x66] -0x0040

    switch(PopStack())
    {
        case 0x30: { goto runtime_FromHex_0x0005; }
        case 0x31: { goto runtime_FromHex_0x0008; }
        case 0x32: { goto runtime_FromHex_0x000B; }
        case 0x33: { goto runtime_FromHex_0x000F; }
        case 0x34: { goto runtime_FromHex_0x0013; }
        case 0x35: { goto runtime_FromHex_0x0017; }
        case 0x36: { goto runtime_FromHex_0x001B; }
        case 0x37: { goto runtime_FromHex_0x001F; }
        case 0x38: { goto runtime_FromHex_0x0023; }
        case 0x39: { goto runtime_FromHex_0x0027; }
        case 0x41: { goto runtime_FromHex_0x002B; }
        case 0x42: { goto runtime_FromHex_0x002F; }
        case 0x43: { goto runtime_FromHex_0x0033; }
        case 0x44: { goto runtime_FromHex_0x0037; }
        case 0x45: { goto runtime_FromHex_0x003B; }
        case 0x46: { goto runtime_FromHex_0x003F; }
        case 0x61: { goto runtime_FromHex_0x002B; }
        case 0x62: { goto runtime_FromHex_0x002F; }
        case 0x63: { goto runtime_FromHex_0x0033; }
        case 0x64: { goto runtime_FromHex_0x0037; }
        case 0x65: { goto runtime_FromHex_0x003B; }
        case 0x66: { goto runtime_FromHex_0x003F; }
    }

    // return 0;                                                                runtime.hs:65
    // 
    // 0x007F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0080  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void Runtime_WaitForEnter_0x0008()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // char ch = Serial.ReadChar();                                             runtime.hs:377
    // 
runtime_WaitForEnter_0x0001:
    // 0x0001  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0002  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (ch == char(enter))                                                   runtime.hs:378
    // 
    // 0x0005  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0006  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0008  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0009  0x2E 0x06       JZB 0x000F (+6)
    if (PopStack() == 0) { goto runtime_WaitForEnter_0x000F; }

    // break;                                                                   runtime.hs:380
    // 
    // 0x000B  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x000D  0x30 0x06       JB 0x0013 (+6)
    goto runtime_WaitForEnter_0x0013;

    // } // loop                                                                runtime.hs:382
    // 
runtime_WaitForEnter_0x000F:
    // 0x000F  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0011  0x30 0xF0       JB 0x0001 (-16)
    goto runtime_WaitForEnter_0x0001;

    // Serial.WriteChar(char(slash)); // '\' response : acknowledge <enter> received
    // 
runtime_WaitForEnter_0x0013:
    // 0x0013  0x1A 0x5C       PUSHIB 0x5C
    PushStack(0x5C, Type::tByte);
    // 0x0015  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        runtime.hs:384
    // 
    // 0x0017  0x4A            RET0
    PopBP();
    return;
}

void Runtime_DumpPage_0x000B()
{
    UInt top   = 0;
    UInt next  = 0;
    Int topi   = 0;
    Int nexti  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint rowAddress = (iPage << 8);                                          runtime.hs:409
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0006  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0007  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // for (byte row = 0; row < 16; row++)                                      runtime.hs:410
    // 
    // 0x0008  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x0009:
    // 0x0009  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x000A  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x000C  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x000D  0x31 0xA9 0x03  JZW 0x03B6 (+937)
    if (PopStack() == 0) { goto runtime_DumpPage_0x03B6; }

    // Serial.WriteChar(char(enter)); // next line                              runtime.hs:412
    // 
    // 0x0010  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0012  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (includeAddresses)                                                    runtime.hs:413
    // 
    // 0x0014  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0016  0x2E 0x0E       JZB 0x0024 (+14)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0024; }

    // Out4Hex(rowAddress);                                                     runtime.hs:415
    // 
    // 0x0018  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0019  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(' ');                                                   runtime.hs:416
    // 
    // 0x001B  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x001D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // rowAddress = rowAddress + 16;                                            runtime.hs:417
    // 
    // 0x001F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0020  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x0022  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0023  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (iPage == 0)                                                          runtime.hs:419
    // 
runtime_DumpPage_0x0024:
    // 0x0024  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0026  0x32 0xB4 0x01  JNZW 0x01DA (+436)
    if (PopStack() != 0) { goto runtime_DumpPage_0x01DA; }

    // for (byte col = 0; col < 16; col++)                                      runtime.hs:421
    // 
    // 0x0029  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x002A:
    // 0x002A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002C  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x002E  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x002F  0x31 0xA6 0x01  JZW 0x01D5 (+422)
    if (PopStack() == 0) { goto runtime_DumpPage_0x01D5; }

    // byte data;                                                               runtime.hs:423
    // 
    // 0x0032  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte data;                                                               runtime.hs:423
    // 
    // 0x0033  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0034  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0036  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0037  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0039  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x003A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003B  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // switch (address)                                                         runtime.hs:425
    // 
    // 0x003D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x003F  0x33 0x34 0x01  JW 0x0173 (+308)
    goto runtime_DumpPage_0x0173;

    // data = byte(HopperVM.PC >> 8);                                           runtime.hs:429
    // 
runtime_DumpPage_0x0042:
    // 0x0042  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0044  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0046  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0047  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0049  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x004B  0x33 0x6C 0x01  JW 0x01B7 (+364)
    goto runtime_DumpPage_0x01B7;

    // data = byte(HopperVM.PC & 0xFF);                                         runtime.hs:433
    // 
runtime_DumpPage_0x004E:
    // 0x004E  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0050  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0052  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0053  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0055  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0057  0x33 0x60 0x01  JW 0x01B7 (+352)
    goto runtime_DumpPage_0x01B7;

    // data = byte((HopperVM.SP + 0x0600) >> 8);                                runtime.hs:437
    // 
runtime_DumpPage_0x005A:
    // 0x005A  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x005C  0x37 0x00 0x06  PUSHIW 0x0600
    PushStack(0x0600, Type::tUInt);
    // 0x005F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0060  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0062  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0063  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0065  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0067  0x33 0x50 0x01  JW 0x01B7 (+336)
    goto runtime_DumpPage_0x01B7;

    // data = byte((HopperVM.SP + 0x0600) & 0xFF);                              runtime.hs:441
    // 
runtime_DumpPage_0x006A:
    // 0x006A  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x006C  0x37 0x00 0x06  PUSHIW 0x0600
    PushStack(0x0600, Type::tUInt);
    // 0x006F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0070  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0072  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0073  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0075  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0077  0x33 0x40 0x01  JW 0x01B7 (+320)
    goto runtime_DumpPage_0x01B7;

    // data = byte(((HopperVM.SP/2) + 0x0500) >> 8);                            runtime.hs:445
    // 
runtime_DumpPage_0x007A:
    // 0x007A  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x007C  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x007E  0x02            DIV
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] / valuestack[sp]);
    // 0x007F  0x37 0x00 0x05  PUSHIW 0x0500
    PushStack(0x0500, Type::tUInt);
    // 0x0082  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0083  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0085  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0086  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0088  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x008A  0x33 0x2D 0x01  JW 0x01B7 (+301)
    goto runtime_DumpPage_0x01B7;

    // data = byte(((HopperVM.SP/2) + 0x0500) & 0xFF);                          runtime.hs:449
    // 
runtime_DumpPage_0x008D:
    // 0x008D  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x008F  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0091  0x02            DIV
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] / valuestack[sp]);
    // 0x0092  0x37 0x00 0x05  PUSHIW 0x0500
    PushStack(0x0500, Type::tUInt);
    // 0x0095  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0096  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0098  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0099  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x009B  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x009D  0x33 0x1A 0x01  JW 0x01B7 (+282)
    goto runtime_DumpPage_0x01B7;

    // data = byte((HopperVM.BP + 0x0600) >> 8);                                runtime.hs:453
    // 
runtime_DumpPage_0x00A0:
    // 0x00A0  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x00A2  0x37 0x00 0x06  PUSHIW 0x0600
    PushStack(0x0600, Type::tUInt);
    // 0x00A5  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00A6  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x00A8  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x00A9  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x00AB  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00AD  0x33 0x0A 0x01  JW 0x01B7 (+266)
    goto runtime_DumpPage_0x01B7;

    // data = byte((HopperVM.BP + 0x0600) & 0xFF);                              runtime.hs:457
    // 
runtime_DumpPage_0x00B0:
    // 0x00B0  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x00B2  0x37 0x00 0x06  PUSHIW 0x0600
    PushStack(0x0600, Type::tUInt);
    // 0x00B5  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B6  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x00B8  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x00B9  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x00BB  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00BD  0x33 0xFA 0x00  JW 0x01B7 (+250)
    goto runtime_DumpPage_0x01B7;

    // data = byte((HopperVM.CSP + 0x0400) >> 8);                               runtime.hs:461
    // 
runtime_DumpPage_0x00C0:
    // 0x00C0  0x20 0x26       PUSHGLOBALB 0x26
    PushStack(GetStack(19, &htype), htype);
    // 0x00C2  0x37 0x00 0x04  PUSHIW 0x0400
    PushStack(0x0400, Type::tUInt);
    // 0x00C5  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00C6  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x00C8  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x00C9  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x00CB  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00CD  0x33 0xEA 0x00  JW 0x01B7 (+234)
    goto runtime_DumpPage_0x01B7;

    // data = byte((HopperVM.CSP + 0x0400) & 0xFF);                             runtime.hs:465
    // 
runtime_DumpPage_0x00D0:
    // 0x00D0  0x20 0x26       PUSHGLOBALB 0x26
    PushStack(GetStack(19, &htype), htype);
    // 0x00D2  0x37 0x00 0x04  PUSHIW 0x0400
    PushStack(0x0400, Type::tUInt);
    // 0x00D5  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00D6  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x00D8  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x00D9  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x00DB  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00DD  0x33 0xDA 0x00  JW 0x01B7 (+218)
    goto runtime_DumpPage_0x01B7;

    // data = byte(HopperFlags.MPUPlatform); // 0x08 would imply 8 bit SP
    // 
runtime_DumpPage_0x00E0:
    // 0x00E0  0x1A 0x40       PUSHIB 0x40
    PushStack(0x40, Type::tByte);
    // 0x00E2  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x00E4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (HopperVM.BreakpointExists)                                           runtime.hs:470
    // 
    // 0x00E6  0x20 0x1E       PUSHGLOBALB 0x1E
    PushStack(GetStack(15, &htype), htype);
    // 0x00E8  0x2E 0x0B       JZB 0x00F3 (+11)
    if (PopStack() == 0) { goto runtime_DumpPage_0x00F3; }

    // data = data | byte(HopperFlags.BreakpointsSet);                          runtime.hs:472
    // 
    // 0x00EA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00EC  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x00EE  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x00F0  0x0D            BITOR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] | valuestack[sp]);
    // 0x00F1  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // }                                                                        runtime.hs:473
    // 
runtime_DumpPage_0x00F3:
    // 0x00F3  0x33 0xC4 0x00  JW 0x01B7 (+196)
    goto runtime_DumpPage_0x01B7;

    // }                                                                        runtime.hs:473
    // 
runtime_DumpPage_0x00F6:
    // 0x00F6  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x00F8  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x00FA  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x00FB  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x00FD  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00FF  0x33 0xB8 0x00  JW 0x01B7 (+184)
    goto runtime_DumpPage_0x01B7;

    // data = byte(Memory.FreeList & 0xFF);                                     runtime.hs:485
    // 
runtime_DumpPage_0x0102:
    // 0x0102  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x0104  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0106  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0107  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0109  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x010B  0x33 0xAC 0x00  JW 0x01B7 (+172)
    goto runtime_DumpPage_0x01B7;

    // data = byte(Memory.HeapSize >> 8);                                       runtime.hs:489
    // 
runtime_DumpPage_0x010E:
    // 0x010E  0x20 0x06       PUSHGLOBALB 0x06
    PushStack(GetStack(3, &htype), htype);
    // 0x0110  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0112  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0113  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0115  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0117  0x33 0xA0 0x00  JW 0x01B7 (+160)
    goto runtime_DumpPage_0x01B7;

    // data = byte(Memory.HeapStart >> 8);                                      runtime.hs:493
    // 
runtime_DumpPage_0x011A:
    // 0x011A  0x20 0x04       PUSHGLOBALB 0x04
    PushStack(GetStack(2, &htype), htype);
    // 0x011C  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x011E  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x011F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0121  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0123  0x33 0x94 0x00  JW 0x01B7 (+148)
    goto runtime_DumpPage_0x01B7;

    // data = 0;                                                                runtime.hs:497
    // 
runtime_DumpPage_0x0126:
    // 0x0126  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0127  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0129  0x33 0x8E 0x00  JW 0x01B7 (+142)
    goto runtime_DumpPage_0x01B7;

    // if ((address >= 0x50) && (address <= 0x5F))                              runtime.hs:501
    // 
runtime_DumpPage_0x012C:
    // 0x012C  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x012E  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x0130  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0131  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0133  0x2E 0x08       JZB 0x013B (+8)
    if (PopStack() == 0) { goto runtime_DumpPage_0x013B; }
    // 0x0135  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0137  0x1A 0x5F       PUSHIB 0x5F
    PushStack(0x5F, Type::tByte);
    // 0x0139  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x013A  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
runtime_DumpPage_0x013B:
    // 0x013B  0x2E 0x12       JZB 0x014D (+18)
    if (PopStack() == 0) { goto runtime_DumpPage_0x014D; }

    // data = byte(GetBreakpoint(address - 0x50) & 0xFF);                       runtime.hs:503
    // 
    // 0x013D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x013F  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x0141  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0142  0x2C 0x9A       CALLB 0x9A     // HopperVM.GetBreakpoint
    HopperVM_GetBreakpoint_0x009A();
    // 0x0144  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0146  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0147  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0149  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // }                                                                        runtime.hs:504
    // 
    // 0x014B  0x30 0x6C       JB 0x01B7 (+108)
    goto runtime_DumpPage_0x01B7;

    // else if ((address >= 0x60) && (address <= 0x6F))                         runtime.hs:505
    // 
runtime_DumpPage_0x014D:
    // 0x014D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x014F  0x1A 0x60       PUSHIB 0x60
    PushStack(0x60, Type::tByte);
    // 0x0151  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0152  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0154  0x2E 0x08       JZB 0x015C (+8)
    if (PopStack() == 0) { goto runtime_DumpPage_0x015C; }
    // 0x0156  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0158  0x1A 0x6F       PUSHIB 0x6F
    PushStack(0x6F, Type::tByte);
    // 0x015A  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x015B  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
runtime_DumpPage_0x015C:
    // 0x015C  0x2E 0x12       JZB 0x016E (+18)
    if (PopStack() == 0) { goto runtime_DumpPage_0x016E; }

    // data = byte(GetBreakpoint(address - 0x60) >> 8);                         runtime.hs:507
    // 
    // 0x015E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0160  0x1A 0x60       PUSHIB 0x60
    PushStack(0x60, Type::tByte);
    // 0x0162  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0163  0x2C 0x9A       CALLB 0x9A     // HopperVM.GetBreakpoint
    HopperVM_GetBreakpoint_0x009A();
    // 0x0165  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0167  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0168  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x016A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // }                                                                        runtime.hs:508
    // 
    // 0x016C  0x30 0x4B       JB 0x01B7 (+75)
    goto runtime_DumpPage_0x01B7;

    // data = 0;                                                                runtime.hs:511
    // 
runtime_DumpPage_0x016E:
    // 0x016E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x016F  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0171  0x30 0x46       JB 0x01B7 (+70)
    goto runtime_DumpPage_0x01B7;
runtime_DumpPage_0x0173:
    // 0x0173  0x68 0xB0 0xEB  JIXB [0xB0..0xEB] -0x0134

    switch(PopStack())
    {
        case 0xB0: { goto runtime_DumpPage_0x004E; }
        case 0xB1: { goto runtime_DumpPage_0x0042; }
        case 0xB2: { goto runtime_DumpPage_0x006A; }
        case 0xB3: { goto runtime_DumpPage_0x005A; }
        case 0xB4: { goto runtime_DumpPage_0x008D; }
        case 0xB5: { goto runtime_DumpPage_0x007A; }
        case 0xB6: { goto runtime_DumpPage_0x00B0; }
        case 0xB7: { goto runtime_DumpPage_0x00A0; }
        case 0xB8: { goto runtime_DumpPage_0x00D0; }
        case 0xB9: { goto runtime_DumpPage_0x00C0; }
        case 0xBB: { goto runtime_DumpPage_0x00E0; }
        case 0xCA: { goto runtime_DumpPage_0x0126; }
        case 0xE8: { goto runtime_DumpPage_0x0102; }
        case 0xE9: { goto runtime_DumpPage_0x00F6; }
        case 0xEA: { goto runtime_DumpPage_0x011A; }
        case 0xEB: { goto runtime_DumpPage_0x010E; }
    }
    // 0x01B4  0x33 0x78 0xFF  JW 0x012C (-136)
    goto runtime_DumpPage_0x012C;

    // if (includeAddresses)                                                    runtime.hs:515
    // 
runtime_DumpPage_0x01B7:
    // 0x01B7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x01B9  0x2E 0x11       JZB 0x01CA (+17)
    if (PopStack() == 0) { goto runtime_DumpPage_0x01CA; }

    // Serial.WriteChar(' ');                                                   runtime.hs:517
    // 
    // 0x01BB  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x01BD  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (col == 8)                                                            runtime.hs:518
    // 
    // 0x01BF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01C1  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x01C3  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01C4  0x2E 0x06       JZB 0x01CA (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x01CA; }

    // Serial.WriteChar(' ');                                                   runtime.hs:520
    // 
    // 0x01C6  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x01C8  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(data);                                                           runtime.hs:523
    // 
runtime_DumpPage_0x01CA:
    // 0x01CA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x01CC  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // }                                                                        runtime.hs:524
    // 
    // 0x01CE  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x01D0  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x01D2  0x33 0x58 0xFE  JW 0x002A (-424)
    goto runtime_DumpPage_0x002A;
runtime_DumpPage_0x01D5:
    // 0x01D5  0x28 0x02       DECSP 0x02
    DecSP(1);

    // } // zero page                                                           runtime.hs:525
    // 
    // 0x01D7  0x33 0xDA 0x01  JW 0x03B1 (+474)
    goto runtime_DumpPage_0x03B1;

    // } // zero page                                                           runtime.hs:525
    // 
runtime_DumpPage_0x01DA:
    // 0x01DA  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x01DC  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x01DE  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01DF  0x2E 0x56       JZB 0x0235 (+86)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0235; }

    // for (byte col = 0; col < 8; col++)                                       runtime.hs:529
    // 
    // 0x01E1  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x01E2:
    // 0x01E2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01E4  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x01E6  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x01E7  0x2E 0x49       JZB 0x0230 (+73)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0230; }

    // uint address = col*2 + (row << 4);                                       runtime.hs:531
    // 
    // 0x01E9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01EA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01EC  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x01EE  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x01EF  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x01F0  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x01F2  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x01F3  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x01F4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint stackData = HopperVM.GetCS(address);                                runtime.hs:532
    // 
    // 0x01F6  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01F7  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x01F9  0x2C 0xAC       CALLB 0xAC     // HopperVM.GetCS
    HopperVM_GetCS_0x00AC();
    // 0x01FB  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (includeAddresses)                                                    runtime.hs:533
    // 
    // 0x01FD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x01FF  0x2E 0x11       JZB 0x0210 (+17)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0210; }

    // Serial.WriteChar(' ');                                                   runtime.hs:535
    // 
    // 0x0201  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0203  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (col == 4)                                                            runtime.hs:536
    // 
    // 0x0205  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0207  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0209  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x020A  0x2E 0x06       JZB 0x0210 (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0210; }

    // Serial.WriteChar(' ');                                                   runtime.hs:538
    // 
    // 0x020C  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x020E  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(stackData & 0xFF));                                         runtime.hs:541
    // 
runtime_DumpPage_0x0210:
    // 0x0210  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0212  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0214  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0215  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0217  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // if (includeAddresses)                                                    runtime.hs:542
    // 
    // 0x0219  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x021B  0x2E 0x06       JZB 0x0221 (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0221; }

    // Serial.WriteChar(' ');                                                   runtime.hs:544
    // 
    // 0x021D  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x021F  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(stackData >> 8));                                           runtime.hs:546
    // 
runtime_DumpPage_0x0221:
    // 0x0221  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0223  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0225  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0226  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0228  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // }                                                                        runtime.hs:548
    // 
    // 0x022A  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x022C  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x022E  0x30 0xB4       JB 0x01E2 (-76)
    goto runtime_DumpPage_0x01E2;
runtime_DumpPage_0x0230:
    // 0x0230  0x28 0x02       DECSP 0x02
    DecSP(1);

    // } // call stack                                                          runtime.hs:549
    // 
    // 0x0232  0x33 0x7F 0x01  JW 0x03B1 (+383)
    goto runtime_DumpPage_0x03B1;

    // } // call stack                                                          runtime.hs:549
    // 
runtime_DumpPage_0x0235:
    // 0x0235  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0237  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0239  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x023A  0x2E 0x49       JZB 0x0283 (+73)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0283; }

    // for (byte col = 0; col < 16; col++)                                      runtime.hs:553
    // 
    // 0x023C  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x023D:
    // 0x023D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x023F  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x0241  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0242  0x2E 0x3C       JZB 0x027E (+60)
    if (PopStack() == 0) { goto runtime_DumpPage_0x027E; }

    // uint address = col + (row << 4); // 0..255                               runtime.hs:555
    // 
    // 0x0244  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0245  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0247  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0248  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x024A  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x024B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x024C  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // address = address * 2; // 0..510                                         runtime.hs:556
    // 
    // 0x024E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0250  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0252  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0253  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type htype;                                                              runtime.hs:558
    // 
    // 0x0255  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              runtime.hs:558
    // 
    // 0x0256  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0257  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0259  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x025B  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x025D  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (includeAddresses)                                                    runtime.hs:560
    // 
    // 0x025F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0261  0x2E 0x11       JZB 0x0272 (+17)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0272; }

    // Serial.WriteChar(' ');                                                   runtime.hs:562
    // 
    // 0x0263  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0265  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (col == 8)                                                            runtime.hs:563
    // 
    // 0x0267  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0269  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x026B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x026C  0x2E 0x06       JZB 0x0272 (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0272; }

    // Serial.WriteChar(' ');                                                   runtime.hs:565
    // 
    // 0x026E  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0270  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(htype));                                                    runtime.hs:568
    // 
runtime_DumpPage_0x0272:
    // 0x0272  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0274  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0276  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // }                                                                        runtime.hs:569
    // 
    // 0x0278  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x027A  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x027C  0x30 0xC1       JB 0x023D (-63)
    goto runtime_DumpPage_0x023D;
runtime_DumpPage_0x027E:
    // 0x027E  0x28 0x02       DECSP 0x02
    DecSP(1);

    // } // type stack                                                          runtime.hs:570
    // 
    // 0x0280  0x33 0x31 0x01  JW 0x03B1 (+305)
    goto runtime_DumpPage_0x03B1;

    // } // type stack                                                          runtime.hs:570
    // 
runtime_DumpPage_0x0283:
    // 0x0283  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0285  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0287  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0288  0x2E 0x59       JZB 0x02E1 (+89)
    if (PopStack() == 0) { goto runtime_DumpPage_0x02E1; }

    // for (byte col = 0; col < 8; col++)                                       runtime.hs:574
    // 
    // 0x028A  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x028B:
    // 0x028B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x028D  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x028F  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0290  0x2E 0x4C       JZB 0x02DC (+76)
    if (PopStack() == 0) { goto runtime_DumpPage_0x02DC; }

    // uint address = col*2 + (row << 4);                                       runtime.hs:576
    // 
    // 0x0292  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0293  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0295  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0297  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0298  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0299  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x029B  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x029C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x029D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type htype;                                                              runtime.hs:578
    // 
    // 0x029F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              runtime.hs:578
    // 
    // 0x02A0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02A1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x02A3  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x02A5  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x02A7  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (includeAddresses)                                                    runtime.hs:581
    // 
    // 0x02A9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x02AB  0x2E 0x11       JZB 0x02BC (+17)
    if (PopStack() == 0) { goto runtime_DumpPage_0x02BC; }

    // Serial.WriteChar(' ');                                                   runtime.hs:583
    // 
    // 0x02AD  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x02AF  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (col == 4)                                                            runtime.hs:584
    // 
    // 0x02B1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x02B3  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x02B5  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x02B6  0x2E 0x06       JZB 0x02BC (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x02BC; }

    // Serial.WriteChar(' ');                                                   runtime.hs:586
    // 
    // 0x02B8  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x02BA  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(stackData & 0xFF));                                         runtime.hs:589
    // 
runtime_DumpPage_0x02BC:
    // 0x02BC  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x02BE  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x02C0  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x02C1  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x02C3  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // if (includeAddresses)                                                    runtime.hs:590
    // 
    // 0x02C5  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x02C7  0x2E 0x06       JZB 0x02CD (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x02CD; }

    // Serial.WriteChar(' ');                                                   runtime.hs:592
    // 
    // 0x02C9  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x02CB  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(stackData >> 8));                                           runtime.hs:594
    // 
runtime_DumpPage_0x02CD:
    // 0x02CD  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x02CF  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x02D1  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x02D2  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x02D4  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // }                                                                        runtime.hs:595
    // 
    // 0x02D6  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x02D8  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x02DA  0x30 0xB1       JB 0x028B (-79)
    goto runtime_DumpPage_0x028B;
runtime_DumpPage_0x02DC:
    // 0x02DC  0x28 0x02       DECSP 0x02
    DecSP(1);

    // } // value stack                                                         runtime.hs:596
    // 
    // 0x02DE  0x33 0xD3 0x00  JW 0x03B1 (+211)
    goto runtime_DumpPage_0x03B1;

    // } // value stack                                                         runtime.hs:596
    // 
runtime_DumpPage_0x02E1:
    // 0x02E1  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x02E3  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x02E5  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x02E6  0x2E 0x60       JZB 0x0346 (+96)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0346; }

    // for (byte col = 0; col < 8; col++)                                       runtime.hs:600
    // 
    // 0x02E8  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x02E9:
    // 0x02E9  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x02EB  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x02ED  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x02EE  0x2E 0x54       JZB 0x0342 (+84)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0342; }

    // uint address = col*2 + (row << 4);                                       runtime.hs:602
    // 
    // 0x02F0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02F1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x02F3  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x02F5  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x02F6  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x02F7  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x02F9  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x02FA  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x02FB  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // address = address + 256;                                                 runtime.hs:603
    // 
    // 0x02FD  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x02FF  0x37 0x00 0x01  PUSHIW 0x0100
    PushStack(0x0100, Type::tUInt);
    // 0x0302  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0303  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type htype;                                                              runtime.hs:605
    // 
    // 0x0305  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              runtime.hs:605
    // 
    // 0x0306  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0307  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0309  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x030B  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x030D  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (includeAddresses)                                                    runtime.hs:608
    // 
    // 0x030F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0311  0x2E 0x11       JZB 0x0322 (+17)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0322; }

    // Serial.WriteChar(' ');                                                   runtime.hs:610
    // 
    // 0x0313  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0315  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (col == 4)                                                            runtime.hs:611
    // 
    // 0x0317  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0319  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x031B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x031C  0x2E 0x06       JZB 0x0322 (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0322; }

    // Serial.WriteChar(' ');                                                   runtime.hs:613
    // 
    // 0x031E  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0320  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(stackData & 0xFF));                                         runtime.hs:616
    // 
runtime_DumpPage_0x0322:
    // 0x0322  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0324  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0326  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0327  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0329  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // if (includeAddresses)                                                    runtime.hs:617
    // 
    // 0x032B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x032D  0x2E 0x06       JZB 0x0333 (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0333; }

    // Serial.WriteChar(' ');                                                   runtime.hs:619
    // 
    // 0x032F  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0331  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(byte(stackData >> 8));                                           runtime.hs:621
    // 
runtime_DumpPage_0x0333:
    // 0x0333  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0335  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0337  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0338  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x033A  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // }                                                                        runtime.hs:622
    // 
    // 0x033C  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x033E  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0340  0x30 0xA9       JB 0x02E9 (-87)
    goto runtime_DumpPage_0x02E9;
runtime_DumpPage_0x0342:
    // 0x0342  0x28 0x02       DECSP 0x02
    DecSP(1);

    // } // value stack                                                         runtime.hs:623
    // 
    // 0x0344  0x30 0x6D       JB 0x03B1 (+109)
    goto runtime_DumpPage_0x03B1;

    // else if (iPage > 7) // heap                                              runtime.hs:625
    // 
runtime_DumpPage_0x0346:
    // 0x0346  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0348  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x034A  0x07            GT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] > valuestack[sp]);
    // 0x034B  0x2E 0x42       JZB 0x038D (+66)
    if (PopStack() == 0) { goto runtime_DumpPage_0x038D; }

    // for (byte col = 0; col < 16; col++)                                      runtime.hs:627
    // 
    // 0x034D  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x034E:
    // 0x034E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0350  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x0352  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0353  0x2E 0x36       JZB 0x0389 (+54)
    if (PopStack() == 0) { goto runtime_DumpPage_0x0389; }

    // uint address = col + (row << 4); // 0..127                               runtime.hs:629
    // 
    // 0x0355  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0356  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0358  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0359  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x035B  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x035C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x035D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // address = address + (256 * iPage);                                       runtime.hs:630
    // 
    // 0x035F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0361  0x37 0x00 0x01  PUSHIW 0x0100
    PushStack(0x0100, Type::tUInt);
    // 0x0364  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0366  0x14            MULI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) * Int(valuestack[sp]));
    // 0x0367  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0368  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (includeAddresses)                                                    runtime.hs:632
    // 
    // 0x036A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x036C  0x2E 0x11       JZB 0x037D (+17)
    if (PopStack() == 0) { goto runtime_DumpPage_0x037D; }

    // Serial.WriteChar(' ');                                                   runtime.hs:634
    // 
    // 0x036E  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0370  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (col == 8)                                                            runtime.hs:635
    // 
    // 0x0372  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0374  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0376  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0377  0x2E 0x06       JZB 0x037D (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x037D; }

    // Serial.WriteChar(' ');                                                   runtime.hs:637
    // 
    // 0x0379  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x037B  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(Memory.ReadByte(address));                                       runtime.hs:640
    // 
runtime_DumpPage_0x037D:
    // 0x037D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x037F  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0381  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // }                                                                        runtime.hs:641
    // 
    // 0x0383  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0385  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0387  0x30 0xC7       JB 0x034E (-57)
    goto runtime_DumpPage_0x034E;
runtime_DumpPage_0x0389:
    // 0x0389  0x28 0x02       DECSP 0x02
    DecSP(1);

    // } // heap                                                                runtime.hs:642
    // 
    // 0x038B  0x30 0x26       JB 0x03B1 (+38)
    goto runtime_DumpPage_0x03B1;

    // for (byte col = 0; col < 16; col++)                                      runtime.hs:646
    // 
runtime_DumpPage_0x038D:
    // 0x038D  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_DumpPage_0x038E:
    // 0x038E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0390  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x0392  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0393  0x2E 0x1C       JZB 0x03AF (+28)
    if (PopStack() == 0) { goto runtime_DumpPage_0x03AF; }

    // if (includeAddresses)                                                    runtime.hs:648
    // 
    // 0x0395  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0397  0x2E 0x11       JZB 0x03A8 (+17)
    if (PopStack() == 0) { goto runtime_DumpPage_0x03A8; }

    // Serial.WriteChar(' ');                                                   runtime.hs:650
    // 
    // 0x0399  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x039B  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // if (col == 8)                                                            runtime.hs:651
    // 
    // 0x039D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x039F  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x03A1  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x03A2  0x2E 0x06       JZB 0x03A8 (+6)
    if (PopStack() == 0) { goto runtime_DumpPage_0x03A8; }

    // Serial.WriteChar(' ');                                                   runtime.hs:653
    // 
    // 0x03A4  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x03A6  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Out2Hex(0x00);                                                           runtime.hs:656
    // 
runtime_DumpPage_0x03A8:
    // 0x03A8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03A9  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // }                                                                        runtime.hs:657
    // 
    // 0x03AB  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x03AD  0x30 0xE1       JB 0x038E (-31)
    goto runtime_DumpPage_0x038E;
runtime_DumpPage_0x03AF:
    // 0x03AF  0x28 0x02       DECSP 0x02
    DecSP(1);

    // } // for (row = 0; r < 16; row++)                                        runtime.hs:659
    // 
runtime_DumpPage_0x03B1:
    // 0x03B1  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x03B3  0x33 0x56 0xFC  JW 0x0009 (-938)
    goto runtime_DumpPage_0x0009;
runtime_DumpPage_0x03B6:
    // 0x03B6  0x28 0x02       DECSP 0x02
    DecSP(1);

    // Serial.WriteChar(char(enter)); // next line                              runtime.hs:661
    // 
    // 0x03B8  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x03BA  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        runtime.hs:662
    // 
    // 0x03BC  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void Runtime_Out4Hex_0x0009()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte b = byte(value >> 12);                                              runtime.hs:388
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0006  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0007  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Serial.WriteChar(ToHex(b));                                              runtime.hs:389
    // 
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x000D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // b = byte((value >> 8) & 0x0F);                                           runtime.hs:390
    // 
    // 0x000F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0011  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0013  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0014  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0016  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0017  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0019  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Serial.WriteChar(ToHex(b));                                              runtime.hs:391
    // 
    // 0x001A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001B  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x001D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // b = byte((value >> 4) & 0x0F);                                           runtime.hs:392
    // 
    // 0x001F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0021  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0023  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0024  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0026  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0027  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0029  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Serial.WriteChar(ToHex(b));                                              runtime.hs:393
    // 
    // 0x002A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002B  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x002D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // b = byte(value & 0x0F);                                                  runtime.hs:394
    // 
    // 0x002F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0031  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0033  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0034  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0036  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Serial.WriteChar(ToHex(b));                                              runtime.hs:395
    // 
    // 0x0037  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0038  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x003A  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        runtime.hs:396
    // 
    // 0x003C  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
}

void Runtime_Out2Hex_0x000A()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte b = byte((value >> 4) & 0x0F);                                      runtime.hs:400
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0007  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0009  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x000A  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Serial.WriteChar(ToHex(b));                                              runtime.hs:401
    // 
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x000E  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // b = byte(value & 0x0F);                                                  runtime.hs:402
    // 
    // 0x0010  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0012  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0014  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0015  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Serial.WriteChar(ToHex(b));                                              runtime.hs:403
    // 
    // 0x0016  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0017  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x0019  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        runtime.hs:404
    // 
    // 0x001B  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
}

void Runtime_SerialLoadIHex_0x0007()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // bool success = true;                                                     runtime.hs:314
    // 
    // 0x0002  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0003  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // loadedAddress = codeStart;                                               runtime.hs:315
    // 
    // 0x0004  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0005  0x1D 0xFC       POPRELB 0xFC (BP-4)
    PutStack(GetStack(bp-2), PopStack(&htype), htype);

    // codeLength = 0;                                                          runtime.hs:317
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // char colon = Serial.ReadChar();                                          runtime.hs:320
    // 
runtime_SerialLoadIHex_0x000A:
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x000D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (colon != ':') { success = false; break; }                            runtime.hs:321
    // 
    // 0x000E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x000F  0x1A 0x3A       PUSHIB 0x3A
    PushStack(0x3A, Type::tByte);
    // 0x0011  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0012  0x2E 0x09       JZB 0x001B (+9)
    if (PopStack() == 0) { goto runtime_SerialLoadIHex_0x001B; }
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0015  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0016  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0018  0x33 0xC3 0x00  JW 0x00DB (+195)
    goto runtime_SerialLoadIHex_0x00DB;

    // byte byteCount;                                                          runtime.hs:323
    // 
runtime_SerialLoadIHex_0x001B:
    // 0x001B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte byteCount;                                                          runtime.hs:323
    // 
    // 0x001C  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x001E  0x2C 0x06       CALLB 0x06     // Runtime.TryReadSerialByte
    Runtime_TryReadSerialByte_0x0006();
    // 0x0020  0x2F 0x09       JNZB 0x0029 (+9)
    if (PopStack() != 0) { goto runtime_SerialLoadIHex_0x0029; }
    // 0x0022  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0023  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0024  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0026  0x33 0xB5 0x00  JW 0x00DB (+181)
    goto runtime_SerialLoadIHex_0x00DB;

    // byte lsb;                                                                runtime.hs:326
    // 
runtime_SerialLoadIHex_0x0029:
    // 0x0029  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte lsb;                                                                runtime.hs:326
    // 
    // 0x002A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte lsb;                                                                runtime.hs:326
    // 
    // 0x002B  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x002D  0x2C 0x06       CALLB 0x06     // Runtime.TryReadSerialByte
    Runtime_TryReadSerialByte_0x0006();
    // 0x002F  0x2F 0x09       JNZB 0x0038 (+9)
    if (PopStack() != 0) { goto runtime_SerialLoadIHex_0x0038; }
    // 0x0031  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0032  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0033  0x28 0x08       DECSP 0x08
    DecSP(4);
    // 0x0035  0x33 0xA6 0x00  JW 0x00DB (+166)
    goto runtime_SerialLoadIHex_0x00DB;

    // if (!TryReadSerialByte(ref lsb)) { success = false; break; }             runtime.hs:329
    // 
runtime_SerialLoadIHex_0x0038:
    // 0x0038  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x003A  0x2C 0x06       CALLB 0x06     // Runtime.TryReadSerialByte
    Runtime_TryReadSerialByte_0x0006();
    // 0x003C  0x2F 0x09       JNZB 0x0045 (+9)
    if (PopStack() != 0) { goto runtime_SerialLoadIHex_0x0045; }
    // 0x003E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003F  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0040  0x28 0x08       DECSP 0x08
    DecSP(4);
    // 0x0042  0x33 0x99 0x00  JW 0x00DB (+153)
    goto runtime_SerialLoadIHex_0x00DB;

    // uint recordAddress = lsb + (msb << 8);                                   runtime.hs:330
    // 
runtime_SerialLoadIHex_0x0045:
    // 0x0045  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0046  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0049  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x004B  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x004C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004D  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // byte recordType;                                                         runtime.hs:332
    // 
    // 0x004F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte recordType;                                                         runtime.hs:332
    // 
    // 0x0050  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
    PushStack(bp+6, Type::tReference);
    // 0x0052  0x2C 0x06       CALLB 0x06     // Runtime.TryReadSerialByte
    Runtime_TryReadSerialByte_0x0006();
    // 0x0054  0x2F 0x09       JNZB 0x005D (+9)
    if (PopStack() != 0) { goto runtime_SerialLoadIHex_0x005D; }
    // 0x0056  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0057  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0058  0x28 0x0C       DECSP 0x0C
    DecSP(6);
    // 0x005A  0x33 0x81 0x00  JW 0x00DB (+129)
    goto runtime_SerialLoadIHex_0x00DB;

    // switch (recordType)                                                      runtime.hs:335
    // 
runtime_SerialLoadIHex_0x005D:
    // 0x005D  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x005F  0x30 0x73       JB 0x00D2 (+115)
    goto runtime_SerialLoadIHex_0x00D2;

    // for (uint c=0; c < byteCount; c++)                                       runtime.hs:339
    // 
runtime_SerialLoadIHex_0x0061:
    // 0x0061  0x44            PUSHI0
    PushStack(0, Type::tByte);
runtime_SerialLoadIHex_0x0062:
    // 0x0062  0x56 0x0E 0x04  PUSHLOCALBB 0x040E
    PushStack(GetStack(bp+7, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x0065  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0066  0x2E 0x25       JZB 0x008B (+37)
    if (PopStack() == 0) { goto runtime_SerialLoadIHex_0x008B; }

    // byte dataByte;                                                           runtime.hs:341
    // 
    // 0x0068  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte dataByte;                                                           runtime.hs:341
    // 
    // 0x0069  0x21 0x10       PUSHSTACKADDRB 0x10 (BP+16)
    PushStack(bp+8, Type::tReference);
    // 0x006B  0x2C 0x06       CALLB 0x06     // Runtime.TryReadSerialByte
    Runtime_TryReadSerialByte_0x0006();
    // 0x006D  0x2F 0x08       JNZB 0x0075 (+8)
    if (PopStack() != 0) { goto runtime_SerialLoadIHex_0x0075; }
    // 0x006F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0070  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0071  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0073  0x30 0x1A       JB 0x008D (+26)
    goto runtime_SerialLoadIHex_0x008D;

    // Memory.WriteByte(codeStart + recordAddress, dataByte);                   runtime.hs:343
    // 
runtime_SerialLoadIHex_0x0075:
    // 0x0075  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0076  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0078  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0079  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x007B  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // codeLength++;                                                            runtime.hs:344
    // 
    // 0x007D  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x007F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0080  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0081  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // recordAddress++;                                                         runtime.hs:345
    // 
    // 0x0083  0x22 0x0A       INCLOCALB 0x0A (BP+10)
    htype = GetStackType(bp+5);
    PutStack(bp+5, GetStack(bp+5)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // recordAddress++;                                                         runtime.hs:345
    // 
    // 0x0085  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0087  0x22 0x0E       INCLOCALB 0x0E (BP+14)
    htype = GetStackType(bp+7);
    PutStack(bp+7, GetStack(bp+7)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0089  0x30 0xD9       JB 0x0062 (-39)
    goto runtime_SerialLoadIHex_0x0062;
runtime_SerialLoadIHex_0x008B:
    // 0x008B  0x28 0x02       DECSP 0x02
    DecSP(1);

    // byte checkSum;                                                           runtime.hs:347
    // 
runtime_SerialLoadIHex_0x008D:
    // 0x008D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte checkSum;                                                           runtime.hs:347
    // 
    // 0x008E  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
    PushStack(bp+7, Type::tReference);
    // 0x0090  0x2C 0x06       CALLB 0x06     // Runtime.TryReadSerialByte
    Runtime_TryReadSerialByte_0x0006();
    // 0x0092  0x2F 0x08       JNZB 0x009A (+8)
    if (PopStack() != 0) { goto runtime_SerialLoadIHex_0x009A; }
    // 0x0094  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0095  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0096  0x28 0x0E       DECSP 0x0E
    DecSP(7);
    // 0x0098  0x30 0x43       JB 0x00DB (+67)
    goto runtime_SerialLoadIHex_0x00DB;

    // char eol = Serial.ReadChar();                                            runtime.hs:350
    // 
runtime_SerialLoadIHex_0x009A:
    // 0x009A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x009B  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x009D  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // if ((eol != char(0x0D)) && (eol != char(0x0A))) // either will do
    // 
    // 0x009F  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x00A1  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x00A3  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00A4  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x00A6  0x2E 0x08       JZB 0x00AE (+8)
    if (PopStack() == 0) { goto runtime_SerialLoadIHex_0x00AE; }
    // 0x00A8  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x00AA  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x00AC  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00AD  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
runtime_SerialLoadIHex_0x00AE:
    // 0x00AE  0x2E 0x08       JZB 0x00B6 (+8)
    if (PopStack() == 0) { goto runtime_SerialLoadIHex_0x00B6; }

    // success = false; break;                                                  runtime.hs:353
    // 
    // 0x00B0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00B1  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x00B2  0x28 0x10       DECSP 0x10
    DecSP(8);
    // 0x00B4  0x30 0x27       JB 0x00DB (+39)
    goto runtime_SerialLoadIHex_0x00DB;

    // continue; // next record                                                 runtime.hs:355
    // 
runtime_SerialLoadIHex_0x00B6:
    // 0x00B6  0x28 0x10       DECSP 0x10
    DecSP(8);
    // 0x00B8  0x33 0x52 0xFF  JW 0x000A (-174)
    goto runtime_SerialLoadIHex_0x000A;

    // }                                                                        runtime.hs:356
    // 
runtime_SerialLoadIHex_0x00BB:
    // 0x00BB  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte checkSum;                                                           runtime.hs:359
    // 
    // 0x00BC  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
    PushStack(bp+7, Type::tReference);
    // 0x00BE  0x2C 0x06       CALLB 0x06     // Runtime.TryReadSerialByte
    Runtime_TryReadSerialByte_0x0006();
    // 0x00C0  0x2F 0x08       JNZB 0x00C8 (+8)
    if (PopStack() != 0) { goto runtime_SerialLoadIHex_0x00C8; }
    // 0x00C2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00C3  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x00C4  0x28 0x0E       DECSP 0x0E
    DecSP(7);
    // 0x00C6  0x30 0x15       JB 0x00DB (+21)
    goto runtime_SerialLoadIHex_0x00DB;

    // break; // EOF                                                            runtime.hs:361
    // 
runtime_SerialLoadIHex_0x00C8:
    // 0x00C8  0x28 0x0E       DECSP 0x0E
    DecSP(7);
    // 0x00CA  0x30 0x11       JB 0x00DB (+17)
    goto runtime_SerialLoadIHex_0x00DB;

    // }                                                                        runtime.hs:362
    // 
runtime_SerialLoadIHex_0x00CC:
    // 0x00CC  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00CD  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x00CE  0x28 0x0C       DECSP 0x0C
    DecSP(6);
    // 0x00D0  0x30 0x0B       JB 0x00DB (+11)
    goto runtime_SerialLoadIHex_0x00DB;
runtime_SerialLoadIHex_0x00D2:
    // 0x00D2  0x68 0x00 0x01  JIXB [0x00..0x01] -0x0073

    switch(PopStack())
    {
        case 0x00: { goto runtime_SerialLoadIHex_0x0061; }
        case 0x01: { goto runtime_SerialLoadIHex_0x00BB; }
    }
    // 0x00D9  0x30 0xF3       JB 0x00CC (-13)
    goto runtime_SerialLoadIHex_0x00CC;

    // break;                                                                   runtime.hs:368
    // 
runtime_SerialLoadIHex_0x00DB:
    // 0x00DB  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x00DC  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void Runtime_TryReadSerialByte_0x0006()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // char c0 = Serial.ReadChar();                                             runtime.hs:304
    // 
    // 0x0002  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // char c1 = Serial.ReadChar();                                             runtime.hs:305
    // 
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0008  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // byte msn = FromHex(c0);                                                  runtime.hs:306
    // 
    // 0x0009  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x000D  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // byte lsn = FromHex(c1);                                                  runtime.hs:307
    // 
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0010  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0011  0x2C 0x01       CALLB 0x01     // Runtime.FromHex
    Runtime_FromHex_0x0001();
    // 0x0013  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // data =  (msn << 4) + lsn;                                                runtime.hs:308
    // 
    // 0x0015  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0017  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0019  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x001A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x001C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001D  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return true;                                                             runtime.hs:309
    // 
    // 0x001F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0020  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_Restart_0x009F()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // sp = 0;                                                                  hoppervm.hs:147
    // 
    // 0x0002  0x1F 0x22       POPGLOBALB 0x22
    PutStack(17, PopStack(&htype), htype);

    // bp = 0;                                                                  hoppervm.hs:148
    // 
    // 0x0004  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0005  0x1F 0x24       POPGLOBALB 0x24
    PutStack(18, PopStack(&htype), htype);

    // csp = 0;                                                                 hoppervm.hs:149
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1F 0x26       POPGLOBALB 0x26
    PutStack(19, PopStack(&htype), htype);

    // Error = 0;                                                               hoppervm.hs:150
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // cnp = false;                                                             hoppervm.hs:151
    // 
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x1F 0x28       POPGLOBALB 0x28
    PutStack(20, PopStack(&htype), htype);

    // pc = ReadWord(binaryAddress + 0x0004);                                   hoppervm.hs:152
    // 
    // 0x0010  0x20 0x0E       PUSHGLOBALB 0x0E
    PushStack(GetStack(7, &htype), htype);
    // 0x0012  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0014  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0015  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0017  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:153
    // 
    // 0x0019  0x4A            RET0
    PopBP();
    return;
}

void HopperVM_ClearBreakpoints_0x0099()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // for (byte i=2; i < 32; i = i + 2)                                        hoppervm.hs:54
    // 
    // 0x0002  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
hopperVM_ClearBreakpoints_0x0005:
    // 0x0005  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0006  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0008  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0009  0x2E 0x11       JZB 0x001A (+17)
    if (PopStack() == 0) { goto hopperVM_ClearBreakpoints_0x001A; }

    // WriteWord(breakpoints + i, 0);                                           hoppervm.hs:56
    // 
    // 0x000B  0x20 0x1C       PUSHGLOBALB 0x1C
    PushStack(GetStack(14, &htype), htype);
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0010  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        hoppervm.hs:57
    // 
    // 0x0012  0x1C 0x00       PUSHLOCALB 0x00 (BP+0)
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0018  0x30 0xED       JB 0x0005 (-19)
    goto hopperVM_ClearBreakpoints_0x0005;
hopperVM_ClearBreakpoints_0x001A:
    // 0x001A  0x28 0x02       DECSP 0x02
    DecSP(1);

    // if (includingZero)                                                       hoppervm.hs:58
    // 
    // 0x001C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001E  0x2E 0x0C       JZB 0x002A (+12)
    if (PopStack() == 0) { goto hopperVM_ClearBreakpoints_0x002A; }

    // WriteWord(breakpoints, 0);                                               hoppervm.hs:60
    // 
    // 0x0020  0x20 0x1C       PUSHGLOBALB 0x1C
    PushStack(GetStack(14, &htype), htype);
    // 0x0022  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0023  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // breakpointExists = false;                                                hoppervm.hs:61
    // 
    // 0x0025  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0026  0x1F 0x1E       POPGLOBALB 0x1E
    PutStack(15, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:62
    // 
    // 0x0028  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // breakpointExists = ReadWord(breakpoints) != 0; // single step breakpoint set?
    // 
hopperVM_ClearBreakpoints_0x002A:
    // 0x002A  0x20 0x1C       PUSHGLOBALB 0x1C
    PushStack(GetStack(14, &htype), htype);
    // 0x002C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0030  0x1F 0x1E       POPGLOBALB 0x1E
    PutStack(15, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:67
    // 
    // 0x0032  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void HopperVM_SetBreakpoint_0x009B()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // WriteWord(breakpoints + n * 2,  address);                                hoppervm.hs:75
    // 
    // 0x0001  0x20 0x1C       PUSHGLOBALB 0x1C
    PushStack(GetStack(14, &htype), htype);
    // 0x0003  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0005  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0007  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0008  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0009  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (address != 0)                                                        hoppervm.hs:76
    // 
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x2E 0x07       JZB 0x0016 (+7)
    if (PopStack() == 0) { goto hopperVM_SetBreakpoint_0x0016; }

    // breakpointExists = true;                                                 hoppervm.hs:78
    // 
    // 0x0011  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0012  0x1F 0x1E       POPGLOBALB 0x1E
    PutStack(15, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:79
    // 
    // 0x0014  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // breakpointExists = false;                                                hoppervm.hs:82
    // 
hopperVM_SetBreakpoint_0x0016:
    // 0x0016  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0017  0x1F 0x1E       POPGLOBALB 0x1E
    PutStack(15, PopStack(&htype), htype);

    // for (byte i=0; i < 32; i = i + 2)                                        hoppervm.hs:83
    // 
    // 0x0019  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_SetBreakpoint_0x001A:
    // 0x001A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001B  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x001D  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x001E  0x2E 0x17       JZB 0x0035 (+23)
    if (PopStack() == 0) { goto hopperVM_SetBreakpoint_0x0035; }

    // if (ReadWord(breakpoints+i) != 0)                                        hoppervm.hs:85
    // 
    // 0x0020  0x20 0x1C       PUSHGLOBALB 0x1C
    PushStack(GetStack(14, &htype), htype);
    // 0x0022  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0023  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0024  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0026  0x2E 0x07       JZB 0x002D (+7)
    if (PopStack() == 0) { goto hopperVM_SetBreakpoint_0x002D; }

    // breakpointExists = true;                                                 hoppervm.hs:87
    // 
    // 0x0028  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0029  0x1F 0x1E       POPGLOBALB 0x1E
    PutStack(15, PopStack(&htype), htype);

    // break;                                                                   hoppervm.hs:88
    // 
    // 0x002B  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:90
    // 
hopperVM_SetBreakpoint_0x002D:
    // 0x002D  0x1C 0x00       PUSHLOCALB 0x00 (BP+0)
    PushStack(GetStack(bp , &htype), htype);
    // 0x002F  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0031  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0032  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0033  0x30 0xE7       JB 0x001A (-25)
    goto hopperVM_SetBreakpoint_0x001A;
hopperVM_SetBreakpoint_0x0035:
    // 0x0035  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HopperVM_Initialize_0x009C()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // binaryAddress      = loadedAddress;                                      hoppervm.hs:96
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x1F 0x0E       POPGLOBALB 0x0E
    PutStack(7, PopStack(&htype), htype);

    // constAddress       = ReadWord(binaryAddress + 0x0002);                   hoppervm.hs:97
    // 
    // 0x0005  0x20 0x0E       PUSHGLOBALB 0x0E
    PushStack(GetStack(7, &htype), htype);
    // 0x0007  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0009  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000A  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000C  0x1F 0x10       POPGLOBALB 0x10
    PutStack(8, PopStack(&htype), htype);

    // methodTable        = binaryAddress + 0x0006;                             hoppervm.hs:98
    // 
    // 0x000E  0x20 0x0E       PUSHGLOBALB 0x0E
    PushStack(GetStack(7, &htype), htype);
    // 0x0010  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0012  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0013  0x1F 0x12       POPGLOBALB 0x12
    PutStack(9, PopStack(&htype), htype);

    // uint nextAddress   = binaryAddress + codeLength;                         hoppervm.hs:100
    // 
    // 0x0015  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0016  0x20 0x0E       PUSHGLOBALB 0x0E
    PushStack(GetStack(7, &htype), htype);
    // 0x0018  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001B  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // callStack          = nextAddress;                                        hoppervm.hs:101
    // 
    // 0x001C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001D  0x1F 0x18       POPGLOBALB 0x18
    PutStack(12, PopStack(&htype), htype);

    // nextAddress        = nextAddress + callStackSize;                        hoppervm.hs:102
    // 
    // 0x001F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0020  0x37 0x00 0x02  PUSHIW 0x0200
    PushStack(0x0200, Type::tUInt);
    // 0x0023  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0024  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // valueStack         = nextAddress;                                        hoppervm.hs:104
    // 
    // 0x0025  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0026  0x1F 0x14       POPGLOBALB 0x14
    PutStack(10, PopStack(&htype), htype);

    // nextAddress        = nextAddress + stackSize;                            hoppervm.hs:105
    // 
    // 0x0028  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0029  0x37 0x00 0x02  PUSHIW 0x0200
    PushStack(0x0200, Type::tUInt);
    // 0x002C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002D  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // typeStack          = nextAddress;                                        hoppervm.hs:107
    // 
    // 0x002E  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002F  0x1F 0x16       POPGLOBALB 0x16
    PutStack(11, PopStack(&htype), htype);

    // nextAddress        = nextAddress + valueStack;                           hoppervm.hs:108
    // 
    // 0x0031  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0032  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0034  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0035  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // dataMemory         = nextAddress;                                        hoppervm.hs:110
    // 
    // 0x0036  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0037  0x1F 0x1A       POPGLOBALB 0x1A
    PutStack(13, PopStack(&htype), htype);

    // if (dataMemory < 0x0800)                                                 hoppervm.hs:112
    // 
    // 0x0039  0x20 0x1A       PUSHGLOBALB 0x1A
    PushStack(GetStack(13, &htype), htype);
    // 0x003B  0x55 0x00 0x08  PUSHIWLT 0x0800
    typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < 2048);
    // 0x003E  0x2E 0x07       JZB 0x0045 (+7)
    if (PopStack() == 0) { goto hopperVM_Initialize_0x0045; }

    // dataMemory = 0x0800; // after our 'fake' stack pages                     hoppervm.hs:114
    // 
    // 0x0040  0x37 0x00 0x08  PUSHIW 0x0800
    PushStack(0x0800, Type::tUInt);
    // 0x0043  0x1F 0x1A       POPGLOBALB 0x1A
    PutStack(13, PopStack(&htype), htype);

    // MemoryReset();                                                           hoppervm.hs:118
    // 
hopperVM_Initialize_0x0045:
    // 0x0045  0x2C 0x9D       CALLB 0x9D     // HopperVM.MemoryReset
    HopperVM_MemoryReset_0x009D();

    // }                                                                        hoppervm.hs:119
    // 
    // 0x0047  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HopperVM_Execute_0x00BA()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint messagePC;                                                          hoppervm.hs:3059
    // 
hopperVM_Execute_0x0002:
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // ExecuteOpCode();                                                         hoppervm.hs:3063
    // 
    // 0x0005  0x2C 0xB7       CALLB 0xB7     // HopperVM.ExecuteOpCode
    HopperVM_ExecuteOpCode_0x00B7();

    // ExecuteOpCode();                                                         hoppervm.hs:3063
    // 
    // 0x0007  0x20 0x02       PUSHGLOBALB 0x02
    PushStack(GetStack(1, &htype), htype);
    // 0x0009  0x2E 0x04       JZB 0x000D (+4)
    if (PopStack() == 0) { goto hopperVM_Execute_0x000D; }

    // break;                                                                   hoppervm.hs:3075
    // 
    // 0x000B  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // if (pc == 0) // returned from "main"                                     hoppervm.hs:3077
    // 
hopperVM_Execute_0x000D:
    // 0x000D  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x000F  0x2F 0x06       JNZB 0x0015 (+6)
    if (PopStack() != 0) { goto hopperVM_Execute_0x0015; }

    // Restart(); // this restart causes the Profiler to hang for MSU (since 0 is legit start address)
    // 
    // 0x0011  0x2C 0x9F       CALLB 0x9F     // HopperVM.Restart
    HopperVM_Restart_0x009F();

    // Restart(); // this restart causes the Profiler to hang for MSU (since 0 is legit start address)
    // 
    // 0x0013  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // if (IsBreak())                                                           hoppervm.hs:3082
    // 
hopperVM_Execute_0x0015:
    // 0x0015  0x2C 0xE5       CALLB 0xE5     // IO.IsBreak
    IO_IsBreak_0x00E5();
    // 0x0017  0x2E 0x1C       JZB 0x0033 (+28)
    if (PopStack() == 0) { goto hopperVM_Execute_0x0033; }

    // IO.WriteLn();IO.Write('B');IO.Write('R');IO.Write('E');IO.Write('A');IO.Write('K');IO.WriteLn();
    // 
    // 0x0019  0x2C 0xE0       CALLB 0xE0     // IO.WriteLn
    IO_WriteLn_0x00E0();
    // 0x001B  0x1A 0x42       PUSHIB 0x42
    PushStack(0x42, Type::tByte);
    // 0x001D  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x001F  0x1A 0x52       PUSHIB 0x52
    PushStack(0x52, Type::tByte);
    // 0x0021  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x0023  0x1A 0x45       PUSHIB 0x45
    PushStack(0x45, Type::tByte);
    // 0x0025  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x0027  0x1A 0x41       PUSHIB 0x41
    PushStack(0x41, Type::tByte);
    // 0x0029  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x002B  0x1A 0x4B       PUSHIB 0x4B
    PushStack(0x4B, Type::tByte);
    // 0x002D  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x002F  0x2C 0xE0       CALLB 0xE0     // IO.WriteLn
    IO_WriteLn_0x00E0();

    // break;                                                                   hoppervm.hs:3085
    // 
    // 0x0031  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // if (BreakpointExists)                                                    hoppervm.hs:3087
    // 
hopperVM_Execute_0x0033:
    // 0x0033  0x20 0x1E       PUSHGLOBALB 0x1E
    PushStack(GetStack(15, &htype), htype);
    // 0x0035  0x2E 0x23       JZB 0x0058 (+35)
    if (PopStack() == 0) { goto hopperVM_Execute_0x0058; }

    // byte iBreak;                                                             hoppervm.hs:3090
    // 
    // 0x0037  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte iBreak;                                                             hoppervm.hs:3090
    // 
    // 0x0038  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // byte iBreak;                                                             hoppervm.hs:3090
    // 
    // 0x0039  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003A  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
hopperVM_Execute_0x003B:
    // 0x003B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003C  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x003E  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x003F  0x2E 0x17       JZB 0x0056 (+23)
    if (PopStack() == 0) { goto hopperVM_Execute_0x0056; }

    // if (GetBreakpoint(iBreak) == pc)                                         hoppervm.hs:3094
    // 
    // 0x0041  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0042  0x2C 0x9A       CALLB 0x9A     // HopperVM.GetBreakpoint
    HopperVM_GetBreakpoint_0x009A();
    // 0x0044  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0046  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0047  0x2E 0x0B       JZB 0x0052 (+11)
    if (PopStack() == 0) { goto hopperVM_Execute_0x0052; }

    // if (iBreak == 0)                                                         hoppervm.hs:3096
    // 
    // 0x0049  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x004A  0x2F 0x06       JNZB 0x0050 (+6)
    if (PopStack() != 0) { goto hopperVM_Execute_0x0050; }

    // SetBreakpoint(0, 0); // clear single step breakpoint                     hoppervm.hs:3098
    // 
    // 0x004C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004E  0x2C 0x9B       CALLB 0x9B     // HopperVM.SetBreakpoint
    HopperVM_SetBreakpoint_0x009B();

    // return; // return control to Monitor                                     hoppervm.hs:3100
    // 
hopperVM_Execute_0x0050:
    // 0x0050  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // return; // return control to Monitor                                     hoppervm.hs:3100
    // 
hopperVM_Execute_0x0052:
    // 0x0052  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0054  0x30 0xE7       JB 0x003B (-25)
    goto hopperVM_Execute_0x003B;

    // }                                                                        hoppervm.hs:3103
    // 
hopperVM_Execute_0x0056:
    // 0x0056  0x28 0x04       DECSP 0x04
    DecSP(2);

    // }                                                                        hoppervm.hs:3103
    // 
hopperVM_Execute_0x0058:
    // 0x0058  0x2C 0x93       CALLB 0x93     // External.WatchDog
    External_WatchDog();

    // }                                                                        hoppervm.hs:3103
    // 
    // 0x005A  0x30 0xA8       JB 0x0002 (-88)
    goto hopperVM_Execute_0x0002;
}

void HopperVM_ExecuteStepTo_0x00B8()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint messagePC = pc;                                                     hoppervm.hs:3009
    // 
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // ExecuteOpCode();                                                         hoppervm.hs:3010
    // 
    // 0x0005  0x2C 0xB7       CALLB 0xB7     // HopperVM.ExecuteOpCode
    HopperVM_ExecuteOpCode_0x00B7();

    // ExecuteOpCode();                                                         hoppervm.hs:3010
    // 
    // 0x0007  0x20 0x02       PUSHGLOBALB 0x02
    PushStack(GetStack(1, &htype), htype);
    // 0x0009  0x2E 0x04       JZB 0x000D (+4)
    if (PopStack() == 0) { goto hopperVM_ExecuteStepTo_0x000D; }

    // }                                                                        hoppervm.hs:3022
    // 
    // 0x000B  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // else if (pc == 0) // returned from "main"                                hoppervm.hs:3023
    // 
hopperVM_ExecuteStepTo_0x000D:
    // 0x000D  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x000F  0x2F 0x06       JNZB 0x0015 (+6)
    if (PopStack() != 0) { goto hopperVM_ExecuteStepTo_0x0015; }

    // Restart(); // this restart causes the Profiler to hang for MSU (since 0 is legit start address)
    // 
    // 0x0011  0x2C 0x9F       CALLB 0x9F     // HopperVM.Restart
    HopperVM_Restart_0x009F();

    // Restart(); // this restart causes the Profiler to hang for MSU (since 0 is legit start address)
    // 
    // 0x0013  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // }                                                                        hoppervm.hs:3027
    // 
hopperVM_ExecuteStepTo_0x0015:
    // 0x0015  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void HopperVM_ExecuteWarp_0x00B9()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint messagePC;                                                          hoppervm.hs:3031
    // 
hopperVM_ExecuteWarp_0x0002:
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // ExecuteOpCode();                                                         hoppervm.hs:3035
    // 
    // 0x0005  0x2C 0xB7       CALLB 0xB7     // HopperVM.ExecuteOpCode
    HopperVM_ExecuteOpCode_0x00B7();

    // ExecuteOpCode();                                                         hoppervm.hs:3035
    // 
    // 0x0007  0x20 0x02       PUSHGLOBALB 0x02
    PushStack(GetStack(1, &htype), htype);
    // 0x0009  0x2E 0x04       JZB 0x000D (+4)
    if (PopStack() == 0) { goto hopperVM_ExecuteWarp_0x000D; }

    // break;                                                                   hoppervm.hs:3047
    // 
    // 0x000B  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // if (pc == 0) // returned from "main"                                     hoppervm.hs:3049
    // 
hopperVM_ExecuteWarp_0x000D:
    // 0x000D  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x000F  0x2F 0x06       JNZB 0x0015 (+6)
    if (PopStack() != 0) { goto hopperVM_ExecuteWarp_0x0015; }

    // Restart(); // this restart causes the Profiler to hang for MSU (since 0 is legit start address)
    // 
    // 0x0011  0x2C 0x9F       CALLB 0x9F     // HopperVM.Restart
    HopperVM_Restart_0x009F();

    // Restart(); // this restart causes the Profiler to hang for MSU (since 0 is legit start address)
    // 
    // 0x0013  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // WatchDog();                                                              hoppervm.hs:3054
    // 
hopperVM_ExecuteWarp_0x0015:
    // 0x0015  0x2C 0x93       CALLB 0x93     // External.WatchDog
    External_WatchDog();

    // WatchDog();                                                              hoppervm.hs:3054
    // 
    // 0x0017  0x30 0xEB       JB 0x0002 (-21)
    goto hopperVM_ExecuteWarp_0x0002;
}

void HopperVM_GetBreakpoint_0x009A()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return ReadWord(breakpoints + n * 2);                                    hoppervm.hs:70
    // 
    // 0x0001  0x20 0x1C       PUSHGLOBALB 0x1C
    PushStack(GetStack(14, &htype), htype);
    // 0x0003  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0005  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0007  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0008  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0009  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000B  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_GetCS_0x00AC()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return ReadWord(callStack + address);                                    hoppervm.hs:1680
    // 
    // 0x0001  0x20 0x18       PUSHGLOBALB 0x18
    PushStack(GetStack(12, &htype), htype);
    // 0x0003  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0008  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_Get_0x00A3()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint value  = ReadWord(valueStack + address);                            hoppervm.hs:1579
    // 
    // 0x0002  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0004  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // htype  = Type(ReadWord(typeStack + address));                            hoppervm.hs:1580
    // 
    // 0x000A  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x000C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0011  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return value;                                                            hoppervm.hs:1581
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_MemoryReset_0x009D()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // HRArray.Release();                                                       hoppervm.hs:123
    // 
    // 0x0001  0x2C 0x24       CALLB 0x24     // HRArray.Release
    HRArray_Release_0x0024();

    // Memory.Initialize(dataMemory, 0x4000 - dataMemory);                      hoppervm.hs:126
    // 
    // 0x0003  0x20 0x1A       PUSHGLOBALB 0x1A
    PushStack(GetStack(13, &htype), htype);
    // 0x0005  0x37 0x00 0x40  PUSHIW 0x4000
    PushStack(0x4000, Type::tUInt);
    // 0x0008  0x20 0x1A       PUSHGLOBALB 0x1A
    PushStack(GetStack(13, &htype), htype);
    // 0x000A  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x000B  0x2C 0x16       CALLB 0x16     // Memory.Initialize
    Memory_Initialize_0x0016();

    // breakpoints   = Memory.Allocate(32);                                     hoppervm.hs:134
    // 
    // 0x000D  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x000F  0x2C 0x17       CALLB 0x17     // Memory.Allocate
    Memory_Allocate_0x0017();
    // 0x0011  0x1F 0x1C       POPGLOBALB 0x1C
    PutStack(14, PopStack(&htype), htype);

    // ClearBreakpoints(true);                                                  hoppervm.hs:135
    // 
    // 0x0013  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0014  0x2C 0x99       CALLB 0x99     // HopperVM.ClearBreakpoints
    HopperVM_ClearBreakpoints_0x0099();

    // HRArray.Initialize();                                                    hoppervm.hs:136
    // 
    // 0x0016  0x2C 0x23       CALLB 0x23     // HRArray.Initialize
    HRArray_Initialize_0x0023();

    // }                                                                        hoppervm.hs:137
    // 
    // 0x0018  0x4A            RET0
    PopBP();
    return;
}

void HopperVM_ExecuteOpCode_0x00B7()
{
    UInt top   = 0;
    UInt next  = 0;
    Int topi   = 0;
    Int nexti  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // OpCode opCode = OpCode(ReadByte(pc));                                    hoppervm.hs:1951
    // 
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // pc++;                                                                    hoppervm.hs:1952
    // 
    // 0x0007  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // pc++;                                                                    hoppervm.hs:1952
    // 
hopperVM_ExecuteOpCode_0x0009:
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x33 0x9E 0x0C  JW 0x0CA8 (+3230)
    goto hopperVM_ExecuteOpCode_0x0CA8;

    // uint top = Pop();                                                        hoppervm.hs:1964
    // 
hopperVM_ExecuteOpCode_0x000D:
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x0010  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Push((top == 0) ? 1 : 0, Type.Bool);                                     hoppervm.hs:1966
    // 
    // 0x0011  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0012  0x2F 0x05       JNZB 0x0017 (+5)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x0017; }
    // 0x0014  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0015  0x30 0x03       JB 0x0018 (+3)
    goto hopperVM_ExecuteOpCode_0x0018;
hopperVM_ExecuteOpCode_0x0017:
    // 0x0017  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0018:
    // 0x0018  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x001A  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1967
    // 
    // 0x001C  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // uint top = Pop();                                                        hoppervm.hs:1975
    // 
hopperVM_ExecuteOpCode_0x001E:
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x0021  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Push(~top, Type.UInt);                                                   hoppervm.hs:1977
    // 
    // 0x0022  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0023  0x42            BITNOT
    top = PopStack();
    PushStack(~top, Type::tUInt);
    // 0x0024  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0026  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1978
    // 
    // 0x0028  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // uint top = Pop();                                                        hoppervm.hs:2011
    // 
hopperVM_ExecuteOpCode_0x002A:
    // 0x002A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002B  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x002D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint next = Pop();                                                       hoppervm.hs:2012
    // 
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x0031  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint result;                                                             hoppervm.hs:2014
    // 
    // 0x0033  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint result;                                                             hoppervm.hs:2014
    // 
    // 0x0034  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0035  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0037  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // switch (opCode)                                                          hoppervm.hs:2016
    // 
    // 0x0039  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x003A  0x33 0x60 0x02  JW 0x029A (+608)
    goto hopperVM_ExecuteOpCode_0x029A;

    // result = ((next != 0) && (top != 0)) ? 1 : 0;                            hoppervm.hs:2020
    // 
hopperVM_ExecuteOpCode_0x003D:
    // 0x003D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x003F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0040  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0041  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0043  0x2E 0x06       JZB 0x0049 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0049; }
    // 0x0045  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0046  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0047  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0048  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hopperVM_ExecuteOpCode_0x0049:
    // 0x0049  0x2E 0x05       JZB 0x004E (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x004E; }
    // 0x004B  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x004C  0x30 0x03       JB 0x004F (+3)
    goto hopperVM_ExecuteOpCode_0x004F;
hopperVM_ExecuteOpCode_0x004E:
    // 0x004E  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x004F:
    // 0x004F  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // rtype = Type.Bool;                                                       hoppervm.hs:2021
    // 
    // 0x0051  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0053  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);
    // 0x0055  0x33 0xFE 0x02  JW 0x0353 (+766)
    goto hopperVM_ExecuteOpCode_0x0353;

    // result = ((next != 0) || (top != 0)) ? 1 : 0;                            hoppervm.hs:2025
    // 
hopperVM_ExecuteOpCode_0x0058:
    // 0x0058  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x005A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x005B  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x005C  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x005E  0x2F 0x06       JNZB 0x0064 (+6)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x0064; }
    // 0x0060  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0061  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0062  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0063  0x0B            BOOLOR
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next || top), Type::tBool);
hopperVM_ExecuteOpCode_0x0064:
    // 0x0064  0x2E 0x05       JZB 0x0069 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0069; }
    // 0x0066  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0067  0x30 0x03       JB 0x006A (+3)
    goto hopperVM_ExecuteOpCode_0x006A;
hopperVM_ExecuteOpCode_0x0069:
    // 0x0069  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x006A:
    // 0x006A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // rtype = Type.Bool;                                                       hoppervm.hs:2026
    // 
    // 0x006C  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x006E  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);
    // 0x0070  0x33 0xE3 0x02  JW 0x0353 (+739)
    goto hopperVM_ExecuteOpCode_0x0353;

    // result = (next & top);                                                   hoppervm.hs:2030
    // 
hopperVM_ExecuteOpCode_0x0073:
    // 0x0073  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0075  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0076  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0077  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0079  0x33 0xDA 0x02  JW 0x0353 (+730)
    goto hopperVM_ExecuteOpCode_0x0353;

    // result = (next | top);                                                   hoppervm.hs:2034
    // 
hopperVM_ExecuteOpCode_0x007C:
    // 0x007C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x007E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x007F  0x0D            BITOR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] | valuestack[sp]);
    // 0x0080  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0082  0x33 0xD1 0x02  JW 0x0353 (+721)
    goto hopperVM_ExecuteOpCode_0x0353;

    // result = (next | top) & (~(next & top));                                 hoppervm.hs:2038
    // 
hopperVM_ExecuteOpCode_0x0085:
    // 0x0085  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0087  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0088  0x0D            BITOR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] | valuestack[sp]);
    // 0x0089  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x008B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x008C  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x008D  0x42            BITNOT
    top = PopStack();
    PushStack(~top, Type::tUInt);
    // 0x008E  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x008F  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0091  0x33 0xC2 0x02  JW 0x0353 (+706)
    goto hopperVM_ExecuteOpCode_0x0353;

    // switch (top)                                                             hoppervm.hs:2042
    // 
hopperVM_ExecuteOpCode_0x0094:
    // 0x0094  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);

    // switch (top)                                                             hoppervm.hs:2042
    // 
    // 0x0095  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0096  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0098  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0099  0x2E 0x0B       JZB 0x00A4 (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x00A4; }
    // 0x009B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x009D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x009E  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x009F  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00A1  0x33 0xF1 0x00  JW 0x0192 (+241)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 2:  {result = (next << 2); }                                        hoppervm.hs:2045
    // 
hopperVM_ExecuteOpCode_0x00A4:
    // 0x00A4  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00A6  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00A8  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00A9  0x2E 0x0C       JZB 0x00B5 (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x00B5; }
    // 0x00AB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00AD  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00AF  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00B0  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00B2  0x33 0xE0 0x00  JW 0x0192 (+224)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 3:  {result = (next << 3); }                                        hoppervm.hs:2046
    // 
hopperVM_ExecuteOpCode_0x00B5:
    // 0x00B5  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x00B7  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00B9  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00BA  0x2E 0x0C       JZB 0x00C6 (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x00C6; }
    // 0x00BC  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00BE  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x00C0  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00C1  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00C3  0x33 0xCF 0x00  JW 0x0192 (+207)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 4:  {result = (next << 4); }                                        hoppervm.hs:2047
    // 
hopperVM_ExecuteOpCode_0x00C6:
    // 0x00C6  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00C8  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00CA  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00CB  0x2E 0x0C       JZB 0x00D7 (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x00D7; }
    // 0x00CD  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00CF  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00D1  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00D2  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00D4  0x33 0xBE 0x00  JW 0x0192 (+190)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 5:  {result = (next << 5); }                                        hoppervm.hs:2048
    // 
hopperVM_ExecuteOpCode_0x00D7:
    // 0x00D7  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x00D9  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00DB  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00DC  0x2E 0x0C       JZB 0x00E8 (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x00E8; }
    // 0x00DE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00E0  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x00E2  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00E3  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00E5  0x33 0xAD 0x00  JW 0x0192 (+173)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 6:  {result = (next << 6); }                                        hoppervm.hs:2049
    // 
hopperVM_ExecuteOpCode_0x00E8:
    // 0x00E8  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x00EA  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00EC  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00ED  0x2E 0x0C       JZB 0x00F9 (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x00F9; }
    // 0x00EF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00F1  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x00F3  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x00F4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x00F6  0x33 0x9C 0x00  JW 0x0192 (+156)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 7:  {result = (next << 7); }                                        hoppervm.hs:2050
    // 
hopperVM_ExecuteOpCode_0x00F9:
    // 0x00F9  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x00FB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00FD  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00FE  0x2E 0x0C       JZB 0x010A (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x010A; }
    // 0x0100  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0102  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0104  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0105  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0107  0x33 0x8B 0x00  JW 0x0192 (+139)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 8:  {result = (next << 8); }                                        hoppervm.hs:2051
    // 
hopperVM_ExecuteOpCode_0x010A:
    // 0x010A  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x010C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x010E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x010F  0x2E 0x0B       JZB 0x011A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x011A; }
    // 0x0111  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0113  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0115  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0116  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0118  0x30 0x7A       JB 0x0192 (+122)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 9:  {result = (next << 9); }                                        hoppervm.hs:2052
    // 
hopperVM_ExecuteOpCode_0x011A:
    // 0x011A  0x1A 0x09       PUSHIB 0x09
    PushStack(0x09, Type::tByte);
    // 0x011C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x011E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x011F  0x2E 0x0B       JZB 0x012A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x012A; }
    // 0x0121  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0123  0x1A 0x09       PUSHIB 0x09
    PushStack(0x09, Type::tByte);
    // 0x0125  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0126  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0128  0x30 0x6A       JB 0x0192 (+106)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 10: {result = (next << 10); }                                       hoppervm.hs:2053
    // 
hopperVM_ExecuteOpCode_0x012A:
    // 0x012A  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x012C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x012E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x012F  0x2E 0x0B       JZB 0x013A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x013A; }
    // 0x0131  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0133  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0135  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0136  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0138  0x30 0x5A       JB 0x0192 (+90)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 11: {result = (next << 11); }                                       hoppervm.hs:2054
    // 
hopperVM_ExecuteOpCode_0x013A:
    // 0x013A  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x013C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x013E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x013F  0x2E 0x0B       JZB 0x014A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x014A; }
    // 0x0141  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0143  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x0145  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0146  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0148  0x30 0x4A       JB 0x0192 (+74)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 12: {result = (next << 12); }                                       hoppervm.hs:2055
    // 
hopperVM_ExecuteOpCode_0x014A:
    // 0x014A  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x014C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x014E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x014F  0x2E 0x0B       JZB 0x015A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x015A; }
    // 0x0151  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0153  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0155  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0156  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0158  0x30 0x3A       JB 0x0192 (+58)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 13: {result = (next << 13); }                                       hoppervm.hs:2056
    // 
hopperVM_ExecuteOpCode_0x015A:
    // 0x015A  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x015C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x015E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x015F  0x2E 0x0B       JZB 0x016A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x016A; }
    // 0x0161  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0163  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0165  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0166  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0168  0x30 0x2A       JB 0x0192 (+42)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 14: {result = (next << 14); }                                       hoppervm.hs:2057
    // 
hopperVM_ExecuteOpCode_0x016A:
    // 0x016A  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x016C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x016E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x016F  0x2E 0x0B       JZB 0x017A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x017A; }
    // 0x0171  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0173  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0175  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0176  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0178  0x30 0x1A       JB 0x0192 (+26)
    goto hopperVM_ExecuteOpCode_0x0192;

    // case 15: {result = (next << 15); }                                       hoppervm.hs:2058
    // 
hopperVM_ExecuteOpCode_0x017A:
    // 0x017A  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x017C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x017E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x017F  0x2E 0x0B       JZB 0x018A (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x018A; }
    // 0x0181  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0183  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0185  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0186  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0188  0x30 0x0A       JB 0x0192 (+10)
    goto hopperVM_ExecuteOpCode_0x0192;

    // default: { Error = 0x0B; ErrorDump(79); }                                hoppervm.hs:2059
    // 
hopperVM_ExecuteOpCode_0x018A:
    // 0x018A  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x018C  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();
    // 0x018E  0x1A 0x4F       PUSHIB 0x4F
    PushStack(0x4F, Type::tByte);
    // 0x0190  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // }                                                                        hoppervm.hs:2060
    // 
hopperVM_ExecuteOpCode_0x0192:
    // 0x0192  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0194  0x33 0xBF 0x01  JW 0x0353 (+447)
    goto hopperVM_ExecuteOpCode_0x0353;

    // switch (top)                                                             hoppervm.hs:2065
    // 
hopperVM_ExecuteOpCode_0x0197:
    // 0x0197  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);

    // switch (top)                                                             hoppervm.hs:2065
    // 
    // 0x0198  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0199  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x019B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x019C  0x2E 0x0B       JZB 0x01A7 (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x01A7; }
    // 0x019E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01A0  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x01A1  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x01A2  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x01A4  0x33 0xF1 0x00  JW 0x0295 (+241)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 2:  {result = (next >> 2); }                                        hoppervm.hs:2068
    // 
hopperVM_ExecuteOpCode_0x01A7:
    // 0x01A7  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x01A9  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x01AB  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01AC  0x2E 0x0C       JZB 0x01B8 (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x01B8; }
    // 0x01AE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01B0  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x01B2  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x01B3  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x01B5  0x33 0xE0 0x00  JW 0x0295 (+224)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 3:  {result = (next >> 3); }                                        hoppervm.hs:2069
    // 
hopperVM_ExecuteOpCode_0x01B8:
    // 0x01B8  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x01BA  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x01BC  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01BD  0x2E 0x0C       JZB 0x01C9 (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x01C9; }
    // 0x01BF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01C1  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x01C3  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x01C4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x01C6  0x33 0xCF 0x00  JW 0x0295 (+207)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 4:  {result = (next >> 4); }                                        hoppervm.hs:2070
    // 
hopperVM_ExecuteOpCode_0x01C9:
    // 0x01C9  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x01CB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x01CD  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01CE  0x2E 0x0C       JZB 0x01DA (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x01DA; }
    // 0x01D0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01D2  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x01D4  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x01D5  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x01D7  0x33 0xBE 0x00  JW 0x0295 (+190)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 5:  {result = (next >> 5); }                                        hoppervm.hs:2071
    // 
hopperVM_ExecuteOpCode_0x01DA:
    // 0x01DA  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x01DC  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x01DE  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01DF  0x2E 0x0C       JZB 0x01EB (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x01EB; }
    // 0x01E1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01E3  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x01E5  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x01E6  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x01E8  0x33 0xAD 0x00  JW 0x0295 (+173)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 6:  {result = (next >> 6); }                                        hoppervm.hs:2072
    // 
hopperVM_ExecuteOpCode_0x01EB:
    // 0x01EB  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x01ED  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x01EF  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01F0  0x2E 0x0C       JZB 0x01FC (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x01FC; }
    // 0x01F2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01F4  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x01F6  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x01F7  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x01F9  0x33 0x9C 0x00  JW 0x0295 (+156)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 7:  {result = (next >> 7); }                                        hoppervm.hs:2073
    // 
hopperVM_ExecuteOpCode_0x01FC:
    // 0x01FC  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x01FE  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0200  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0201  0x2E 0x0C       JZB 0x020D (+12)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x020D; }
    // 0x0203  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0205  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0207  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0208  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x020A  0x33 0x8B 0x00  JW 0x0295 (+139)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 8:  {result = (next >> 8); }                                        hoppervm.hs:2074
    // 
hopperVM_ExecuteOpCode_0x020D:
    // 0x020D  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x020F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0211  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0212  0x2E 0x0B       JZB 0x021D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x021D; }
    // 0x0214  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0216  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0218  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0219  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x021B  0x30 0x7A       JB 0x0295 (+122)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 9:  {result = (next >> 9); }                                        hoppervm.hs:2075
    // 
hopperVM_ExecuteOpCode_0x021D:
    // 0x021D  0x1A 0x09       PUSHIB 0x09
    PushStack(0x09, Type::tByte);
    // 0x021F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0221  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0222  0x2E 0x0B       JZB 0x022D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x022D; }
    // 0x0224  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0226  0x1A 0x09       PUSHIB 0x09
    PushStack(0x09, Type::tByte);
    // 0x0228  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0229  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x022B  0x30 0x6A       JB 0x0295 (+106)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 10: {result = (next >> 10); }                                       hoppervm.hs:2076
    // 
hopperVM_ExecuteOpCode_0x022D:
    // 0x022D  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x022F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0231  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0232  0x2E 0x0B       JZB 0x023D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x023D; }
    // 0x0234  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0236  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0238  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0239  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x023B  0x30 0x5A       JB 0x0295 (+90)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 11: {result = (next >> 11); }                                       hoppervm.hs:2077
    // 
hopperVM_ExecuteOpCode_0x023D:
    // 0x023D  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x023F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0241  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0242  0x2E 0x0B       JZB 0x024D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x024D; }
    // 0x0244  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0246  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x0248  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0249  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x024B  0x30 0x4A       JB 0x0295 (+74)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 12: {result = (next >> 12); }                                       hoppervm.hs:2078
    // 
hopperVM_ExecuteOpCode_0x024D:
    // 0x024D  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x024F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0251  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0252  0x2E 0x0B       JZB 0x025D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x025D; }
    // 0x0254  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0256  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0258  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0259  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x025B  0x30 0x3A       JB 0x0295 (+58)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 13: {result = (next >> 13); }                                       hoppervm.hs:2079
    // 
hopperVM_ExecuteOpCode_0x025D:
    // 0x025D  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x025F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0261  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0262  0x2E 0x0B       JZB 0x026D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x026D; }
    // 0x0264  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0266  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0268  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0269  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x026B  0x30 0x2A       JB 0x0295 (+42)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 14: {result = (next >> 14); }                                       hoppervm.hs:2080
    // 
hopperVM_ExecuteOpCode_0x026D:
    // 0x026D  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x026F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0271  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0272  0x2E 0x0B       JZB 0x027D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x027D; }
    // 0x0274  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0276  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0278  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0279  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x027B  0x30 0x1A       JB 0x0295 (+26)
    goto hopperVM_ExecuteOpCode_0x0295;

    // case 15: {result = (next >> 15); }                                       hoppervm.hs:2081
    // 
hopperVM_ExecuteOpCode_0x027D:
    // 0x027D  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x027F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0281  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0282  0x2E 0x0B       JZB 0x028D (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x028D; }
    // 0x0284  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0286  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0288  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0289  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x028B  0x30 0x0A       JB 0x0295 (+10)
    goto hopperVM_ExecuteOpCode_0x0295;

    // default: { Error = 0x0B; ErrorDump(80); }                                hoppervm.hs:2082
    // 
hopperVM_ExecuteOpCode_0x028D:
    // 0x028D  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x028F  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();
    // 0x0291  0x1A 0x50       PUSHIB 0x50
    PushStack(0x50, Type::tByte);
    // 0x0293  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // }                                                                        hoppervm.hs:2083
    // 
hopperVM_ExecuteOpCode_0x0295:
    // 0x0295  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0297  0x33 0xBC 0x00  JW 0x0353 (+188)
    goto hopperVM_ExecuteOpCode_0x0353;
hopperVM_ExecuteOpCode_0x029A:
    // 0x029A  0x69 0x0B 0x64  JIXW [0x0B..0x64] -0x0260

    switch(PopStack())
    {
        case 0x0B: { goto hopperVM_ExecuteOpCode_0x0058; }
        case 0x0C: { goto hopperVM_ExecuteOpCode_0x003D; }
        case 0x0D: { goto hopperVM_ExecuteOpCode_0x007C; }
        case 0x0E: { goto hopperVM_ExecuteOpCode_0x0073; }
        case 0x0F: { goto hopperVM_ExecuteOpCode_0x0094; }
        case 0x10: { goto hopperVM_ExecuteOpCode_0x0197; }
        case 0x64: { goto hopperVM_ExecuteOpCode_0x0085; }
    }

    // Push(result, rtype);                                                     hoppervm.hs:2086
    // 
hopperVM_ExecuteOpCode_0x0353:
    // 0x0353  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0356  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:2087
    // 
    // 0x0358  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // uint top = Pop();                                                        hoppervm.hs:2102
    // 
hopperVM_ExecuteOpCode_0x035A:
    // 0x035A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x035B  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x035D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint next = Pop();                                                       hoppervm.hs:2103
    // 
    // 0x035E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x035F  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x0361  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint result;                                                             hoppervm.hs:2105
    // 
    // 0x0363  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint result;                                                             hoppervm.hs:2105
    // 
    // 0x0364  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0365  0x30 0x3C       JB 0x03A1 (+60)
    goto hopperVM_ExecuteOpCode_0x03A1;

    // result = next + top;                                                     hoppervm.hs:2110
    // 
hopperVM_ExecuteOpCode_0x0367:
    // 0x0367  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0369  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x036A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x036B  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x036D  0x30 0x3E       JB 0x03AB (+62)
    goto hopperVM_ExecuteOpCode_0x03AB;

    // result = next - top;                                                     hoppervm.hs:2114
    // 
hopperVM_ExecuteOpCode_0x036F:
    // 0x036F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0371  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0372  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0373  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0375  0x30 0x36       JB 0x03AB (+54)
    goto hopperVM_ExecuteOpCode_0x03AB;

    // if (top == 0)                                                            hoppervm.hs:2118
    // 
hopperVM_ExecuteOpCode_0x0377:
    // 0x0377  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0378  0x2F 0x08       JNZB 0x0380 (+8)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x0380; }

    // Error = 0x04; // division by zero attempted                              hoppervm.hs:2120
    // 
    // 0x037A  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x037C  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:2121
    // 
    // 0x037E  0x30 0x2D       JB 0x03AB (+45)
    goto hopperVM_ExecuteOpCode_0x03AB;

    // }                                                                        hoppervm.hs:2121
    // 
hopperVM_ExecuteOpCode_0x0380:
    // 0x0380  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0382  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0383  0x02            DIV
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] / valuestack[sp]);
    // 0x0384  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x0386  0x30 0x25       JB 0x03AB (+37)
    goto hopperVM_ExecuteOpCode_0x03AB;

    // result = next * top;                                                     hoppervm.hs:2129
    // 
hopperVM_ExecuteOpCode_0x0388:
    // 0x0388  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x038A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x038B  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x038C  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x038E  0x30 0x1D       JB 0x03AB (+29)
    goto hopperVM_ExecuteOpCode_0x03AB;

    // if (top == 0)                                                            hoppervm.hs:2133
    // 
hopperVM_ExecuteOpCode_0x0390:
    // 0x0390  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0391  0x2F 0x08       JNZB 0x0399 (+8)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x0399; }

    // Error = 0x04; // division by zero attempted                              hoppervm.hs:2135
    // 
    // 0x0393  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0395  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:2136
    // 
    // 0x0397  0x30 0x14       JB 0x03AB (+20)
    goto hopperVM_ExecuteOpCode_0x03AB;

    // }                                                                        hoppervm.hs:2136
    // 
hopperVM_ExecuteOpCode_0x0399:
    // 0x0399  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x039B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x039C  0x04            MOD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] % valuestack[sp]);
    // 0x039D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x039F  0x30 0x0C       JB 0x03AB (+12)
    goto hopperVM_ExecuteOpCode_0x03AB;
hopperVM_ExecuteOpCode_0x03A1:
    // 0x03A1  0x68 0x00 0x04  JIXB [0x00..0x04] -0x003C

    switch(PopStack())
    {
        case 0x00: { goto hopperVM_ExecuteOpCode_0x0367; }
        case 0x01: { goto hopperVM_ExecuteOpCode_0x036F; }
        case 0x02: { goto hopperVM_ExecuteOpCode_0x0377; }
        case 0x03: { goto hopperVM_ExecuteOpCode_0x0388; }
        case 0x04: { goto hopperVM_ExecuteOpCode_0x0390; }
    }

    // Push(result, Type.UInt);                                                 hoppervm.hs:2143
    // 
hopperVM_ExecuteOpCode_0x03AB:
    // 0x03AB  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x03AD  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x03AF  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:2144
    // 
    // 0x03B1  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // int top = PopI();                                                        hoppervm.hs:2159
    // 
hopperVM_ExecuteOpCode_0x03B3:
    // 0x03B3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03B4  0x2C 0xA7       CALLB 0xA7     // HopperVM.PopI
    HopperVM_PopI_0x00A7();
    // 0x03B6  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // int next = PopI();                                                       hoppervm.hs:2160
    // 
    // 0x03B7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03B8  0x2C 0xA7       CALLB 0xA7     // HopperVM.PopI
    HopperVM_PopI_0x00A7();
    // 0x03BA  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // int result;                                                              hoppervm.hs:2162
    // 
    // 0x03BC  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // int result;                                                              hoppervm.hs:2162
    // 
    // 0x03BD  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x03BE  0x30 0x3C       JB 0x03FA (+60)
    goto hopperVM_ExecuteOpCode_0x03FA;

    // result = next + top;                                                     hoppervm.hs:2167
    // 
hopperVM_ExecuteOpCode_0x03C0:
    // 0x03C0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x03C2  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x03C3  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x03C4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x03C6  0x30 0x3E       JB 0x0404 (+62)
    goto hopperVM_ExecuteOpCode_0x0404;

    // result = next - top;                                                     hoppervm.hs:2171
    // 
hopperVM_ExecuteOpCode_0x03C8:
    // 0x03C8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x03CA  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x03CB  0x12            SUBI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) - Int(valuestack[sp]));
    // 0x03CC  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x03CE  0x30 0x36       JB 0x0404 (+54)
    goto hopperVM_ExecuteOpCode_0x0404;

    // if (top == 0)                                                            hoppervm.hs:2175
    // 
hopperVM_ExecuteOpCode_0x03D0:
    // 0x03D0  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x03D1  0x2F 0x08       JNZB 0x03D9 (+8)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x03D9; }

    // Error = 0x04; // division by zero attempted                              hoppervm.hs:2177
    // 
    // 0x03D3  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x03D5  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:2178
    // 
    // 0x03D7  0x30 0x2D       JB 0x0404 (+45)
    goto hopperVM_ExecuteOpCode_0x0404;

    // }                                                                        hoppervm.hs:2178
    // 
hopperVM_ExecuteOpCode_0x03D9:
    // 0x03D9  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x03DB  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x03DC  0x13            DIVI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) / Int(valuestack[sp]));
    // 0x03DD  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x03DF  0x30 0x25       JB 0x0404 (+37)
    goto hopperVM_ExecuteOpCode_0x0404;

    // result = next * top;                                                     hoppervm.hs:2186
    // 
hopperVM_ExecuteOpCode_0x03E1:
    // 0x03E1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x03E3  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x03E4  0x14            MULI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) * Int(valuestack[sp]));
    // 0x03E5  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x03E7  0x30 0x1D       JB 0x0404 (+29)
    goto hopperVM_ExecuteOpCode_0x0404;

    // if (top == 0)                                                            hoppervm.hs:2190
    // 
hopperVM_ExecuteOpCode_0x03E9:
    // 0x03E9  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x03EA  0x2F 0x08       JNZB 0x03F2 (+8)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x03F2; }

    // Error = 0x04; // division by zero attempted                              hoppervm.hs:2192
    // 
    // 0x03EC  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x03EE  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:2193
    // 
    // 0x03F0  0x30 0x14       JB 0x0404 (+20)
    goto hopperVM_ExecuteOpCode_0x0404;

    // }                                                                        hoppervm.hs:2193
    // 
hopperVM_ExecuteOpCode_0x03F2:
    // 0x03F2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x03F4  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x03F5  0x15            MODI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) % Int(valuestack[sp]));
    // 0x03F6  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);
    // 0x03F8  0x30 0x0C       JB 0x0404 (+12)
    goto hopperVM_ExecuteOpCode_0x0404;
hopperVM_ExecuteOpCode_0x03FA:
    // 0x03FA  0x68 0x11 0x15  JIXB [0x11..0x15] -0x003C

    switch(PopStack())
    {
        case 0x11: { goto hopperVM_ExecuteOpCode_0x03C0; }
        case 0x12: { goto hopperVM_ExecuteOpCode_0x03C8; }
        case 0x13: { goto hopperVM_ExecuteOpCode_0x03D0; }
        case 0x14: { goto hopperVM_ExecuteOpCode_0x03E1; }
        case 0x15: { goto hopperVM_ExecuteOpCode_0x03E9; }
    }

    // PushI(result);                                                           hoppervm.hs:2201
    // 
hopperVM_ExecuteOpCode_0x0404:
    // 0x0404  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0406  0x2C 0xA4       CALLB 0xA4     // HopperVM.PushI
    HopperVM_PushI_0x00A4();

    // }                                                                        hoppervm.hs:2202
    // 
    // 0x0408  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // Push(ReadWordOperand(), Type.UInt);                                      hoppervm.hs:2207
    // 
hopperVM_ExecuteOpCode_0x040A:
    // 0x040A  0x2C 0xAF       CALLB 0xAF     // HopperVM.ReadWordOperand
    HopperVM_ReadWordOperand_0x00AF();
    // 0x040C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x040E  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0410  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // Push(ReadByteOperand(), Type.Byte);                                      hoppervm.hs:2212
    // 
hopperVM_ExecuteOpCode_0x0412:
    // 0x0412  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0414  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0416  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0418  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // Push(0, Type.UInt);                                                      hoppervm.hs:2216
    // 
hopperVM_ExecuteOpCode_0x041A:
    // 0x041A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x041B  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x041D  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x041F  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // Push(0, Type.Byte);                                                      hoppervm.hs:2220
    // 
hopperVM_ExecuteOpCode_0x0421:
    // 0x0421  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0422  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0424  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0426  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // Push(1, Type.Byte);                                                      hoppervm.hs:2224
    // 
hopperVM_ExecuteOpCode_0x0428:
    // 0x0428  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0429  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x042B  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x042D  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // PushI(-1);                                                               hoppervm.hs:2228
    // 
hopperVM_ExecuteOpCode_0x042F:
    // 0x042F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0430  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0431  0x12            SUBI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) - Int(valuestack[sp]));
    // 0x0432  0x2C 0xA4       CALLB 0xA4     // HopperVM.PushI
    HopperVM_PushI_0x00A4();
    // 0x0434  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // int offset     = ReadByteOffsetOperand();                                hoppervm.hs:2232
    // 
hopperVM_ExecuteOpCode_0x0436:
    // 0x0436  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0437  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0439  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type itype;                                                              hoppervm.hs:2242
    // 
    // 0x043A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type itype;                                                              hoppervm.hs:2242
    // 
    // 0x043B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x043C  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x043E  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0440  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0441  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0442  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0444  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint value = Get(address, ref itype);                                    hoppervm.hs:2244
    // 
    // 0x0446  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0447  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0449  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x044B  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x044D  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (itype == Type.Byte)                                                  hoppervm.hs:2245
    // 
    // 0x044F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0451  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0453  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0454  0x2E 0x06       JZB 0x045A (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x045A; }

    // itype = Type.UInt;                                                       hoppervm.hs:2247
    // 
    // 0x0456  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0458  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Put(address, value+1, itype);                                            hoppervm.hs:2249
    // 
hopperVM_ExecuteOpCode_0x045A:
    // 0x045A  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x045D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x045E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x045F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0461  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:2250
    // 
    // 0x0463  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // int offset     = ReadByteOffsetOperand();                                hoppervm.hs:2253
    // 
hopperVM_ExecuteOpCode_0x0465:
    // 0x0465  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0466  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0468  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type itype;                                                              hoppervm.hs:2254
    // 
    // 0x0469  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type itype;                                                              hoppervm.hs:2254
    // 
    // 0x046A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x046B  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x046D  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x046F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0470  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0471  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0473  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint value = Get(address, ref itype);                                    hoppervm.hs:2256
    // 
    // 0x0475  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0476  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0478  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x047A  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x047C  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Put(address, value-1, itype);                                            hoppervm.hs:2257
    // 
    // 0x047E  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0481  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0482  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0483  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0485  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:2258
    // 
    // 0x0487  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // int offset0    = ReadByteOffsetOperand();                                hoppervm.hs:2261
    // 
hopperVM_ExecuteOpCode_0x0489:
    // 0x0489  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x048A  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x048C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // int offset1    = ReadByteOffsetOperand();                                hoppervm.hs:2262
    // 
    // 0x048D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x048E  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0490  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint address0 = uint(int(valueStack) + int(bp) + offset0);               hoppervm.hs:2263
    // 
    // 0x0492  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0493  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0495  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0497  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0499  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x049B  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x049C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x049D  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x049E  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x04A0  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint address1 = uint(int(valueStack) + int(bp) + offset1);               hoppervm.hs:2264
    // 
    // 0x04A2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04A3  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x04A5  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x04A7  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x04A9  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x04AB  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x04AC  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x04AE  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x04AF  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x04B1  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // WriteWord(address0, ReadWord(address0) + ReadWord(address1));            hoppervm.hs:2265
    // 
    // 0x04B3  0x56 0x06 0x06  PUSHLOCALBB 0x0606
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x04B6  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x04B8  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x04BA  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x04BC  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x04BD  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        hoppervm.hs:2266
    // 
    // 0x04BF  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // uint operand = ReadByteOperand();                                        hoppervm.hs:2270
    // 
hopperVM_ExecuteOpCode_0x04C1:
    // 0x04C1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04C2  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x04C4  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type htype;                                                              hoppervm.hs:2271
    // 
    // 0x04C5  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:2271
    // 
    // 0x04C6  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x04C8  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x04CA  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x04CB  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x04CD  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x04CF  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x04D0  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x04D2  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x04D4  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x04D5  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:2273
    // 
    // 0x04D7  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // if (Pop() == 0)                                                          hoppervm.hs:2296
    // 
hopperVM_ExecuteOpCode_0x04D9:
    // 0x04D9  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x04DB  0x2F 0x12       JNZB 0x04ED (+18)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x04ED; }

    // pc = uint(ReadByteOffsetOperand() + int(pc-2));                          hoppervm.hs:2298
    // 
    // 0x04DD  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x04DF  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x04E1  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x04E3  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x04E4  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x04E6  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x04E7  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x04E9  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2299
    // 
    // 0x04EB  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // }                                                                        hoppervm.hs:2299
    // 
hopperVM_ExecuteOpCode_0x04ED:
    // 0x04ED  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x04EF  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // if (Pop() != 0)                                                          hoppervm.hs:2324
    // 
hopperVM_ExecuteOpCode_0x04F1:
    // 0x04F1  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x04F3  0x2E 0x12       JZB 0x0505 (+18)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0505; }

    // pc = uint(ReadByteOffsetOperand() + int(pc-2));                          hoppervm.hs:2326
    // 
    // 0x04F5  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x04F7  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x04F9  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x04FB  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x04FC  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x04FE  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x04FF  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0501  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2327
    // 
    // 0x0503  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // }                                                                        hoppervm.hs:2327
    // 
hopperVM_ExecuteOpCode_0x0505:
    // 0x0505  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0507  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // pc = uint(ReadByteOffsetOperand() + int(pc-2));                          hoppervm.hs:2337
    // 
hopperVM_ExecuteOpCode_0x0509:
    // 0x0509  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x050B  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x050D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x050F  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0510  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0512  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0513  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0515  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);
    // 0x0517  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // if (Pop() == 0)                                                          hoppervm.hs:2357
    // 
hopperVM_ExecuteOpCode_0x0519:
    // 0x0519  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x051B  0x2F 0x12       JNZB 0x052D (+18)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x052D; }

    // pc = uint(ReadWordOffsetOperand() + int(pc-3));                          hoppervm.hs:2359
    // 
    // 0x051D  0x2C 0xB2       CALLB 0xB2     // HopperVM.ReadWordOffsetOperand
    HopperVM_ReadWordOffsetOperand_0x00B2();
    // 0x051F  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0521  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0523  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0524  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0526  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0527  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0529  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2360
    // 
    // 0x052B  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // }                                                                        hoppervm.hs:2360
    // 
hopperVM_ExecuteOpCode_0x052D:
    // 0x052D  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x052F  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0531  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // if (Pop() != 0)                                                          hoppervm.hs:2385
    // 
hopperVM_ExecuteOpCode_0x0533:
    // 0x0533  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x0535  0x2E 0x12       JZB 0x0547 (+18)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0547; }

    // pc = uint(ReadWordOffsetOperand() + int(pc-3));                          hoppervm.hs:2387
    // 
    // 0x0537  0x2C 0xB2       CALLB 0xB2     // HopperVM.ReadWordOffsetOperand
    HopperVM_ReadWordOffsetOperand_0x00B2();
    // 0x0539  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x053B  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x053D  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x053E  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0540  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0541  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0543  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2388
    // 
    // 0x0545  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // }                                                                        hoppervm.hs:2388
    // 
hopperVM_ExecuteOpCode_0x0547:
    // 0x0547  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0549  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x054B  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // pc = uint(ReadWordOffsetOperand() + int(pc-3));                          hoppervm.hs:2398
    // 
hopperVM_ExecuteOpCode_0x054D:
    // 0x054D  0x2C 0xB2       CALLB 0xB2     // HopperVM.ReadWordOffsetOperand
    HopperVM_ReadWordOffsetOperand_0x00B2();
    // 0x054F  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0551  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0553  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0554  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0556  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0557  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0559  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);
    // 0x055B  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // uint top = ReadWordOperand();                                            hoppervm.hs:2403
    // 
hopperVM_ExecuteOpCode_0x055D:
    // 0x055D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x055E  0x2C 0xAF       CALLB 0xAF     // HopperVM.ReadWordOperand
    HopperVM_ReadWordOperand_0x00AF();
    // 0x0560  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ntype;                                                              hoppervm.hs:2404
    // 
    // 0x0561  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:2404
    // 
    // 0x0562  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0563  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0565  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0567  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push((next < top) ? 1 : 0, Type.Bool);                                   hoppervm.hs:2409
    // 
    // 0x0569  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x056B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x056C  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x056D  0x2E 0x05       JZB 0x0572 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0572; }
    // 0x056F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0570  0x30 0x03       JB 0x0573 (+3)
    goto hopperVM_ExecuteOpCode_0x0573;
hopperVM_ExecuteOpCode_0x0572:
    // 0x0572  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0573:
    // 0x0573  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0575  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:2410
    // 
    // 0x0577  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // uint top = ReadWordOperand();                                            hoppervm.hs:2414
    // 
hopperVM_ExecuteOpCode_0x0579:
    // 0x0579  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x057A  0x2C 0xAF       CALLB 0xAF     // HopperVM.ReadWordOperand
    HopperVM_ReadWordOperand_0x00AF();
    // 0x057C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ntype;                                                              hoppervm.hs:2415
    // 
    // 0x057D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:2415
    // 
    // 0x057E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x057F  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0581  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0583  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push((next <= top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2420
    // 
    // 0x0585  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0587  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0588  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x0589  0x2E 0x05       JZB 0x058E (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x058E; }
    // 0x058B  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x058C  0x30 0x03       JB 0x058F (+3)
    goto hopperVM_ExecuteOpCode_0x058F;
hopperVM_ExecuteOpCode_0x058E:
    // 0x058E  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x058F:
    // 0x058F  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0591  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:2421
    // 
    // 0x0593  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // Type ttype;                                                              hoppervm.hs:2431
    // 
hopperVM_ExecuteOpCode_0x0595:
    // 0x0595  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:2431
    // 
    // 0x0596  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0597  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0599  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x059B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type ntype;                                                              hoppervm.hs:2433
    // 
    // 0x059D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:2433
    // 
    // 0x059E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x059F  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x05A1  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x05A3  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // switch (opCode)                                                          hoppervm.hs:2442
    // 
    // 0x05A5  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x05A6  0x30 0x6C       JB 0x0612 (+108)
    goto hopperVM_ExecuteOpCode_0x0612;

    // Push((next == top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2446
    // 
hopperVM_ExecuteOpCode_0x05A8:
    // 0x05A8  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x05AB  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x05AC  0x2E 0x05       JZB 0x05B1 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x05B1; }
    // 0x05AE  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x05AF  0x30 0x03       JB 0x05B2 (+3)
    goto hopperVM_ExecuteOpCode_0x05B2;
hopperVM_ExecuteOpCode_0x05B1:
    // 0x05B1  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x05B2:
    // 0x05B2  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x05B4  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x05B6  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next != top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2450
    // 
hopperVM_ExecuteOpCode_0x05B8:
    // 0x05B8  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x05BB  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x05BC  0x2E 0x05       JZB 0x05C1 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x05C1; }
    // 0x05BE  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x05BF  0x30 0x03       JB 0x05C2 (+3)
    goto hopperVM_ExecuteOpCode_0x05C2;
hopperVM_ExecuteOpCode_0x05C1:
    // 0x05C1  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x05C2:
    // 0x05C2  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x05C4  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x05C6  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next > top) ? 1 : 0, Type.Bool);                                   hoppervm.hs:2454
    // 
hopperVM_ExecuteOpCode_0x05C8:
    // 0x05C8  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x05CB  0x07            GT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] > valuestack[sp]);
    // 0x05CC  0x2E 0x05       JZB 0x05D1 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x05D1; }
    // 0x05CE  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x05CF  0x30 0x03       JB 0x05D2 (+3)
    goto hopperVM_ExecuteOpCode_0x05D2;
hopperVM_ExecuteOpCode_0x05D1:
    // 0x05D1  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x05D2:
    // 0x05D2  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x05D4  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x05D6  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next < top) ? 1 : 0, Type.Bool);                                   hoppervm.hs:2458
    // 
hopperVM_ExecuteOpCode_0x05D8:
    // 0x05D8  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x05DB  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x05DC  0x2E 0x05       JZB 0x05E1 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x05E1; }
    // 0x05DE  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x05DF  0x30 0x03       JB 0x05E2 (+3)
    goto hopperVM_ExecuteOpCode_0x05E2;
hopperVM_ExecuteOpCode_0x05E1:
    // 0x05E1  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x05E2:
    // 0x05E2  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x05E4  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x05E6  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next >= top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2462
    // 
hopperVM_ExecuteOpCode_0x05E8:
    // 0x05E8  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x05EB  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x05EC  0x2E 0x05       JZB 0x05F1 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x05F1; }
    // 0x05EE  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x05EF  0x30 0x03       JB 0x05F2 (+3)
    goto hopperVM_ExecuteOpCode_0x05F2;
hopperVM_ExecuteOpCode_0x05F1:
    // 0x05F1  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x05F2:
    // 0x05F2  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x05F4  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x05F6  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next <= top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2466
    // 
hopperVM_ExecuteOpCode_0x05F8:
    // 0x05F8  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x05FB  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x05FC  0x2E 0x05       JZB 0x0601 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0601; }
    // 0x05FE  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x05FF  0x30 0x03       JB 0x0602 (+3)
    goto hopperVM_ExecuteOpCode_0x0602;
hopperVM_ExecuteOpCode_0x0601:
    // 0x0601  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0602:
    // 0x0602  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0604  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0606  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // ErrorDump(5);                                                            hoppervm.hs:2470
    // 
hopperVM_ExecuteOpCode_0x0608:
    // 0x0608  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x060A  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0B;                                                            hoppervm.hs:2471
    // 
    // 0x060C  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x060E  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();
    // 0x0610  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;
hopperVM_ExecuteOpCode_0x0612:
    // 0x0612  0x68 0x05 0x0A  JIXB [0x05..0x0A] -0x006C

    switch(PopStack())
    {
        case 0x05: { goto hopperVM_ExecuteOpCode_0x05A8; }
        case 0x06: { goto hopperVM_ExecuteOpCode_0x05B8; }
        case 0x07: { goto hopperVM_ExecuteOpCode_0x05C8; }
        case 0x08: { goto hopperVM_ExecuteOpCode_0x05D8; }
        case 0x09: { goto hopperVM_ExecuteOpCode_0x05E8; }
        case 0x0A: { goto hopperVM_ExecuteOpCode_0x05F8; }
    }
    // 0x061D  0x30 0xEB       JB 0x0608 (-21)
    goto hopperVM_ExecuteOpCode_0x0608;

    // }                                                                        hoppervm.hs:2474
    // 
hopperVM_ExecuteOpCode_0x061F:
    // 0x061F  0x2C 0xAF       CALLB 0xAF     // HopperVM.ReadWordOperand
    HopperVM_ReadWordOperand_0x00AF();
    // 0x0621  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0623  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // Type ntype;                                                              hoppervm.hs:2478
    // 
    // 0x0625  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:2478
    // 
    // 0x0626  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:2478
    // 
    // 0x0627  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0628  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x062A  0x2C 0xA6       CALLB 0xA6     // HopperVM.PopI
    HopperVM_PopI_0x00A6();
    // 0x062C  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type ntype;                                                              hoppervm.hs:2481
    // 
    // 0x062E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:2481
    // 
    // 0x062F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0630  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0632  0x2C 0xA6       CALLB 0xA6     // HopperVM.PopI
    HopperVM_PopI_0x00A6();
    // 0x0634  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // Push((next <= top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2487
    // 
    // 0x0636  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0639  0x19            LEI
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (Int(valuestack[sp-1]) <= Int(valuestack[sp]));
    // 0x063A  0x2E 0x05       JZB 0x063F (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x063F; }
    // 0x063C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x063D  0x30 0x03       JB 0x0640 (+3)
    goto hopperVM_ExecuteOpCode_0x0640;
hopperVM_ExecuteOpCode_0x063F:
    // 0x063F  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0640:
    // 0x0640  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0642  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:2488
    // 
    // 0x0644  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:2488
    // 
hopperVM_ExecuteOpCode_0x0646:
    // 0x0646  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:2494
    // 
    // 0x0647  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0648  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x064A  0x2C 0xA6       CALLB 0xA6     // HopperVM.PopI
    HopperVM_PopI_0x00A6();
    // 0x064C  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type ntype;                                                              hoppervm.hs:2496
    // 
    // 0x064E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:2496
    // 
    // 0x064F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0650  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0652  0x2C 0xA6       CALLB 0xA6     // HopperVM.PopI
    HopperVM_PopI_0x00A6();
    // 0x0654  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // switch (opCode)                                                          hoppervm.hs:2502
    // 
    // 0x0656  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0657  0x30 0x4C       JB 0x06A3 (+76)
    goto hopperVM_ExecuteOpCode_0x06A3;

    // Push((next > top) ? 1 : 0, Type.Bool);                                   hoppervm.hs:2506
    // 
hopperVM_ExecuteOpCode_0x0659:
    // 0x0659  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x065C  0x16            GTI
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (Int(valuestack[sp-1]) > Int(valuestack[sp]));
    // 0x065D  0x2E 0x05       JZB 0x0662 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0662; }
    // 0x065F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0660  0x30 0x03       JB 0x0663 (+3)
    goto hopperVM_ExecuteOpCode_0x0663;
hopperVM_ExecuteOpCode_0x0662:
    // 0x0662  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0663:
    // 0x0663  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0665  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0667  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next < top) ? 1 : 0, Type.Bool);                                   hoppervm.hs:2510
    // 
hopperVM_ExecuteOpCode_0x0669:
    // 0x0669  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x066C  0x17            LTI
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (Int(valuestack[sp-1]) < Int(valuestack[sp]));
    // 0x066D  0x2E 0x05       JZB 0x0672 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0672; }
    // 0x066F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0670  0x30 0x03       JB 0x0673 (+3)
    goto hopperVM_ExecuteOpCode_0x0673;
hopperVM_ExecuteOpCode_0x0672:
    // 0x0672  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0673:
    // 0x0673  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0675  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0677  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next >= top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2514
    // 
hopperVM_ExecuteOpCode_0x0679:
    // 0x0679  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x067C  0x18            GEI
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (Int(valuestack[sp-1]) >= Int(valuestack[sp]));
    // 0x067D  0x2E 0x05       JZB 0x0682 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0682; }
    // 0x067F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0680  0x30 0x03       JB 0x0683 (+3)
    goto hopperVM_ExecuteOpCode_0x0683;
hopperVM_ExecuteOpCode_0x0682:
    // 0x0682  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0683:
    // 0x0683  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0685  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0687  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // Push((next <= top) ? 1 : 0, Type.Bool);                                  hoppervm.hs:2518
    // 
hopperVM_ExecuteOpCode_0x0689:
    // 0x0689  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x068C  0x19            LEI
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (Int(valuestack[sp-1]) <= Int(valuestack[sp]));
    // 0x068D  0x2E 0x05       JZB 0x0692 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0692; }
    // 0x068F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0690  0x30 0x03       JB 0x0693 (+3)
    goto hopperVM_ExecuteOpCode_0x0693;
hopperVM_ExecuteOpCode_0x0692:
    // 0x0692  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0693:
    // 0x0693  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0695  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();
    // 0x0697  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // ErrorDump(4);                                                            hoppervm.hs:2522
    // 
hopperVM_ExecuteOpCode_0x0699:
    // 0x0699  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x069B  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0B;                                                            hoppervm.hs:2523
    // 
    // 0x069D  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x069F  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();
    // 0x06A1  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;
hopperVM_ExecuteOpCode_0x06A3:
    // 0x06A3  0x68 0x16 0x19  JIXB [0x16..0x19] -0x004C

    switch(PopStack())
    {
        case 0x16: { goto hopperVM_ExecuteOpCode_0x0659; }
        case 0x17: { goto hopperVM_ExecuteOpCode_0x0669; }
        case 0x18: { goto hopperVM_ExecuteOpCode_0x0679; }
        case 0x19: { goto hopperVM_ExecuteOpCode_0x0689; }
    }
    // 0x06AC  0x30 0xED       JB 0x0699 (-19)
    goto hopperVM_ExecuteOpCode_0x0699;

    // }                                                                        hoppervm.hs:2526
    // 
hopperVM_ExecuteOpCode_0x06AE:
    // 0x06AE  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06AF  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x06B1  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint referenceAddress = uint(int(bp) + offset);                          hoppervm.hs:2533
    // 
    // 0x06B2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06B3  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x06B5  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x06B7  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x06B8  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x06B9  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x06BB  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type rtype;                                                              hoppervm.hs:2534
    // 
    // 0x06BD  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type rtype;                                                              hoppervm.hs:2534
    // 
    // 0x06BE  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06BF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x06C1  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x06C3  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x06C5  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint value = Get(localAddress, ref rtype);                               hoppervm.hs:2539
    // 
    // 0x06C7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06C8  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x06CA  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x06CC  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x06CE  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // Push(value, rtype);                                                      hoppervm.hs:2540
    // 
    // 0x06D0  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x06D3  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // if (IsReferenceType(rtype))                                              hoppervm.hs:2541
    // 
    // 0x06D5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x06D7  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x06D9  0x2E 0x06       JZB 0x06DF (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x06DF; }

    // GC.AddReference(value);                                                  hoppervm.hs:2543
    // 
    // 0x06DB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x06DD  0x2C 0x1F       CALLB 0x1F     // GC.AddReference
    GC_AddReference_0x001F();

    // }                                                                        hoppervm.hs:2545
    // 
hopperVM_ExecuteOpCode_0x06DF:
    // 0x06DF  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:2545
    // 
hopperVM_ExecuteOpCode_0x06E1:
    // 0x06E1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06E2  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x06E4  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = uint(int(bp) + offset);                                   hoppervm.hs:2549
    // 
    // 0x06E5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06E6  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x06E8  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x06EA  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x06EB  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x06EC  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x06EE  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(address, Type.Reference);                                           hoppervm.hs:2550
    // 
    // 0x06F0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x06F2  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x06F4  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:2551
    // 
    // 0x06F6  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:2551
    // 
hopperVM_ExecuteOpCode_0x06F8:
    // 0x06F8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06F9  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x06FC  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x06FD  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x06FF  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0700  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0702  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint nextValue = ReadWord(valueStack + sp - 4);                          hoppervm.hs:2556
    // 
    // 0x0703  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0704  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0707  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0708  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x070A  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x070B  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x070D  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // WriteWord(valueStack + sp - 2, nextValue);                               hoppervm.hs:2557
    // 
    // 0x070F  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0712  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0713  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0715  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0716  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0718  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(valueStack + sp - 4, topValue);                                hoppervm.hs:2558
    // 
    // 0x071A  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x071D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x071E  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0720  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0721  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0722  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // uint topType  = ReadWord(typeStack + sp - 2);                            hoppervm.hs:2559
    // 
    // 0x0724  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0725  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0728  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0729  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x072B  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x072C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x072E  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint nextType = ReadWord(typeStack + sp - 4);                            hoppervm.hs:2560
    // 
    // 0x0730  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0731  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0734  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0735  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0737  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0738  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x073A  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // WriteWord(typeStack + sp - 2, nextType);                                 hoppervm.hs:2561
    // 
    // 0x073C  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x073F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0740  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0742  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0743  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0745  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(typeStack + sp - 4, topType);                                  hoppervm.hs:2562
    // 
    // 0x0747  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x074A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x074B  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x074D  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x074E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0750  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        hoppervm.hs:2563
    // 
    // 0x0752  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:2563
    // 
hopperVM_ExecuteOpCode_0x0754:
    // 0x0754  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0755  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0757  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = sp - 2 - offset;                                          hoppervm.hs:2567
    // 
    // 0x0758  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0759  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x075B  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x075D  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x075E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x075F  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0760  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint value = ReadWord(valueStack     + address);                         hoppervm.hs:2568
    // 
    // 0x0762  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0763  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0765  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0767  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0768  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x076A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type htype = Type(ReadWord(typeStack + address));                        hoppervm.hs:2569
    // 
    // 0x076C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x076D  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x076F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0771  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0772  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0774  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Push(value, htype);                                                      hoppervm.hs:2570
    // 
    // 0x0776  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0779  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // if (IsReferenceType(htype))                                              hoppervm.hs:2571
    // 
    // 0x077B  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x077D  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x077F  0x2E 0x06       JZB 0x0785 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0785; }

    // GC.AddReference(value);                                                  hoppervm.hs:2573
    // 
    // 0x0781  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0783  0x2C 0x1F       CALLB 0x1F     // GC.AddReference
    GC_AddReference_0x001F();

    // }                                                                        hoppervm.hs:2575
    // 
hopperVM_ExecuteOpCode_0x0785:
    // 0x0785  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:2575
    // 
hopperVM_ExecuteOpCode_0x0787:
    // 0x0787  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:2575
    // 
    // 0x0788  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0789  0x30 0x10       JB 0x0799 (+16)
    goto hopperVM_ExecuteOpCode_0x0799;

    // offset = 0;                                                              hoppervm.hs:2585
    // 
hopperVM_ExecuteOpCode_0x078B:
    // 0x078B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x078C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x078D  0x30 0x45       JB 0x07D2 (+69)
    goto hopperVM_ExecuteOpCode_0x07D2;

    // offset = 2;                                                              hoppervm.hs:2589
    // 
hopperVM_ExecuteOpCode_0x078F:
    // 0x078F  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0791  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x0792  0x30 0x40       JB 0x07D2 (+64)
    goto hopperVM_ExecuteOpCode_0x07D2;

    // offset     = ReadByteOffsetOperand();                                    hoppervm.hs:2593
    // 
hopperVM_ExecuteOpCode_0x0794:
    // 0x0794  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0796  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x0797  0x30 0x3B       JB 0x07D2 (+59)
    goto hopperVM_ExecuteOpCode_0x07D2;
hopperVM_ExecuteOpCode_0x0799:
    // 0x0799  0x68 0x1C 0x4F  JIXB [0x1C..0x4F] -0x0010

    switch(PopStack())
    {
        case 0x1C: { goto hopperVM_ExecuteOpCode_0x0794; }
        case 0x4E: { goto hopperVM_ExecuteOpCode_0x078B; }
        case 0x4F: { goto hopperVM_ExecuteOpCode_0x078F; }
    }

    // uint value = ReadWord(uint(int(valueStack)     + int(bp) + offset));
    // 
hopperVM_ExecuteOpCode_0x07D2:
    // 0x07D2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07D3  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x07D5  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x07D7  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x07D9  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x07DB  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x07DC  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x07DD  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x07DE  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x07E0  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x07E2  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type htype = Type(ReadWord(uint(int(typeStack) + int(bp) + offset)));
    // 
    // 0x07E4  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07E5  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x07E7  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x07E9  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x07EB  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x07ED  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x07EE  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x07EF  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x07F0  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x07F2  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x07F4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push(value, htype);                                                      hoppervm.hs:2598
    // 
    // 0x07F6  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x07F9  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // if (IsReferenceType(htype))                                              hoppervm.hs:2599
    // 
    // 0x07FB  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x07FD  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x07FF  0x2E 0x06       JZB 0x0805 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0805; }

    // GC.AddReference(value);                                                  hoppervm.hs:2601
    // 
    // 0x0801  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0803  0x2C 0x1F       CALLB 0x1F     // GC.AddReference
    GC_AddReference_0x001F();

    // }                                                                        hoppervm.hs:2603
    // 
hopperVM_ExecuteOpCode_0x0805:
    // 0x0805  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2603
    // 
hopperVM_ExecuteOpCode_0x0807:
    // 0x0807  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0808  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x080A  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint value = ReadWord(uint(int(valueStack)     + int(bp) + offset));
    // 
    // 0x080B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x080C  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x080E  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0810  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0812  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0814  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0815  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0816  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0817  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0819  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x081B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type htype = Type(ReadWord(uint(int(typeStack) + int(bp) + offset)));
    // 
    // 0x081D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x081E  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x0820  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0822  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0824  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0826  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0827  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0828  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0829  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x082B  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x082D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push(value, htype);                                                      hoppervm.hs:2610
    // 
    // 0x082F  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0832  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // if (IsReferenceType(htype))                                              hoppervm.hs:2611
    // 
    // 0x0834  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0836  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0838  0x2E 0x06       JZB 0x083E (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x083E; }

    // GC.AddReference(value);                                                  hoppervm.hs:2613
    // 
    // 0x083A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x083C  0x2C 0x1F       CALLB 0x1F     // GC.AddReference
    GC_AddReference_0x001F();

    // offset     = ReadByteOffsetOperand();                                    hoppervm.hs:2617
    // 
hopperVM_ExecuteOpCode_0x083E:
    // 0x083E  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0840  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // value = ReadWord(uint(int(valueStack)     + int(bp) + offset));
    // 
    // 0x0841  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0843  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0845  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0847  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0849  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x084A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x084B  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x084C  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x084E  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0850  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // htype = Type(ReadWord(uint(int(typeStack) + int(bp) + offset)));
    // 
    // 0x0852  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x0854  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0856  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0858  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x085A  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x085B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x085C  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x085D  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x085F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0861  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push(value, htype);                                                      hoppervm.hs:2620
    // 
    // 0x0863  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0866  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // if (IsReferenceType(htype))                                              hoppervm.hs:2621
    // 
    // 0x0868  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x086A  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x086C  0x2E 0x06       JZB 0x0872 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0872; }

    // GC.AddReference(value);                                                  hoppervm.hs:2623
    // 
    // 0x086E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0870  0x2C 0x1F       CALLB 0x1F     // GC.AddReference
    GC_AddReference_0x001F();

    // }                                                                        hoppervm.hs:2625
    // 
hopperVM_ExecuteOpCode_0x0872:
    // 0x0872  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2625
    // 
hopperVM_ExecuteOpCode_0x0874:
    // 0x0874  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0875  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0877  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint value = ReadWord(valueStack + offset);                              hoppervm.hs:2629
    // 
    // 0x0878  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0879  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x087B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x087C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x087D  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x087F  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type htype = Type(ReadWord(typeStack + offset));                         hoppervm.hs:2630
    // 
    // 0x0881  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0882  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x0884  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0885  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0886  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0888  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push(value, htype);                                                      hoppervm.hs:2631
    // 
    // 0x088A  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x088D  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // if (IsReferenceType(htype))                                              hoppervm.hs:2632
    // 
    // 0x088F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0891  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0893  0x2E 0x06       JZB 0x0899 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0899; }

    // GC.AddReference(value);                                                  hoppervm.hs:2634
    // 
    // 0x0895  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0897  0x2C 0x1F       CALLB 0x1F     // GC.AddReference
    GC_AddReference_0x001F();

    // }                                                                        hoppervm.hs:2636
    // 
hopperVM_ExecuteOpCode_0x0899:
    // 0x0899  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2636
    // 
hopperVM_ExecuteOpCode_0x089B:
    // 0x089B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x089C  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x089E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // ExecuteSysCall(iSysCall, 0);                                             hoppervm.hs:2643
    // 
    // 0x089F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08A0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08A1  0x2C 0xA1       CALLB 0xA1     // HopperVM.ExecuteSysCall
    HopperVM_ExecuteSysCall_0x00A1();

    // }                                                                        hoppervm.hs:2644
    // 
    // 0x08A3  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // }                                                                        hoppervm.hs:2644
    // 
hopperVM_ExecuteOpCode_0x08A5:
    // 0x08A5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08A6  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x08A8  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // ExecuteSysCall(iSysCall, 1);                                             hoppervm.hs:2648
    // 
    // 0x08A9  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08AA  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x08AB  0x2C 0xA1       CALLB 0xA1     // HopperVM.ExecuteSysCall
    HopperVM_ExecuteSysCall_0x00A1();

    // }                                                                        hoppervm.hs:2649
    // 
    // 0x08AD  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // }                                                                        hoppervm.hs:2649
    // 
hopperVM_ExecuteOpCode_0x08AF:
    // 0x08AF  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:2649
    // 
    // 0x08B0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08B1  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x08B3  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x08B5  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // byte iSysCall  = ReadByteOperand();                                      hoppervm.hs:2654
    // 
    // 0x08B7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08B8  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x08BA  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // ExecuteSysCall(iSysCall, iOverload);                                     hoppervm.hs:2655
    // 
    // 0x08BC  0x56 0x06 0x04  PUSHLOCALBB 0x0406
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x08BF  0x2C 0xA1       CALLB 0xA1     // HopperVM.ExecuteSysCall
    HopperVM_ExecuteSysCall_0x00A1();

    // }                                                                        hoppervm.hs:2656
    // 
    // 0x08C1  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2656
    // 
hopperVM_ExecuteOpCode_0x08C3:
    // 0x08C3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08C4  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x08C6  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // PushCS(pc);                                                              hoppervm.hs:2660
    // 
    // 0x08C7  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x08C9  0x2C 0xAD       CALLB 0xAD     // HopperVM.PushCS
    HopperVM_PushCS_0x00AD();

    // pc = LookupMethod(methodIndex);                                          hoppervm.hs:2661
    // 
    // 0x08CB  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08CC  0x2C 0xA0       CALLB 0xA0     // HopperVM.LookupMethod
    HopperVM_LookupMethod_0x00A0();
    // 0x08CE  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2662
    // 
    // 0x08D0  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // }                                                                        hoppervm.hs:2662
    // 
hopperVM_ExecuteOpCode_0x08D2:
    // 0x08D2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08D3  0x2C 0xAF       CALLB 0xAF     // HopperVM.ReadWordOperand
    HopperVM_ReadWordOperand_0x00AF();
    // 0x08D5  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // PushCS(pc);                                                              hoppervm.hs:2666
    // 
    // 0x08D6  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x08D8  0x2C 0xAD       CALLB 0xAD     // HopperVM.PushCS
    HopperVM_PushCS_0x00AD();

    // pc = LookupMethod(methodIndex);                                          hoppervm.hs:2667
    // 
    // 0x08DA  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08DB  0x2C 0xA0       CALLB 0xA0     // HopperVM.LookupMethod
    HopperVM_LookupMethod_0x00A0();
    // 0x08DD  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2668
    // 
    // 0x08DF  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // }                                                                        hoppervm.hs:2668
    // 
hopperVM_ExecuteOpCode_0x08E1:
    // 0x08E1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08E2  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x08E4  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // PushCS(pc);                                                              hoppervm.hs:2682
    // 
    // 0x08E5  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x08E7  0x2C 0xAD       CALLB 0xAD     // HopperVM.PushCS
    HopperVM_PushCS_0x00AD();

    // pc = LookupMethod(methodIndex);                                          hoppervm.hs:2683
    // 
    // 0x08E9  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08EA  0x2C 0xA0       CALLB 0xA0     // HopperVM.LookupMethod
    HopperVM_LookupMethod_0x00A0();
    // 0x08EC  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2684
    // 
    // 0x08EE  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // }                                                                        hoppervm.hs:2684
    // 
hopperVM_ExecuteOpCode_0x08F0:
    // 0x08F0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08F1  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x08F3  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // while (popBytes != 0)                                                    hoppervm.hs:2689
    // 
hopperVM_ExecuteOpCode_0x08F4:
    // 0x08F4  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08F5  0x2E 0x1D       JZB 0x0912 (+29)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0912; }

    // Type htype;                                                              hoppervm.hs:2691
    // 
    // 0x08F7  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:2691
    // 
    // 0x08F8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08F9  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x08FB  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x08FD  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (IsReferenceType(htype))                                              hoppervm.hs:2693
    // 
    // 0x08FF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0901  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0903  0x2E 0x06       JZB 0x0909 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0909; }

    // GC.Release(address);                                                     hoppervm.hs:2695
    // 
    // 0x0905  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0907  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // popBytes = popBytes - 2;                                                 hoppervm.hs:2697
    // 
hopperVM_ExecuteOpCode_0x0909:
    // 0x0909  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x090A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x090C  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x090D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2698
    // 
    // 0x090E  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0910  0x30 0xE4       JB 0x08F4 (-28)
    goto hopperVM_ExecuteOpCode_0x08F4;

    // }                                                                        hoppervm.hs:2699
    // 
hopperVM_ExecuteOpCode_0x0912:
    // 0x0912  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // }                                                                        hoppervm.hs:2699
    // 
hopperVM_ExecuteOpCode_0x0914:
    // 0x0914  0x2C 0xAE       CALLB 0xAE     // HopperVM.PopCS
    HopperVM_PopCS_0x00AE();
    // 0x0916  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);
    // 0x0918  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // uint value;                                                              hoppervm.hs:2708
    // 
hopperVM_ExecuteOpCode_0x091A:
    // 0x091A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint value;                                                              hoppervm.hs:2708
    // 
    // 0x091B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint value;                                                              hoppervm.hs:2708
    // 
    // 0x091C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x091D  0x1A 0x2B       PUSHIB 0x2B
    PushStack(0x2B, Type::tByte);
    // 0x091F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0920  0x2E 0x07       JZB 0x0927 (+7)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0927; }

    // value = Pop(ref rtype);                                                  hoppervm.hs:2712
    // 
    // 0x0922  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0924  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0926  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint popBytes;                                                           hoppervm.hs:2714
    // 
hopperVM_ExecuteOpCode_0x0927:
    // 0x0927  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint popBytes;                                                           hoppervm.hs:2714
    // 
    // 0x0928  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0929  0x1A 0x4A       PUSHIB 0x4A
    PushStack(0x4A, Type::tByte);
    // 0x092B  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x092C  0x2E 0x06       JZB 0x0932 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0932; }

    // popBytes = ReadByteOperand();                                            hoppervm.hs:2717
    // 
    // 0x092E  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0930  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // while (popBytes != 0)                                                    hoppervm.hs:2719
    // 
hopperVM_ExecuteOpCode_0x0932:
    // 0x0932  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0934  0x2E 0x1F       JZB 0x0953 (+31)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0953; }

    // Type htype;                                                              hoppervm.hs:2721
    // 
    // 0x0936  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:2721
    // 
    // 0x0937  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0938  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x093A  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x093C  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (IsReferenceType(htype))                                              hoppervm.hs:2723
    // 
    // 0x093E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0940  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0942  0x2E 0x06       JZB 0x0948 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0948; }

    // GC.Release(address);                                                     hoppervm.hs:2725
    // 
    // 0x0944  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0946  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // popBytes = popBytes - 2;                                                 hoppervm.hs:2727
    // 
hopperVM_ExecuteOpCode_0x0948:
    // 0x0948  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x094A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x094C  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x094D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2728
    // 
    // 0x094F  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0951  0x30 0xE1       JB 0x0932 (-31)
    goto hopperVM_ExecuteOpCode_0x0932;

    // if (opCode == OpCode.RETRETB)                                            hoppervm.hs:2729
    // 
hopperVM_ExecuteOpCode_0x0953:
    // 0x0953  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0954  0x1A 0x2B       PUSHIB 0x2B
    PushStack(0x2B, Type::tByte);
    // 0x0956  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0957  0x2E 0x07       JZB 0x095E (+7)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x095E; }

    // Push(value, rtype);                                                      hoppervm.hs:2731
    // 
    // 0x0959  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x095A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x095C  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // bp = PopCS();                                                            hoppervm.hs:2733
    // 
hopperVM_ExecuteOpCode_0x095E:
    // 0x095E  0x2C 0xAE       CALLB 0xAE     // HopperVM.PopCS
    HopperVM_PopCS_0x00AE();
    // 0x0960  0x1F 0x24       POPGLOBALB 0x24
    PutStack(18, PopStack(&htype), htype);

    // if (csp == 0)                                                            hoppervm.hs:2734
    // 
    // 0x0962  0x20 0x26       PUSHGLOBALB 0x26
    PushStack(GetStack(19, &htype), htype);
    // 0x0964  0x2F 0x07       JNZB 0x096B (+7)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x096B; }

    // pc = 0; // exit program                                                  hoppervm.hs:2736
    // 
    // 0x0966  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0967  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2737
    // 
    // 0x0969  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2737
    // 
hopperVM_ExecuteOpCode_0x096B:
    // 0x096B  0x2C 0xAE       CALLB 0xAE     // HopperVM.PopCS
    HopperVM_PopCS_0x00AE();
    // 0x096D  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2742
    // 
    // 0x096F  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2742
    // 
hopperVM_ExecuteOpCode_0x0971:
    // 0x0971  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0973  0x2C 0xAD       CALLB 0xAD     // HopperVM.PushCS
    HopperVM_PushCS_0x00AD();

    // bp = sp;                                                                 hoppervm.hs:2748
    // 
    // 0x0975  0x20 0x22       PUSHGLOBALB 0x22
    PushStack(GetStack(17, &htype), htype);
    // 0x0977  0x1F 0x24       POPGLOBALB 0x24
    PutStack(18, PopStack(&htype), htype);

    // uint zeros = 0;                                                          hoppervm.hs:2750
    // 
    // 0x0979  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint zeros = 0;                                                          hoppervm.hs:2750
    // 
    // 0x097A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint zeros = 0;                                                          hoppervm.hs:2750
    // 
    // 0x097B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x097C  0x1A 0x5F       PUSHIB 0x5F
    PushStack(0x5F, Type::tByte);
    // 0x097E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x097F  0x2E 0x05       JZB 0x0984 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0984; }

    // zeros = ReadByteOperand();                                               hoppervm.hs:2754
    // 
    // 0x0981  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0983  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // for (uint i = 0; i < zeros; i++)                                         hoppervm.hs:2756
    // 
hopperVM_ExecuteOpCode_0x0984:
    // 0x0984  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteOpCode_0x0985:
    // 0x0985  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0987  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0988  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0989  0x2E 0x0B       JZB 0x0994 (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0994; }

    // Push(0, Type.Byte);                                                      hoppervm.hs:2758
    // 
    // 0x098B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x098C  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x098E  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:2759
    // 
    // 0x0990  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0992  0x30 0xF3       JB 0x0985 (-13)
    goto hopperVM_ExecuteOpCode_0x0985;
hopperVM_ExecuteOpCode_0x0994:
    // 0x0994  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2760
    // 
hopperVM_ExecuteOpCode_0x0996:
    // 0x0996  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0997  0x1F 0x28       POPGLOBALB 0x28
    PutStack(20, PopStack(&htype), htype);
    // 0x0999  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // int offset;                                                              hoppervm.hs:2772
    // 
hopperVM_ExecuteOpCode_0x099B:
    // 0x099B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // int offset;                                                              hoppervm.hs:2772
    // 
    // 0x099C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x099D  0x30 0x3D       JB 0x09DA (+61)
    goto hopperVM_ExecuteOpCode_0x09DA;

    // if (cnp) { opCode = OpCode.POPCOPYLOCALB00; cnp=false; continue; }
    // 
hopperVM_ExecuteOpCode_0x099F:
    // 0x099F  0x20 0x28       PUSHGLOBALB 0x28
    PushStack(GetStack(20, &htype), htype);
    // 0x09A1  0x2E 0x0D       JZB 0x09AE (+13)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x09AE; }
    // 0x09A3  0x1A 0x5D       PUSHIB 0x5D
    PushStack(0x5D, Type::tByte);
    // 0x09A5  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x09A6  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09A7  0x1F 0x28       POPGLOBALB 0x28
    PutStack(20, PopStack(&htype), htype);
    // 0x09A9  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x09AB  0x33 0x5E 0xF6  JW 0x0009 (-2466)
    goto hopperVM_ExecuteOpCode_0x0009;

    // offset = 0;                                                              hoppervm.hs:2778
    // 
hopperVM_ExecuteOpCode_0x09AE:
    // 0x09AE  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09AF  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x09B0  0x30 0x62       JB 0x0A12 (+98)
    goto hopperVM_ExecuteOpCode_0x0A12;

    // if (cnp) { opCode = OpCode.POPCOPYLOCALB02; cnp=false; continue; }
    // 
hopperVM_ExecuteOpCode_0x09B2:
    // 0x09B2  0x20 0x28       PUSHGLOBALB 0x28
    PushStack(GetStack(20, &htype), htype);
    // 0x09B4  0x2E 0x0D       JZB 0x09C1 (+13)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x09C1; }
    // 0x09B6  0x1A 0x5E       PUSHIB 0x5E
    PushStack(0x5E, Type::tByte);
    // 0x09B8  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x09B9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09BA  0x1F 0x28       POPGLOBALB 0x28
    PutStack(20, PopStack(&htype), htype);
    // 0x09BC  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x09BE  0x33 0x4B 0xF6  JW 0x0009 (-2485)
    goto hopperVM_ExecuteOpCode_0x0009;

    // offset = 2;                                                              hoppervm.hs:2783
    // 
hopperVM_ExecuteOpCode_0x09C1:
    // 0x09C1  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x09C3  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x09C4  0x30 0x4E       JB 0x0A12 (+78)
    goto hopperVM_ExecuteOpCode_0x0A12;

    // if (cnp) { opCode = OpCode.POPCOPYLOCALB; cnp=false; continue; }
    // 
hopperVM_ExecuteOpCode_0x09C6:
    // 0x09C6  0x20 0x28       PUSHGLOBALB 0x28
    PushStack(GetStack(20, &htype), htype);
    // 0x09C8  0x2E 0x0D       JZB 0x09D5 (+13)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x09D5; }
    // 0x09CA  0x1A 0x57       PUSHIB 0x57
    PushStack(0x57, Type::tByte);
    // 0x09CC  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x09CD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09CE  0x1F 0x28       POPGLOBALB 0x28
    PutStack(20, PopStack(&htype), htype);
    // 0x09D0  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x09D2  0x33 0x37 0xF6  JW 0x0009 (-2505)
    goto hopperVM_ExecuteOpCode_0x0009;

    // offset     = ReadByteOffsetOperand();                                    hoppervm.hs:2788
    // 
hopperVM_ExecuteOpCode_0x09D5:
    // 0x09D5  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x09D7  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x09D8  0x30 0x3A       JB 0x0A12 (+58)
    goto hopperVM_ExecuteOpCode_0x0A12;
hopperVM_ExecuteOpCode_0x09DA:
    // 0x09DA  0x68 0x1B 0x4D  JIXB [0x1B..0x4D] -0x003D

    switch(PopStack())
    {
        case 0x1B: { goto hopperVM_ExecuteOpCode_0x09C6; }
        case 0x4C: { goto hopperVM_ExecuteOpCode_0x099F; }
        case 0x4D: { goto hopperVM_ExecuteOpCode_0x09B2; }
    }

    // Type htype = Type(ReadWord(uint(int(typeStack) + int(bp) + offset)));
    // 
hopperVM_ExecuteOpCode_0x0A12:
    // 0x0A12  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0A13  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x0A15  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A17  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0A19  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A1B  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A1C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0A1D  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A1E  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0A20  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0A22  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint value;                                                              hoppervm.hs:2794
    // 
    // 0x0A24  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint value;                                                              hoppervm.hs:2794
    // 
    // 0x0A25  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0A27  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0A29  0x2E 0x17       JZB 0x0A40 (+23)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0A40; }

    // value = ReadWord(uint(int(valueStack)     + int(bp) + offset));
    // 
    // 0x0A2B  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0A2D  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A2F  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0A31  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A33  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A34  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0A35  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A36  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0A38  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0A3A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // GC.Release(value);                                                       hoppervm.hs:2798
    // 
    // 0x0A3C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0A3E  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // value = Pop(ref htype);                                                  hoppervm.hs:2801
    // 
hopperVM_ExecuteOpCode_0x0A40:
    // 0x0A40  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0A42  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0A44  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // WriteWord(uint(int(valueStack) + int(bp) + offset), value);              hoppervm.hs:2802
    // 
    // 0x0A46  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0A48  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A4A  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0A4C  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A4E  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A4F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0A50  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A51  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0A53  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0A55  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(uint(int(typeStack)  + int(bp) + offset), uint(htype));
    // 
    // 0x0A57  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x0A59  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A5B  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0A5D  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0A5F  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A60  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0A61  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0A62  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0A64  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0A66  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        hoppervm.hs:2804
    // 
    // 0x0A68  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2804
    // 
hopperVM_ExecuteOpCode_0x0A6A:
    // 0x0A6A  0x20 0x28       PUSHGLOBALB 0x28
    PushStack(GetStack(20, &htype), htype);
    // 0x0A6C  0x2E 0x0B       JZB 0x0A77 (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0A77; }
    // 0x0A6E  0x1A 0x59       PUSHIB 0x59
    PushStack(0x59, Type::tByte);
    // 0x0A70  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0A71  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0A72  0x1F 0x28       POPGLOBALB 0x28
    PutStack(20, PopStack(&htype), htype);
    // 0x0A74  0x33 0x95 0xF5  JW 0x0009 (-2667)
    goto hopperVM_ExecuteOpCode_0x0009;

    // byte offset     = ReadByteOperand();                                     hoppervm.hs:2809
    // 
hopperVM_ExecuteOpCode_0x0A77:
    // 0x0A77  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0A78  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0A7A  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type htype = Type(ReadWord(typeStack  + offset));                        hoppervm.hs:2812
    // 
    // 0x0A7B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0A7C  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x0A7E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0A7F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0A80  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0A82  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint value;                                                              hoppervm.hs:2813
    // 
    // 0x0A84  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint value;                                                              hoppervm.hs:2813
    // 
    // 0x0A85  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0A87  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0A89  0x2E 0x0E       JZB 0x0A97 (+14)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0A97; }

    // value = ReadWord(valueStack  + offset);                                  hoppervm.hs:2816
    // 
    // 0x0A8B  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0A8D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0A8E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0A8F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0A91  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // GC.Release(value);                                                       hoppervm.hs:2817
    // 
    // 0x0A93  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0A95  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // value = Pop(ref htype);                                                  hoppervm.hs:2820
    // 
hopperVM_ExecuteOpCode_0x0A97:
    // 0x0A97  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0A99  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0A9B  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // WriteWord(valueStack + offset, value);                                   hoppervm.hs:2821
    // 
    // 0x0A9D  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0A9F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0AA0  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0AA1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0AA3  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(typeStack  + offset, uint(htype));                             hoppervm.hs:2822
    // 
    // 0x0AA5  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x0AA7  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0AA8  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0AA9  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0AAB  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        hoppervm.hs:2823
    // 
    // 0x0AAD  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:2823
    // 
hopperVM_ExecuteOpCode_0x0AAF:
    // 0x0AAF  0x20 0x28       PUSHGLOBALB 0x28
    PushStack(GetStack(20, &htype), htype);
    // 0x0AB1  0x2E 0x0B       JZB 0x0ABC (+11)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0ABC; }
    // 0x0AB3  0x1A 0x58       PUSHIB 0x58
    PushStack(0x58, Type::tByte);
    // 0x0AB5  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0AB6  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0AB7  0x1F 0x28       POPGLOBALB 0x28
    PutStack(20, PopStack(&htype), htype);
    // 0x0AB9  0x33 0x50 0xF5  JW 0x0009 (-2736)
    goto hopperVM_ExecuteOpCode_0x0009;

    // int offset = ReadByteOffsetOperand();                                    hoppervm.hs:2828
    // 
hopperVM_ExecuteOpCode_0x0ABC:
    // 0x0ABC  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0ABD  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0ABF  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint referenceAddress = uint(int(bp) + offset);                          hoppervm.hs:2829
    // 
    // 0x0AC0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0AC1  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0AC3  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0AC5  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0AC6  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0AC7  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0AC9  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type rtype;                                                              hoppervm.hs:2831
    // 
    // 0x0ACB  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type rtype;                                                              hoppervm.hs:2831
    // 
    // 0x0ACC  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0ACD  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0ACF  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0AD1  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0AD3  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint existing = Get(localAddress, ref rtype);                            hoppervm.hs:2834
    // 
    // 0x0AD5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0AD6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0AD8  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0ADA  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0ADC  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (IsReferenceType(rtype))                                              hoppervm.hs:2835
    // 
    // 0x0ADE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0AE0  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0AE2  0x2E 0x06       JZB 0x0AE8 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0AE8; }

    // GC.Release(existing);                                                    hoppervm.hs:2837
    // 
    // 0x0AE4  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0AE6  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Type vtype;                                                              hoppervm.hs:2840
    // 
hopperVM_ExecuteOpCode_0x0AE8:
    // 0x0AE8  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type vtype;                                                              hoppervm.hs:2840
    // 
    // 0x0AE9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0AEA  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
    PushStack(bp+6, Type::tReference);
    // 0x0AEC  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0AEE  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // Put(localAddress, value, vtype);                                         hoppervm.hs:2842
    // 
    // 0x0AF0  0x56 0x08 0x0E  PUSHLOCALBB 0x0E08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x0AF3  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0AF5  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:2843
    // 
    // 0x0AF7  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:2843
    // 
hopperVM_ExecuteOpCode_0x0AF9:
    // 0x0AF9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0AFA  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0AFC  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint referenceAddress = uint(int(bp) + offset);                          hoppervm.hs:2848
    // 
    // 0x0AFD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0AFE  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0B00  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0B02  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0B03  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0B04  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0B06  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type rtype;                                                              hoppervm.hs:2849
    // 
    // 0x0B08  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type rtype;                                                              hoppervm.hs:2849
    // 
    // 0x0B09  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B0A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0B0C  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0B0E  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0B10  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint oldvalue = Get(localAddress, ref rtype);                            hoppervm.hs:2855
    // 
    // 0x0B12  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B13  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0B15  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0B17  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0B19  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (IsReferenceType(rtype))                                              hoppervm.hs:2856
    // 
    // 0x0B1B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0B1D  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0B1F  0x2E 0x06       JZB 0x0B25 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0B25; }

    // GC.Release(oldvalue);                                                    hoppervm.hs:2858
    // 
    // 0x0B21  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0B23  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // uint value = Pop(ref rtype);                                             hoppervm.hs:2860
    // 
hopperVM_ExecuteOpCode_0x0B25:
    // 0x0B25  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B26  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0B28  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0B2A  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // if (value == oldvalue)                                                   hoppervm.hs:2861
    // 
    // 0x0B2C  0x56 0x0C 0x0A  PUSHLOCALBB 0x0A0C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x0B2F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0B30  0x2E 0x04       JZB 0x0B34 (+4)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0B34; }

    // }                                                                        hoppervm.hs:2864
    // 
    // 0x0B32  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:2864
    // 
hopperVM_ExecuteOpCode_0x0B34:
    // 0x0B34  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B35  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0B37  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0B39  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // GC.Release(value);                                                       hoppervm.hs:2869
    // 
    // 0x0B3B  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0B3D  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Put(localAddress, newvalue, rtype);                                      hoppervm.hs:2870
    // 
    // 0x0B3F  0x56 0x08 0x0E  PUSHLOCALBB 0x0E08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x0B42  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0B44  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:2871
    // 
    // 0x0B46  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:2871
    // 
hopperVM_ExecuteOpCode_0x0B48:
    // 0x0B48  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:2871
    // 
    // 0x0B49  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0B4A  0x30 0x10       JB 0x0B5A (+16)
    goto hopperVM_ExecuteOpCode_0x0B5A;

    // offset = 0;                                                              hoppervm.hs:2883
    // 
hopperVM_ExecuteOpCode_0x0B4C:
    // 0x0B4C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B4D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x0B4E  0x30 0x19       JB 0x0B67 (+25)
    goto hopperVM_ExecuteOpCode_0x0B67;

    // offset = 2;                                                              hoppervm.hs:2887
    // 
hopperVM_ExecuteOpCode_0x0B50:
    // 0x0B50  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0B52  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x0B53  0x30 0x14       JB 0x0B67 (+20)
    goto hopperVM_ExecuteOpCode_0x0B67;

    // offset     = ReadByteOffsetOperand();                                    hoppervm.hs:2891
    // 
hopperVM_ExecuteOpCode_0x0B55:
    // 0x0B55  0x2C 0xB1       CALLB 0xB1     // HopperVM.ReadByteOffsetOperand
    HopperVM_ReadByteOffsetOperand_0x00B1();
    // 0x0B57  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);
    // 0x0B58  0x30 0x0F       JB 0x0B67 (+15)
    goto hopperVM_ExecuteOpCode_0x0B67;
hopperVM_ExecuteOpCode_0x0B5A:
    // 0x0B5A  0x68 0x57 0x5E  JIXB [0x57..0x5E] -0x0010

    switch(PopStack())
    {
        case 0x57: { goto hopperVM_ExecuteOpCode_0x0B55; }
        case 0x5D: { goto hopperVM_ExecuteOpCode_0x0B4C; }
        case 0x5E: { goto hopperVM_ExecuteOpCode_0x0B50; }
    }

    // Type htype;                                                              hoppervm.hs:2895
    // 
hopperVM_ExecuteOpCode_0x0B67:
    // 0x0B67  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:2895
    // 
    // 0x0B68  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B69  0x20 0x24       PUSHGLOBALB 0x24
    PushStack(GetStack(18, &htype), htype);
    // 0x0B6B  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0B6D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0B6E  0x11            ADDI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) + Int(valuestack[sp]));
    // 0x0B6F  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0B71  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint oldvalue = Get(localAddress, ref htype);                            hoppervm.hs:2897
    // 
    // 0x0B73  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B74  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0B76  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0B78  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0B7A  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (IsReferenceType(htype))                                              hoppervm.hs:2898
    // 
    // 0x0B7C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0B7E  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0B80  0x2E 0x06       JZB 0x0B86 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0B86; }

    // GC.Release(oldvalue);                                                    hoppervm.hs:2900
    // 
    // 0x0B82  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0B84  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // uint value = Pop(ref htype);                                             hoppervm.hs:2902
    // 
hopperVM_ExecuteOpCode_0x0B86:
    // 0x0B86  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B87  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0B89  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0B8B  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (value == oldvalue)                                                   hoppervm.hs:2903
    // 
    // 0x0B8D  0x56 0x0A 0x08  PUSHLOCALBB 0x080A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0B90  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0B91  0x2E 0x04       JZB 0x0B95 (+4)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0B95; }

    // }                                                                        hoppervm.hs:2906
    // 
    // 0x0B93  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:2906
    // 
hopperVM_ExecuteOpCode_0x0B95:
    // 0x0B95  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0B96  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0B98  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0B9A  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // GC.Release(value);                                                       hoppervm.hs:2911
    // 
    // 0x0B9C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0B9E  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Put(localAddress, newvalue, htype);                                      hoppervm.hs:2912
    // 
    // 0x0BA0  0x56 0x06 0x0C  PUSHLOCALBB 0x0C06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+6, &htype), htype);
    // 0x0BA3  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0BA5  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:2913
    // 
    // 0x0BA7  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:2913
    // 
hopperVM_ExecuteOpCode_0x0BA9:
    // 0x0BA9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BAA  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0BAC  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type htype;                                                              hoppervm.hs:2922
    // 
    // 0x0BAD  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:2922
    // 
    // 0x0BAE  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BAF  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0BB0  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0BB2  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0BB4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (IsReferenceType(htype))                                              hoppervm.hs:2924
    // 
    // 0x0BB6  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0BB8  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0BBA  0x2E 0x06       JZB 0x0BC0 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0BC0; }

    // GC.Release(oldvalue);                                                    hoppervm.hs:2926
    // 
    // 0x0BBC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0BBE  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // uint value = Pop(ref htype);                                             hoppervm.hs:2928
    // 
hopperVM_ExecuteOpCode_0x0BC0:
    // 0x0BC0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BC1  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0BC3  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0BC5  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (value == oldvalue)                                                   hoppervm.hs:2929
    // 
    // 0x0BC7  0x56 0x08 0x06  PUSHLOCALBB 0x0608
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0BCA  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0BCB  0x2E 0x04       JZB 0x0BCF (+4)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0BCF; }

    // }                                                                        hoppervm.hs:2932
    // 
    // 0x0BCD  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:2932
    // 
hopperVM_ExecuteOpCode_0x0BCF:
    // 0x0BCF  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BD0  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0BD2  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0BD4  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(value);                                                       hoppervm.hs:2937
    // 
    // 0x0BD6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0BD8  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Put(offset, newvalue, htype);                                            hoppervm.hs:2938
    // 
    // 0x0BDA  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0BDB  0x56 0x0A 0x04  PUSHLOCALBB 0x040A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x0BDE  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:2939
    // 
    // 0x0BE0  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:2939
    // 
hopperVM_ExecuteOpCode_0x0BE2:
    // 0x0BE2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BE3  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x0BE5  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // byte minRange = ReadByteOperand();                                       hoppervm.hs:2946
    // 
    // 0x0BE6  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BE7  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0BE9  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // byte maxRange = ReadByteOperand();                                       hoppervm.hs:2947
    // 
    // 0x0BEB  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BEC  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0BEE  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // byte lsb = ReadByteOperand();                                            hoppervm.hs:2949
    // 
    // 0x0BF0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BF1  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0BF3  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // byte msb = ReadByteOperand();                                            hoppervm.hs:2950
    // 
    // 0x0BF5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BF6  0x2C 0xB0       CALLB 0xB0     // HopperVM.ReadByteOperand
    HopperVM_ReadByteOperand_0x00B0();
    // 0x0BF8  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // int jumpBackOffset = int(lsb + (msb << 8));                              hoppervm.hs:2952
    // 
    // 0x0BFA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0BFB  0x56 0x08 0x0A  PUSHLOCALBB 0x0A08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x0BFE  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0C00  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0C01  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C02  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint tpc = pc;                                                           hoppervm.hs:2954
    // 
    // 0x0C04  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0C05  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0C07  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // pc = uint(int(pc) - jumpBackOffset - 5);                                 hoppervm.hs:2956
    // 
    // 0x0C09  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0C0B  0x24 0x37       SYSCALL0 0x37  // UInt.ToInt
    typestack [sp-1] = Type::tInt;
    // 0x0C0D  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0C0F  0x12            SUBI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) - Int(valuestack[sp]));
    // 0x0C10  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0C12  0x12            SUBI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) - Int(valuestack[sp]));
    // 0x0C13  0x51 0x04       CAST 0x04
    PutStackType(sp-1, (Type)(0x04));
    // 0x0C15  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // uint tableSize = uint(maxRange) - uint(minRange) + 1;                    hoppervm.hs:2958
    // 
    // 0x0C17  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0C18  0x56 0x06 0x04  PUSHLOCALBB 0x0406
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x0C1B  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0C1C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0C1D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C1E  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // if (opCode == OpCode.JIXW)                                               hoppervm.hs:2959
    // 
    // 0x0C20  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0C21  0x1A 0x69       PUSHIB 0x69
    PushStack(0x69, Type::tByte);
    // 0x0C23  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0C24  0x2E 0x08       JZB 0x0C2C (+8)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0C2C; }

    // tableSize = tableSize << 1;                                              hoppervm.hs:2961
    // 
    // 0x0C26  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0C28  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0C29  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0C2A  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // uint offset = 0;                                                         hoppervm.hs:2964
    // 
hopperVM_ExecuteOpCode_0x0C2C:
    // 0x0C2C  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint offset = 0;                                                         hoppervm.hs:2964
    // 
    // 0x0C2D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0C2E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0C30  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0C31  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0C33  0x2E 0x07       JZB 0x0C3A (+7)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0C3A; }
    // 0x0C35  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0C36  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0C38  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x0C39  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hopperVM_ExecuteOpCode_0x0C3A:
    // 0x0C3A  0x2E 0x3B       JZB 0x0C75 (+59)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0C75; }

    // if (opCode == OpCode.JIXW)                                               hoppervm.hs:2968
    // 
    // 0x0C3C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0C3D  0x1A 0x69       PUSHIB 0x69
    PushStack(0x69, Type::tByte);
    // 0x0C3F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0C40  0x2E 0x23       JZB 0x0C63 (+35)
    if (PopStack() == 0) { goto hopperVM_ExecuteOpCode_0x0C63; }

    // uint index = tpc + (switchCase - minRange)*2;                            hoppervm.hs:2970
    // 
    // 0x0C42  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0C43  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0C45  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0C46  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0C48  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0C49  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0C4B  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0C4C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C4D  0x1B 0x14       POPLOCALB 0x14 (BP+20)
    PutStack(bp+10, PopStack(&htype), htype);

    // offset = ReadByte(index) + ReadByte(index+1) << 8;                       hoppervm.hs:2971
    // 
    // 0x0C4F  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x0C51  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0C53  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x0C55  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0C56  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C57  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0C59  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0C5B  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0C5C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C5D  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2972
    // 
    // 0x0C5F  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0C61  0x30 0x14       JB 0x0C75 (+20)
    goto hopperVM_ExecuteOpCode_0x0C75;

    // uint index = tpc + switchCase - minRange;                                hoppervm.hs:2975
    // 
hopperVM_ExecuteOpCode_0x0C63:
    // 0x0C63  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0C64  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0C66  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0C67  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C68  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0C6A  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0C6B  0x1B 0x14       POPLOCALB 0x14 (BP+20)
    PutStack(bp+10, PopStack(&htype), htype);

    // offset = ReadByte(index);                                                hoppervm.hs:2976
    // 
    // 0x0C6D  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x0C6F  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0C71  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2977
    // 
    // 0x0C73  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        hoppervm.hs:2977
    // 
hopperVM_ExecuteOpCode_0x0C75:
    // 0x0C75  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x0C77  0x2F 0x0A       JNZB 0x0C81 (+10)
    if (PopStack() != 0) { goto hopperVM_ExecuteOpCode_0x0C81; }

    // pc = tpc + tableSize;                                                    hoppervm.hs:2983
    // 
    // 0x0C79  0x56 0x0E 0x10  PUSHLOCALBB 0x100E
    PushStack(GetStack(bp+7, &htype), htype);
    PushStack(GetStack(bp+8, &htype), htype);
    // 0x0C7C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C7D  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2984
    // 
    // 0x0C7F  0x2A 0x14       RETB 0x14
    DecSP(10); PopBP();
    return;

    // }                                                                        hoppervm.hs:2984
    // 
hopperVM_ExecuteOpCode_0x0C81:
    // 0x0C81  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0C83  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x0C85  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0C86  0x1F 0x20       POPGLOBALB 0x20
    PutStack(16, PopStack(&htype), htype);

    // }                                                                        hoppervm.hs:2989
    // 
    // 0x0C88  0x2A 0x14       RETB 0x14
    DecSP(10); PopBP();
    return;

    // }                                                                        hoppervm.hs:2989
    // 
hopperVM_ExecuteOpCode_0x0C8A:
    // 0x0C8A  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0C8C  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(':');                                                   hoppervm.hs:2995
    // 
    // 0x0C8E  0x1A 0x3A       PUSHIB 0x3A
    PushStack(0x3A, Type::tByte);
    // 0x0C90  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('O');                                                   hoppervm.hs:2996
    // 
    // 0x0C92  0x1A 0x4F       PUSHIB 0x4F
    PushStack(0x4F, Type::tByte);
    // 0x0C94  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Runtime.Out2Hex(byte(opCode));                                           hoppervm.hs:2997
    // 
    // 0x0C96  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0C97  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0C99  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // Serial.WriteChar(' ');                                                   hoppervm.hs:2998
    // 
    // 0x0C9B  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0C9D  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // ErrorDump(1);                                                            hoppervm.hs:2999
    // 
    // 0x0C9F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0CA0  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0A; // not implemented                                         hoppervm.hs:3000
    // 
    // 0x0CA2  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0CA4  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();
    // 0x0CA6  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
hopperVM_ExecuteOpCode_0x0CA8:
    // 0x0CA8  0x69 0x00 0x69  JIXW [0x00..0x69] -0x0C9E

    switch(PopStack())
    {
        case 0x00: { goto hopperVM_ExecuteOpCode_0x035A; }
        case 0x01: { goto hopperVM_ExecuteOpCode_0x035A; }
        case 0x02: { goto hopperVM_ExecuteOpCode_0x035A; }
        case 0x03: { goto hopperVM_ExecuteOpCode_0x035A; }
        case 0x04: { goto hopperVM_ExecuteOpCode_0x035A; }
        case 0x05: { goto hopperVM_ExecuteOpCode_0x0595; }
        case 0x06: { goto hopperVM_ExecuteOpCode_0x0595; }
        case 0x07: { goto hopperVM_ExecuteOpCode_0x0595; }
        case 0x08: { goto hopperVM_ExecuteOpCode_0x0595; }
        case 0x09: { goto hopperVM_ExecuteOpCode_0x0595; }
        case 0x0A: { goto hopperVM_ExecuteOpCode_0x0595; }
        case 0x0B: { goto hopperVM_ExecuteOpCode_0x002A; }
        case 0x0C: { goto hopperVM_ExecuteOpCode_0x002A; }
        case 0x0D: { goto hopperVM_ExecuteOpCode_0x002A; }
        case 0x0E: { goto hopperVM_ExecuteOpCode_0x002A; }
        case 0x0F: { goto hopperVM_ExecuteOpCode_0x002A; }
        case 0x10: { goto hopperVM_ExecuteOpCode_0x002A; }
        case 0x11: { goto hopperVM_ExecuteOpCode_0x03B3; }
        case 0x12: { goto hopperVM_ExecuteOpCode_0x03B3; }
        case 0x13: { goto hopperVM_ExecuteOpCode_0x03B3; }
        case 0x14: { goto hopperVM_ExecuteOpCode_0x03B3; }
        case 0x15: { goto hopperVM_ExecuteOpCode_0x03B3; }
        case 0x16: { goto hopperVM_ExecuteOpCode_0x0646; }
        case 0x17: { goto hopperVM_ExecuteOpCode_0x0646; }
        case 0x18: { goto hopperVM_ExecuteOpCode_0x0646; }
        case 0x19: { goto hopperVM_ExecuteOpCode_0x0646; }
        case 0x1A: { goto hopperVM_ExecuteOpCode_0x0412; }
        case 0x1B: { goto hopperVM_ExecuteOpCode_0x099B; }
        case 0x1C: { goto hopperVM_ExecuteOpCode_0x0787; }
        case 0x1D: { goto hopperVM_ExecuteOpCode_0x0AAF; }
        case 0x1E: { goto hopperVM_ExecuteOpCode_0x06AE; }
        case 0x1F: { goto hopperVM_ExecuteOpCode_0x0A6A; }
        case 0x20: { goto hopperVM_ExecuteOpCode_0x0874; }
        case 0x21: { goto hopperVM_ExecuteOpCode_0x06E1; }
        case 0x22: { goto hopperVM_ExecuteOpCode_0x0436; }
        case 0x23: { goto hopperVM_ExecuteOpCode_0x0465; }
        case 0x24: { goto hopperVM_ExecuteOpCode_0x089B; }
        case 0x25: { goto hopperVM_ExecuteOpCode_0x08A5; }
        case 0x26: { goto hopperVM_ExecuteOpCode_0x08AF; }
        case 0x27: { goto hopperVM_ExecuteOpCode_0x0754; }
        case 0x28: { goto hopperVM_ExecuteOpCode_0x08F0; }
        case 0x2A: { goto hopperVM_ExecuteOpCode_0x091A; }
        case 0x2B: { goto hopperVM_ExecuteOpCode_0x091A; }
        case 0x2C: { goto hopperVM_ExecuteOpCode_0x08C3; }
        case 0x2E: { goto hopperVM_ExecuteOpCode_0x04D9; }
        case 0x2F: { goto hopperVM_ExecuteOpCode_0x04F1; }
        case 0x30: { goto hopperVM_ExecuteOpCode_0x0509; }
        case 0x31: { goto hopperVM_ExecuteOpCode_0x0519; }
        case 0x32: { goto hopperVM_ExecuteOpCode_0x0533; }
        case 0x33: { goto hopperVM_ExecuteOpCode_0x054D; }
        case 0x34: { goto hopperVM_ExecuteOpCode_0x08D2; }
        case 0x37: { goto hopperVM_ExecuteOpCode_0x040A; }
        case 0x3F: { goto hopperVM_ExecuteOpCode_0x0489; }
        case 0x40: { goto hopperVM_ExecuteOpCode_0x0579; }
        case 0x41: { goto hopperVM_ExecuteOpCode_0x000D; }
        case 0x42: { goto hopperVM_ExecuteOpCode_0x001E; }
        case 0x43: { goto hopperVM_ExecuteOpCode_0x06F8; }
        case 0x44: { goto hopperVM_ExecuteOpCode_0x0421; }
        case 0x45: { goto hopperVM_ExecuteOpCode_0x0428; }
        case 0x46: { goto hopperVM_ExecuteOpCode_0x042F; }
        case 0x47: { goto hopperVM_ExecuteOpCode_0x041A; }
        case 0x48: { goto hopperVM_ExecuteOpCode_0x0996; }
        case 0x49: { goto hopperVM_ExecuteOpCode_0x0971; }
        case 0x4A: { goto hopperVM_ExecuteOpCode_0x091A; }
        case 0x4B: { goto hopperVM_ExecuteOpCode_0x08E1; }
        case 0x4C: { goto hopperVM_ExecuteOpCode_0x099B; }
        case 0x4D: { goto hopperVM_ExecuteOpCode_0x099B; }
        case 0x4E: { goto hopperVM_ExecuteOpCode_0x0787; }
        case 0x4F: { goto hopperVM_ExecuteOpCode_0x0787; }
        case 0x51: { goto hopperVM_ExecuteOpCode_0x04C1; }
        case 0x55: { goto hopperVM_ExecuteOpCode_0x055D; }
        case 0x56: { goto hopperVM_ExecuteOpCode_0x0807; }
        case 0x57: { goto hopperVM_ExecuteOpCode_0x0B48; }
        case 0x58: { goto hopperVM_ExecuteOpCode_0x0AF9; }
        case 0x59: { goto hopperVM_ExecuteOpCode_0x0BA9; }
        case 0x5D: { goto hopperVM_ExecuteOpCode_0x0B48; }
        case 0x5E: { goto hopperVM_ExecuteOpCode_0x0B48; }
        case 0x5F: { goto hopperVM_ExecuteOpCode_0x0971; }
        case 0x60: { goto hopperVM_ExecuteOpCode_0x040A; }
        case 0x61: { goto hopperVM_ExecuteOpCode_0x0914; }
        case 0x62: { goto hopperVM_ExecuteOpCode_0x0412; }
        case 0x64: { goto hopperVM_ExecuteOpCode_0x002A; }
        case 0x65: { goto hopperVM_ExecuteOpCode_0x061F; }
        case 0x68: { goto hopperVM_ExecuteOpCode_0x0BE2; }
        case 0x69: { goto hopperVM_ExecuteOpCode_0x0BE2; }
    }
    // 0x0D81  0x33 0x09 0xFF  JW 0x0C8A (-247)
    goto hopperVM_ExecuteOpCode_0x0C8A;
}

void HopperVM_Pop_0x00AB()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;


    // sp--;sp--;                                                               hoppervm.hs:1675
    // 
    // 0x0000  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));

    // 0x0002  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));


    // return ReadWord(valueStack + sp);                                        hoppervm.hs:1676
    // 
    // 0x0004  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0007  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0008  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000A  0x61            RETFAST
    return;
}

void HopperVM_Push_0x00A9()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // WriteWord(valueStack + sp, value);                                       hoppervm.hs:1648
    // 
    // 0x0001  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0004  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0005  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0007  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(typeStack + sp, byte(htype));                                  hoppervm.hs:1649
    // 
    // 0x0009  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0011  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // sp++; sp++;                                                              hoppervm.hs:1650
    // 
    // 0x0013  0x53 0x22       INCGLOBALB 0x22
    htype = GetStackType(17);
    PutStack(17, GetStack(17)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0015  0x53 0x22       INCGLOBALB 0x22
    htype = GetStackType(17);
    PutStack(17, GetStack(17)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // }                                                                        hoppervm.hs:1651
    // 
    // 0x0017  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
}

void HopperVM_PopI_0x00A7()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // sp--;sp--;                                                               hoppervm.hs:1628
    // 
    // 0x0001  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));

    // 0x0003  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));


    // return External.UIntToInt(ReadWord(valueStack + sp));                    hoppervm.hs:1629
    // 
    // 0x0005  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0008  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0009  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000B  0x2C 0x85       CALLB 0x85     // External.UIntToInt
    External_UIntToInt();
    // 0x000D  0x4A            RET0
    PopBP();
    return;
}

void HopperVM_PushI_0x00A4()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint value = External.IntToUInt(ivalue);                                 hoppervm.hs:1586
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x2C 0x84       CALLB 0x84     // External.IntToUInt
    External_IntToUInt();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(valueStack + sp, value);                                       hoppervm.hs:1594
    // 
    // 0x0007  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x000A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(typeStack + sp, byte(Type.Int));                               hoppervm.hs:1595
    // 
    // 0x000E  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0011  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0012  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0014  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0016  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // sp++; sp++;                                                              hoppervm.hs:1596
    // 
    // 0x0018  0x53 0x22       INCGLOBALB 0x22
    htype = GetStackType(17);
    PutStack(17, GetStack(17)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x001A  0x53 0x22       INCGLOBALB 0x22
    htype = GetStackType(17);
    PutStack(17, GetStack(17)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // }                                                                        hoppervm.hs:1597
    // 
    // 0x001C  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
}

void HopperVM_ReadWordOperand_0x00AF()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint operand = ReadWord(pc);                                             hoppervm.hs:1710
    // 
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // pc++; pc++;                                                              hoppervm.hs:1711
    // 
    // 0x0007  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0009  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // return operand;                                                          hoppervm.hs:1712
    // 
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_ReadByteOperand_0x00B0()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte operand = ReadByte(pc);                                             hoppervm.hs:1716
    // 
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // pc++;                                                                    hoppervm.hs:1717
    // 
    // 0x0007  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // pc++;                                                                    hoppervm.hs:1717
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_ReadByteOffsetOperand_0x00B1()
{
    Int topi   = 0;
    Int nexti  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // int offset = int(ReadByte(pc));                                          hoppervm.hs:1722
    // 
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // pc++;                                                                    hoppervm.hs:1723
    // 
    // 0x0007  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // pc++;                                                                    hoppervm.hs:1723
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x7F       PUSHIB 0x7F
    PushStack(0x7F, Type::tByte);
    // 0x000C  0x16            GTI
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (Int(valuestack[sp-1]) > Int(valuestack[sp]));
    // 0x000D  0x2E 0x08       JZB 0x0015 (+8)
    if (PopStack() == 0) { goto hopperVM_ReadByteOffsetOperand_0x0015; }

    // offset = offset - 256; // 0xFF -> -1                                     hoppervm.hs:1726
    // 
    // 0x000F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0010  0x37 0x00 0x01  PUSHIW 0x0100
    PushStack(0x0100, Type::tUInt);
    // 0x0013  0x12            SUBI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) - Int(valuestack[sp]));
    // 0x0014  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // return offset;                                                           hoppervm.hs:1728
    // 
hopperVM_ReadByteOffsetOperand_0x0015:
    // 0x0015  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0016  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_Put_0x00A2()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // WriteWord(valueStack + address, value);                                  hoppervm.hs:1574
    // 
    // 0x0001  0x20 0x14       PUSHGLOBALB 0x14
    PushStack(GetStack(10, &htype), htype);
    // 0x0003  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0008  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(typeStack  + address, byte(htype));                            hoppervm.hs:1575
    // 
    // 0x000A  0x20 0x16       PUSHGLOBALB 0x16
    PushStack(GetStack(11, &htype), htype);
    // 0x000C  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0011  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0013  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        hoppervm.hs:1576
    // 
    // 0x0015  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HopperVM_ReadWordOffsetOperand_0x00B2()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // int offset = External.UIntToInt(ReadWord(pc));                           hoppervm.hs:1732
    // 
    // 0x0002  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x0004  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0006  0x2C 0x85       CALLB 0x85     // External.UIntToInt
    External_UIntToInt();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // pc++; pc++;                                                              hoppervm.hs:1733
    // 
    // 0x0009  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x000B  0x53 0x20       INCGLOBALB 0x20
    htype = GetStackType(16);
    PutStack(16, GetStack(16)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // return offset;                                                           hoppervm.hs:1734
    // 
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_Pop_0x00AA()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // sp--;sp--;                                                               hoppervm.hs:1661
    // 
    // 0x0001  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));

    // 0x0003  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));


    // uint value  = ReadWord(valueStack + sp);                                 hoppervm.hs:1662
    // 
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0009  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000A  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000C  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // htype  = Type(ReadWord(typeStack + sp));                                 hoppervm.hs:1663
    // 
    // 0x000D  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0010  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0011  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0013  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return value;                                                            hoppervm.hs:1664
    // 
    // 0x0015  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0016  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_PopI_0x00A6()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // sp--;sp--;                                                               hoppervm.hs:1614
    // 
    // 0x0001  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));

    // 0x0003  0x54 0x22       DECGLOBALB 0x22
    PutStack(17, GetStack(17)-1, GetStackType(17));


    // uint value  = ReadWord(valueStack + sp);                                 hoppervm.hs:1615
    // 
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x52 0x14 0x22  PUSHGLOBALBB 0x2214
    PushStack(GetStack(10, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0009  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000A  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000C  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // htype  = Type(ReadWord(typeStack + sp));                                 hoppervm.hs:1616
    // 
    // 0x000D  0x52 0x16 0x22  PUSHGLOBALBB 0x2216
    PushStack(GetStack(11, &htype), htype);
    PushStack(GetStack(17, &htype), htype);
    // 0x0010  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0011  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0013  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return External.UIntToInt(value);                                        hoppervm.hs:1617
    // 
    // 0x0015  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0016  0x2C 0x85       CALLB 0x85     // External.UIntToInt
    External_UIntToInt();
    // 0x0018  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_ExecuteSysCall_0x00A1()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // switch (SysCall(iSysCall))                                               hoppervm.hs:289
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x33 0x08 0x0A  JW 0x0A0B (+2568)
    goto hopperVM_ExecuteSysCall_0x0A0B;

    // IO.WriteLn();                                                            hoppervm.hs:293
    // 
hopperVM_ExecuteSysCall_0x0006:
    // 0x0006  0x2C 0xE0       CALLB 0xE0     // IO.WriteLn
    IO_WriteLn_0x00E0();
    // 0x0008  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // IO.Clear();                                                              hoppervm.hs:297
    // 
hopperVM_ExecuteSysCall_0x000A:
    // 0x000A  0x2C 0xD8       CALLB 0xD8     // IO.Clear
    IO_Clear_0x00D8();
    // 0x000C  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // switch (iOverload)                                                       hoppervm.hs:301
    // 
hopperVM_ExecuteSysCall_0x000E:
    // 0x000E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // case 0:                                                                  hoppervm.hs:303
    // 
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0011  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0012  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0013  0x2E 0x22       JZB 0x0035 (+34)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0035; }

    // Type atype;                                                              hoppervm.hs:305
    // 
    // 0x0015  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint bc = Pop(ref atype);                                                hoppervm.hs:306
    // 
    // 0x0016  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0017  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0019  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type btype;                                                              hoppervm.hs:307
    // 
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint fc = Pop(ref btype);                                                hoppervm.hs:308
    // 
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0021  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0023  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Type ctype;                                                              hoppervm.hs:309
    // 
    // 0x0025  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint ch = Pop(ref ctype);                                                hoppervm.hs:310
    // 
    // 0x0026  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0027  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x0029  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x002B  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // IO.Write(char(ch));                                                      hoppervm.hs:316
    // 
    // 0x002D  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x002F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0031  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();

    // }                                                                        hoppervm.hs:317
    // 
    // 0x0033  0x2A 0x12       RETB 0x12
    DecSP(9); PopBP();
    return;

    // case 1:                                                                  hoppervm.hs:318
    // 
hopperVM_ExecuteSysCall_0x0035:
    // 0x0035  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0036  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0037  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0038  0x2E 0x42       JZB 0x007A (+66)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x007A; }

    // Type atype;                                                              hoppervm.hs:320
    // 
    // 0x003A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:320
    // 
    // 0x003B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003C  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x003E  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0040  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type btype;                                                              hoppervm.hs:322
    // 
    // 0x0042  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type btype;                                                              hoppervm.hs:322
    // 
    // 0x0043  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0044  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0046  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0048  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Type stype;                                                              hoppervm.hs:324
    // 
    // 0x004A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type stype;                                                              hoppervm.hs:324
    // 
    // 0x004B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004C  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x004E  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0050  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint length = HRString.GetLength(str);                                   hoppervm.hs:335
    // 
    // 0x0052  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0053  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0055  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0057  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // for (uint i=0; i < length; i++)                                          hoppervm.hs:336
    // 
    // 0x0059  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteSysCall_0x005A:
    // 0x005A  0x56 0x10 0x0E  PUSHLOCALBB 0x0E10
    PushStack(GetStack(bp+8, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x005D  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x005E  0x2E 0x14       JZB 0x0072 (+20)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0072; }

    // char ch = HRString.GetChar(str, i);                                      hoppervm.hs:338
    // 
    // 0x0060  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0061  0x56 0x0C 0x10  PUSHLOCALBB 0x100C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp+8, &htype), htype);
    // 0x0064  0x2C 0x61       CALLB 0x61     // HRString.GetChar
    HRString_GetChar_0x0061();
    // 0x0066  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // IO.Write(ch);                                                            hoppervm.hs:339
    // 
    // 0x0068  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x006A  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();

    // }                                                                        hoppervm.hs:340
    // 
    // 0x006C  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x006E  0x22 0x10       INCLOCALB 0x10 (BP+16)
    htype = GetStackType(bp+8);
    PutStack(bp+8, GetStack(bp+8)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0070  0x30 0xEA       JB 0x005A (-22)
    goto hopperVM_ExecuteSysCall_0x005A;
hopperVM_ExecuteSysCall_0x0072:
    // 0x0072  0x28 0x02       DECSP 0x02
    DecSP(1);

    // GC.Release(str);                                                         hoppervm.hs:341
    // 
    // 0x0074  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0076  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:342
    // 
    // 0x0078  0x2A 0x14       RETB 0x14
    DecSP(10); PopBP();
    return;

    // ErrorDump(6);                                                            hoppervm.hs:345
    // 
hopperVM_ExecuteSysCall_0x007A:
    // 0x007A  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x007C  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0A; // iOverload                                               hoppervm.hs:346
    // 
    // 0x007E  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0080  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:347
    // 
    // 0x0082  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:347
    // 
hopperVM_ExecuteSysCall_0x0084:
    // 0x0084  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:347
    // 
    // 0x0085  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0086  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0088  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x008A  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Serial.WriteChar(char(ch));                                              hoppervm.hs:358
    // 
    // 0x008B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x008C  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x008E  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        hoppervm.hs:359
    // 
    // 0x0090  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:359
    // 
hopperVM_ExecuteSysCall_0x0092:
    // 0x0092  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:359
    // 
    // 0x0093  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0094  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0096  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0098  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = HRLong.NewFromConstant(constAddress + location);
    // 
    // 0x0099  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x009A  0x20 0x10       PUSHGLOBALB 0x10
    PushStack(GetStack(8, &htype), htype);
    // 0x009C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x009D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009E  0x2C 0x4E       CALLB 0x4E     // HRLong.NewFromConstant
    HRLong_NewFromConstant();
    // 0x00A0  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(address, Type.Long);                                                hoppervm.hs:369
    // 
    // 0x00A2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00A4  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x00A6  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:370
    // 
    // 0x00A8  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:370
    // 
hopperVM_ExecuteSysCall_0x00AA:
    // 0x00AA  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:370
    // 
    // 0x00AB  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00AC  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x00AE  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x00B0  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = HRFloat.NewFromConstant(constAddress + location);
    // 
    // 0x00B1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00B2  0x20 0x10       PUSHGLOBALB 0x10
    PushStack(GetStack(8, &htype), htype);
    // 0x00B4  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x00B5  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B6  0x2C 0x39       CALLB 0x39     // HRFloat.NewFromConstant
    HRFloat_NewFromConstant();
    // 0x00B8  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(address, Type.Float);                                               hoppervm.hs:380
    // 
    // 0x00BA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00BC  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x00BE  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:381
    // 
    // 0x00C0  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:381
    // 
hopperVM_ExecuteSysCall_0x00C2:
    // 0x00C2  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:381
    // 
    // 0x00C4  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00C5  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x00C6  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00C7  0x2E 0x26       JZB 0x00ED (+38)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x00ED; }

    // Type ltype;                                                              hoppervm.hs:389
    // 
    // 0x00C9  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ltype;                                                              hoppervm.hs:389
    // 
    // 0x00CA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00CB  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x00CD  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x00CF  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type atype;                                                              hoppervm.hs:391
    // 
    // 0x00D1  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:391
    // 
    // 0x00D2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00D3  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x00D5  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x00D7  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint address = HRString.NewFromConstant0(constAddress + location, length);
    // 
    // 0x00D9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00DA  0x20 0x10       PUSHGLOBALB 0x10
    PushStack(GetStack(8, &htype), htype);
    // 0x00DC  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00DE  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00DF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00E1  0x2C 0x5B       CALLB 0x5B     // HRString.NewFromConstant0
    HRString_NewFromConstant0();
    // 0x00E3  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // Push(address, Type.String);                                              hoppervm.hs:398
    // 
    // 0x00E5  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00E7  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x00E9  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:399
    // 
    // 0x00EB  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:399
    // 
hopperVM_ExecuteSysCall_0x00ED:
    // 0x00ED  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x00EE  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x00EF  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00F0  0x2E 0x19       JZB 0x0109 (+25)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0109; }

    // Type utype;                                                              hoppervm.hs:402
    // 
    // 0x00F2  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type utype;                                                              hoppervm.hs:402
    // 
    // 0x00F3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00F4  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x00F6  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x00F8  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint address = HRString.NewFromConstant1(doubleChar);                    hoppervm.hs:407
    // 
    // 0x00FA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00FB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00FD  0x2C 0x5C       CALLB 0x5C     // HRString.NewFromConstant1
    HRString_NewFromConstant1();
    // 0x00FF  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push(address, Type.String);                                              hoppervm.hs:408
    // 
    // 0x0101  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0103  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0105  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:409
    // 
    // 0x0107  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:409
    // 
hopperVM_ExecuteSysCall_0x0109:
    // 0x0109  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x010B  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0A; // iOverload                                               hoppervm.hs:413
    // 
    // 0x010D  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x010F  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:414
    // 
    // 0x0111  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:414
    // 
hopperVM_ExecuteSysCall_0x0113:
    // 0x0113  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0114  0x2C 0x5A       CALLB 0x5A     // HRString.New
    HRString_New();
    // 0x0116  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Push(address, Type.String);                                              hoppervm.hs:420
    // 
    // 0x0117  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0118  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x011A  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:421
    // 
    // 0x011C  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:421
    // 
hopperVM_ExecuteSysCall_0x011E:
    // 0x011E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:421
    // 
    // 0x011F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0120  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0122  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0124  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint length = HRString.GetLength(this);                                  hoppervm.hs:433
    // 
    // 0x0125  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0126  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0127  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0129  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:434
    // 
    // 0x012B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x012C  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(length, Type.UInt);                                                 hoppervm.hs:435
    // 
    // 0x012E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0130  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0132  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:436
    // 
    // 0x0134  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:436
    // 
hopperVM_ExecuteSysCall_0x0136:
    // 0x0136  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:436
    // 
    // 0x0137  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0138  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x013A  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x013C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:441
    // 
    // 0x013D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:441
    // 
    // 0x013E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x013F  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0141  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0143  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // char ch = HRString.GetChar(this, index);                                 hoppervm.hs:451
    // 
    // 0x0145  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0146  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0148  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0149  0x2C 0x61       CALLB 0x61     // HRString.GetChar
    HRString_GetChar_0x0061();
    // 0x014B  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:452
    // 
    // 0x014D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x014F  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(uint(ch), Type.Char);                                               hoppervm.hs:453
    // 
    // 0x0151  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0153  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0154  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:454
    // 
    // 0x0156  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:454
    // 
hopperVM_ExecuteSysCall_0x0158:
    // 0x0158  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:454
    // 
    // 0x0159  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x015A  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x015C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x015E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type itype;                                                              hoppervm.hs:459
    // 
    // 0x015F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type itype;                                                              hoppervm.hs:459
    // 
    // 0x0160  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0161  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0163  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0165  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:461
    // 
    // 0x0167  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:461
    // 
    // 0x0168  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0169  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x016B  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x016D  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // uint result = HRString.InsertChar(this, index, char(ch));                hoppervm.hs:472
    // 
    // 0x016F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0170  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0173  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0174  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0176  0x2C 0x65       CALLB 0x65     // HRString.InsertChar
    HRString_InsertChar_0x0065();
    // 0x0178  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:473
    // 
    // 0x017A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x017C  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:474
    // 
    // 0x017E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0180  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0182  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:475
    // 
    // 0x0184  0x2A 0x12       RETB 0x12
    DecSP(9); PopBP();
    return;

    // }                                                                        hoppervm.hs:475
    // 
hopperVM_ExecuteSysCall_0x0186:
    // 0x0186  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:475
    // 
    // 0x0188  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0189  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x018A  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x018B  0x2E 0x28       JZB 0x01B3 (+40)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x01B3; }

    // Type atype;                                                              hoppervm.hs:482
    // 
    // 0x018D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:482
    // 
    // 0x018E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x018F  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0191  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0193  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:484
    // 
    // 0x0195  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:484
    // 
    // 0x0196  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0197  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0199  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x019B  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint result = uint(HRString.EndsWith(this, char(with)));                 hoppervm.hs:494
    // 
    // 0x019D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x019E  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x01A1  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x01A3  0x2C 0x72       CALLB 0x72     // HRString.EndsWith
    HRString_EndsWith_0x0072();
    // 0x01A5  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:495
    // 
    // 0x01A7  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x01A9  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.Bool);                                                 hoppervm.hs:496
    // 
    // 0x01AB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x01AD  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x01AF  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:497
    // 
    // 0x01B1  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:497
    // 
hopperVM_ExecuteSysCall_0x01B3:
    // 0x01B3  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x01B4  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x01B5  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x01B6  0x2E 0x2A       JZB 0x01E0 (+42)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x01E0; }

    // Type atype;                                                              hoppervm.hs:500
    // 
    // 0x01B8  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:500
    // 
    // 0x01B9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01BA  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x01BC  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x01BE  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:502
    // 
    // 0x01C0  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:502
    // 
    // 0x01C1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01C2  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x01C4  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x01C6  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint result = uint(HRString.EndsWith(this, with));                       hoppervm.hs:511
    // 
    // 0x01C8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01C9  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x01CC  0x2C 0x73       CALLB 0x73     // HRString.EndsWith
    HRString_EndsWith_0x0073();
    // 0x01CE  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:512
    // 
    // 0x01D0  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x01D2  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(with);                                                        hoppervm.hs:513
    // 
    // 0x01D4  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x01D6  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.Bool);                                                 hoppervm.hs:514
    // 
    // 0x01D8  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x01DA  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x01DC  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:515
    // 
    // 0x01DE  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:515
    // 
hopperVM_ExecuteSysCall_0x01E0:
    // 0x01E0  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:515
    // 
hopperVM_ExecuteSysCall_0x01E2:
    // 0x01E2  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:517
    // 
    // 0x01E3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01E4  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x01E6  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x01E8  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type btype;                                                              hoppervm.hs:523
    // 
    // 0x01E9  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type btype;                                                              hoppervm.hs:523
    // 
    // 0x01EA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01EB  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x01ED  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x01EF  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // int result = HRString.Compare(left, right);                              hoppervm.hs:532
    // 
    // 0x01F1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x01F2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x01F4  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x01F5  0x2C 0x74       CALLB 0x74     // HRString.Compare
    HRString_Compare_0x0074();
    // 0x01F7  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // GC.Release(right);                                                       hoppervm.hs:533
    // 
    // 0x01F9  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x01FA  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(left);                                                        hoppervm.hs:534
    // 
    // 0x01FC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x01FE  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // PushI(result);                                                           hoppervm.hs:535
    // 
    // 0x0200  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0202  0x2C 0xA4       CALLB 0xA4     // HopperVM.PushI
    HopperVM_PushI_0x00A4();

    // }                                                                        hoppervm.hs:536
    // 
    // 0x0204  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:536
    // 
hopperVM_ExecuteSysCall_0x0206:
    // 0x0206  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:536
    // 
    // 0x0208  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0209  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x020A  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x020B  0x2E 0x38       JZB 0x0243 (+56)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0243; }

    // Type atype;                                                              hoppervm.hs:543
    // 
    // 0x020D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:543
    // 
    // 0x020E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x020F  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0211  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0213  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type btype;                                                              hoppervm.hs:545
    // 
    // 0x0215  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type btype;                                                              hoppervm.hs:545
    // 
    // 0x0216  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0217  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0219  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x021B  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:547
    // 
    // 0x021D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:547
    // 
    // 0x021E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x021F  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x0221  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0223  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint result = HRString.Replace(this, from, to);                          hoppervm.hs:556
    // 
    // 0x0225  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0226  0x56 0x0C 0x08  PUSHLOCALBB 0x080C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0229  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x022B  0x2C 0x67       CALLB 0x67     // HRString.Replace
    HRString_Replace_0x0067();
    // 0x022D  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:557
    // 
    // 0x022F  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0231  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(to);                                                          hoppervm.hs:558
    // 
    // 0x0233  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0235  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(from);                                                        hoppervm.hs:559
    // 
    // 0x0237  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0239  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:560
    // 
    // 0x023B  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x023D  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x023F  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:561
    // 
    // 0x0241  0x2A 0x14       RETB 0x14
    DecSP(10); PopBP();
    return;

    // }                                                                        hoppervm.hs:561
    // 
hopperVM_ExecuteSysCall_0x0243:
    // 0x0243  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0244  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0245  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0246  0x2E 0x34       JZB 0x027A (+52)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x027A; }

    // Type atype;                                                              hoppervm.hs:564
    // 
    // 0x0248  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:564
    // 
    // 0x0249  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x024A  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x024C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x024E  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type btype;                                                              hoppervm.hs:566
    // 
    // 0x0250  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type btype;                                                              hoppervm.hs:566
    // 
    // 0x0251  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0252  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0254  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0256  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:568
    // 
    // 0x0258  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:568
    // 
    // 0x0259  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x025A  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x025C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x025E  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint result = HRString.Replace(this, char(from), char(to));              hoppervm.hs:579
    // 
    // 0x0260  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0261  0x56 0x0C 0x08  PUSHLOCALBB 0x080C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0264  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0266  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0268  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x026A  0x2C 0x68       CALLB 0x68     // HRString.Replace
    HRString_Replace_0x0068();
    // 0x026C  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:580
    // 
    // 0x026E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0270  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:581
    // 
    // 0x0272  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0274  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0276  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:582
    // 
    // 0x0278  0x2A 0x14       RETB 0x14
    DecSP(10); PopBP();
    return;

    // }                                                                        hoppervm.hs:582
    // 
hopperVM_ExecuteSysCall_0x027A:
    // 0x027A  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:582
    // 
hopperVM_ExecuteSysCall_0x027C:
    // 0x027C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:583
    // 
    // 0x027E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x027F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0280  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0281  0x2E 0x2A       JZB 0x02AB (+42)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x02AB; }

    // Type atype;                                                              hoppervm.hs:591
    // 
    // 0x0283  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:591
    // 
    // 0x0284  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0285  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0287  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0289  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:593
    // 
    // 0x028B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:593
    // 
    // 0x028C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x028D  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x028F  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0291  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint result = HRString.Append(this, append);                             hoppervm.hs:602
    // 
    // 0x0293  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0294  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x0297  0x2C 0x62       CALLB 0x62     // HRString.Append
    HRString_Append_0x0062();
    // 0x0299  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:603
    // 
    // 0x029B  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x029D  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(append);                                                      hoppervm.hs:604
    // 
    // 0x029F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x02A1  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:605
    // 
    // 0x02A3  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x02A5  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x02A7  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:606
    // 
    // 0x02A9  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:606
    // 
hopperVM_ExecuteSysCall_0x02AB:
    // 0x02AB  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x02AC  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x02AD  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x02AE  0x2E 0x28       JZB 0x02D6 (+40)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x02D6; }

    // Type atype;                                                              hoppervm.hs:609
    // 
    // 0x02B0  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:609
    // 
    // 0x02B1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02B2  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x02B4  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x02B6  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:611
    // 
    // 0x02B8  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:611
    // 
    // 0x02B9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02BA  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x02BC  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x02BE  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint result = HRString.Append(this, char(append));                       hoppervm.hs:621
    // 
    // 0x02C0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02C1  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x02C4  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x02C6  0x2C 0x66       CALLB 0x66     // HRString.Append
    HRString_Append_0x0066();
    // 0x02C8  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:622
    // 
    // 0x02CA  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x02CC  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:623
    // 
    // 0x02CE  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x02D0  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x02D2  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:624
    // 
    // 0x02D4  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:624
    // 
hopperVM_ExecuteSysCall_0x02D6:
    // 0x02D6  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:624
    // 
hopperVM_ExecuteSysCall_0x02D8:
    // 0x02D8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:625
    // 
    // 0x02DA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02DB  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x02DC  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x02DD  0x2E 0x26       JZB 0x0303 (+38)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0303; }

    // Type stype;                                                              hoppervm.hs:633
    // 
    // 0x02DF  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type stype;                                                              hoppervm.hs:633
    // 
    // 0x02E0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02E1  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x02E3  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x02E5  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:635
    // 
    // 0x02E7  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:635
    // 
    // 0x02E8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02E9  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x02EB  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x02ED  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint result = HRString.Substring(this, start);                           hoppervm.hs:645
    // 
    // 0x02EF  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x02F0  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x02F3  0x2C 0x64       CALLB 0x64     // HRString.Substring
    HRString_Substring_0x0064();
    // 0x02F5  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:646
    // 
    // 0x02F7  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x02F9  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:647
    // 
    // 0x02FB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x02FD  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x02FF  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:648
    // 
    // 0x0301  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:648
    // 
hopperVM_ExecuteSysCall_0x0303:
    // 0x0303  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0304  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0305  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0306  0x2E 0x30       JZB 0x0336 (+48)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0336; }

    // Type ltype;                                                              hoppervm.hs:651
    // 
    // 0x0308  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ltype;                                                              hoppervm.hs:651
    // 
    // 0x0309  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x030A  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x030C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x030E  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type stype;                                                              hoppervm.hs:653
    // 
    // 0x0310  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type stype;                                                              hoppervm.hs:653
    // 
    // 0x0311  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0312  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0314  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0316  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:655
    // 
    // 0x0318  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:655
    // 
    // 0x0319  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x031A  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x031C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x031E  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint result = HRString.Substring(this, start, limit);                    hoppervm.hs:666
    // 
    // 0x0320  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0321  0x56 0x0C 0x08  PUSHLOCALBB 0x080C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0324  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0326  0x2C 0x63       CALLB 0x63     // HRString.Substring
    HRString_Substring_0x0063();
    // 0x0328  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:667
    // 
    // 0x032A  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x032C  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:668
    // 
    // 0x032E  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0330  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0332  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:669
    // 
    // 0x0334  0x2A 0x14       RETB 0x14
    DecSP(10); PopBP();
    return;

    // }                                                                        hoppervm.hs:669
    // 
hopperVM_ExecuteSysCall_0x0336:
    // 0x0336  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0338  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0339  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x033A  0x2E 0x2A       JZB 0x0364 (+42)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0364; }

    // Type stype;                                                              hoppervm.hs:672
    // 
    // 0x033C  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type stype;                                                              hoppervm.hs:672
    // 
    // 0x033D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x033E  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0340  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0342  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type htype;                                                              hoppervm.hs:674
    // 
    // 0x0344  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:674
    // 
    // 0x0345  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0346  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0348  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x034A  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:676
    // 
    // 0x034C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x034D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x034F  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0351  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0353  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // HRString.Substring(ref str, start);                                      hoppervm.hs:685
    // 
    // 0x0355  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x0357  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0359  0x2C 0x6D       CALLB 0x6D     // HRString.Substring
    HRString_Substring_0x006D();

    // Put(address, str, Type.String);                                          hoppervm.hs:686
    // 
    // 0x035B  0x56 0x08 0x0A  PUSHLOCALBB 0x0A08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x035E  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0360  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:687
    // 
    // 0x0362  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:687
    // 
hopperVM_ExecuteSysCall_0x0364:
    // 0x0364  0x1A 0x12       PUSHIB 0x12
    PushStack(0x12, Type::tByte);
    // 0x0366  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0B;                                                            hoppervm.hs:691
    // 
    // 0x0368  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x036A  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:692
    // 
    // 0x036C  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:692
    // 
hopperVM_ExecuteSysCall_0x036E:
    // 0x036E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:692
    // 
    // 0x0370  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0371  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0372  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0373  0x2E 0x2E       JZB 0x03A1 (+46)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x03A1; }

    // Type atype;                                                              hoppervm.hs:701
    // 
    // 0x0375  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:701
    // 
    // 0x0376  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0377  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0379  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x037B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Type htype;                                                              hoppervm.hs:710
    // 
    // 0x037D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:710
    // 
    // 0x037E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x037F  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0381  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0383  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:712
    // 
    // 0x0385  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0386  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0388  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x038A  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x038C  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // HRString.Build(ref str, append);                                         hoppervm.hs:720
    // 
    // 0x038E  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x0390  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0392  0x2C 0x6A       CALLB 0x6A     // HRString.Build
    HRString_Build_0x006A();

    // Put(address, str, Type.String);                                          hoppervm.hs:721
    // 
    // 0x0394  0x56 0x08 0x0A  PUSHLOCALBB 0x0A08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x0397  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0399  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // GC.Release(append);                                                      hoppervm.hs:722
    // 
    // 0x039B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x039D  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:723
    // 
    // 0x039F  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:723
    // 
hopperVM_ExecuteSysCall_0x03A1:
    // 0x03A1  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x03A2  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x03A3  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x03A4  0x2E 0x2B       JZB 0x03CF (+43)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x03CF; }

    // Type htype;                                                              hoppervm.hs:726
    // 
    // 0x03A6  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:726
    // 
    // 0x03A7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03A8  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x03AA  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x03AC  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x03AE  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint address = Pop(ref htype);                                           hoppervm.hs:731
    // 
    // 0x03B0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03B1  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x03B3  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x03B5  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:732
    // 
    // 0x03B7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03B8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x03BA  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x03BC  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x03BE  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // HRString.Build(ref str, ch);                                             hoppervm.hs:740
    // 
    // 0x03C0  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x03C2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x03C4  0x2C 0x6B       CALLB 0x6B     // HRString.Build
    HRString_Build_0x006B();

    // Put(address, str, Type.String);                                          hoppervm.hs:741
    // 
    // 0x03C6  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x03C9  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x03CB  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:742
    // 
    // 0x03CD  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:742
    // 
hopperVM_ExecuteSysCall_0x03CF:
    // 0x03CF  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x03D1  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x03D2  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x03D3  0x2E 0x20       JZB 0x03F3 (+32)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x03F3; }

    // Type htype;                                                              hoppervm.hs:745
    // 
    // 0x03D5  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:745
    // 
    // 0x03D6  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03D7  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x03D9  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x03DB  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:747
    // 
    // 0x03DD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03DE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x03E0  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x03E2  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x03E4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // HRString.Build(ref str);                                                 hoppervm.hs:755
    // 
    // 0x03E6  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x03E8  0x2C 0x69       CALLB 0x69     // HRString.Build
    HRString_Build_0x0069();

    // Put(address, str, Type.String);                                          hoppervm.hs:756
    // 
    // 0x03EA  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x03ED  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x03EF  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:757
    // 
    // 0x03F1  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:757
    // 
hopperVM_ExecuteSysCall_0x03F3:
    // 0x03F3  0x1A 0x2A       PUSHIB 0x2A
    PushStack(0x2A, Type::tByte);
    // 0x03F5  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0B;                                                            hoppervm.hs:761
    // 
    // 0x03F7  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x03F9  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:762
    // 
    // 0x03FB  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:762
    // 
hopperVM_ExecuteSysCall_0x03FD:
    // 0x03FD  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:762
    // 
    // 0x03FE  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x03FF  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0401  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0403  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0405  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = Pop(ref htype);                                           hoppervm.hs:772
    // 
    // 0x0406  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0407  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0409  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x040B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:773
    // 
    // 0x040D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x040E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0410  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0412  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x0414  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // HRString.BuildFront(ref str, ch);                                        hoppervm.hs:781
    // 
    // 0x0416  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0418  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0419  0x2C 0x6C       CALLB 0x6C     // HRString.BuildFront
    HRString_BuildFront_0x006C();

    // Put(address, str, Type.String);                                          hoppervm.hs:782
    // 
    // 0x041B  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x041E  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0420  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:783
    // 
    // 0x0422  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:783
    // 
hopperVM_ExecuteSysCall_0x0424:
    // 0x0424  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:783
    // 
    // 0x0426  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0427  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0428  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0429  0x2E 0x1D       JZB 0x0446 (+29)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0446; }

    // Type htype;                                                              hoppervm.hs:790
    // 
    // 0x042B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:790
    // 
    // 0x042C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x042D  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x042F  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0431  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint result = HRString.Trim(this);                                       hoppervm.hs:799
    // 
    // 0x0433  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0434  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0436  0x2C 0x6F       CALLB 0x6F     // HRString.Trim
    HRString_Trim_0x006F();
    // 0x0438  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:800
    // 
    // 0x043A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x043C  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:801
    // 
    // 0x043E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0440  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0442  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:802
    // 
    // 0x0444  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:802
    // 
hopperVM_ExecuteSysCall_0x0446:
    // 0x0446  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0447  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0448  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0449  0x2E 0x24       JZB 0x046D (+36)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x046D; }

    // Type htype;                                                              hoppervm.hs:805
    // 
    // 0x044B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:805
    // 
    // 0x044C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x044D  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x044F  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0451  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:807
    // 
    // 0x0453  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0454  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0456  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0458  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x045A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // HRString.TrimRight(ref str);                                             hoppervm.hs:815
    // 
    // 0x045C  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x045E  0x2C 0x71       CALLB 0x71     // HRString.TrimRight
    HRString_TrimRight_0x0071();

    // HRString.TrimLeft(ref str);                                              hoppervm.hs:816
    // 
    // 0x0460  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0462  0x2C 0x70       CALLB 0x70     // HRString.TrimLeft
    HRString_TrimLeft_0x0070();

    // Put(address, str, Type.String);                                          hoppervm.hs:817
    // 
    // 0x0464  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0467  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0469  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:818
    // 
    // 0x046B  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:818
    // 
hopperVM_ExecuteSysCall_0x046D:
    // 0x046D  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x046F  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0A; // iOverload                                               hoppervm.hs:822
    // 
    // 0x0471  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0473  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:823
    // 
    // 0x0475  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:823
    // 
hopperVM_ExecuteSysCall_0x0477:
    // 0x0477  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);

    // }                                                                        hoppervm.hs:823
    // 
    // 0x0479  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x047A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x047B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x047C  0x2E 0x1D       JZB 0x0499 (+29)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0499; }

    // Type htype;                                                              hoppervm.hs:832
    // 
    // 0x047E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:832
    // 
    // 0x047F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0480  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0482  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0484  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint result = HRString.TrimLeft(this);                                   hoppervm.hs:841
    // 
    // 0x0486  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0487  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0489  0x2C 0x6E       CALLB 0x6E     // HRString.TrimLeft
    HRString_TrimLeft_0x006E();
    // 0x048B  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:842
    // 
    // 0x048D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x048F  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, Type.String);                                               hoppervm.hs:843
    // 
    // 0x0491  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0493  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0495  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:844
    // 
    // 0x0497  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:844
    // 
hopperVM_ExecuteSysCall_0x0499:
    // 0x0499  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x049A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x049B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x049C  0x2E 0x20       JZB 0x04BC (+32)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x04BC; }

    // Type htype;                                                              hoppervm.hs:847
    // 
    // 0x049E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type htype;                                                              hoppervm.hs:847
    // 
    // 0x049F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04A0  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x04A2  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x04A4  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:849
    // 
    // 0x04A6  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04A7  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x04A9  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x04AB  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x04AD  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // HRString.TrimLeft(ref str);                                              hoppervm.hs:857
    // 
    // 0x04AF  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x04B1  0x2C 0x70       CALLB 0x70     // HRString.TrimLeft
    HRString_TrimLeft_0x0070();

    // Put(address, str, Type.String);                                          hoppervm.hs:858
    // 
    // 0x04B3  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x04B6  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x04B8  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:859
    // 
    // 0x04BA  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:859
    // 
hopperVM_ExecuteSysCall_0x04BC:
    // 0x04BC  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x04BE  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0A; // iOverload                                               hoppervm.hs:863
    // 
    // 0x04C0  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x04C2  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // }                                                                        hoppervm.hs:864
    // 
    // 0x04C4  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:864
    // 
hopperVM_ExecuteSysCall_0x04C6:
    // 0x04C6  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:864
    // 
    // 0x04C7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04C8  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x04CA  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x04CC  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint str = Get(address, ref htype);                                      hoppervm.hs:871
    // 
    // 0x04CD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04CE  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x04CF  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x04D1  0x2C 0xA3       CALLB 0xA3     // HopperVM.Get
    HopperVM_Get_0x00A3();
    // 0x04D3  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // HRString.TrimRight(ref str);                                             hoppervm.hs:879
    // 
    // 0x04D5  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x04D7  0x2C 0x71       CALLB 0x71     // HRString.TrimRight
    HRString_TrimRight_0x0071();

    // Put(address, str, Type.String);                                          hoppervm.hs:880
    // 
    // 0x04D9  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x04DA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x04DC  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x04DE  0x2C 0xA2       CALLB 0xA2     // HopperVM.Put
    HopperVM_Put_0x00A2();

    // }                                                                        hoppervm.hs:881
    // 
    // 0x04E0  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:881
    // 
hopperVM_ExecuteSysCall_0x04E2:
    // 0x04E2  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:881
    // 
    // 0x04E3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04E4  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x04E6  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x04E8  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint count = Pop(ref stype);                                             hoppervm.hs:893
    // 
    // 0x04E9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04EA  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x04EC  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x04EE  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint address = HRArray.New(htype, count);                                hoppervm.hs:897
    // 
    // 0x04F0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x04F1  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x04F2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x04F4  0x2C 0x25       CALLB 0x25     // HRArray.New
    HRArray_New();
    // 0x04F6  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push(address, Type.Array);                                               hoppervm.hs:898
    // 
    // 0x04F8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x04FA  0x1A 0x12       PUSHIB 0x12
    PushStack(0x12, Type::tByte);
    // 0x04FC  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:899
    // 
    // 0x04FE  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:899
    // 
hopperVM_ExecuteSysCall_0x0500:
    // 0x0500  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:899
    // 
    // 0x0501  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0502  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0504  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0506  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:905
    // 
    // 0x0507  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:905
    // 
    // 0x0508  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0509  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x050B  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x050D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type etype;                                                              hoppervm.hs:915
    // 
    // 0x050F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type etype;                                                              hoppervm.hs:915
    // 
    // 0x0510  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0511  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0513  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0514  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x0516  0x2C 0x28       CALLB 0x28     // HRArray.GetItem
    HRArray_GetItem_0x0028();
    // 0x0518  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:917
    // 
    // 0x051A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x051C  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(item, etype);                                                       hoppervm.hs:918
    // 
    // 0x051E  0x56 0x0A 0x08  PUSHLOCALBB 0x080A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0521  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:919
    // 
    // 0x0523  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:919
    // 
hopperVM_ExecuteSysCall_0x0525:
    // 0x0525  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:919
    // 
    // 0x0526  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0527  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0529  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x052B  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type atype;                                                              hoppervm.hs:924
    // 
    // 0x052C  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:924
    // 
    // 0x052D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x052E  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0530  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0532  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:926
    // 
    // 0x0534  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:926
    // 
    // 0x0535  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0536  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x0538  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x053A  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // HRArray.SetItem(this, index, item);                                      hoppervm.hs:936
    // 
    // 0x053C  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x053F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0540  0x2C 0x29       CALLB 0x29     // HRArray.SetItem
    HRArray_SetItem_0x0029();

    // GC.Release(this);                                                        hoppervm.hs:937
    // 
    // 0x0542  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0544  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:938
    // 
    // 0x0546  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:938
    // 
hopperVM_ExecuteSysCall_0x0548:
    // 0x0548  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:938
    // 
    // 0x0549  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x054A  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x054C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x054E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint length = HRArray.GetCount(this);                                    hoppervm.hs:950
    // 
    // 0x054F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0550  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0551  0x2C 0x27       CALLB 0x27     // HRArray.GetCount
    HRArray_GetCount_0x0027();
    // 0x0553  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:951
    // 
    // 0x0555  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0556  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(length, Type.UInt);                                                 hoppervm.hs:952
    // 
    // 0x0558  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x055A  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x055C  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:953
    // 
    // 0x055E  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:953
    // 
hopperVM_ExecuteSysCall_0x0560:
    // 0x0560  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:953
    // 
    // 0x0561  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0562  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0564  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0566  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = HRList.New(htype);                                        hoppervm.hs:960
    // 
    // 0x0567  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0568  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0569  0x2C 0x3F       CALLB 0x3F     // HRList.New
    HRList_New();
    // 0x056B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(address, Type.List);                                                hoppervm.hs:961
    // 
    // 0x056D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x056F  0x1A 0x19       PUSHIB 0x19
    PushStack(0x19, Type::tByte);
    // 0x0571  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:962
    // 
    // 0x0573  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:962
    // 
hopperVM_ExecuteSysCall_0x0575:
    // 0x0575  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:962
    // 
    // 0x0576  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0577  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0579  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x057B  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint length = HRList.GetLength(this);                                    hoppervm.hs:974
    // 
    // 0x057C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x057D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x057E  0x2C 0x45       CALLB 0x45     // HRList.GetLength
    HRList_GetLength_0x0045();
    // 0x0580  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:975
    // 
    // 0x0582  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0583  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(length, Type.UInt);                                                 hoppervm.hs:976
    // 
    // 0x0585  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0587  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0589  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:977
    // 
    // 0x058B  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:977
    // 
hopperVM_ExecuteSysCall_0x058D:
    // 0x058D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:977
    // 
    // 0x058E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x058F  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0591  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0593  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:982
    // 
    // 0x0594  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:982
    // 
    // 0x0595  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0596  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0598  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x059A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // HRList.Append(this, item, itype);                                        hoppervm.hs:991
    // 
    // 0x059C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x059E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x059F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x05A0  0x2C 0x49       CALLB 0x49     // HRList.Append
    HRList_Append_0x0049();

    // if (IsReferenceType(itype))                                              hoppervm.hs:992
    // 
    // 0x05A2  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x05A3  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x05A5  0x2E 0x05       JZB 0x05AA (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x05AA; }

    // GC.Release(item);                                                        hoppervm.hs:994
    // 
    // 0x05A7  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x05A8  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(this);                                                        hoppervm.hs:996
    // 
hopperVM_ExecuteSysCall_0x05AA:
    // 0x05AA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x05AC  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:997
    // 
    // 0x05AE  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:997
    // 
hopperVM_ExecuteSysCall_0x05B0:
    // 0x05B0  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:997
    // 
    // 0x05B1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x05B2  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x05B4  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x05B6  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type atype;                                                              hoppervm.hs:1002
    // 
    // 0x05B7  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:1002
    // 
    // 0x05B8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x05B9  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x05BB  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x05BD  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1004
    // 
    // 0x05BF  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1004
    // 
    // 0x05C0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x05C1  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x05C3  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x05C5  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // HRList.SetItem(this, index, item, itype);                                hoppervm.hs:1014
    // 
    // 0x05C7  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x05CA  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x05CB  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x05CC  0x2C 0x47       CALLB 0x47     // HRList.SetItem
    HRList_SetItem_0x0047();

    // if (IsReferenceType(itype))                                              hoppervm.hs:1015
    // 
    // 0x05CE  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x05CF  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x05D1  0x2E 0x05       JZB 0x05D6 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x05D6; }

    // GC.Release(item);                                                        hoppervm.hs:1017
    // 
    // 0x05D3  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x05D4  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(this);                                                        hoppervm.hs:1019
    // 
hopperVM_ExecuteSysCall_0x05D6:
    // 0x05D6  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x05D8  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1020
    // 
    // 0x05DA  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:1020
    // 
hopperVM_ExecuteSysCall_0x05DC:
    // 0x05DC  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1020
    // 
    // 0x05DD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x05DE  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x05E0  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x05E2  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type atype;                                                              hoppervm.hs:1025
    // 
    // 0x05E3  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type atype;                                                              hoppervm.hs:1025
    // 
    // 0x05E4  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x05E5  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x05E7  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x05E9  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1027
    // 
    // 0x05EB  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1027
    // 
    // 0x05EC  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x05ED  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x05EF  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x05F1  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // HRList.Insert(this, index, item, itype);                                 hoppervm.hs:1037
    // 
    // 0x05F3  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x05F6  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x05F7  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x05F8  0x2C 0x48       CALLB 0x48     // HRList.Insert
    HRList_Insert_0x0048();

    // if (IsReferenceType(itype))                                              hoppervm.hs:1038
    // 
    // 0x05FA  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x05FB  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x05FD  0x2E 0x05       JZB 0x0602 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0602; }

    // GC.Release(item);                                                        hoppervm.hs:1040
    // 
    // 0x05FF  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0600  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(this);                                                        hoppervm.hs:1042
    // 
hopperVM_ExecuteSysCall_0x0602:
    // 0x0602  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0604  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1043
    // 
    // 0x0606  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:1043
    // 
hopperVM_ExecuteSysCall_0x0608:
    // 0x0608  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1043
    // 
    // 0x0609  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x060A  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x060C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x060E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1048
    // 
    // 0x060F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1048
    // 
    // 0x0610  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0611  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0613  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0615  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type itype;                                                              hoppervm.hs:1058
    // 
    // 0x0617  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type itype;                                                              hoppervm.hs:1058
    // 
    // 0x0618  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0619  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x061B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x061C  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x061E  0x2C 0x46       CALLB 0x46     // HRList.GetItem
    HRList_GetItem_0x0046();
    // 0x0620  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:1060
    // 
    // 0x0622  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0624  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(item, itype);                                                       hoppervm.hs:1061
    // 
    // 0x0626  0x56 0x0A 0x08  PUSHLOCALBB 0x080A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0629  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1062
    // 
    // 0x062B  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:1062
    // 
hopperVM_ExecuteSysCall_0x062D:
    // 0x062D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1062
    // 
    // 0x062E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x062F  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0631  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0633  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // HRList.Clear(this);                                                      hoppervm.hs:1075
    // 
    // 0x0634  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0635  0x2C 0x43       CALLB 0x43     // HRList.Clear
    HRList_Clear_0x0043();

    // GC.Release(this);                                                        hoppervm.hs:1076
    // 
    // 0x0637  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0638  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1077
    // 
    // 0x063A  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:1077
    // 
hopperVM_ExecuteSysCall_0x063C:
    // 0x063C  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1077
    // 
    // 0x063D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x063E  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0640  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0642  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1082
    // 
    // 0x0643  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1082
    // 
    // 0x0644  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0645  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0647  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0649  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // HRList.Remove(this, index);                                              hoppervm.hs:1092
    // 
    // 0x064B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x064D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x064E  0x2C 0x4B       CALLB 0x4B     // HRList.Remove
    HRList_Remove_0x004B();

    // GC.Release(this);                                                        hoppervm.hs:1093
    // 
    // 0x0650  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0652  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1094
    // 
    // 0x0654  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:1094
    // 
hopperVM_ExecuteSysCall_0x0656:
    // 0x0656  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1094
    // 
    // 0x0657  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0658  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x065A  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x065C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1099
    // 
    // 0x065D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1099
    // 
    // 0x065E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x065F  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0661  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0663  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // bool contains = HRList.Contains(this, item, itype);                      hoppervm.hs:1108
    // 
    // 0x0665  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0666  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0668  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0669  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x066A  0x2C 0x4A       CALLB 0x4A     // HRList.Contains
    HRList_Contains_0x004A();
    // 0x066C  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (IsReferenceType(itype))                                              hoppervm.hs:1109
    // 
    // 0x066E  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x066F  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0671  0x2E 0x05       JZB 0x0676 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0676; }

    // GC.Release(item);                                                        hoppervm.hs:1111
    // 
    // 0x0673  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0674  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(this);                                                        hoppervm.hs:1113
    // 
hopperVM_ExecuteSysCall_0x0676:
    // 0x0676  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0678  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(contains ? 1 : 0, Type.Bool);                                       hoppervm.hs:1114
    // 
    // 0x067A  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x067C  0x2E 0x05       JZB 0x0681 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0681; }
    // 0x067E  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x067F  0x30 0x03       JB 0x0682 (+3)
    goto hopperVM_ExecuteSysCall_0x0682;
hopperVM_ExecuteSysCall_0x0681:
    // 0x0681  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteSysCall_0x0682:
    // 0x0682  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0684  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1115
    // 
    // 0x0686  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:1115
    // 
hopperVM_ExecuteSysCall_0x0688:
    // 0x0688  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1115
    // 
    // 0x0689  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x068A  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x068C  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x068E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ktype;                                                              hoppervm.hs:1121
    // 
    // 0x068F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ktype;                                                              hoppervm.hs:1121
    // 
    // 0x0690  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0691  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0693  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0695  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint address = HRPair.New(ktype, key, vtype, value);                     hoppervm.hs:1130
    // 
    // 0x0697  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0698  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x069B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x069C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x069D  0x2C 0x54       CALLB 0x54     // HRPair.New
    HRPair_New();
    // 0x069F  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Push(address, Type.Pair);                                                hoppervm.hs:1131
    // 
    // 0x06A1  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x06A3  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x06A5  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1132
    // 
    // 0x06A7  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:1132
    // 
hopperVM_ExecuteSysCall_0x06A9:
    // 0x06A9  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1132
    // 
    // 0x06AA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06AB  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x06AD  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x06AF  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type vttype;                                                             hoppervm.hs:1138
    // 
    // 0x06B0  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type vttype;                                                             hoppervm.hs:1138
    // 
    // 0x06B1  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06B2  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x06B4  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x06B6  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint address = HRVariant.New(value, vtype);                              hoppervm.hs:1140
    // 
    // 0x06B8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06B9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x06BB  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x06BC  0x2C 0x79       CALLB 0x79     // HRVariant.New
    HRVariant_New();
    // 0x06BE  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Push(address, Type.Variant);                                             hoppervm.hs:1141
    // 
    // 0x06C0  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x06C2  0x1A 0x14       PUSHIB 0x14
    PushStack(0x14, Type::tByte);
    // 0x06C4  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1142
    // 
    // 0x06C6  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:1142
    // 
hopperVM_ExecuteSysCall_0x06C8:
    // 0x06C8  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1142
    // 
    // 0x06C9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06CA  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x06CC  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x06CE  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type vtype;                                                              hoppervm.hs:1155
    // 
    // 0x06CF  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type vtype;                                                              hoppervm.hs:1155
    // 
    // 0x06D0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06D1  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x06D2  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x06D4  0x2C 0x58       CALLB 0x58     // HRPair.GetValue
    HRPair_GetValue_0x0058();
    // 0x06D6  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:1157
    // 
    // 0x06D8  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x06D9  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(value, vtype);                                                      hoppervm.hs:1158
    // 
    // 0x06DB  0x56 0x06 0x04  PUSHLOCALBB 0x0406
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x06DE  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1159
    // 
    // 0x06E0  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:1159
    // 
hopperVM_ExecuteSysCall_0x06E2:
    // 0x06E2  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1159
    // 
    // 0x06E3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06E4  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x06E6  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x06E8  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ktype;                                                              hoppervm.hs:1171
    // 
    // 0x06E9  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ktype;                                                              hoppervm.hs:1171
    // 
    // 0x06EA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06EB  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x06EC  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x06EE  0x2C 0x57       CALLB 0x57     // HRPair.GetKey
    HRPair_GetKey_0x0057();
    // 0x06F0  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:1173
    // 
    // 0x06F2  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x06F3  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(key, ktype);                                                        hoppervm.hs:1174
    // 
    // 0x06F5  0x56 0x06 0x04  PUSHLOCALBB 0x0406
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x06F8  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1175
    // 
    // 0x06FA  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:1175
    // 
hopperVM_ExecuteSysCall_0x06FC:
    // 0x06FC  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1175
    // 
    // 0x06FD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x06FE  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0700  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0702  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (IsReferenceType(ttype))                                              hoppervm.hs:1181
    // 
    // 0x0703  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0704  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0706  0x2E 0x05       JZB 0x070B (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x070B; }

    // GC.Release(this);                                                        hoppervm.hs:1183
    // 
    // 0x0708  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0709  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(byte(ttype), Type.Type);                                            hoppervm.hs:1185
    // 
hopperVM_ExecuteSysCall_0x070B:
    // 0x070B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x070C  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x070E  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0710  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1186
    // 
    // 0x0712  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:1186
    // 
hopperVM_ExecuteSysCall_0x0714:
    // 0x0714  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1186
    // 
    // 0x0715  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0716  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0718  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x071A  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ktype = Type(Pop(ref stype));                                       hoppervm.hs:1192
    // 
    // 0x071B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x071C  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x071E  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0720  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint address = HRDictionary.New(ktype, vtype);                           hoppervm.hs:1200
    // 
    // 0x0722  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0723  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0725  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0726  0x2C 0x2B       CALLB 0x2B     // HRDictionary.New
    HRDictionary_New();
    // 0x0728  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Push(address, Type.Dictionary);                                          hoppervm.hs:1201
    // 
    // 0x072A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x072C  0x1A 0x13       PUSHIB 0x13
    PushStack(0x13, Type::tByte);
    // 0x072E  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1202
    // 
    // 0x0730  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:1202
    // 
hopperVM_ExecuteSysCall_0x0732:
    // 0x0732  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1202
    // 
    // 0x0733  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0734  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0736  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0738  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint count = HRDictionary.GetCount(this);                                hoppervm.hs:1215
    // 
    // 0x0739  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x073A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x073B  0x2C 0x2C       CALLB 0x2C     // HRDictionary.GetCount
    HRDictionary_GetCount_0x002C();
    // 0x073D  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:1216
    // 
    // 0x073F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0740  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(count, Type.UInt);                                                  hoppervm.hs:1217
    // 
    // 0x0742  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0744  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0746  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1218
    // 
    // 0x0748  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:1218
    // 
hopperVM_ExecuteSysCall_0x074A:
    // 0x074A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1218
    // 
    // 0x074B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x074C  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x074E  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0750  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ktype;                                                              hoppervm.hs:1224
    // 
    // 0x0751  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ktype;                                                              hoppervm.hs:1224
    // 
    // 0x0752  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0753  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x0755  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0757  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1226
    // 
    // 0x0759  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1226
    // 
    // 0x075A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x075B  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x075D  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x075F  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // HRDictionary.Set(this, key, ktype, value, vtype);                        hoppervm.hs:1236
    // 
    // 0x0761  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0764  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0766  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0767  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0768  0x2C 0x35       CALLB 0x35     // HRDictionary.Set
    HRDictionary_Set_0x0035();

    // if (IsReferenceType(ktype))                                              hoppervm.hs:1237
    // 
    // 0x076A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x076C  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x076E  0x2E 0x06       JZB 0x0774 (+6)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x0774; }

    // GC.Release(key);                                                         hoppervm.hs:1239
    // 
    // 0x0770  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0772  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // if (IsReferenceType(vtype))                                              hoppervm.hs:1241
    // 
hopperVM_ExecuteSysCall_0x0774:
    // 0x0774  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0775  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0777  0x2E 0x05       JZB 0x077C (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x077C; }

    // GC.Release(value);                                                       hoppervm.hs:1243
    // 
    // 0x0779  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x077A  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(this);                                                        hoppervm.hs:1245
    // 
hopperVM_ExecuteSysCall_0x077C:
    // 0x077C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x077E  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1246
    // 
    // 0x0780  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:1246
    // 
hopperVM_ExecuteSysCall_0x0782:
    // 0x0782  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1246
    // 
    // 0x0783  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0784  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0786  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0788  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1253
    // 
    // 0x0789  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1253
    // 
    // 0x078A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x078B  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x078D  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x078F  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint hrpair;                                                             hoppervm.hs:1263
    // 
    // 0x0791  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint hrpair;                                                             hoppervm.hs:1263
    // 
    // 0x0792  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0793  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0795  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0797  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x0799  0x2C 0x34       CALLB 0x34     // HRDictionary.Next
    HRDictionary_Next_0x0034();
    // 0x079B  0x2E 0x05       JZB 0x07A0 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x07A0; }
    // 0x079D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x079E  0x30 0x03       JB 0x07A1 (+3)
    goto hopperVM_ExecuteSysCall_0x07A1;
hopperVM_ExecuteSysCall_0x07A0:
    // 0x07A0  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteSysCall_0x07A1:
    // 0x07A1  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // GC.Release(this);                                                        hoppervm.hs:1266
    // 
    // 0x07A3  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x07A5  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(found, Type.Bool);                                                  hoppervm.hs:1267
    // 
    // 0x07A7  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x07A9  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x07AB  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // Push(hrpair, Type.Pair);                                                 hoppervm.hs:1268
    // 
    // 0x07AD  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x07AF  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x07B1  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // Push(iterator, Type.UInt);                                               hoppervm.hs:1269
    // 
    // 0x07B3  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x07B4  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x07B6  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1270
    // 
    // 0x07B8  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:1270
    // 
hopperVM_ExecuteSysCall_0x07BA:
    // 0x07BA  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1270
    // 
    // 0x07BB  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07BC  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x07BE  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x07C0  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1277
    // 
    // 0x07C1  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1277
    // 
    // 0x07C2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07C3  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x07C5  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x07C7  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint found = HRDictionary.Contains(this, key) ? 1 : 0;                   hoppervm.hs:1290
    // 
    // 0x07C9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07CA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x07CC  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x07CD  0x2C 0x37       CALLB 0x37     // HRDictionary.Contains
    HRDictionary_Contains_0x0037();
    // 0x07CF  0x2E 0x05       JZB 0x07D4 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x07D4; }
    // 0x07D1  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x07D2  0x30 0x03       JB 0x07D5 (+3)
    goto hopperVM_ExecuteSysCall_0x07D5;
hopperVM_ExecuteSysCall_0x07D4:
    // 0x07D4  0x44            PUSHI0
    PushStack(0, Type::tByte);
hopperVM_ExecuteSysCall_0x07D5:
    // 0x07D5  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (ktype == Type.String)                                                hoppervm.hs:1291
    // 
    // 0x07D7  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x07D8  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x07DA  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x07DB  0x2E 0x05       JZB 0x07E0 (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x07E0; }

    // GC.Release(key);                                                         hoppervm.hs:1293
    // 
    // 0x07DD  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x07DE  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(this);                                                        hoppervm.hs:1295
    // 
hopperVM_ExecuteSysCall_0x07E0:
    // 0x07E0  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x07E2  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(found, Type.Bool);                                                  hoppervm.hs:1296
    // 
    // 0x07E4  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x07E6  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x07E8  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1297
    // 
    // 0x07EA  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        hoppervm.hs:1297
    // 
hopperVM_ExecuteSysCall_0x07EC:
    // 0x07EC  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1297
    // 
    // 0x07ED  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07EE  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x07F0  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x07F2  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ttype;                                                              hoppervm.hs:1304
    // 
    // 0x07F3  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ttype;                                                              hoppervm.hs:1304
    // 
    // 0x07F4  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07F5  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x07F7  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x07F9  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type vtype;                                                              hoppervm.hs:1317
    // 
    // 0x07FB  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type vtype;                                                              hoppervm.hs:1317
    // 
    // 0x07FC  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x07FD  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x07FF  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0800  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x0802  0x2C 0x36       CALLB 0x36     // HRDictionary.Get
    HRDictionary_Get_0x0036();
    // 0x0804  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (ktype == Type.String)                                                hoppervm.hs:1319
    // 
    // 0x0806  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0807  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0809  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x080A  0x2E 0x05       JZB 0x080F (+5)
    if (PopStack() == 0) { goto hopperVM_ExecuteSysCall_0x080F; }

    // GC.Release(key);                                                         hoppervm.hs:1321
    // 
    // 0x080C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x080D  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(this);                                                        hoppervm.hs:1323
    // 
hopperVM_ExecuteSysCall_0x080F:
    // 0x080F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0811  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // Push(result, vtype);                                                     hoppervm.hs:1324
    // 
    // 0x0813  0x56 0x0A 0x08  PUSHLOCALBB 0x080A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0816  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1325
    // 
    // 0x0818  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:1325
    // 
hopperVM_ExecuteSysCall_0x081A:
    // 0x081A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1325
    // 
    // 0x081B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x081C  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x081E  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0820  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // HRDictionary.Clear(this);                                                hoppervm.hs:1337
    // 
    // 0x0821  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0822  0x2C 0x2F       CALLB 0x2F     // HRDictionary.Clear
    HRDictionary_Clear_0x002F();

    // GC.Release(this);                                                        hoppervm.hs:1338
    // 
    // 0x0824  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0825  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1339
    // 
    // 0x0827  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:1339
    // 
hopperVM_ExecuteSysCall_0x0829:
    // 0x0829  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1339
    // 
    // 0x082A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x082B  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x082D  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x082F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0831  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Push(uint(b+48), Type.Char);                                             hoppervm.hs:1352
    // 
    // 0x0832  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0833  0x1A 0x30       PUSHIB 0x30
    PushStack(0x30, Type::tByte);
    // 0x0835  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0836  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0837  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1353
    // 
    // 0x0839  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:1353
    // 
hopperVM_ExecuteSysCall_0x083B:
    // 0x083B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1353
    // 
    // 0x083C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x083D  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x083F  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0841  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint lng = HRUInt.ToLong(value);                                         hoppervm.hs:1361
    // 
    // 0x0842  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0843  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0844  0x2C 0x76       CALLB 0x76     // HRUInt.ToLong
    HRUInt_ToLong_0x0076();
    // 0x0846  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(lng, Type.Long);                                                    hoppervm.hs:1362
    // 
    // 0x0848  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x084A  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x084C  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1363
    // 
    // 0x084E  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:1363
    // 
hopperVM_ExecuteSysCall_0x0850:
    // 0x0850  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1363
    // 
    // 0x0851  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0852  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0854  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0856  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint lng = HRInt.ToLong(ichunk);                                         hoppervm.hs:1372
    // 
    // 0x0857  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0858  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0859  0x2C 0x3D       CALLB 0x3D     // HRInt.ToLong
    HRInt_ToLong_0x003D();
    // 0x085B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(lng, Type.Long);                                                    hoppervm.hs:1373
    // 
    // 0x085D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x085F  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0861  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1374
    // 
    // 0x0863  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:1374
    // 
hopperVM_ExecuteSysCall_0x0865:
    // 0x0865  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1374
    // 
    // 0x0866  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0867  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0869  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x086B  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint lst = HRInt.ToBytes(ichunk);                                        hoppervm.hs:1382
    // 
    // 0x086C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x086D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x086E  0x2C 0x3E       CALLB 0x3E     // HRInt.ToBytes
    HRInt_ToBytes_0x003E();
    // 0x0870  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(lst, Type.List);                                                    hoppervm.hs:1383
    // 
    // 0x0872  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0874  0x1A 0x19       PUSHIB 0x19
    PushStack(0x19, Type::tByte);
    // 0x0876  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1384
    // 
    // 0x0878  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:1384
    // 
hopperVM_ExecuteSysCall_0x087A:
    // 0x087A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1384
    // 
    // 0x087B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x087C  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x087E  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0880  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint lst = HRLong.ToBytes(l);                                            hoppervm.hs:1392
    // 
    // 0x0881  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0882  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0883  0x2C 0x53       CALLB 0x53     // HRLong.ToBytes
    HRLong_ToBytes_0x0053();
    // 0x0885  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(lst, Type.List);                                                    hoppervm.hs:1393
    // 
    // 0x0887  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0889  0x1A 0x19       PUSHIB 0x19
    PushStack(0x19, Type::tByte);
    // 0x088B  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1394
    // 
    // 0x088D  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:1394
    // 
hopperVM_ExecuteSysCall_0x088F:
    // 0x088F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1394
    // 
    // 0x0890  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0891  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0893  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x0895  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint lst = HRFloat.ToBytes(l);                                           hoppervm.hs:1403
    // 
    // 0x0896  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0897  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0898  0x2C 0x3C       CALLB 0x3C     // HRFloat.ToBytes
    HRFloat_ToBytes_0x003C();
    // 0x089A  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(lst, Type.Float);                                                   hoppervm.hs:1404
    // 
    // 0x089C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x089E  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x08A0  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1405
    // 
    // 0x08A2  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:1405
    // 
hopperVM_ExecuteSysCall_0x08A4:
    // 0x08A4  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1405
    // 
    // 0x08A5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08A6  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x08A8  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x08AA  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint ui = HRLong.ToUInt(this);                                           hoppervm.hs:1418
    // 
    // 0x08AB  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08AC  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08AD  0x2C 0x51       CALLB 0x51     // HRLong.ToUInt
    HRLong_ToUInt_0x0051();
    // 0x08AF  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(ui, Type.UInt);                                                     hoppervm.hs:1419
    // 
    // 0x08B1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x08B3  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x08B5  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // GC.Release(this);                                                        hoppervm.hs:1420
    // 
    // 0x08B7  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08B8  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1421
    // 
    // 0x08BA  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;

    // }                                                                        hoppervm.hs:1421
    // 
hopperVM_ExecuteSysCall_0x08BC:
    // 0x08BC  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1421
    // 
    // 0x08BD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08BE  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x08C0  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x08C2  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint result;                                                             hoppervm.hs:1434
    // 
    // 0x08C3  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint result;                                                             hoppervm.hs:1434
    // 
    // 0x08C4  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08C5  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x08C7  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // result = HRLong.LongNegate(top);                                         hoppervm.hs:1436
    // 
    // 0x08C9  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08CA  0x2C 0x52       CALLB 0x52     // HRLong.LongNegate
    HRLong_LongNegate_0x0052();
    // 0x08CC  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // Push(result, rtype);                                                     hoppervm.hs:1437
    // 
    // 0x08CE  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x08D1  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // GC.Release(top);                                                         hoppervm.hs:1438
    // 
    // 0x08D3  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08D4  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1439
    // 
    // 0x08D6  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // }                                                                        hoppervm.hs:1439
    // 
hopperVM_ExecuteSysCall_0x08D8:
    // 0x08D8  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // }                                                                        hoppervm.hs:1439
    // 
    // 0x08D9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08DA  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x08DC  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x08DE  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Type ntype;                                                              hoppervm.hs:1455
    // 
    // 0x08DF  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ntype;                                                              hoppervm.hs:1455
    // 
    // 0x08E0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08E1  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x08E3  0x2C 0xAA       CALLB 0xAA     // HopperVM.Pop
    HopperVM_Pop_0x00AA();
    // 0x08E5  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint result;                                                             hoppervm.hs:1464
    // 
    // 0x08E7  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint result;                                                             hoppervm.hs:1464
    // 
    // 0x08E8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x08E9  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x08EB  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // switch (SysCall(iSysCall))                                               hoppervm.hs:1466
    // 
    // 0x08ED  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x08EF  0x30 0x70       JB 0x095F (+112)
    goto hopperVM_ExecuteSysCall_0x095F;

    // result = External.LongAdd(next, top);                                    hoppervm.hs:1470
    // 
hopperVM_ExecuteSysCall_0x08F1:
    // 0x08F1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x08F3  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08F4  0x2C 0x89       CALLB 0x89     // External.LongAdd
    External_LongAdd();
    // 0x08F6  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);
    // 0x08F8  0x30 0x76       JB 0x096E (+118)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongSub(next, top);                                    hoppervm.hs:1474
    // 
hopperVM_ExecuteSysCall_0x08FA:
    // 0x08FA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x08FC  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x08FD  0x2C 0x8A       CALLB 0x8A     // External.LongSub
    External_LongSub();
    // 0x08FF  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);
    // 0x0901  0x30 0x6D       JB 0x096E (+109)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongDiv(next, top);                                    hoppervm.hs:1478
    // 
hopperVM_ExecuteSysCall_0x0903:
    // 0x0903  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0905  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0906  0x2C 0x8B       CALLB 0x8B     // External.LongDiv
    External_LongDiv();
    // 0x0908  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);
    // 0x090A  0x30 0x64       JB 0x096E (+100)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongMul(next, top);                                    hoppervm.hs:1482
    // 
hopperVM_ExecuteSysCall_0x090C:
    // 0x090C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x090E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x090F  0x2C 0x8C       CALLB 0x8C     // External.LongMul
    External_LongMul();
    // 0x0911  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);
    // 0x0913  0x30 0x5B       JB 0x096E (+91)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongMod(next, top);                                    hoppervm.hs:1486
    // 
hopperVM_ExecuteSysCall_0x0915:
    // 0x0915  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0917  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0918  0x2C 0x8D       CALLB 0x8D     // External.LongMod
    External_LongMod();
    // 0x091A  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);
    // 0x091C  0x30 0x52       JB 0x096E (+82)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongEQ(next, top);                                     hoppervm.hs:1490
    // 
hopperVM_ExecuteSysCall_0x091E:
    // 0x091E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0920  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0921  0x2C 0x8E       CALLB 0x8E     // External.LongEQ
    External_LongEQ();
    // 0x0923  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // rtype = Type.Bool;                                                       hoppervm.hs:1491
    // 
    // 0x0925  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0927  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);
    // 0x0929  0x30 0x45       JB 0x096E (+69)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongLT(next, top);                                     hoppervm.hs:1495
    // 
hopperVM_ExecuteSysCall_0x092B:
    // 0x092B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x092D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x092E  0x2C 0x8F       CALLB 0x8F     // External.LongLT
    External_LongLT();
    // 0x0930  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // rtype = Type.Bool;                                                       hoppervm.hs:1496
    // 
    // 0x0932  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0934  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);
    // 0x0936  0x30 0x38       JB 0x096E (+56)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongLE(next, top);                                     hoppervm.hs:1500
    // 
hopperVM_ExecuteSysCall_0x0938:
    // 0x0938  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x093A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x093B  0x2C 0x90       CALLB 0x90     // External.LongLE
    External_LongLE();
    // 0x093D  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // rtype = Type.Bool;                                                       hoppervm.hs:1501
    // 
    // 0x093F  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0941  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);
    // 0x0943  0x30 0x2B       JB 0x096E (+43)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongGT(next, top);                                     hoppervm.hs:1505
    // 
hopperVM_ExecuteSysCall_0x0945:
    // 0x0945  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0947  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0948  0x2C 0x91       CALLB 0x91     // External.LongGT
    External_LongGT();
    // 0x094A  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // rtype = Type.Bool;                                                       hoppervm.hs:1506
    // 
    // 0x094C  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x094E  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);
    // 0x0950  0x30 0x1E       JB 0x096E (+30)
    goto hopperVM_ExecuteSysCall_0x096E;

    // result = External.LongGE(next, top);                                     hoppervm.hs:1510
    // 
hopperVM_ExecuteSysCall_0x0952:
    // 0x0952  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0954  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0955  0x2C 0x92       CALLB 0x92     // External.LongGE
    External_LongGE();
    // 0x0957  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // rtype = Type.Bool;                                                       hoppervm.hs:1511
    // 
    // 0x0959  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x095B  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);
    // 0x095D  0x30 0x11       JB 0x096E (+17)
    goto hopperVM_ExecuteSysCall_0x096E;
hopperVM_ExecuteSysCall_0x095F:
    // 0x095F  0x68 0x3F 0x48  JIXB [0x3F..0x48] -0x0070

    switch(PopStack())
    {
        case 0x3F: { goto hopperVM_ExecuteSysCall_0x08F1; }
        case 0x40: { goto hopperVM_ExecuteSysCall_0x08FA; }
        case 0x41: { goto hopperVM_ExecuteSysCall_0x0903; }
        case 0x42: { goto hopperVM_ExecuteSysCall_0x090C; }
        case 0x43: { goto hopperVM_ExecuteSysCall_0x0915; }
        case 0x44: { goto hopperVM_ExecuteSysCall_0x091E; }
        case 0x45: { goto hopperVM_ExecuteSysCall_0x092B; }
        case 0x46: { goto hopperVM_ExecuteSysCall_0x0938; }
        case 0x47: { goto hopperVM_ExecuteSysCall_0x0945; }
        case 0x48: { goto hopperVM_ExecuteSysCall_0x0952; }
    }

    // Push(result, rtype);                                                     hoppervm.hs:1515
    // 
hopperVM_ExecuteSysCall_0x096E:
    // 0x096E  0x56 0x08 0x0A  PUSHLOCALBB 0x0A08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x0971  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // GC.Release(top);                                                         hoppervm.hs:1516
    // 
    // 0x0973  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0974  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // GC.Release(next);                                                        hoppervm.hs:1517
    // 
    // 0x0976  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0978  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        hoppervm.hs:1518
    // 
    // 0x097A  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // }                                                                        hoppervm.hs:1518
    // 
hopperVM_ExecuteSysCall_0x097C:
    // 0x097C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x097D  0x2C 0x4D       CALLB 0x4D     // HRLong.New
    HRLong_New();
    // 0x097F  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Push(address, Type.Long);                                                hoppervm.hs:1523
    // 
    // 0x0980  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0981  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0983  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1524
    // 
    // 0x0985  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:1524
    // 
hopperVM_ExecuteSysCall_0x0987:
    // 0x0987  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0988  0x2C 0x4D       CALLB 0x4D     // HRLong.New
    HRLong_New();
    // 0x098A  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Push(address, Type.Float);                                               hoppervm.hs:1528
    // 
    // 0x098B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x098C  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x098E  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1529
    // 
    // 0x0990  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:1529
    // 
hopperVM_ExecuteSysCall_0x0992:
    // 0x0992  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0993  0x2C 0x7F       CALLB 0x7F     // External.GetMillis
    External_GetMillis();
    // 0x0995  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Push(address, Type.Long);                                                hoppervm.hs:1535
    // 
    // 0x0996  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0997  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0999  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1536
    // 
    // 0x099B  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        hoppervm.hs:1536
    // 
hopperVM_ExecuteSysCall_0x099D:
    // 0x099D  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x099F  0x2C 0x80       CALLB 0x80     // External.Delay
    External_Delay();
    // 0x09A1  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // byte mode  = byte(Pop());                                                hoppervm.hs:1543
    // 
hopperVM_ExecuteSysCall_0x09A3:
    // 0x09A3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09A4  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x09A6  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x09A8  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // byte pin   = byte(Pop());                                                hoppervm.hs:1544
    // 
    // 0x09A9  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09AA  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x09AC  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x09AE  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // External.PinMode(pin, mode);                                             hoppervm.hs:1545
    // 
    // 0x09AF  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x09B0  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x09B1  0x2C 0x83       CALLB 0x83     // External.PinMode
    External_PinMode();

    // }                                                                        hoppervm.hs:1546
    // 
    // 0x09B3  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:1546
    // 
hopperVM_ExecuteSysCall_0x09B5:
    // 0x09B5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09B6  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x09B8  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x09BA  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // byte pin   = byte(Pop());                                                hoppervm.hs:1550
    // 
    // 0x09BB  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09BC  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x09BE  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x09C0  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // External.DigitalWrite(pin, value);                                       hoppervm.hs:1551
    // 
    // 0x09C1  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x09C2  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x09C3  0x2C 0x81       CALLB 0x81     // External.DigitalWrite
    External_DigitalWrite();

    // }                                                                        hoppervm.hs:1552
    // 
    // 0x09C5  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:1552
    // 
hopperVM_ExecuteSysCall_0x09C7:
    // 0x09C7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09C8  0x2C 0xAB       CALLB 0xAB     // HopperVM.Pop
    HopperVM_Pop_0x00AB();
    // 0x09CA  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x09CC  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // byte value = External.DigitalRead(pin);                                  hoppervm.hs:1556
    // 
    // 0x09CD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x09CE  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x09CF  0x2C 0x82       CALLB 0x82     // External.DigitalRead
    External_DigitalRead();
    // 0x09D1  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Push(value, Type.Byte);                                                  hoppervm.hs:1557
    // 
    // 0x09D2  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x09D3  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x09D5  0x2C 0xA9       CALLB 0xA9     // HopperVM.Push
    HopperVM_Push_0x00A9();

    // }                                                                        hoppervm.hs:1558
    // 
    // 0x09D7  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // }                                                                        hoppervm.hs:1558
    // 
hopperVM_ExecuteSysCall_0x09D9:
    // 0x09D9  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x09DB  0x2C 0x09       CALLB 0x09     // Runtime.Out4Hex
    Runtime_Out4Hex_0x0009();

    // Serial.WriteChar(':');                                                   hoppervm.hs:1563
    // 
    // 0x09DD  0x1A 0x3A       PUSHIB 0x3A
    PushStack(0x3A, Type::tByte);
    // 0x09DF  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Serial.WriteChar('S');                                                   hoppervm.hs:1564
    // 
    // 0x09E1  0x1A 0x53       PUSHIB 0x53
    PushStack(0x53, Type::tByte);
    // 0x09E3  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // Runtime.Out2Hex(iSysCall);                                               hoppervm.hs:1565
    // 
    // 0x09E5  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x09E7  0x2C 0x0A       CALLB 0x0A     // Runtime.Out2Hex
    Runtime_Out2Hex_0x000A();

    // Serial.WriteChar(' ');                                                   hoppervm.hs:1566
    // 
    // 0x09E9  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x09EB  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // WriteHex(PC); Write(':'); Write('S'); WriteHex(iSysCall); Write(' '); ErrorDump(2);
    // 
    // 0x09ED  0x20 0x20       PUSHGLOBALB 0x20
    PushStack(GetStack(16, &htype), htype);
    // 0x09EF  0x2C 0xDD       CALLB 0xDD     // IO.WriteHex
    IO_WriteHex_0x00DD();
    // 0x09F1  0x1A 0x3A       PUSHIB 0x3A
    PushStack(0x3A, Type::tByte);
    // 0x09F3  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x09F5  0x1A 0x53       PUSHIB 0x53
    PushStack(0x53, Type::tByte);
    // 0x09F7  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x09F9  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x09FB  0x2C 0xDC       CALLB 0xDC     // IO.WriteHex
    IO_WriteHex_0x00DC();
    // 0x09FD  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x09FF  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x0A01  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0A03  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0A; // not implemented                                         hoppervm.hs:1568
    // 
    // 0x0A05  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0A07  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();
    // 0x0A09  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
hopperVM_ExecuteSysCall_0x0A0B:
    // 0x0A0B  0x69 0x00 0xDB  JIXW [0x00..0xDB] -0x0A08

    switch(PopStack())
    {
        case 0x00: { goto hopperVM_ExecuteSysCall_0x00C2; }
        case 0x02: { goto hopperVM_ExecuteSysCall_0x0113; }
        case 0x03: { goto hopperVM_ExecuteSysCall_0x027C; }
        case 0x04: { goto hopperVM_ExecuteSysCall_0x0158; }
        case 0x05: { goto hopperVM_ExecuteSysCall_0x01E2; }
        case 0x06: { goto hopperVM_ExecuteSysCall_0x011E; }
        case 0x07: { goto hopperVM_ExecuteSysCall_0x0186; }
        case 0x08: { goto hopperVM_ExecuteSysCall_0x02D8; }
        case 0x09: { goto hopperVM_ExecuteSysCall_0x0206; }
        case 0x0A: { goto hopperVM_ExecuteSysCall_0x0136; }
        case 0x0B: { goto hopperVM_ExecuteSysCall_0x04E2; }
        case 0x0C: { goto hopperVM_ExecuteSysCall_0x0548; }
        case 0x0D: { goto hopperVM_ExecuteSysCall_0x0500; }
        case 0x0E: { goto hopperVM_ExecuteSysCall_0x0525; }
        case 0x0F: { goto hopperVM_ExecuteSysCall_0x0560; }
        case 0x10: { goto hopperVM_ExecuteSysCall_0x0575; }
        case 0x11: { goto hopperVM_ExecuteSysCall_0x058D; }
        case 0x12: { goto hopperVM_ExecuteSysCall_0x05DC; }
        case 0x13: { goto hopperVM_ExecuteSysCall_0x0608; }
        case 0x15: { goto hopperVM_ExecuteSysCall_0x05B0; }
        case 0x16: { goto hopperVM_ExecuteSysCall_0x062D; }
        case 0x17: { goto hopperVM_ExecuteSysCall_0x063C; }
        case 0x18: { goto hopperVM_ExecuteSysCall_0x0656; }
        case 0x19: { goto hopperVM_ExecuteSysCall_0x0714; }
        case 0x1A: { goto hopperVM_ExecuteSysCall_0x0732; }
        case 0x1B: { goto hopperVM_ExecuteSysCall_0x074A; }
        case 0x1C: { goto hopperVM_ExecuteSysCall_0x07BA; }
        case 0x1D: { goto hopperVM_ExecuteSysCall_0x07EC; }
        case 0x1E: { goto hopperVM_ExecuteSysCall_0x0782; }
        case 0x1F: { goto hopperVM_ExecuteSysCall_0x081A; }
        case 0x20: { goto hopperVM_ExecuteSysCall_0x0688; }
        case 0x22: { goto hopperVM_ExecuteSysCall_0x06E2; }
        case 0x24: { goto hopperVM_ExecuteSysCall_0x06C8; }
        case 0x27: { goto hopperVM_ExecuteSysCall_0x06A9; }
        case 0x29: { goto hopperVM_ExecuteSysCall_0x000E; }
        case 0x2A: { goto hopperVM_ExecuteSysCall_0x0006; }
        case 0x2B: { goto hopperVM_ExecuteSysCall_0x000A; }
        case 0x35: { goto hopperVM_ExecuteSysCall_0x0850; }
        case 0x36: { goto hopperVM_ExecuteSysCall_0x083B; }
        case 0x39: { goto hopperVM_ExecuteSysCall_0x087A; }
        case 0x3C: { goto hopperVM_ExecuteSysCall_0x08A4; }
        case 0x3D: { goto hopperVM_ExecuteSysCall_0x097C; }
        case 0x3E: { goto hopperVM_ExecuteSysCall_0x0092; }
        case 0x3F: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x40: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x41: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x42: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x43: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x44: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x45: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x46: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x47: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x48: { goto hopperVM_ExecuteSysCall_0x08D8; }
        case 0x49: { goto hopperVM_ExecuteSysCall_0x08BC; }
        case 0x4B: { goto hopperVM_ExecuteSysCall_0x088F; }
        case 0x4C: { goto hopperVM_ExecuteSysCall_0x0987; }
        case 0x4D: { goto hopperVM_ExecuteSysCall_0x00AA; }
        case 0x57: { goto hopperVM_ExecuteSysCall_0x0992; }
        case 0x7E: { goto hopperVM_ExecuteSysCall_0x06FC; }
        case 0x83: { goto hopperVM_ExecuteSysCall_0x036E; }
        case 0xA7: { goto hopperVM_ExecuteSysCall_0x0084; }
        case 0xB5: { goto hopperVM_ExecuteSysCall_0x03FD; }
        case 0xBD: { goto hopperVM_ExecuteSysCall_0x0829; }
        case 0xC6: { goto hopperVM_ExecuteSysCall_0x099D; }
        case 0xCD: { goto hopperVM_ExecuteSysCall_0x0865; }
        case 0xD0: { goto hopperVM_ExecuteSysCall_0x0424; }
        case 0xD1: { goto hopperVM_ExecuteSysCall_0x0477; }
        case 0xD2: { goto hopperVM_ExecuteSysCall_0x04C6; }
        case 0xD9: { goto hopperVM_ExecuteSysCall_0x09A3; }
        case 0xDA: { goto hopperVM_ExecuteSysCall_0x09C7; }
        case 0xDB: { goto hopperVM_ExecuteSysCall_0x09B5; }
    }
    // 0x0BC8  0x33 0x11 0xFE  JW 0x09D9 (-495)
    goto hopperVM_ExecuteSysCall_0x09D9;
}

void HopperVM_PushCS_0x00AD()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // WriteWord(callStack + csp, value);                                       hoppervm.hs:1691
    // 
    // 0x0001  0x52 0x18 0x26  PUSHGLOBALBB 0x2618
    PushStack(GetStack(12, &htype), htype);
    PushStack(GetStack(19, &htype), htype);
    // 0x0004  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0005  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0007  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // csp++; csp++;                                                            hoppervm.hs:1692
    // 
    // 0x0009  0x53 0x26       INCGLOBALB 0x26
    htype = GetStackType(19);
    PutStack(19, GetStack(19)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x000B  0x53 0x26       INCGLOBALB 0x26
    htype = GetStackType(19);
    PutStack(19, GetStack(19)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // }                                                                        hoppervm.hs:1693
    // 
    // 0x000D  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void HopperVM_LookupMethod_0x00A0()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // methodIndex = (methodIndex & 0x3FFF);                                    hoppervm.hs:158
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x37 0xFF 0x3F  PUSHIW 0x3FFF
    PushStack(0x3FFF, Type::tUInt);
    // 0x0006  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0007  0x1B 0xFE       POPLOCALB 0xFE (BP-2)
    PutStack(bp+-1, PopStack(&htype), htype);

    // uint address = methodTable;                                              hoppervm.hs:159
    // 
    // 0x0009  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000A  0x20 0x12       PUSHGLOBALB 0x12
    PushStack(GetStack(9, &htype), htype);
    // 0x000C  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint entry = ReadWord(address);                                          hoppervm.hs:162
    // 
hopperVM_LookupMethod_0x000D:
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0011  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (entry == methodIndex)                                                hoppervm.hs:163
    // 
    // 0x0012  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0013  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0015  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0016  0x2E 0x0D       JZB 0x0023 (+13)
    if (PopStack() == 0) { goto hopperVM_LookupMethod_0x0023; }

    // address = ReadWord(address+2);                                           hoppervm.hs:165
    // 
    // 0x0018  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0019  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001E  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // break;                                                                   hoppervm.hs:166
    // 
    // 0x001F  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0021  0x30 0x0B       JB 0x002C (+11)
    goto hopperVM_LookupMethod_0x002C;

    // address = address + 4;                                                   hoppervm.hs:168
    // 
hopperVM_LookupMethod_0x0023:
    // 0x0023  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0024  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0026  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0027  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // } // loop                                                                hoppervm.hs:169
    // 
    // 0x0028  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x002A  0x30 0xE3       JB 0x000D (-29)
    goto hopperVM_LookupMethod_0x000D;

    // return address;                                                          hoppervm.hs:170
    // 
hopperVM_LookupMethod_0x002C:
    // 0x002C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002D  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HopperVM_PopCS_0x00AE()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;


    // csp--;csp--;                                                             hoppervm.hs:1703
    // 
    // 0x0000  0x54 0x26       DECGLOBALB 0x26
    PutStack(19, GetStack(19)-1, GetStackType(19));

    // 0x0002  0x54 0x26       DECGLOBALB 0x26
    PutStack(19, GetStack(19)-1, GetStackType(19));


    // return ReadWord(callStack + csp);                                        hoppervm.hs:1704
    // 
    // 0x0004  0x52 0x18 0x26  PUSHGLOBALBB 0x2618
    PushStack(GetStack(12, &htype), htype);
    PushStack(GetStack(19, &htype), htype);
    // 0x0007  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0008  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000A  0x61            RETFAST
    return;
}

void Memory_Free_0x0018()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // if (0x0000 == address)                                                   memory.hs:180
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0005  0x2E 0x0B       JZB 0x0010 (+11)
    if (PopStack() == 0) { goto memory_Free_0x0010; }

    // ErrorDump(1);                                                            memory.hs:182
    // 
    // 0x0007  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0008  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0B;                                                            memory.hs:183
    // 
    // 0x000A  0x1A 0x0B       PUSHIB 0x0B
    PushStack(0x0B, Type::tByte);
    // 0x000C  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // break;                                                                   memory.hs:184
    // 
    // 0x000E  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;

    // break;                                                                   memory.hs:184
    // 
memory_Free_0x0010:
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0011  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0013  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0015  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0016  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint size  = ReadWord(blockAddress);                                     memory.hs:187
    // 
    // 0x0017  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0018  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0019  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001B  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint current  = freeList;                                                memory.hs:189
    // 
    // 0x001C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001D  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x001F  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint previous = 0;                                                       memory.hs:190
    // 
    // 0x0021  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint previous = 0;                                                       memory.hs:190
    // 
memory_Free_0x0022:
    // 0x0022  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0023  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0025  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0026  0x2E 0x04       JZB 0x002A (+4)
    if (PopStack() == 0) { goto memory_Free_0x002A; }

    // break;                                                                   memory.hs:195
    // 
    // 0x0028  0x30 0x20       JB 0x0048 (+32)
    goto memory_Free_0x0048;

    // break;                                                                   memory.hs:195
    // 
memory_Free_0x002A:
    // 0x002A  0x56 0x04 0xFE  PUSHLOCALBB 0xFE04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x002D  0x07            GT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] > valuestack[sp]);
    // 0x002E  0x2E 0x04       JZB 0x0032 (+4)
    if (PopStack() == 0) { goto memory_Free_0x0032; }

    // break;                                                                   memory.hs:200
    // 
    // 0x0030  0x30 0x18       JB 0x0048 (+24)
    goto memory_Free_0x0048;

    // break;                                                                   memory.hs:200
    // 
memory_Free_0x0032:
    // 0x0032  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0034  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint currentNext = ReadWord(current + 2);                                memory.hs:203
    // 
    // 0x0036  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0037  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0039  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x003B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x003E  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // current = currentNext;                                                   memory.hs:204
    // 
    // 0x0040  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0042  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // }                                                                        memory.hs:205
    // 
    // 0x0044  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0046  0x30 0xDC       JB 0x0022 (-36)
    goto memory_Free_0x0022;

    // uint currentPrev = previous;                                             memory.hs:206
    // 
memory_Free_0x0048:
    // 0x0048  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0049  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x004B  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint currentSize = 0;                                                    memory.hs:207
    // 
    // 0x004D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint currentSize = 0;                                                    memory.hs:207
    // 
    // 0x004E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint currentSize = 0;                                                    memory.hs:207
    // 
    // 0x004F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0050  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0052  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0053  0x2E 0x11       JZB 0x0064 (+17)
    if (PopStack() == 0) { goto memory_Free_0x0064; }

    // currentSize = ReadWord(current);                                         memory.hs:211
    // 
    // 0x0055  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0057  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0059  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // currentNext = ReadWord(current + 2);                                     memory.hs:212
    // 
    // 0x005B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x005D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x005F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0060  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0062  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint freeSlot = address-2;                                               memory.hs:216
    // 
memory_Free_0x0064:
    // 0x0064  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0065  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0067  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0069  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x006A  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // if (0 == currentPrev)                                                    memory.hs:217
    // 
    // 0x006C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x006D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x006F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0070  0x2E 0x65       JZB 0x00D5 (+101)
    if (PopStack() == 0) { goto memory_Free_0x00D5; }

    // WriteWord(freeSlot+2, current);                                          memory.hs:220
    // 
    // 0x0072  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0074  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0076  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0077  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0079  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeSlot+4, 0);                                                memory.hs:221
    // 
    // 0x007B  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x007D  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x007F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0080  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0081  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(current+ 4, freeSlot);                                         memory.hs:222
    // 
    // 0x0083  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0085  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0087  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0088  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x008A  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // uint gapFront = freeList - (freeSlot+size);                              memory.hs:223
    // 
    // 0x008C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x008D  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x008F  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0091  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0092  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0093  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0094  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // if (0 == gapFront)                                                       memory.hs:224
    // 
    // 0x0096  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0097  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0099  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x009A  0x2E 0x35       JZB 0x00CF (+53)
    if (PopStack() == 0) { goto memory_Free_0x00CF; }

    // uint nextSize = ReadWord(freeList);                                      memory.hs:226
    // 
    // 0x009C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x009D  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x009F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00A1  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // uint nextNext = ReadWord(freeList+2);                                    memory.hs:227
    // 
    // 0x00A3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A4  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x00A6  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00A8  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00A9  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00AB  0x1B 0x14       POPLOCALB 0x14 (BP+20)
    PutStack(bp+10, PopStack(&htype), htype);

    // WriteWord(freeSlot, size+nextSize);                                      memory.hs:229
    // 
    // 0x00AD  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00AF  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x00B0  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x00B2  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B3  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeSlot+2, nextNext);                                         memory.hs:230
    // 
    // 0x00B5  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00B7  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00B9  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00BA  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x00BC  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (0 != nextNext)                                                       memory.hs:231
    // 
    // 0x00BE  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00BF  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x00C1  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00C2  0x2E 0x0B       JZB 0x00CD (+11)
    if (PopStack() == 0) { goto memory_Free_0x00CD; }

    // WriteWord(nextNext+4, freeSlot);                                         memory.hs:233
    // 
    // 0x00C4  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x00C6  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00C8  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00C9  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00CB  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:235
    // 
memory_Free_0x00CD:
    // 0x00CD  0x28 0x04       DECSP 0x04
    DecSP(2);

    // }                                                                        memory.hs:235
    // 
memory_Free_0x00CF:
    // 0x00CF  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00D1  0x1F 0x08       POPGLOBALB 0x08
    PutStack(4, PopStack(&htype), htype);

    // }                                                                        memory.hs:237
    // 
    // 0x00D3  0x2A 0x14       RETB 0x14
    DecSP(10); PopBP();
    return;

    // else if (0 == current)                                                   memory.hs:238
    // 
memory_Free_0x00D5:
    // 0x00D5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00D6  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x00D8  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00D9  0x2E 0x44       JZB 0x011D (+68)
    if (PopStack() == 0) { goto memory_Free_0x011D; }

    // WriteWord(currentPrev+2, freeSlot);                                      memory.hs:242
    // 
    // 0x00DB  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00DD  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00DF  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00E0  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00E2  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeSlot   +4, currentPrev);                                   memory.hs:243
    // 
    // 0x00E4  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00E6  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00E8  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00E9  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00EB  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeSlot   +2, 0);                                             memory.hs:244
    // 
    // 0x00ED  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00EF  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00F1  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00F2  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00F3  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // uint prevSize = ReadWord(currentPrev);                                   memory.hs:245
    // 
    // 0x00F5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00F6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00F8  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00FA  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // uint gapBack = freeSlot - (currentPrev+prevSize);                        memory.hs:246
    // 
    // 0x00FC  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00FD  0x56 0x0E 0x08  PUSHLOCALBB 0x080E
    PushStack(GetStack(bp+7, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0100  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0102  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0103  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0104  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // if (0 == gapBack)                                                        memory.hs:247
    // 
    // 0x0106  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0107  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x0109  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x010A  0x2E 0x11       JZB 0x011B (+17)
    if (PopStack() == 0) { goto memory_Free_0x011B; }

    // WriteWord(currentPrev, prevSize+size);                                   memory.hs:250
    // 
    // 0x010C  0x56 0x08 0x10  PUSHLOCALBB 0x1008
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+8, &htype), htype);
    // 0x010F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0110  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0111  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(currentPrev+2, 0); // nothing beyond freeSlot, tail of freeList
    // 
    // 0x0113  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0115  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0117  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0118  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0119  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:253
    // 
memory_Free_0x011B:
    // 0x011B  0x2A 0x16       RETB 0x16
    DecSP(11); PopBP();
    return;

    // WriteWord(currentPrev+2, freeSlot);                                      memory.hs:257
    // 
memory_Free_0x011D:
    // 0x011D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x011F  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0121  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0122  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0124  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeSlot   +4, currentPrev);                                   memory.hs:258
    // 
    // 0x0126  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0128  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x012A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x012B  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x012D  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeSlot   +2, current);                                       memory.hs:259
    // 
    // 0x012F  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0131  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0133  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0134  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0136  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(current    +4, freeSlot);                                      memory.hs:260
    // 
    // 0x0138  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x013A  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x013C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x013D  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x013F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // uint prevSize = ReadWord(currentPrev);                                   memory.hs:261
    // 
    // 0x0141  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0142  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0144  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0146  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // uint gapBack = freeSlot - (currentPrev+prevSize);                        memory.hs:262
    // 
    // 0x0148  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0149  0x56 0x0E 0x08  PUSHLOCALBB 0x080E
    PushStack(GetStack(bp+7, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x014C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x014E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x014F  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0150  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // if (0 == gapBack)                                                        memory.hs:263
    // 
    // 0x0152  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0153  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x0155  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0156  0x2E 0x22       JZB 0x0178 (+34)
    if (PopStack() == 0) { goto memory_Free_0x0178; }

    // WriteWord(currentPrev, prevSize+size);                                   memory.hs:266
    // 
    // 0x0158  0x56 0x08 0x10  PUSHLOCALBB 0x1008
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+8, &htype), htype);
    // 0x015B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x015C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x015D  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(currentPrev+2, current);                                       memory.hs:267
    // 
    // 0x015F  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0161  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0163  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0164  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0166  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(current+4, currentPrev);                                       memory.hs:268
    // 
    // 0x0168  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x016A  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x016C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x016D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x016F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // freeSlot = currentPrev;                                                  memory.hs:269
    // 
    // 0x0171  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0173  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // size = prevSize+size;                                                    memory.hs:270
    // 
    // 0x0175  0x3F 0x02 0x10  INCLOCALBB 0x1002
    PutStack(bp+1, GetStack(bp+1) + GetStack(bp+8));

    // size = prevSize+size;                                                    memory.hs:270
    // 
memory_Free_0x0178:
    // 0x0178  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0179  0x56 0x04 0x0E  PUSHLOCALBB 0x0E04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x017C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x017D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x017E  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x017F  0x1B 0x14       POPLOCALB 0x14 (BP+20)
    PutStack(bp+10, PopStack(&htype), htype);

    // if (0 == gapNext)                                                        memory.hs:273
    // 
    // 0x0181  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0182  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x0184  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0185  0x2E 0x22       JZB 0x01A7 (+34)
    if (PopStack() == 0) { goto memory_Free_0x01A7; }

    // WriteWord(freeSlot, size+currentSize);                                   memory.hs:276
    // 
    // 0x0187  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0189  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x018A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x018C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x018D  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeSlot+2, currentNext);                                      memory.hs:277
    // 
    // 0x018F  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0191  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0193  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0194  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0196  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (0 != currentNext)                                                    memory.hs:278
    // 
    // 0x0198  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0199  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x019B  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x019C  0x2E 0x0B       JZB 0x01A7 (+11)
    if (PopStack() == 0) { goto memory_Free_0x01A7; }

    // WriteWord(currentNext+4, freeSlot);                                      memory.hs:280
    // 
    // 0x019E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x01A0  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x01A2  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x01A3  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x01A5  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:283
    // 
memory_Free_0x01A7:
    // 0x01A7  0x2A 0x18       RETB 0x18
    DecSP(12); PopBP();
    return;
}

void Memory_Initialize_0x0016()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // heapStart = start;                                                       memory.hs:46
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x1F 0x04       POPGLOBALB 0x04
    PutStack(2, PopStack(&htype), htype);

    // heapSize = size;                                                         memory.hs:47
    // 
    // 0x0005  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0007  0x1F 0x06       POPGLOBALB 0x06
    PutStack(3, PopStack(&htype), htype);

    // freeList = heapStart;                                                    memory.hs:49
    // 
    // 0x0009  0x20 0x04       PUSHGLOBALB 0x04
    PushStack(GetStack(2, &htype), htype);
    // 0x000B  0x1F 0x08       POPGLOBALB 0x08
    PutStack(4, PopStack(&htype), htype);

    // Memory.Set(freeList, 0, heapSize);                                       memory.hs:52
    // 
    // 0x000D  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0010  0x20 0x06       PUSHGLOBALB 0x06
    PushStack(GetStack(3, &htype), htype);
    // 0x0012  0x2C 0x1B       CALLB 0x1B     // Memory.Set
    Memory_Set_0x001B();

    // WriteWord(freeList, heapSize);   // all memory is in this single free list record
    // 
    // 0x0014  0x52 0x08 0x06  PUSHGLOBALBB 0x0608
    PushStack(GetStack(4, &htype), htype);
    PushStack(GetStack(3, &htype), htype);
    // 0x0017  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeList+2, 0);        // next = null                          memory.hs:55
    // 
    // 0x0019  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x001B  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(freeList+4, 0);        // prev = null                          memory.hs:56
    // 
    // 0x0021  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x0023  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0025  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0026  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0027  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:57
    // 
    // 0x0029  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
}

void Memory_Allocate_0x0017()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x02       ENTERB 0x02
    PushBP();
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);

    // uint address;                                                            memory.hs:61
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0005  0x2E 0x09       JZB 0x000E (+9)
    if (PopStack() == 0) { goto memory_Allocate_0x000E; }

    // Error = 0x0C;                                                            memory.hs:66
    // 
    // 0x0007  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0009  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // break;                                                                   memory.hs:67
    // 
    // 0x000B  0x33 0x3E 0x01  JW 0x0149 (+318)
    goto memory_Allocate_0x0149;

    // break;                                                                   memory.hs:67
    // 
memory_Allocate_0x000E:
    // 0x000E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // break;                                                                   memory.hs:67
    // 
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint best;                                                               memory.hs:69
    // 
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint bestSize;                                                           memory.hs:70
    // 
    // 0x0011  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint bestNext;                                                           memory.hs:71
    // 
    // 0x0012  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0013  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x0015  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // size++; size++; // +2 space for the size field                           memory.hs:74
    // 
    // 0x0017  0x22 0xFE       INCLOCALB 0xFE (BP-2)
    htype = GetStackType(bp-1);
    PutStack(bp-1, GetStack(bp-1)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0019  0x22 0xFE       INCLOCALB 0xFE (BP-2)
    htype = GetStackType(bp-1);
    PutStack(bp-1, GetStack(bp-1)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // if (size < 6)                                                            memory.hs:75
    // 
    // 0x001B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001D  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x001F  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0020  0x2E 0x06       JZB 0x0026 (+6)
    if (PopStack() == 0) { goto memory_Allocate_0x0026; }

    // size = 6; // minimum size for participation in free list                 memory.hs:77
    // 
    // 0x0022  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0024  0x1B 0xFE       POPLOCALB 0xFE (BP-2)
    PutStack(bp+-1, PopStack(&htype), htype);

    // if (0 == current)                                                        memory.hs:81
    // 
memory_Allocate_0x0026:
    // 0x0026  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0027  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0029  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x002A  0x2E 0x04       JZB 0x002E (+4)
    if (PopStack() == 0) { goto memory_Allocate_0x002E; }

    // break;                                                                   memory.hs:83
    // 
    // 0x002C  0x30 0x56       JB 0x0082 (+86)
    goto memory_Allocate_0x0082;

    // break;                                                                   memory.hs:83
    // 
memory_Allocate_0x002E:
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0031  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0033  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint currentNext = ReadWord(current + 2);                                memory.hs:87
    // 
    // 0x0035  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0036  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0038  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x003A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003B  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x003D  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // uint currentPrev = ReadWord(current + 4);                                memory.hs:88
    // 
    // 0x003F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0040  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0042  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0044  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0045  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0047  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // if ((currentSize >= size) &&                                             memory.hs:89
    // 
    // 0x0049  0x56 0x0C 0xFE  PUSHLOCALBB 0xFE0C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x004C  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x004D  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x004F  0x2E 0x10       JZB 0x005F (+16)
    if (PopStack() == 0) { goto memory_Allocate_0x005F; }
    // 0x0051  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0052  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0054  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0055  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0057  0x2F 0x07       JNZB 0x005E (+7)
    if (PopStack() != 0) { goto memory_Allocate_0x005E; }
    // 0x0059  0x56 0x0C 0x04  PUSHLOCALBB 0x040C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x005C  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x005D  0x0B            BOOLOR
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next || top), Type::tBool);
memory_Allocate_0x005E:
    // 0x005E  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
memory_Allocate_0x005F:
    // 0x005F  0x2E 0x11       JZB 0x0070 (+17)
    if (PopStack() == 0) { goto memory_Allocate_0x0070; }

    // best = current;                                                          memory.hs:94
    // 
    // 0x0061  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0063  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // bestSize = currentSize;                                                  memory.hs:95
    // 
    // 0x0064  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0066  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // bestNext = currentNext;                                                  memory.hs:96
    // 
    // 0x0068  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x006A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // bestPrev = currentPrev;                                                  memory.hs:97
    // 
    // 0x006C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x006E  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (bestSize == size)                                                    memory.hs:99
    // 
memory_Allocate_0x0070:
    // 0x0070  0x56 0x04 0xFE  PUSHLOCALBB 0xFE04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0073  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0074  0x2E 0x06       JZB 0x007A (+6)
    if (PopStack() == 0) { goto memory_Allocate_0x007A; }

    // break; // can't get better than that                                     memory.hs:101
    // 
    // 0x0076  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x0078  0x30 0x0A       JB 0x0082 (+10)
    goto memory_Allocate_0x0082;

    // current = currentNext;                                                   memory.hs:103
    // 
memory_Allocate_0x007A:
    // 0x007A  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x007C  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // }                                                                        memory.hs:104
    // 
    // 0x007E  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x0080  0x30 0xA6       JB 0x0026 (-90)
    goto memory_Allocate_0x0026;

    // address = best + 2;                                                      memory.hs:105
    // 
memory_Allocate_0x0082:
    // 0x0082  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0083  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0085  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0086  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (bestSize >= size + 6)                                                memory.hs:106
    // 
    // 0x0087  0x56 0x04 0xFE  PUSHLOCALBB 0xFE04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x008A  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x008C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x008D  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x008E  0x2E 0x74       JZB 0x0102 (+116)
    if (PopStack() == 0) { goto memory_Allocate_0x0102; }

    // WriteWord(best, size);                                                   memory.hs:110
    // 
    // 0x0090  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0091  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0093  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // uint newHole = best + size;                                              memory.hs:113
    // 
    // 0x0095  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0096  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0097  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0099  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009A  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint newHoleSize = bestSize - size;                                      memory.hs:114
    // 
    // 0x009C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x009D  0x56 0x04 0xFE  PUSHLOCALBB 0xFE04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x00A0  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x00A1  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // WriteWord(newHole, newHoleSize);                                         memory.hs:115
    // 
    // 0x00A3  0x56 0x0C 0x0E  PUSHLOCALBB 0x0E0C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x00A6  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (0 == bestPrev)                                                       memory.hs:117
    // 
    // 0x00A8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A9  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00AB  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00AC  0x2E 0x28       JZB 0x00D4 (+40)
    if (PopStack() == 0) { goto memory_Allocate_0x00D4; }

    // freeList = newHole;                                                      memory.hs:119
    // 
    // 0x00AE  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00B0  0x1F 0x08       POPGLOBALB 0x08
    PutStack(4, PopStack(&htype), htype);

    // WriteWord(newHole+2,  bestNext);                                         memory.hs:120
    // 
    // 0x00B2  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00B4  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00B6  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B7  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00B9  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(newHole+4,  0); // start of list now                           memory.hs:121
    // 
    // 0x00BB  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00BD  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00BF  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00C0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00C1  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (0 != bestNext)                                                       memory.hs:122
    // 
    // 0x00C3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00C4  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00C6  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00C7  0x2E 0x37       JZB 0x00FE (+55)
    if (PopStack() == 0) { goto memory_Allocate_0x00FE; }

    // WriteWord(bestNext+4, newHole);                                          memory.hs:124
    // 
    // 0x00C9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00CB  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00CD  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00CE  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00D0  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:126
    // 
    // 0x00D2  0x30 0x2C       JB 0x00FE (+44)
    goto memory_Allocate_0x00FE;

    // }                                                                        memory.hs:126
    // 
memory_Allocate_0x00D4:
    // 0x00D4  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00D6  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00D8  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00D9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00DB  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(newHole+4,  bestPrev);                                         memory.hs:130
    // 
    // 0x00DD  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00DF  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00E1  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00E2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00E4  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(bestPrev+2, newHole);                                          memory.hs:131
    // 
    // 0x00E6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00E8  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00EA  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00EB  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00ED  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (0 != bestNext)                                                       memory.hs:133
    // 
    // 0x00EF  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00F0  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00F2  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00F3  0x2E 0x0B       JZB 0x00FE (+11)
    if (PopStack() == 0) { goto memory_Allocate_0x00FE; }

    // WriteWord(bestNext+4, newHole);                                          memory.hs:135
    // 
    // 0x00F5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00F7  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00F9  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00FA  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00FC  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:138
    // 
memory_Allocate_0x00FE:
    // 0x00FE  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0100  0x30 0x47       JB 0x0147 (+71)
    goto memory_Allocate_0x0147;

    // else if (bestSize >= size)                                               memory.hs:139
    // 
memory_Allocate_0x0102:
    // 0x0102  0x56 0x04 0xFE  PUSHLOCALBB 0xFE04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0105  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0106  0x2E 0x3B       JZB 0x0141 (+59)
    if (PopStack() == 0) { goto memory_Allocate_0x0141; }

    // WriteWord(best, bestSize);                                               memory.hs:146
    // 
    // 0x0108  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0109  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x010B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (0 == bestPrev)                                                       memory.hs:148
    // 
    // 0x010D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x010E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0110  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0111  0x2E 0x16       JZB 0x0127 (+22)
    if (PopStack() == 0) { goto memory_Allocate_0x0127; }

    // freeList = bestNext;                                                     memory.hs:151
    // 
    // 0x0113  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0115  0x1F 0x08       POPGLOBALB 0x08
    PutStack(4, PopStack(&htype), htype);

    // if (0 != bestNext)                                                       memory.hs:152
    // 
    // 0x0117  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0118  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x011A  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x011B  0x2E 0x2C       JZB 0x0147 (+44)
    if (PopStack() == 0) { goto memory_Allocate_0x0147; }

    // WriteWord(freeList+4, 0); // start of list now so no previous            memory.hs:154
    // 
    // 0x011D  0x20 0x08       PUSHGLOBALB 0x08
    PushStack(GetStack(4, &htype), htype);
    // 0x011F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0121  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0122  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0123  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:156
    // 
    // 0x0125  0x30 0x22       JB 0x0147 (+34)
    goto memory_Allocate_0x0147;

    // }                                                                        memory.hs:156
    // 
memory_Allocate_0x0127:
    // 0x0127  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0129  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x012B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x012C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x012E  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (0 != bestNext)                                                       memory.hs:160
    // 
    // 0x0130  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0131  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0133  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0134  0x2E 0x13       JZB 0x0147 (+19)
    if (PopStack() == 0) { goto memory_Allocate_0x0147; }

    // WriteWord(bestNext+4, bestPrev);                                         memory.hs:162
    // 
    // 0x0136  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0138  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x013A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x013B  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x013D  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        memory.hs:165
    // 
    // 0x013F  0x30 0x08       JB 0x0147 (+8)
    goto memory_Allocate_0x0147;

    // }                                                                        memory.hs:165
    // 
memory_Allocate_0x0141:
    // 0x0141  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0143  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // address = 0; // failed to allocate                                       memory.hs:169
    // 
    // 0x0145  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0146  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // break;                                                                   memory.hs:171
    // 
memory_Allocate_0x0147:
    // 0x0147  0x28 0x0A       DECSP 0x0A
    DecSP(5);

    // }                                                                        memory.hs:172
    // 
memory_Allocate_0x0149:
    // 0x0149  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x014A  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void Memory_Set_0x001B()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // for (uint i = 0; i < size; i++)                                          memory.hs:328
    // 
memory_Set_0x0002:
    // 0x0002  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0003  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0005  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0006  0x2E 0x0E       JZB 0x0014 (+14)
    if (PopStack() == 0) { goto memory_Set_0x0014; }

    // WriteByte(memory+i, value);                                              memory.hs:330
    // 
    // 0x0008  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000E  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        memory.hs:331
    // 
    // 0x0010  0x22 0x00       INCLOCALB 0x00 (BP+0)
    htype = GetStackType(bp+0);
    PutStack(bp+0, GetStack(bp+0)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0012  0x30 0xF0       JB 0x0002 (-16)
    goto memory_Set_0x0002;
memory_Set_0x0014:
    // 0x0014  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;
}

void Char_ToHex_0x00C1()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // if (h < 10)                                                              char.hs:48
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0005  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0006  0x2E 0x0B       JZB 0x0011 (+11)
    if (PopStack() == 0) { goto char_ToHex_0x0011; }

    // h = h + 48; // +0                                                        char.hs:50
    // 
    // 0x0008  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000A  0x1A 0x30       PUSHIB 0x30
    PushStack(0x30, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1B 0xFE       POPLOCALB 0xFE (BP-2)
    PutStack(bp+-1, PopStack(&htype), htype);

    // }                                                                        char.hs:51
    // 
    // 0x000F  0x30 0x09       JB 0x0018 (+9)
    goto char_ToHex_0x0018;

    // h = h + 55; // +A - 10                                                   char.hs:54
    // 
char_ToHex_0x0011:
    // 0x0011  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0013  0x1A 0x37       PUSHIB 0x37
    PushStack(0x37, Type::tByte);
    // 0x0015  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0016  0x1B 0xFE       POPLOCALB 0xFE (BP-2)
    PutStack(bp+-1, PopStack(&htype), htype);

    // return char(h);                                                          char.hs:56
    // 
char_ToHex_0x0018:
    // 0x0018  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001A  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void Minimal_Error_Set_0x000D()
{
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // { set { error = value; SetError(error); } get { return error; }}
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1F 0x02       POPGLOBALB 0x02
    PutStack(1, PopStack(&htype), htype);
    // 0x0005  0x20 0x02       PUSHGLOBALB 0x02
    PushStack(GetStack(1, &htype), htype);
    // 0x0007  0x24 0x7D       SYSCALL0 0x7D  // Diagnostics.SetError
    Diagnostics_SetError(0);
    // 0x0009  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void IO_IsBreak_0x00E5()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // while (Serial.IsAvailable)                                               io.hs:352
    // 
iO_IsBreak_0x0001:
    // 0x0001  0x24 0xA5       SYSCALL0 0xA5  // Serial.IsAvailable_Get
    Serial_IsAvailable_Get(0);
    // 0x0003  0x2E 0x16       JZB 0x0019 (+22)
    if (PopStack() == 0) { goto iO_IsBreak_0x0019; }

    // char ch = Serial.ReadChar();                                             io.hs:354
    // 
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x24 0xA6       SYSCALL0 0xA6  // Serial.ReadChar
    Serial_ReadChar(0);
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (ch == char(0x18)) // <ctrl><X>?                                      io.hs:355
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x18       PUSHIB 0x18
    PushStack(0x18, Type::tByte);
    // 0x000C  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x000D  0x2E 0x05       JZB 0x0012 (+5)
    if (PopStack() == 0) { goto iO_IsBreak_0x0012; }

    // return true;                                                             io.hs:357
    // 
    // 0x000F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0010  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;

    // PushKey(ch);                                                             io.hs:360
    // 
iO_IsBreak_0x0012:
    // 0x0012  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0013  0x2C 0xE6       CALLB 0xE6     // IO.PushKey
    IO_PushKey_0x00E6();

    // }                                                                        io.hs:361
    // 
    // 0x0015  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0017  0x30 0xEA       JB 0x0001 (-22)
    goto iO_IsBreak_0x0001;

    // return false;                                                            io.hs:388
    // 
iO_IsBreak_0x0019:
    // 0x0019  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001A  0x4A            RET0
    PopBP();
    return;
}

void IO_WriteLn_0x00E0()
{
    // 0x0000  0x49            ENTER
    PushBP();

    // Write(char(0x0D));                                                       io.hs:134
    // 
    // 0x0001  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0003  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();

    // }                                                                        io.hs:135
    // 
    // 0x0005  0x4A            RET0
    PopBP();
    return;
}

void IO_Write_0x00DE()
{
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // Serial.WriteChar(c);                                                     io.hs:123
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        io.hs:124
    // 
    // 0x0005  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void IO_Clear_0x00D8()
{

    // Serial.WriteChar(char(0x0C)); // form feed                               io.hs:65
    // 
    // 0x0000  0x1A 0x0C       PUSHIB 0x0C
    PushStack(0x0C, Type::tByte);
    // 0x0002  0x24 0xA7       SYSCALL0 0xA7  // Serial.WriteChar
    Serial_WriteChar(0);

    // }                                                                        io.hs:77
    // 
    // 0x0004  0x61            RETFAST
    return;
}

void IO_WriteHex_0x00DD()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte msb = byte(u >> 8);                                                 io.hs:114
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0006  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0007  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteHex(msb);                                                           io.hs:115
    // 
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x2C 0xDC       CALLB 0xDC     // IO.WriteHex
    IO_WriteHex_0x00DC();

    // byte lsb = byte(u & 0xFF);                                               io.hs:116
    // 
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0010  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0012  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0013  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0015  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // WriteHex(lsb);                                                           io.hs:117
    // 
    // 0x0016  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0017  0x2C 0xDC       CALLB 0xDC     // IO.WriteHex
    IO_WriteHex_0x00DC();

    // }                                                                        io.hs:118
    // 
    // 0x0019  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void IO_WriteHex_0x00DC()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte msn = ((b >> 4) & 0xF);                                             io.hs:107
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0007  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0009  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x000A  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Write(ToHex(msn));                                                       io.hs:108
    // 
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x000E  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();

    // byte lsn = b & 0xF;                                                      io.hs:109
    // 
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0011  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0013  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0015  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0016  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Write(ToHex(lsn));                                                       io.hs:110
    // 
    // 0x0017  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0018  0x2C 0xC1       CALLB 0xC1     // Char.ToHex
    Char_ToHex_0x00C1();
    // 0x001A  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();

    // }                                                                        io.hs:111
    // 
    // 0x001C  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void IO_PushKey_0x00E6()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte k = byte(c);                                                        io.hs:400
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Memory.WriteByte(keyboardBufferBase + keyboardInPointer, k);             io.hs:401
    // 
    // 0x0005  0x37 0x00 0xF0  PUSHIW 0xF000
    PushStack(0xF000, Type::tUInt);
    // 0x0008  0x20 0x2C       PUSHGLOBALB 0x2C
    PushStack(GetStack(22, &htype), htype);
    // 0x000A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // if (keyboardInPointer == 0x0FFF)                                         io.hs:402
    // 
    // 0x000E  0x20 0x2C       PUSHGLOBALB 0x2C
    PushStack(GetStack(22, &htype), htype);
    // 0x0010  0x37 0xFF 0x0F  PUSHIW 0x0FFF
    PushStack(0x0FFF, Type::tUInt);
    // 0x0013  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0014  0x2E 0x07       JZB 0x001B (+7)
    if (PopStack() == 0) { goto iO_PushKey_0x001B; }

    // keyboardInPointer = 0;                                                   io.hs:404
    // 
    // 0x0016  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0017  0x1F 0x2C       POPGLOBALB 0x2C
    PutStack(22, PopStack(&htype), htype);

    // }                                                                        io.hs:405
    // 
    // 0x0019  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // keyboardInPointer++;                                                     io.hs:408
    // 
iO_PushKey_0x001B:
    // 0x001B  0x53 0x2C       INCGLOBALB 0x2C
    htype = GetStackType(22);
    PutStack(22, GetStack(22)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // keyboardInPointer++;                                                     io.hs:408
    // 
    // 0x001D  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
}

void HRArray_Release_0x0024()
{
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // if (setSlots != 0)                                                       array.hs:44
    // 
    // 0x0001  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0003  0x2E 0x06       JZB 0x0009 (+6)
    if (PopStack() == 0) { goto hRArray_Release_0x0009; }

    // Memory.Free(setSlots);                                                   array.hs:46
    // 
    // 0x0005  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0007  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();

    // if (clearSlots != 0)                                                     array.hs:48
    // 
hRArray_Release_0x0009:
    // 0x0009  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x000B  0x2E 0x06       JZB 0x0011 (+6)
    if (PopStack() == 0) { goto hRArray_Release_0x0011; }

    // Memory.Free(clearSlots);                                                 array.hs:50
    // 
    // 0x000D  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x000F  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();

    // }                                                                        array.hs:52
    // 
hRArray_Release_0x0011:
    // 0x0011  0x4A            RET0
    PopBP();
    return;
}

void HRArray_Initialize_0x0023()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // setSlots = Memory.Allocate(8);                                           array.hs:22
    // 
    // 0x0001  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0003  0x2C 0x17       CALLB 0x17     // Memory.Allocate
    Memory_Allocate_0x0017();
    // 0x0005  0x1F 0x0A       POPGLOBALB 0x0A
    PutStack(5, PopStack(&htype), htype);

    // clearSlots = Memory.Allocate(8);                                         array.hs:23
    // 
    // 0x0007  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0009  0x2C 0x17       CALLB 0x17     // Memory.Allocate
    Memory_Allocate_0x0017();
    // 0x000B  0x1F 0x0C       POPGLOBALB 0x0C
    PutStack(6, PopStack(&htype), htype);

    // Memory.WriteByte(setSlots + 0, 0x01);                                    array.hs:25
    // 
    // 0x000D  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0010  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0011  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0012  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(setSlots + 1, 0x02);                                    array.hs:26
    // 
    // 0x0014  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0016  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0017  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0018  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001A  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(setSlots + 2, 0x04);                                    array.hs:27
    // 
    // 0x001C  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x001E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0020  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0021  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0023  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(setSlots + 3, 0x08);                                    array.hs:28
    // 
    // 0x0025  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0027  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0029  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002A  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x002C  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(setSlots + 4, 0x10);                                    array.hs:29
    // 
    // 0x002E  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0030  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0032  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0033  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x0035  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(setSlots + 5, 0x20);                                    array.hs:30
    // 
    // 0x0037  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0039  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x003B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003C  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x003E  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(setSlots + 6, 0x40);                                    array.hs:31
    // 
    // 0x0040  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0042  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0044  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0045  0x1A 0x40       PUSHIB 0x40
    PushStack(0x40, Type::tByte);
    // 0x0047  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(setSlots + 7, 0x80);                                    array.hs:32
    // 
    // 0x0049  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x004B  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x004D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004E  0x1A 0x80       PUSHIB 0x80
    PushStack(0x80, Type::tByte);
    // 0x0050  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 0, 0xFE);                                  array.hs:33
    // 
    // 0x0052  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x0054  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0055  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0056  0x1A 0xFE       PUSHIB 0xFE
    PushStack(0xFE, Type::tByte);
    // 0x0058  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 1, 0xFD);                                  array.hs:34
    // 
    // 0x005A  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x005C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x005D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005E  0x1A 0xFD       PUSHIB 0xFD
    PushStack(0xFD, Type::tByte);
    // 0x0060  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 2, 0xFB);                                  array.hs:35
    // 
    // 0x0062  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x0064  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0066  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0067  0x1A 0xFB       PUSHIB 0xFB
    PushStack(0xFB, Type::tByte);
    // 0x0069  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 3, 0xF7);                                  array.hs:36
    // 
    // 0x006B  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x006D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x006F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0070  0x1A 0xF7       PUSHIB 0xF7
    PushStack(0xF7, Type::tByte);
    // 0x0072  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 4, 0xEF);                                  array.hs:37
    // 
    // 0x0074  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x0076  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0078  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0079  0x1A 0xEF       PUSHIB 0xEF
    PushStack(0xEF, Type::tByte);
    // 0x007B  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 5, 0xDF);                                  array.hs:38
    // 
    // 0x007D  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x007F  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0081  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0082  0x1A 0xDF       PUSHIB 0xDF
    PushStack(0xDF, Type::tByte);
    // 0x0084  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 6, 0xBF);                                  array.hs:39
    // 
    // 0x0086  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x0088  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x008A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x008B  0x1A 0xBF       PUSHIB 0xBF
    PushStack(0xBF, Type::tByte);
    // 0x008D  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Memory.WriteByte(clearSlots + 7, 0x7F);                                  array.hs:40
    // 
    // 0x008F  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x0091  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0093  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0094  0x1A 0x7F       PUSHIB 0x7F
    PushStack(0x7F, Type::tByte);
    // 0x0096  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        array.hs:41
    // 
    // 0x0098  0x4A            RET0
    PopBP();
    return;
}

void HRArray_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint elementbytes;                                                       array.hs:55
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x30 0x1A       JB 0x001E (+26)
    goto hRArray_New_0x001E;

    // elementbytes = (count+7) >> 3;                                           array.hs:60
    // 
hRArray_New_0x0006:
    // 0x0006  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0008  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x000A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000B  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000D  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x000E  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x000F  0x30 0x1C       JB 0x002B (+28)
    goto hRArray_New_0x002B;

    // elementbytes = count;                                                    array.hs:65
    // 
hRArray_New_0x0011:
    // 0x0011  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0013  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x0014  0x30 0x17       JB 0x002B (+23)
    goto hRArray_New_0x002B;

    // elementbytes = count *2;                                                 array.hs:69
    // 
hRArray_New_0x0016:
    // 0x0016  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0018  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001A  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x001B  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);
    // 0x001C  0x30 0x0F       JB 0x002B (+15)
    goto hRArray_New_0x002B;
hRArray_New_0x001E:
    // 0x001E  0x68 0x01 0x06  JIXB [0x01..0x06] -0x001A

    switch(PopStack())
    {
        case 0x01: { goto hRArray_New_0x0011; }
        case 0x03: { goto hRArray_New_0x0011; }
        case 0x06: { goto hRArray_New_0x0006; }
    }
    // 0x0029  0x30 0xED       JB 0x0016 (-19)
    goto hRArray_New_0x0016;

    // uint this = GC.New(3 + elementbytes, Type.Array);                        array.hs:73
    // 
hRArray_New_0x002B:
    // 0x002B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002C  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x002E  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0030  0x1A 0x12       PUSHIB 0x12
    PushStack(0x12, Type::tByte);
    // 0x0032  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0034  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // WriteWord(this+aiCount, count);                                          array.hs:74
    // 
    // 0x0035  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0036  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0038  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0039  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x003B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteByte(this+aiType, byte(htype));                                     array.hs:75
    // 
    // 0x003D  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003E  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0040  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0041  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0043  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0045  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // uint address = this + aiElements;                                        array.hs:78
    // 
    // 0x0047  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0048  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0049  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x004B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004C  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // for (uint i = 0; i < elementbytes; i++)                                  array.hs:79
    // 
    // 0x004E  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRArray_New_0x004F:
    // 0x004F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0051  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0052  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0053  0x2E 0x0D       JZB 0x0060 (+13)
    if (PopStack() == 0) { goto hRArray_New_0x0060; }

    // WriteByte(address, 0);                                                   array.hs:81
    // 
    // 0x0055  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0057  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0058  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // address++;                                                               array.hs:82
    // 
    // 0x005A  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // address++;                                                               array.hs:82
    // 
    // 0x005C  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x005E  0x30 0xF1       JB 0x004F (-15)
    goto hRArray_New_0x004F;
hRArray_New_0x0060:
    // 0x0060  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return this;                                                             array.hs:84
    // 
    // 0x0062  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0063  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRArray_GetItem_0x0028()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint elements = ReadWord(this+aiCount);                                  array.hs:105
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // etype    = Type(ReadByte(this+aiType));                                  array.hs:106
    // 
    // 0x000A  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0011  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // uint address = this + aiElements;                                        array.hs:114
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0016  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint value;                                                              array.hs:115
    // 
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint value;                                                              array.hs:115
    // 
    // 0x001B  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x001D  0x30 0x69       JB 0x0086 (+105)
    goto hRArray_GetItem_0x0086;

    // uint offset = address + (index >> 3);                                    array.hs:120
    // 
hRArray_GetItem_0x001F:
    // 0x001F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0020  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0021  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0023  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0025  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0026  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0027  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // byte slotIndex = byte(index & 0x07);                                     array.hs:121
    // 
    // 0x0029  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x002C  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x002E  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x002F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0031  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // byte b = ReadByte(offset);                                               array.hs:122
    // 
    // 0x0033  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0034  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0036  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0038  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // byte mask = Memory.ReadByte(setSlots + slotIndex);                       array.hs:123
    // 
    // 0x003A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003B  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x003D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x003F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0040  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0042  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // value = b & mask;                                                        array.hs:124
    // 
    // 0x0044  0x56 0x0A 0x0C  PUSHLOCALBB 0x0C0A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+6, &htype), htype);
    // 0x0047  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0048  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (value != 0)                                                          array.hs:125
    // 
    // 0x004A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x004C  0x2E 0x05       JZB 0x0051 (+5)
    if (PopStack() == 0) { goto hRArray_GetItem_0x0051; }

    // value = 1;                                                               array.hs:127
    // 
    // 0x004E  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x004F  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // }                                                                        array.hs:129
    // 
hRArray_GetItem_0x0051:
    // 0x0051  0x28 0x08       DECSP 0x08
    DecSP(4);
    // 0x0053  0x30 0x40       JB 0x0093 (+64)
    goto hRArray_GetItem_0x0093;

    // value = ReadByte(address + index);                                       array.hs:133
    // 
hRArray_GetItem_0x0055:
    // 0x0055  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0056  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0058  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0059  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x005B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);
    // 0x005D  0x30 0x36       JB 0x0093 (+54)
    goto hRArray_GetItem_0x0093;

    // uint offset = address + index << 1;                                      array.hs:137
    // 
hRArray_GetItem_0x005F:
    // 0x005F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0060  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0061  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0063  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0064  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0065  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0066  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // byte lsb = ReadByte(offset);                                             array.hs:138
    // 
    // 0x0068  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0069  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x006B  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x006D  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // byte msb = ReadByte(offset+1);                                           array.hs:139
    // 
    // 0x006F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0070  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0072  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0073  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0074  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0076  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // value = (msb << 8) | lsb;                                                array.hs:140
    // 
    // 0x0078  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x007A  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x007C  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x007D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x007F  0x0D            BITOR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] | valuestack[sp]);
    // 0x0080  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // }                                                                        array.hs:141
    // 
    // 0x0082  0x28 0x06       DECSP 0x06
    DecSP(3);
    // 0x0084  0x30 0x0F       JB 0x0093 (+15)
    goto hRArray_GetItem_0x0093;
hRArray_GetItem_0x0086:
    // 0x0086  0x68 0x01 0x06  JIXB [0x01..0x06] -0x0069

    switch(PopStack())
    {
        case 0x01: { goto hRArray_GetItem_0x0055; }
        case 0x03: { goto hRArray_GetItem_0x0055; }
        case 0x06: { goto hRArray_GetItem_0x001F; }
    }
    // 0x0091  0x30 0xCE       JB 0x005F (-50)
    goto hRArray_GetItem_0x005F;

    // return value;                                                            array.hs:143
    // 
hRArray_GetItem_0x0093:
    // 0x0093  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0095  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRArray_SetItem_0x0029()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint elements = ReadWord(this+aiCount);                                  array.hs:148
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Type etype    = Type(ReadByte(this+aiType));                             array.hs:149
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000D  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = this + aiElements;                                        array.hs:157
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0016  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // switch (etype)                                                           array.hs:158
    // 
    // 0x001B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x001C  0x33 0x80 0x00  JW 0x009C (+128)
    goto hRArray_SetItem_0x009C;

    // uint offset = address + (index >> 3);                                    array.hs:162
    // 
hRArray_SetItem_0x001F:
    // 0x001F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0020  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0023  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0025  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0026  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0027  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // byte slotIndex = byte(index & 0x07);                                     array.hs:163
    // 
    // 0x0029  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x002C  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x002E  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x002F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0031  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // byte b = ReadByte(offset);                                               array.hs:164
    // 
    // 0x0033  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0034  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0036  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0038  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (value == 0)                                                          array.hs:165
    // 
    // 0x003A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x003C  0x2F 0x16       JNZB 0x0052 (+22)
    if (PopStack() != 0) { goto hRArray_SetItem_0x0052; }

    // byte mask = Memory.ReadByte(clearSlots+slotIndex);                       array.hs:168
    // 
    // 0x003E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003F  0x20 0x0C       PUSHGLOBALB 0x0C
    PushStack(GetStack(6, &htype), htype);
    // 0x0041  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0043  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0044  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0046  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // b = b & mask;                                                            array.hs:169
    // 
    // 0x0048  0x56 0x0A 0x0C  PUSHLOCALBB 0x0C0A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+6, &htype), htype);
    // 0x004B  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x004C  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // }                                                                        array.hs:170
    // 
    // 0x004E  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0050  0x30 0x14       JB 0x0064 (+20)
    goto hRArray_SetItem_0x0064;

    // byte mask = Memory.ReadByte(setSlots+slotIndex);                         array.hs:174
    // 
hRArray_SetItem_0x0052:
    // 0x0052  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0053  0x20 0x0A       PUSHGLOBALB 0x0A
    PushStack(GetStack(5, &htype), htype);
    // 0x0055  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0057  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0058  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x005A  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // b = b | mask;                                                            array.hs:175
    // 
    // 0x005C  0x56 0x0A 0x0C  PUSHLOCALBB 0x0C0A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+6, &htype), htype);
    // 0x005F  0x0D            BITOR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] | valuestack[sp]);
    // 0x0060  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // }                                                                        array.hs:176
    // 
    // 0x0062  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        array.hs:176
    // 
hRArray_SetItem_0x0064:
    // 0x0064  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x0067  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        array.hs:178
    // 
    // 0x0069  0x2A 0x12       RETB 0x12
    DecSP(9); PopBP();
    return;

    // WriteByte(address + index,   byte(value & 0xFF));                        array.hs:182
    // 
hRArray_SetItem_0x006B:
    // 0x006B  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x006E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x006F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0071  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0073  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0074  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0076  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];
    // 0x0078  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;

    // uint offset = address + index << 1;                                      array.hs:186
    // 
hRArray_SetItem_0x007A:
    // 0x007A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x007B  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x007E  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x007F  0x0F            BITSHL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] << valuestack[sp]);
    // 0x0080  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0081  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // WriteByte(offset,   byte(value & 0xFF));                                 array.hs:187
    // 
    // 0x0083  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0086  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0088  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0089  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x008B  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteByte(offset+1, byte(value >> 8));                                   array.hs:188
    // 
    // 0x008D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x008F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0090  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0091  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0093  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0095  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0096  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0098  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        array.hs:189
    // 
    // 0x009A  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;
hRArray_SetItem_0x009C:
    // 0x009C  0x68 0x01 0x06  JIXB [0x01..0x06] -0x0080

    switch(PopStack())
    {
        case 0x01: { goto hRArray_SetItem_0x006B; }
        case 0x03: { goto hRArray_SetItem_0x006B; }
        case 0x06: { goto hRArray_SetItem_0x001F; }
    }
    // 0x00A7  0x30 0xD3       JB 0x007A (-45)
    goto hRArray_SetItem_0x007A;
}

void HRArray_GetCount_0x0027()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return ReadWord(this+aiCount);                                           array.hs:100
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0008  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void Runtime_ErrorDump_0x0004()
{
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // IO.Write('F');IO.Write('U');IO.Write('C');IO.Write('K');IO.Write('!');
    // 
    // 0x0001  0x1A 0x46       PUSHIB 0x46
    PushStack(0x46, Type::tByte);
    // 0x0003  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x0005  0x1A 0x55       PUSHIB 0x55
    PushStack(0x55, Type::tByte);
    // 0x0007  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x0009  0x1A 0x43       PUSHIB 0x43
    PushStack(0x43, Type::tByte);
    // 0x000B  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x000D  0x1A 0x4B       PUSHIB 0x4B
    PushStack(0x4B, Type::tByte);
    // 0x000F  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();
    // 0x0011  0x1A 0x21       PUSHIB 0x21
    PushStack(0x21, Type::tByte);
    // 0x0013  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();

    // IO.WriteUInt(number);                                                    runtime.hs:147
    // 
    // 0x0015  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0017  0x2C 0xDB       CALLB 0xDB     // IO.WriteUInt
    IO_WriteUInt_0x00DB();

    // }                                                                        runtime.hs:148
    // 
    // 0x0019  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void Types_IsReferenceType_0x001C()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return (byte(htype) >= 0x0D);                                            types.hs:28
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0005  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0007  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0008  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void GC_AddReference_0x001F()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte referenceCount = ReadByte(address+1);                               gc.hs:52
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // referenceCount++;                                                        gc.hs:61
    // 
    // 0x0009  0x22 0x00       INCLOCALB 0x00 (BP+0)
    htype = GetStackType(bp+0);
    PutStack(bp+0, GetStack(bp+0)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // referenceCount++;                                                        gc.hs:61
    // 
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0010  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        gc.hs:63
    // 
    // 0x0012  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;
}

void GC_Release_0x0020()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte referenceCount = ReadByte(address+1);                               gc.hs:66
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // referenceCount--;                                                        gc.hs:75
    // 
    // 0x0009  0x23 0x00       DECLOCALB 0x00 (BP+0)
    PutStack(bp+0, GetStack(bp+0)-1);

    // referenceCount--;                                                        gc.hs:75
    // 
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0010  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // Type htype = Type(ReadByte(address));                                    gc.hs:77
    // 
    // 0x0012  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0013  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0015  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0017  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (referenceCount == 0)                                                 gc.hs:78
    // 
    // 0x0018  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0019  0x2F 0x46       JNZB 0x005F (+70)
    if (PopStack() != 0) { goto gC_Release_0x005F; }

    // switch (htype)                                                           gc.hs:80
    // 
    // 0x001B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x001C  0x30 0x30       JB 0x004C (+48)
    goto gC_Release_0x004C;

    // Memory.Free(address); // easy : nothing to walk                          gc.hs:86
    // 
gC_Release_0x001E:
    // 0x001E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0020  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();
    // 0x0022  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // HRList.Clear(address);                                                   gc.hs:90
    // 
gC_Release_0x0024:
    // 0x0024  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0026  0x2C 0x43       CALLB 0x43     // HRList.Clear
    HRList_Clear_0x0043();

    // Memory.Free(address);                                                    gc.hs:91
    // 
    // 0x0028  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002A  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();
    // 0x002C  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // HRDictionary.Clear(address);                                             gc.hs:95
    // 
gC_Release_0x002E:
    // 0x002E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0030  0x2C 0x2F       CALLB 0x2F     // HRDictionary.Clear
    HRDictionary_Clear_0x002F();

    // Memory.Free(address);                                                    gc.hs:96
    // 
    // 0x0032  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0034  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();
    // 0x0036  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // HRPair.Clear(address);                                                   gc.hs:100
    // 
gC_Release_0x0038:
    // 0x0038  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x003A  0x2C 0x56       CALLB 0x56     // HRPair.Clear
    HRPair_Clear_0x0056();

    // Memory.Free(address);                                                    gc.hs:101
    // 
    // 0x003C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x003E  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();
    // 0x0040  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // HRVariant.Clear(address);                                                gc.hs:105
    // 
gC_Release_0x0042:
    // 0x0042  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0044  0x2C 0x7D       CALLB 0x7D     // HRVariant.Clear
    HRVariant_Clear_0x007D();

    // Memory.Free(address);                                                    gc.hs:106
    // 
    // 0x0046  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0048  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();
    // 0x004A  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
gC_Release_0x004C:
    // 0x004C  0x68 0x0E 0x19  JIXB [0x0E..0x19] -0x0030

    switch(PopStack())
    {
        case 0x0E: { goto gC_Release_0x001E; }
        case 0x0F: { goto gC_Release_0x001E; }
        case 0x10: { goto gC_Release_0x0038; }
        case 0x12: { goto gC_Release_0x001E; }
        case 0x13: { goto gC_Release_0x002E; }
        case 0x14: { goto gC_Release_0x0042; }
        case 0x19: { goto gC_Release_0x0024; }
    }
    // 0x005D  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // }                                                                        gc.hs:118
    // 
gC_Release_0x005F:
    // 0x005F  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void GC_Clone_0x001E()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type htype = Type(ReadByte(original));                                   gc.hs:12
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // switch (htype)                                                           gc.hs:13
    // 
    // 0x0007  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0008  0x30 0x26       JB 0x002E (+38)
    goto gC_Clone_0x002E;

    // return HRLong.Clone(original);                                           gc.hs:17
    // 
gC_Clone_0x000A:
    // 0x000A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000C  0x2C 0x50       CALLB 0x50     // HRLong.Clone
    HRLong_Clone_0x0050();
    // 0x000E  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return HRString.Clone(original);                                         gc.hs:21
    // 
gC_Clone_0x0010:
    // 0x0010  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0012  0x2C 0x5D       CALLB 0x5D     // HRString.Clone
    HRString_Clone_0x005D();
    // 0x0014  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return HRList.Clone(original);                                           gc.hs:25
    // 
gC_Clone_0x0016:
    // 0x0016  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0018  0x2C 0x40       CALLB 0x40     // HRList.Clone
    HRList_Clone_0x0040();
    // 0x001A  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return HRDictionary.Clone(original);                                     gc.hs:29
    // 
gC_Clone_0x001C:
    // 0x001C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001E  0x2C 0x2E       CALLB 0x2E     // HRDictionary.Clone
    HRDictionary_Clone_0x002E();
    // 0x0020  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return HRPair.Clone(original);                                           gc.hs:33
    // 
gC_Clone_0x0022:
    // 0x0022  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0024  0x2C 0x55       CALLB 0x55     // HRPair.Clone
    HRPair_Clone_0x0055();
    // 0x0026  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return HRVariant.Clone(original);                                        gc.hs:37
    // 
gC_Clone_0x0028:
    // 0x0028  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002A  0x2C 0x7C       CALLB 0x7C     // HRVariant.Clone
    HRVariant_Clone_0x007C();
    // 0x002C  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
gC_Clone_0x002E:
    // 0x002E  0x68 0x0E 0x19  JIXB [0x0E..0x19] -0x0026

    switch(PopStack())
    {
        case 0x0E: { goto gC_Clone_0x000A; }
        case 0x0F: { goto gC_Clone_0x0010; }
        case 0x10: { goto gC_Clone_0x0022; }
        case 0x13: { goto gC_Clone_0x001C; }
        case 0x14: { goto gC_Clone_0x0028; }
        case 0x19: { goto gC_Clone_0x0016; }
    }

    // return 0;                                                                gc.hs:48
    // 
    // 0x003F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0040  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void GC_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = Allocate(size+2);                                         gc.hs:5
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x2C 0x17       CALLB 0x17     // Memory.Allocate
    Memory_Allocate_0x0017();
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteByte(address, byte(htype));                                         gc.hs:6
    // 
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x000F  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteByte(address+1, 1); // reference count of 1 to start                gc.hs:7
    // 
    // 0x0011  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0012  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0015  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // return address;                                                          gc.hs:8
    // 
    // 0x0017  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0018  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_GetLength_0x0060()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return ReadWord(this+2);                                                 string.hs:65
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0008  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HRString_GetChar_0x0061()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:69
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // return char(ReadByte(this+4+index));                                     string.hs:77
    // 
    // 0x0007  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0009  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x000B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0011  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_NewFromConstant0()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(2 + length, Type.String);                          string.hs:23
    // 
    // 0x0002  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0004  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0009  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x000B  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(address+2, length);                                            string.hs:24
    // 
    // 0x000C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0012  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // for (uint i = 0; i < length; i++)                                        string.hs:25
    // 
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_NewFromConstant0_0x0015:
    // 0x0015  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0016  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0018  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0019  0x2E 0x14       JZB 0x002D (+20)
    if (PopStack() == 0) { goto hRString_NewFromConstant0_0x002D; }

    // WriteByte(address+4+i, ReadByte(location+i));                            string.hs:27
    // 
    // 0x001B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x001E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0020  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0021  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0023  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0024  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0025  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0027  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        string.hs:28
    // 
    // 0x0029  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x002B  0x30 0xEA       JB 0x0015 (-22)
    goto hRString_NewFromConstant0_0x0015;
hRString_NewFromConstant0_0x002D:
    // 0x002D  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return address;                                                          string.hs:29
    // 
    // 0x002F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0030  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_NewFromConstant1()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte lsb = byte(doubleChar & 0xFF);                                      string.hs:33
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0006  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0007  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // byte msb = byte(doubleChar >> 8);                                        string.hs:34
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x000F  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0010  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint address = GC.New((msb == 0) ? 3 : 4, Type.String);                  string.hs:35
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0015  0x2F 0x06       JNZB 0x001B (+6)
    if (PopStack() != 0) { goto hRString_NewFromConstant1_0x001B; }
    // 0x0017  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0019  0x30 0x04       JB 0x001D (+4)
    goto hRString_NewFromConstant1_0x001D;
hRString_NewFromConstant1_0x001B:
    // 0x001B  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
hRString_NewFromConstant1_0x001D:
    // 0x001D  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x001F  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0021  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // WriteWord(address+siLength, (msb == 0) ? 1 : 2); // length               string.hs:36
    // 
    // 0x0023  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0025  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0027  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0028  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0029  0x2F 0x05       JNZB 0x002E (+5)
    if (PopStack() != 0) { goto hRString_NewFromConstant1_0x002E; }
    // 0x002B  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x002C  0x30 0x04       JB 0x0030 (+4)
    goto hRString_NewFromConstant1_0x0030;
hRString_NewFromConstant1_0x002E:
    // 0x002E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
hRString_NewFromConstant1_0x0030:
    // 0x0030  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteByte(address+siChars, lsb);                                         string.hs:37
    // 
    // 0x0032  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0034  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0036  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0037  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0038  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // if (msb != 0)                                                            string.hs:38
    // 
    // 0x003A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003B  0x2E 0x0A       JZB 0x0045 (+10)
    if (PopStack() == 0) { goto hRString_NewFromConstant1_0x0045; }

    // WriteByte(address+5, msb);                                               string.hs:40
    // 
    // 0x003D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x003F  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0041  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0042  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0043  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // return address;                                                          string.hs:42
    // 
hRString_NewFromConstant1_0x0045:
    // 0x0045  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0047  0x2B 0x08       RETRETB 0x08
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 4;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(2, Type.String);                                   string.hs:17
    // 
    // 0x0002  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0004  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(address+2, 0); // length=0                                     string.hs:18
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          string.hs:19
    // 
    // 0x0010  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0011  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HRString_InsertChar_0x0065()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:124
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint result = GC.New(2 + length + 1, Type.String);                       string.hs:125
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x000D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000E  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0010  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint j = 0;                                                              string.hs:126
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint j = 0;                                                              string.hs:126
    // 
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_InsertChar_0x0015:
    // 0x0015  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0017  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0018  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0019  0x2E 0x2E       JZB 0x0047 (+46)
    if (PopStack() == 0) { goto hRString_InsertChar_0x0047; }

    // if (i == index)                                                          string.hs:129
    // 
    // 0x001B  0x56 0x06 0xFC  PUSHLOCALBB 0xFC06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x001E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x001F  0x2E 0x0F       JZB 0x002E (+15)
    if (PopStack() == 0) { goto hRString_InsertChar_0x002E; }

    // WriteByte(result+4+j, byte(ch));                                         string.hs:131
    // 
    // 0x0021  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0022  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0024  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0025  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0027  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0028  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002A  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // j++;                                                                     string.hs:132
    // 
    // 0x002C  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // j++;                                                                     string.hs:132
    // 
hRString_InsertChar_0x002E:
    // 0x002E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x002F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0031  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0032  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0034  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0035  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0037  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0039  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x003C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003D  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x003F  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // j++;                                                                     string.hs:135
    // 
    // 0x0041  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // j++;                                                                     string.hs:135
    // 
    // 0x0043  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0045  0x30 0xD0       JB 0x0015 (-48)
    goto hRString_InsertChar_0x0015;
hRString_InsertChar_0x0047:
    // 0x0047  0x28 0x02       DECSP 0x02
    DecSP(1);

    // if ((length == 0) || (index >= length))                                  string.hs:137
    // 
    // 0x0049  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x004A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x004C  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x004E  0x2F 0x07       JNZB 0x0055 (+7)
    if (PopStack() != 0) { goto hRString_InsertChar_0x0055; }
    // 0x0050  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0052  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0053  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0054  0x0B            BOOLOR
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next || top), Type::tBool);
hRString_InsertChar_0x0055:
    // 0x0055  0x2E 0x0D       JZB 0x0062 (+13)
    if (PopStack() == 0) { goto hRString_InsertChar_0x0062; }

    // WriteByte(result+4+j, byte(ch));                                         string.hs:139
    // 
    // 0x0057  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0058  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x005A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x005D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0060  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteWord(result+2, length+1);                                           string.hs:141
    // 
hRString_InsertChar_0x0062:
    // 0x0062  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0063  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0065  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0066  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0067  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0068  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0069  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return result;                                                           string.hs:142
    // 
    // 0x006B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x006C  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_EndsWith_0x0072()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:368
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (length == 0)                                                         string.hs:369
    // 
    // 0x0007  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0008  0x2F 0x05       JNZB 0x000D (+5)
    if (PopStack() != 0) { goto hRString_EndsWith_0x000D; }

    // return false;                                                            string.hs:371
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return (char(ReadByte(this+4+length-1)) == with);                        string.hs:373
    // 
hRString_EndsWith_0x000D:
    // 0x000D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0011  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0012  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0015  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0016  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0018  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001A  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x001B  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_EndsWith_0x0073()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length0 = GetLength(this);                                          string.hs:377
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length1 = GetLength(with);                                          string.hs:378
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000A  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x000C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (length0 < length1)                                                   string.hs:379
    // 
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x000F  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0010  0x2E 0x05       JZB 0x0015 (+5)
    if (PopStack() == 0) { goto hRString_EndsWith_0x0015; }

    // return false;                                                            string.hs:381
    // 
    // 0x0012  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0013  0x2B 0x08       RETRETB 0x08
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 4;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // if (length1 == 0)                                                        string.hs:383
    // 
hRString_EndsWith_0x0015:
    // 0x0015  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0016  0x2F 0x05       JNZB 0x001B (+5)
    if (PopStack() != 0) { goto hRString_EndsWith_0x001B; }

    // return true; // EndsWith(xxx, "") == true?                               string.hs:385
    // 
    // 0x0018  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0019  0x2B 0x08       RETRETB 0x08
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 4;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // uint i = 1;                                                              string.hs:387
    // 
hRString_EndsWith_0x001B:
    // 0x001B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x001D  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // char w = char(ReadByte(with+4+length1-i));                               string.hs:390
    // 
hRString_EndsWith_0x001F:
    // 0x001F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0020  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0022  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0024  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0025  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0026  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0027  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0029  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x002A  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x002C  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // char t = char(ReadByte(this+4+length0-i));                               string.hs:391
    // 
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0031  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0033  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0034  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0035  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0036  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0038  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0039  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x003B  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (w != t) { return false; }                                            string.hs:392
    // 
    // 0x003D  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0040  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0041  0x2E 0x05       JZB 0x0046 (+5)
    if (PopStack() == 0) { goto hRString_EndsWith_0x0046; }
    // 0x0043  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0044  0x2B 0x0E       RETRETB 0x0E
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 7;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // if (i == length1)                                                        string.hs:393
    // 
hRString_EndsWith_0x0046:
    // 0x0046  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0048  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0049  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x004A  0x2E 0x06       JZB 0x0050 (+6)
    if (PopStack() == 0) { goto hRString_EndsWith_0x0050; }

    // break;                                                                   string.hs:395
    // 
    // 0x004C  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x004E  0x30 0x08       JB 0x0056 (+8)
    goto hRString_EndsWith_0x0056;

    // i++;                                                                     string.hs:397
    // 
hRString_EndsWith_0x0050:
    // 0x0050  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // i++;                                                                     string.hs:397
    // 
    // 0x0052  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0054  0x30 0xCB       JB 0x001F (-53)
    goto hRString_EndsWith_0x001F;

    // return true;                                                             string.hs:399
    // 
hRString_EndsWith_0x0056:
    // 0x0056  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0057  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Compare_0x0074()
{
    UInt top   = 0;
    UInt next  = 0;
    Int topi   = 0;
    Int nexti  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x03       ENTERB 0x03
    PushBP();
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);

    // uint i;                                                                  string.hs:403
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint rl = GetLength(right);                                              string.hs:406
    // 
    // 0x0008  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0009  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000B  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x000D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (i >= ll)                                                             string.hs:409
    // 
hRString_Compare_0x000F:
    // 0x000F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0010  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0012  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0013  0x2E 0x04       JZB 0x0017 (+4)
    if (PopStack() == 0) { goto hRString_Compare_0x0017; }

    // break;                                                                   string.hs:411
    // 
    // 0x0015  0x30 0x25       JB 0x003A (+37)
    goto hRString_Compare_0x003A;

    // if (i >= rl)                                                             string.hs:413
    // 
hRString_Compare_0x0017:
    // 0x0017  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0018  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x001A  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x001B  0x2E 0x04       JZB 0x001F (+4)
    if (PopStack() == 0) { goto hRString_Compare_0x001F; }

    // break;                                                                   string.hs:415
    // 
    // 0x001D  0x30 0x1D       JB 0x003A (+29)
    goto hRString_Compare_0x003A;

    // if (ReadByte(left+siChars+i) != ReadByte(right+siChars+i))               string.hs:417
    // 
hRString_Compare_0x001F:
    // 0x001F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0021  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0023  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0024  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0025  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0026  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0028  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002A  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x002C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002F  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0031  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0032  0x2E 0x04       JZB 0x0036 (+4)
    if (PopStack() == 0) { goto hRString_Compare_0x0036; }

    // break;                                                                   string.hs:419
    // 
    // 0x0034  0x30 0x06       JB 0x003A (+6)
    goto hRString_Compare_0x003A;

    // i++;                                                                     string.hs:421
    // 
hRString_Compare_0x0036:
    // 0x0036  0x22 0x00       INCLOCALB 0x00 (BP+0)
    htype = GetStackType(bp+0);
    PutStack(bp+0, GetStack(bp+0)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // i++;                                                                     string.hs:421
    // 
    // 0x0038  0x30 0xD7       JB 0x000F (-41)
    goto hRString_Compare_0x000F;

    // i++;                                                                     string.hs:421
    // 
hRString_Compare_0x003A:
    // 0x003A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x003C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003D  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x003E  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0040  0x2E 0x07       JZB 0x0047 (+7)
    if (PopStack() == 0) { goto hRString_Compare_0x0047; }
    // 0x0042  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0044  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0045  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0046  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRString_Compare_0x0047:
    // 0x0047  0x2E 0x04       JZB 0x004B (+4)
    if (PopStack() == 0) { goto hRString_Compare_0x004B; }

    // break; // " == "                                                         string.hs:427
    // 
    // 0x0049  0x30 0x46       JB 0x008F (+70)
    goto hRString_Compare_0x008F;

    // if ((i < ll) && (i < rl))                                                string.hs:431
    // 
hRString_Compare_0x004B:
    // 0x004B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x004C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x004E  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x004F  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0051  0x2E 0x07       JZB 0x0058 (+7)
    if (PopStack() == 0) { goto hRString_Compare_0x0058; }
    // 0x0053  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0054  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0056  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0057  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRString_Compare_0x0058:
    // 0x0058  0x2E 0x21       JZB 0x0079 (+33)
    if (PopStack() == 0) { goto hRString_Compare_0x0079; }

    // if (int(ReadByte(left+siChars+i)) > int(ReadByte(right+siChars+i)))
    // 
    // 0x005A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x005C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x005E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0060  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0061  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0063  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0065  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0067  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0068  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0069  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x006A  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x006C  0x16            GTI
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (Int(valuestack[sp-1]) > Int(valuestack[sp]));
    // 0x006D  0x2E 0x06       JZB 0x0073 (+6)
    if (PopStack() == 0) { goto hRString_Compare_0x0073; }

    // result = 1;                                                              string.hs:435
    // 
    // 0x006F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0070  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // }                                                                        string.hs:436
    // 
    // 0x0071  0x30 0x1E       JB 0x008F (+30)
    goto hRString_Compare_0x008F;

    // result = -1;                                                             string.hs:439
    // 
hRString_Compare_0x0073:
    // 0x0073  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0074  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0075  0x12            SUBI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) - Int(valuestack[sp]));
    // 0x0076  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // break;                                                                   string.hs:441
    // 
    // 0x0077  0x30 0x18       JB 0x008F (+24)
    goto hRString_Compare_0x008F;

    // if (i >= ll)                                                             string.hs:443
    // 
hRString_Compare_0x0079:
    // 0x0079  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x007A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x007C  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x007D  0x2E 0x10       JZB 0x008D (+16)
    if (PopStack() == 0) { goto hRString_Compare_0x008D; }

    // if (i >= rl)                                                             string.hs:445
    // 
    // 0x007F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0080  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0082  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0083  0x2E 0x04       JZB 0x0087 (+4)
    if (PopStack() == 0) { goto hRString_Compare_0x0087; }

    // break; // they were equal to this point                                  string.hs:447
    // 
    // 0x0085  0x30 0x0A       JB 0x008F (+10)
    goto hRString_Compare_0x008F;

    // result = -1;                                                             string.hs:450
    // 
hRString_Compare_0x0087:
    // 0x0087  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0088  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0089  0x12            SUBI
    sp--; typestack[sp-1] = Type::tInt;
    valuestack[sp-1] = UInt(Int(valuestack[sp-1]) - Int(valuestack[sp]));
    // 0x008A  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // break;                                                                   string.hs:451
    // 
    // 0x008B  0x30 0x04       JB 0x008F (+4)
    goto hRString_Compare_0x008F;

    // result = 1;                                                              string.hs:453
    // 
hRString_Compare_0x008D:
    // 0x008D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x008E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // break;                                                                   string.hs:454
    // 
hRString_Compare_0x008F:
    // 0x008F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0090  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Replace_0x0067()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x02       ENTERB 0x02
    PushBP();
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);

    // uint result;                                                             string.hs:155
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (patternLength == 0)                                                  string.hs:157
    // 
    // 0x0007  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0008  0x2F 0x0B       JNZB 0x0013 (+11)
    if (PopStack() != 0) { goto hRString_Replace_0x0013; }

    // result = clone(this, 0);                                                 string.hs:159
    // 
    // 0x000A  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000D  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x000F  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // return result;                                                           string.hs:160
    // 
    // 0x0010  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0011  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // uint originalLength = GetLength(this);                                   string.hs:162
    // 
hRString_Replace_0x0013:
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0016  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint replaceLength  = GetLength(replace);                                string.hs:163
    // 
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001D  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x001F  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (replaceLength <= patternLength)                                      string.hs:164
    // 
    // 0x0021  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0023  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0024  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x0025  0x2E 0x0A       JZB 0x002F (+10)
    if (PopStack() == 0) { goto hRString_Replace_0x002F; }

    // result = clone(this, 0);                                                 string.hs:166
    // 
    // 0x0027  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0029  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002A  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x002C  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // }                                                                        string.hs:167
    // 
    // 0x002D  0x30 0x0D       JB 0x003A (+13)
    goto hRString_Replace_0x003A;

    // result = clone(this, (replaceLength-patternLength) * originalLength); // add maximum possible delta
    // 
hRString_Replace_0x002F:
    // 0x002F  0x56 0xFA 0x06  PUSHLOCALBB 0x06FA
    PushStack(GetStack(bp-3, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0032  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0033  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0034  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0036  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0037  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x0039  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint i;                                                                  string.hs:172
    // 
hRString_Replace_0x003A:
    // 0x003A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint i;                                                                  string.hs:172
    // 
    // 0x003B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint i;                                                                  string.hs:172
    // 
hRString_Replace_0x003C:
    // 0x003C  0x56 0x08 0x04  PUSHLOCALBB 0x0408
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x003F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0040  0x2E 0x05       JZB 0x0045 (+5)
    if (PopStack() == 0) { goto hRString_Replace_0x0045; }
    // 0x0042  0x33 0x85 0x00  JW 0x00C7 (+133)
    goto hRString_Replace_0x00C7;

    // bool match = false;                                                      string.hs:177
    // 
hRString_Replace_0x0045:
    // 0x0045  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // bool match = false;                                                      string.hs:177
    // 
    // 0x0046  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0048  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0049  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x004C  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x004D  0x2E 0x33       JZB 0x0080 (+51)
    if (PopStack() == 0) { goto hRString_Replace_0x0080; }

    // match = true;                                                            string.hs:181
    // 
    // 0x004F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0050  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // for (uint n=0; n < patternLength; n++)                                   string.hs:182
    // 
    // 0x0052  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_Replace_0x0053:
    // 0x0053  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0055  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0056  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0057  0x2E 0x27       JZB 0x007E (+39)
    if (PopStack() == 0) { goto hRString_Replace_0x007E; }

    // if (ReadByte(this+4+i+n) != ReadByte(pattern+4+n))                       string.hs:184
    // 
    // 0x0059  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x005B  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x005D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0060  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0061  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0063  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0064  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0066  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0068  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x006A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x006B  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x006D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x006E  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0070  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0071  0x2E 0x09       JZB 0x007A (+9)
    if (PopStack() == 0) { goto hRString_Replace_0x007A; }

    // match = false;                                                           string.hs:186
    // 
    // 0x0073  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0074  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // break;                                                                   string.hs:187
    // 
    // 0x0076  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0078  0x30 0x08       JB 0x0080 (+8)
    goto hRString_Replace_0x0080;

    // }                                                                        string.hs:189
    // 
hRString_Replace_0x007A:
    // 0x007A  0x22 0x0E       INCLOCALB 0x0E (BP+14)
    htype = GetStackType(bp+7);
    PutStack(bp+7, GetStack(bp+7)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x007C  0x30 0xD7       JB 0x0053 (-41)
    goto hRString_Replace_0x0053;
hRString_Replace_0x007E:
    // 0x007E  0x28 0x02       DECSP 0x02
    DecSP(1);

    // if (match)                                                               string.hs:191
    // 
hRString_Replace_0x0080:
    // 0x0080  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0082  0x2E 0x29       JZB 0x00AB (+41)
    if (PopStack() == 0) { goto hRString_Replace_0x00AB; }

    // i = i + patternLength;                                                   string.hs:193
    // 
    // 0x0084  0x3F 0x08 0x02  INCLOCALBB 0x0208
    PutStack(bp+4, GetStack(bp+4) + GetStack(bp+1));

    // i = i + patternLength;                                                   string.hs:193
    // 
    // 0x0087  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_Replace_0x0088:
    // 0x0088  0x56 0x0E 0x06  PUSHLOCALBB 0x060E
    PushStack(GetStack(bp+7, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x008B  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x008C  0x2E 0x1B       JZB 0x00A7 (+27)
    if (PopStack() == 0) { goto hRString_Replace_0x00A7; }

    // WriteByte(result+4+j, ReadByte(replace+4+n));                            string.hs:196
    // 
    // 0x008E  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x008F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0091  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0092  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0094  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0095  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0097  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0099  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009A  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x009C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009D  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x009F  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // j++;                                                                     string.hs:197
    // 
    // 0x00A1  0x22 0x0A       INCLOCALB 0x0A (BP+10)
    htype = GetStackType(bp+5);
    PutStack(bp+5, GetStack(bp+5)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // j++;                                                                     string.hs:197
    // 
    // 0x00A3  0x22 0x0E       INCLOCALB 0x0E (BP+14)
    htype = GetStackType(bp+7);
    PutStack(bp+7, GetStack(bp+7)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x00A5  0x30 0xE3       JB 0x0088 (-29)
    goto hRString_Replace_0x0088;
hRString_Replace_0x00A7:
    // 0x00A7  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        string.hs:199
    // 
    // 0x00A9  0x30 0x19       JB 0x00C2 (+25)
    goto hRString_Replace_0x00C2;

    // WriteByte(result+4+j, ReadByte(this+4+i));                               string.hs:202
    // 
hRString_Replace_0x00AB:
    // 0x00AB  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x00AC  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00AE  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00AF  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00B1  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B2  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x00B4  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00B6  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B7  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00B9  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00BA  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x00BC  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // j++; i++;                                                                string.hs:203
    // 
    // 0x00BE  0x22 0x0A       INCLOCALB 0x0A (BP+10)
    htype = GetStackType(bp+5);
    PutStack(bp+5, GetStack(bp+5)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x00C0  0x22 0x08       INCLOCALB 0x08 (BP+8)
    htype = GetStackType(bp+4);
    PutStack(bp+4, GetStack(bp+4)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // }                                                                        string.hs:205
    // 
hRString_Replace_0x00C2:
    // 0x00C2  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x00C4  0x33 0x78 0xFF  JW 0x003C (-136)
    goto hRString_Replace_0x003C;

    // WriteWord(result+2, j);                                                  string.hs:206
    // 
hRString_Replace_0x00C7:
    // 0x00C7  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x00C8  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00CA  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00CB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00CD  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return result;                                                           string.hs:207
    // 
    // 0x00CF  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x00D0  0x2B 0x12       RETRETB 0x12
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 9;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Replace_0x0068()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:212
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint result = clone(this, 0);                                            string.hs:213
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x000D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // for (uint i = 0; i < length; i++)                                        string.hs:214
    // 
    // 0x000E  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_Replace_0x000F:
    // 0x000F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0011  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0012  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0013  0x2E 0x26       JZB 0x0039 (+38)
    if (PopStack() == 0) { goto hRString_Replace_0x0039; }

    // char ch = char(ReadByte(this+4+i));                                      string.hs:216
    // 
    // 0x0015  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0016  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0018  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x001A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001E  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0020  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (ch == from)                                                          string.hs:217
    // 
    // 0x0022  0x56 0x06 0xFC  PUSHLOCALBB 0xFC06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0025  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0026  0x2E 0x0D       JZB 0x0033 (+13)
    if (PopStack() == 0) { goto hRString_Replace_0x0033; }

    // WriteByte(result+4+i, byte(to));                                         string.hs:219
    // 
    // 0x0028  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0029  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x002B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0031  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        string.hs:221
    // 
hRString_Replace_0x0033:
    // 0x0033  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0035  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0037  0x30 0xD8       JB 0x000F (-40)
    goto hRString_Replace_0x000F;
hRString_Replace_0x0039:
    // 0x0039  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return result;                                                           string.hs:222
    // 
    // 0x003B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003C  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Append_0x0062()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length0 = GetLength(this);                                          string.hs:81
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length1 = GetLength(append);                                        string.hs:82
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000A  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x000C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint result = GC.New(2 + length0 + length1, Type.String);                string.hs:83
    // 
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0010  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0011  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0012  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0016  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // WriteWord(result+2, length0 + length1);                                  string.hs:84
    // 
    // 0x001A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001C  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0020  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0021  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0022  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // for (uint i = 0; i < length0; i++)                                       string.hs:85
    // 
    // 0x0024  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_Append_0x0025:
    // 0x0025  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0027  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0028  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0029  0x2E 0x1A       JZB 0x0043 (+26)
    if (PopStack() == 0) { goto hRString_Append_0x0043; }

    // WriteByte(result+4+i, ReadByte(this+4+i));                               string.hs:87
    // 
    // 0x002B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002D  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x002F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0030  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0032  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0033  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0035  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0037  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0038  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x003A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003B  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x003D  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        string.hs:88
    // 
    // 0x003F  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0041  0x30 0xE4       JB 0x0025 (-28)
    goto hRString_Append_0x0025;
hRString_Append_0x0043:
    // 0x0043  0x28 0x02       DECSP 0x02
    DecSP(1);

    // for (uint i = 0; i < length1; i++)                                       string.hs:89
    // 
    // 0x0045  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_Append_0x0046:
    // 0x0046  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0048  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0049  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x004A  0x2E 0x1C       JZB 0x0066 (+28)
    if (PopStack() == 0) { goto hRString_Append_0x0066; }

    // WriteByte(result+4+i+length0, ReadByte(append+4+i));                     string.hs:91
    // 
    // 0x004C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x004E  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0050  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0051  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0053  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0054  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0055  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0056  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0058  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x005A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x005D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005E  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0060  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        string.hs:92
    // 
    // 0x0062  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0064  0x30 0xE2       JB 0x0046 (-30)
    goto hRString_Append_0x0046;
hRString_Append_0x0066:
    // 0x0066  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return result;                                                           string.hs:93
    // 
    // 0x0068  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x006A  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Append_0x0066()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:146
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint result = clone(this, 1);                                            string.hs:147
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000A  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x000B  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x000D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // WriteByte(result+4+length, byte(ch));                                    string.hs:148
    // 
    // 0x000E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x000F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0011  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0012  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0016  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteWord(result+2, length+1);                                           string.hs:149
    // 
    // 0x0018  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0019  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x001E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return result;                                                           string.hs:150
    // 
    // 0x0021  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0022  0x2B 0x08       RETRETB 0x08
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 4;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Substring_0x0064()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint limit = GetLength(this);                                            string.hs:119
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // return Substring(this, start, limit);                                    string.hs:120
    // 
    // 0x0007  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
    PushStack(GetStack(bp-2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x2C 0x63       CALLB 0x63     // HRString.Substring
    HRString_Substring_0x0063();
    // 0x000D  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Substring_0x0063()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length0 = GetLength(this);                                          string.hs:97
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (start >= length0)                                                    string.hs:98
    // 
    // 0x0007  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x000B  0x2E 0x05       JZB 0x0010 (+5)
    if (PopStack() == 0) { goto hRString_Substring_0x0010; }

    // start = length0;                                                         string.hs:100
    // 
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x1B 0xFC       POPLOCALB 0xFC (BP-4)
    PutStack(bp+-2, PopStack(&htype), htype);

    // uint length1 = length0 - start;                                          string.hs:102
    // 
hRString_Substring_0x0010:
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0011  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0012  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0014  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0015  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint result = GC.New(2 + length1, Type.String);                          string.hs:103
    // 
    // 0x0016  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0017  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0019  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x001A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001B  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x001D  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x001F  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint newLength = 0;                                                      string.hs:104
    // 
    // 0x0021  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint newLength = 0;                                                      string.hs:104
    // 
    // 0x0022  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_Substring_0x0023:
    // 0x0023  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0025  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0026  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0027  0x2E 0x29       JZB 0x0050 (+41)
    if (PopStack() == 0) { goto hRString_Substring_0x0050; }

    // if (newLength == limit)                                                  string.hs:107
    // 
    // 0x0029  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x002C  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x002D  0x2E 0x06       JZB 0x0033 (+6)
    if (PopStack() == 0) { goto hRString_Substring_0x0033; }

    // break;                                                                   string.hs:109
    // 
    // 0x002F  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0031  0x30 0x21       JB 0x0052 (+33)
    goto hRString_Substring_0x0052;

    // WriteByte(result+4+i, ReadByte(this+4+i+start));                         string.hs:111
    // 
hRString_Substring_0x0033:
    // 0x0033  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0035  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0037  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0038  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x003A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x003D  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x003F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0040  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0042  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0043  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0045  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0046  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0048  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // newLength++;                                                             string.hs:112
    // 
    // 0x004A  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // newLength++;                                                             string.hs:112
    // 
    // 0x004C  0x22 0x08       INCLOCALB 0x08 (BP+8)
    htype = GetStackType(bp+4);
    PutStack(bp+4, GetStack(bp+4)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x004E  0x30 0xD5       JB 0x0023 (-43)
    goto hRString_Substring_0x0023;
hRString_Substring_0x0050:
    // 0x0050  0x28 0x02       DECSP 0x02
    DecSP(1);

    // WriteWord(result+2, newLength);                                          string.hs:114
    // 
hRString_Substring_0x0052:
    // 0x0052  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0054  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0056  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0057  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0059  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return result;                                                           string.hs:115
    // 
    // 0x005B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x005D  0x2B 0x0E       RETRETB 0x0E
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 7;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Substring_0x006D()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:286
    // 
    // 0x0002  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (start == 0)                                                          string.hs:287
    // 
    // 0x0007  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0009  0x2F 0x04       JNZB 0x000D (+4)
    if (PopStack() != 0) { goto hRString_Substring_0x000D; }

    // return;                                                                  string.hs:289
    // 
    // 0x000B  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // return;                                                                  string.hs:289
    // 
hRString_Substring_0x000D:
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0010  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0011  0x2E 0x0C       JZB 0x001D (+12)
    if (PopStack() == 0) { goto hRString_Substring_0x001D; }

    // WriteWord(this+2, 0); // new length                                      string.hs:293
    // 
    // 0x0013  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0015  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0017  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0018  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0019  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return;                                                                  string.hs:294
    // 
    // 0x001B  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // return;                                                                  string.hs:294
    // 
hRString_Substring_0x001D:
    // 0x001D  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x001F  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0021  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0022  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0023  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0025  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0026  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // uint i = start;                                                          string.hs:298
    // 
    // 0x0028  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0029  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002B  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint j = 0;                                                              string.hs:299
    // 
    // 0x002C  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint j = 0;                                                              string.hs:299
    // 
hRString_Substring_0x002D:
    // 0x002D  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x002F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0031  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0032  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0034  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0035  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0037  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0039  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003C  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x003E  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // i++;                                                                     string.hs:303
    // 
    // 0x0040  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // i++;                                                                     string.hs:303
    // 
    // 0x0042  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // i++;                                                                     string.hs:303
    // 
    // 0x0044  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0045  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0046  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0047  0x2E 0xE6       JZB 0x002D (-26)
    if (PopStack() == 0) { goto hRString_Substring_0x002D; }

    // break;                                                                   string.hs:307
    // 
    // 0x0049  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;
}

void HRString_Build_0x006A()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint capacity = getCapacity(this);                                       string.hs:230
    // 
    // 0x0002  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0004  0x2C 0x5F       CALLB 0x5F     // HRString.getCapacity
    HRString_getCapacity_0x005F();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length0   = GetLength(this);                                        string.hs:231
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x000A  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x000C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint length1   = GetLength(append);                                      string.hs:232
    // 
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0010  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0012  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (length1 > 0)                                                         string.hs:233
    // 
    // 0x0014  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0016  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0017  0x07            GT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] > valuestack[sp]);
    // 0x0018  0x2E 0x4F       JZB 0x0067 (+79)
    if (PopStack() == 0) { goto hRString_Build_0x0067; }

    // if (capacity < length0+length1)                                          string.hs:235
    // 
    // 0x001A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x001C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001F  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0020  0x2E 0x19       JZB 0x0039 (+25)
    if (PopStack() == 0) { goto hRString_Build_0x0039; }

    // uint copy = clone(this, length0+length1 - capacity);                     string.hs:237
    // 
    // 0x0022  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0023  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0025  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0026  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0028  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0029  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002A  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x002B  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x002D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // GC.Release(this);                                                        string.hs:238
    // 
    // 0x002F  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0031  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // this = copy;                                                             string.hs:239
    // 
    // 0x0033  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0035  0x1D 0xFC       POPRELB 0xFC (BP-4)
    PutStack(GetStack(bp-2), PopStack(&htype), htype);

    // }                                                                        string.hs:240
    // 
    // 0x0037  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        string.hs:240
    // 
hRString_Build_0x0039:
    // 0x0039  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_Build_0x003A:
    // 0x003A  0x56 0x06 0x04  PUSHLOCALBB 0x0406
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x003D  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x003E  0x2E 0x1C       JZB 0x005A (+28)
    if (PopStack() == 0) { goto hRString_Build_0x005A; }

    // WriteByte(this+4+length0+i, ReadByte(append+4+i));                       string.hs:243
    // 
    // 0x0040  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0042  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0044  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0045  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0046  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0047  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0049  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x004C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x004E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0051  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0052  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0054  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        string.hs:244
    // 
    // 0x0056  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0058  0x30 0xE2       JB 0x003A (-30)
    goto hRString_Build_0x003A;
hRString_Build_0x005A:
    // 0x005A  0x28 0x02       DECSP 0x02
    DecSP(1);

    // WriteWord(this+2, length0+length1);                                      string.hs:245
    // 
    // 0x005C  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x005E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0060  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0061  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0062  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0064  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0065  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        string.hs:247
    // 
hRString_Build_0x0067:
    // 0x0067  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;
}

void HRString_Build_0x006B()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint capacity = getCapacity(this);                                       string.hs:250
    // 
    // 0x0002  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0004  0x2C 0x5F       CALLB 0x5F     // HRString.getCapacity
    HRString_getCapacity_0x005F();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length   = GetLength(this);                                         string.hs:251
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x000A  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x000C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (capacity < length+1)                                                 string.hs:252
    // 
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x000F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0010  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0011  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0012  0x2E 0x14       JZB 0x0026 (+20)
    if (PopStack() == 0) { goto hRString_Build_0x0026; }

    // uint copy = clone(this, 1);                                              string.hs:254
    // 
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0015  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0017  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0018  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x001A  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // GC.Release(this);                                                        string.hs:255
    // 
    // 0x001C  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x001E  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // this = copy;                                                             string.hs:256
    // 
    // 0x0020  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0022  0x1D 0xFC       POPRELB 0xFC (BP-4)
    PutStack(GetStack(bp-2), PopStack(&htype), htype);

    // }                                                                        string.hs:257
    // 
    // 0x0024  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        string.hs:257
    // 
hRString_Build_0x0026:
    // 0x0026  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0028  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x002A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x002C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002F  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteWord(this+2, length+1);                                             string.hs:259
    // 
    // 0x0031  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0033  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0035  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0036  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0037  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0038  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0039  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        string.hs:260
    // 
    // 0x003B  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;
}

void HRString_Build_0x0069()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // WriteWord(this+2, 0); // length = 0                                      string.hs:226
    // 
    // 0x0001  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0007  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        string.hs:227
    // 
    // 0x0009  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void HRString_BuildFront_0x006C()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint capacity = getCapacity(this);                                       string.hs:263
    // 
    // 0x0002  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0004  0x2C 0x5F       CALLB 0x5F     // HRString.getCapacity
    HRString_getCapacity_0x005F();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length = GetLength(this);                                           string.hs:264
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x000A  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x000C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (capacity < length+1)                                                 string.hs:265
    // 
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x000F  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0010  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0011  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0012  0x2E 0x14       JZB 0x0026 (+20)
    if (PopStack() == 0) { goto hRString_BuildFront_0x0026; }

    // uint copy = clone(this, 1);                                              string.hs:267
    // 
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0015  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0017  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0018  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x001A  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // GC.Release(this);                                                        string.hs:268
    // 
    // 0x001C  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x001E  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // this = copy;                                                             string.hs:269
    // 
    // 0x0020  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0022  0x1D 0xFC       POPRELB 0xFC (BP-4)
    PutStack(GetStack(bp-2), PopStack(&htype), htype);

    // }                                                                        string.hs:270
    // 
    // 0x0024  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        string.hs:270
    // 
hRString_BuildFront_0x0026:
    // 0x0026  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0027  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0028  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // WriteByte(this+4+i, ReadByte(this+3+i));                                 string.hs:274
    // 
hRString_BuildFront_0x002A:
    // 0x002A  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x002C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x002E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0031  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0032  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0034  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0036  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0037  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0039  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003A  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x003C  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // i--;                                                                     string.hs:275
    // 
    // 0x003E  0x23 0x04       DECLOCALB 0x04 (BP+4)
    PutStack(bp+2, GetStack(bp+2)-1);

    // i--;                                                                     string.hs:275
    // 
    // 0x0040  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0042  0x2F 0xE8       JNZB 0x002A (-24)
    if (PopStack() != 0) { goto hRString_BuildFront_0x002A; }

    // break;                                                                   string.hs:278
    // 
    // 0x0044  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x0046  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0048  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0049  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x004B  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteWord(this+2, length+1);                                             string.hs:282
    // 
    // 0x004D  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x004F  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0051  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0052  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0053  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0054  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0055  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        string.hs:283
    // 
    // 0x0057  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;
}

void HRString_Trim_0x006F()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint copy = Clone(this);                                                 string.hs:320
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x2C 0x5D       CALLB 0x5D     // HRString.Clone
    HRString_Clone_0x005D();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // TrimRight(ref copy);                                                     string.hs:321
    // 
    // 0x0007  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0009  0x2C 0x71       CALLB 0x71     // HRString.TrimRight
    HRString_TrimRight_0x0071();

    // TrimLeft(ref copy);                                                      string.hs:322
    // 
    // 0x000B  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x000D  0x2C 0x70       CALLB 0x70     // HRString.TrimLeft
    HRString_TrimLeft_0x0070();

    // return copy;                                                             string.hs:323
    // 
    // 0x000F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0010  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_TrimRight_0x0071()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:343
    // 
    // 0x0002  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (length == 0)                                                         string.hs:344
    // 
    // 0x0007  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0008  0x2F 0x04       JNZB 0x000C (+4)
    if (PopStack() != 0) { goto hRString_TrimRight_0x000C; }

    // return;                                                                  string.hs:346
    // 
    // 0x000A  0x2A 0x04       RETB 0x04
    DecSP(2); PopBP();
    return;

    // return;                                                                  string.hs:346
    // 
hRString_TrimRight_0x000C:
    // 0x000C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x000F  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0010  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // char ch = char(ReadByte(this+4+i));                                      string.hs:351
    // 
hRString_TrimRight_0x0011:
    // 0x0011  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0012  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0014  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (ch != ' ')                                                           string.hs:352
    // 
    // 0x001D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001F  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0021  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0022  0x2E 0x0E       JZB 0x0030 (+14)
    if (PopStack() == 0) { goto hRString_TrimRight_0x0030; }

    // WriteWord(this+2, i+1); // new length                                    string.hs:354
    // 
    // 0x0024  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0026  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0028  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0029  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x002A  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x002B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002C  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // break;                                                                   string.hs:355
    // 
    // 0x002E  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // if (i == 0)                                                              string.hs:357
    // 
hRString_TrimRight_0x0030:
    // 0x0030  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0031  0x2F 0x0C       JNZB 0x003D (+12)
    if (PopStack() != 0) { goto hRString_TrimRight_0x003D; }

    // WriteWord(this+2, 0); // new length                                      string.hs:359
    // 
    // 0x0033  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0035  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0037  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0038  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0039  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // break;                                                                   string.hs:360
    // 
    // 0x003B  0x2A 0x08       RETB 0x08
    DecSP(4); PopBP();
    return;

    // i--;                                                                     string.hs:362
    // 
hRString_TrimRight_0x003D:
    // 0x003D  0x23 0x02       DECLOCALB 0x02 (BP+2)
    PutStack(bp+1, GetStack(bp+1)-1);

    // i--;                                                                     string.hs:362
    // 
    // 0x003F  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0041  0x30 0xD0       JB 0x0011 (-48)
    goto hRString_TrimRight_0x0011;
}

void HRString_TrimLeft_0x0070()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = GetLength(this);                                           string.hs:327
    // 
    // 0x0002  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0004  0x2C 0x60       CALLB 0x60     // HRString.GetLength
    HRString_GetLength_0x0060();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint i = 0;                                                              string.hs:328
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint i = 0;                                                              string.hs:328
    // 
hRString_TrimLeft_0x0008:
    // 0x0008  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x000B  0x2E 0x04       JZB 0x000F (+4)
    if (PopStack() == 0) { goto hRString_TrimLeft_0x000F; }
    // 0x000D  0x30 0x1F       JB 0x002C (+31)
    goto hRString_TrimLeft_0x002C;

    // char ch = char(ReadByte(this+4+i));                                      string.hs:332
    // 
hRString_TrimLeft_0x000F:
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0010  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0012  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0014  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0015  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0019  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (ch != ' ')                                                           string.hs:333
    // 
    // 0x001B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001D  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x001F  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0020  0x2E 0x06       JZB 0x0026 (+6)
    if (PopStack() == 0) { goto hRString_TrimLeft_0x0026; }

    // break;                                                                   string.hs:335
    // 
    // 0x0022  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0024  0x30 0x08       JB 0x002C (+8)
    goto hRString_TrimLeft_0x002C;

    // i++;                                                                     string.hs:337
    // 
hRString_TrimLeft_0x0026:
    // 0x0026  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // i++;                                                                     string.hs:337
    // 
    // 0x0028  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x002A  0x30 0xDE       JB 0x0008 (-34)
    goto hRString_TrimLeft_0x0008;

    // Substring(ref this, i);                                                  string.hs:339
    // 
hRString_TrimLeft_0x002C:
    // 0x002C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x002F  0x2C 0x6D       CALLB 0x6D     // HRString.Substring
    HRString_Substring_0x006D();

    // }                                                                        string.hs:340
    // 
    // 0x0031  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HRString_TrimLeft_0x006E()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint copy = Clone(this);                                                 string.hs:314
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x2C 0x5D       CALLB 0x5D     // HRString.Clone
    HRString_Clone_0x005D();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // TrimLeft(ref copy);                                                      string.hs:315
    // 
    // 0x0007  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0009  0x2C 0x70       CALLB 0x70     // HRString.TrimLeft
    HRString_TrimLeft_0x0070();

    // return copy;                                                             string.hs:316
    // 
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_Clone_0x005D()
{
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return clone(original, 0);                                               string.hs:46
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0004  0x2C 0x5E       CALLB 0x5E     // HRString.clone
    HRString_clone_0x005E();
    // 0x0006  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HRString_clone_0x005E()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = ReadWord(original+2);                                      string.hs:50
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint address = GC.New(4+length+extra, Type.String);                      string.hs:51
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0011  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0012  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0014  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0016  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // WriteWord(address+2, length);                                            string.hs:52
    // 
    // 0x0017  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0018  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001C  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // for (uint i = 0; i < length; i++)                                        string.hs:53
    // 
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRString_clone_0x001F:
    // 0x001F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0021  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0022  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0023  0x2E 0x19       JZB 0x003C (+25)
    if (PopStack() == 0) { goto hRString_clone_0x003C; }

    // WriteByte(address+4+i, ReadByte(original+4+i));                          string.hs:55
    // 
    // 0x0025  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0026  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0028  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0029  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x002E  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0030  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0031  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0033  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0034  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0036  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // }                                                                        string.hs:56
    // 
    // 0x0038  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x003A  0x30 0xE5       JB 0x001F (-27)
    goto hRString_clone_0x001F;
hRString_clone_0x003C:
    // 0x003C  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return address;                                                          string.hs:57
    // 
    // 0x003E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003F  0x2B 0x08       RETRETB 0x08
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 4;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRString_getCapacity_0x005F()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return ReadWord(this-2) - 6;                                             string.hs:61
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0006  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0008  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x000A  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x000B  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HRLong_NewFromConstant()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(4, Type.Long);                                     long.hs:24
    // 
    // 0x0002  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0004  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(address+2, ReadWord(location));                                long.hs:25
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0011  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+4, ReadWord(location+2));                              long.hs:26
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0019  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001E  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          long.hs:27
    // 
    // 0x0020  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0021  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRLong_ToBytes_0x0053()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint lst = HRList.New(Type.Byte);                                        long.hs:70
    // 
    // 0x0002  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0004  0x2C 0x3F       CALLB 0x3F     // HRList.New
    HRList_New();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // for (byte i=0; i < 4; i++)                                               long.hs:71
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRLong_ToBytes_0x0008:
    // 0x0008  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0009  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x000B  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x000C  0x2E 0x1B       JZB 0x0027 (+27)
    if (PopStack() == 0) { goto hRLong_ToBytes_0x0027; }

    // byte b = ReadByte(ichunk+2+i);                                           long.hs:73
    // 
    // 0x000E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0011  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0015  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0016  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // HRList.Append(lst, b, Type.Byte);                                        long.hs:74
    // 
    // 0x001A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x001F  0x2C 0x49       CALLB 0x49     // HRList.Append
    HRList_Append_0x0049();

    // }                                                                        long.hs:75
    // 
    // 0x0021  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0023  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0025  0x30 0xE3       JB 0x0008 (-29)
    goto hRLong_ToBytes_0x0008;
hRLong_ToBytes_0x0027:
    // 0x0027  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return lst;                                                              long.hs:76
    // 
    // 0x0029  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002A  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRLong_ToUInt_0x0051()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint value = ReadWord(this+4);                                           long.hs:50
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // return ReadWord(this+2);                                                 long.hs:58
    // 
    // 0x000A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000C  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0011  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRLong_LongNegate_0x0052()
{
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x02       ENTERB 0x02
    PushBP();
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);

    // uint zero = HRUInt.ToLong(0);                                            long.hs:62
    // 
    // 0x0002  0x2C 0x76       CALLB 0x76     // HRUInt.ToLong
    HRUInt_ToLong_0x0076();
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint result = LongSub(zero, top);                                        long.hs:63
    // 
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0007  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0009  0x2C 0x8A       CALLB 0x8A     // External.LongSub
    External_LongSub();
    // 0x000B  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // GC.Release(zero);                                                        long.hs:64
    // 
    // 0x000C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000D  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // return result;                                                           long.hs:65
    // 
    // 0x000F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0010  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRLong_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(4, Type.Long);                                     long.hs:17
    // 
    // 0x0002  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0004  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(address+2, 0);                                                 long.hs:18
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+4, 0);                                                 long.hs:19
    // 
    // 0x0010  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0011  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0015  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          long.hs:20
    // 
    // 0x0017  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0018  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HRLong_Clone_0x0050()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(4, Type.Long);                                     long.hs:42
    // 
    // 0x0002  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0004  0x1A 0x0E       PUSHIB 0x0E
    PushStack(0x0E, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(address+2, ReadWord(original+2));                              long.hs:43
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0011  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0012  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0014  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+4, ReadWord(original+4));                              long.hs:44
    // 
    // 0x0016  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0017  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0019  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x001E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0021  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          long.hs:46
    // 
    // 0x0023  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0024  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRFloat_NewFromConstant()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(4, Type.Float);                                    float.hs:23
    // 
    // 0x0002  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0004  0x1A 0x0D       PUSHIB 0x0D
    PushStack(0x0D, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(address+2, ReadWord(location));                                float.hs:24
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0011  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+4, ReadWord(location+2));                              float.hs:25
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0019  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001E  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          float.hs:26
    // 
    // 0x0020  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0021  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRFloat_ToBytes_0x003C()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint lst = HRList.New(Type.Byte);                                        float.hs:50
    // 
    // 0x0002  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0004  0x2C 0x3F       CALLB 0x3F     // HRList.New
    HRList_New();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // for (byte i=0; i < 4; i++)                                               float.hs:51
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRFloat_ToBytes_0x0008:
    // 0x0008  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0009  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x000B  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x000C  0x2E 0x1B       JZB 0x0027 (+27)
    if (PopStack() == 0) { goto hRFloat_ToBytes_0x0027; }

    // byte b = ReadByte(ichunk+2+i);                                           float.hs:53
    // 
    // 0x000E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0011  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0015  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0016  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // HRList.Append(lst, b, Type.Byte);                                        float.hs:54
    // 
    // 0x001A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x001F  0x2C 0x49       CALLB 0x49     // HRList.Append
    HRList_Append_0x0049();

    // }                                                                        float.hs:55
    // 
    // 0x0021  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0023  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0025  0x30 0xE3       JB 0x0008 (-29)
    goto hRFloat_ToBytes_0x0008;
hRFloat_ToBytes_0x0027:
    // 0x0027  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return lst;                                                              float.hs:56
    // 
    // 0x0029  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002A  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRList_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(9, Type.List);                                     list.hs:35
    // 
    // 0x0002  0x1A 0x09       PUSHIB 0x09
    PushStack(0x09, Type::tByte);
    // 0x0004  0x1A 0x19       PUSHIB 0x19
    PushStack(0x19, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(address+lsLength, 0);           // number of items             list.hs:36
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteByte(address+lsType, byte(htype));   // type of items               list.hs:37
    // 
    // 0x0010  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0011  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0013  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0014  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0016  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0018  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteWord(address+lsFirst,    0);         // pFirst                      list.hs:38
    // 
    // 0x001A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001B  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x001D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+lsRecent,   0);         // pRecent                     list.hs:39
    // 
    // 0x0021  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0022  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0024  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0025  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0026  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+lsRecent+2, 0);         // iRecent                     list.hs:40
    // 
    // 0x0028  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0029  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x002B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002C  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x002E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0030  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          list.hs:41
    // 
    // 0x0032  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0033  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRList_GetLength_0x0045()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return ReadWord(this+lsLength);                                          list.hs:147
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0008  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HRList_Append_0x0049()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type etype = Type(ReadByte(this+lsType));                                list.hs:325
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint pNewItem    = createItem(item, etype, itype);                       list.hs:326
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0010  0x2C 0x44       CALLB 0x44     // HRList.createItem
    HRList_createItem_0x0044();
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint pFirstItem  = ReadWord(this+lsFirst);                               list.hs:327
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0016  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (pFirstItem == 0)                                                     list.hs:328
    // 
    // 0x001D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001F  0x2F 0x0C       JNZB 0x002B (+12)
    if (PopStack() != 0) { goto hRList_Append_0x002B; }

    // WriteWord(this+lsFirst, pNewItem);                                       list.hs:330
    // 
    // 0x0021  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0023  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0025  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0026  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0027  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:331
    // 
    // 0x0029  0x30 0x3D       JB 0x0066 (+61)
    goto hRList_Append_0x0066;

    // uint pCurrentItem = pFirstItem;                                          list.hs:334
    // 
hRList_Append_0x002B:
    // 0x002B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002E  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint pRecentItem  = ReadWord(this+lsRecent);                             list.hs:335
    // 
    // 0x0030  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0031  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0033  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0035  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0036  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0038  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (pRecentItem != 0)                                                    list.hs:336
    // 
    // 0x003A  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x003C  0x2E 0x06       JZB 0x0042 (+6)
    if (PopStack() == 0) { goto hRList_Append_0x0042; }

    // pCurrentItem = pRecentItem;                                              list.hs:338
    // 
    // 0x003E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0040  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint pNextItem= ReadWord(pCurrentItem+liNext);                           list.hs:342
    // 
hRList_Append_0x0042:
    // 0x0042  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0043  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0045  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0047  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0048  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x004A  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (pNextItem == 0)                                                      list.hs:343
    // 
    // 0x004C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x004E  0x2F 0x06       JNZB 0x0054 (+6)
    if (PopStack() != 0) { goto hRList_Append_0x0054; }

    // break;                                                                   list.hs:345
    // 
    // 0x0050  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0052  0x30 0x0A       JB 0x005C (+10)
    goto hRList_Append_0x005C;

    // pCurrentItem = pNextItem;                                                list.hs:347
    // 
hRList_Append_0x0054:
    // 0x0054  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0056  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // }                                                                        list.hs:348
    // 
    // 0x0058  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x005A  0x30 0xE8       JB 0x0042 (-24)
    goto hRList_Append_0x0042;

    // WriteWord(pCurrentItem+liNext, pNewItem);                                list.hs:349
    // 
hRList_Append_0x005C:
    // 0x005C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x005E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0060  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0061  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0062  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:350
    // 
    // 0x0064  0x28 0x04       DECSP 0x04
    DecSP(2);

    // }                                                                        list.hs:350
    // 
hRList_Append_0x0066:
    // 0x0066  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0067  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0069  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x006B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x006C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x006E  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x006F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0070  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // WriteWord(this+lsLength,   length);         // number of items           list.hs:352
    // 
    // 0x0072  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0074  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0076  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0077  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0079  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent,   pNewItem);           // pRecent               list.hs:353
    // 
    // 0x007B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x007D  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x007F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0080  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0081  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent+2, length-1);       // iRecent                   list.hs:354
    // 
    // 0x0083  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0085  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0087  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0088  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x008A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x008B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x008D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x008E  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x008F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:355
    // 
    // 0x0091  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;
}

void HRList_SetItem_0x0047()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type etype = Type(ReadByte(this+lsType));                                list.hs:204
    // 
    // 0x0002  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length = ReadWord(this+lsLength);                                   list.hs:205
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x000D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint pData = item;                                                       list.hs:214
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0016  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (IsReferenceType(etype))                                              list.hs:215
    // 
    // 0x0018  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0019  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x001B  0x2E 0x17       JZB 0x0032 (+23)
    if (PopStack() == 0) { goto hRList_SetItem_0x0032; }

    // if (IsReferenceType(itype))                                              list.hs:217
    // 
    // 0x001D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001F  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0021  0x2E 0x0A       JZB 0x002B (+10)
    if (PopStack() == 0) { goto hRList_SetItem_0x002B; }

    // pData = GC.Clone(item);                                                  list.hs:219
    // 
    // 0x0023  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0025  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0027  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // }                                                                        list.hs:220
    // 
    // 0x0029  0x30 0x09       JB 0x0032 (+9)
    goto hRList_SetItem_0x0032;

    // pData = HRVariant.CreateValueVariant(item, itype);                       list.hs:232
    // 
hRList_SetItem_0x002B:
    // 0x002B  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
    PushStack(GetStack(bp-2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x002E  0x2C 0x77       CALLB 0x77     // HRVariant.CreateValueVariant
    HRVariant_CreateValueVariant_0x0077();
    // 0x0030  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint i = 0;                                                              list.hs:236
    // 
hRList_SetItem_0x0032:
    // 0x0032  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint i = 0;                                                              list.hs:236
    // 
    // 0x0033  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0034  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0036  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0038  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0039  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x003B  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint pRecent  = ReadWord(this+lsRecent);                                 list.hs:238
    // 
    // 0x003D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003E  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0040  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0042  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0043  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0045  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (pRecent != 0)                                                        list.hs:239
    // 
    // 0x0047  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0049  0x2E 0x1F       JZB 0x0068 (+31)
    if (PopStack() == 0) { goto hRList_SetItem_0x0068; }

    // uint iRecent  = ReadWord(this+lsRecent+2);                               list.hs:242
    // 
    // 0x004B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004C  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x004E  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0050  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0051  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0053  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0054  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0056  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // if (iRecent <= index)                                                    list.hs:243
    // 
    // 0x0058  0x56 0x0C 0xFA  PUSHLOCALBB 0xFA0C
    PushStack(GetStack(bp+6, &htype), htype);
    PushStack(GetStack(bp-3, &htype), htype);
    // 0x005B  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x005C  0x2E 0x0A       JZB 0x0066 (+10)
    if (PopStack() == 0) { goto hRList_SetItem_0x0066; }

    // i        = iRecent;                                                      list.hs:245
    // 
    // 0x005E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0060  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // pCurrent = pRecent;                                                      list.hs:246
    // 
    // 0x0062  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0064  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // }                                                                        list.hs:248
    // 
hRList_SetItem_0x0066:
    // 0x0066  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        list.hs:248
    // 
hRList_SetItem_0x0068:
    // 0x0068  0x56 0x06 0xFA  PUSHLOCALBB 0xFA06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-3, &htype), htype);
    // 0x006B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x006C  0x2E 0x04       JZB 0x0070 (+4)
    if (PopStack() == 0) { goto hRList_SetItem_0x0070; }

    // break;                                                                   list.hs:253
    // 
    // 0x006E  0x30 0x0F       JB 0x007D (+15)
    goto hRList_SetItem_0x007D;

    // pCurrent = ReadWord(pCurrent+liNext);                                    list.hs:255
    // 
hRList_SetItem_0x0070:
    // 0x0070  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0072  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0074  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0075  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0077  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // i++;                                                                     list.hs:256
    // 
    // 0x0079  0x22 0x06       INCLOCALB 0x06 (BP+6)
    htype = GetStackType(bp+3);
    PutStack(bp+3, GetStack(bp+3)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // i++;                                                                     list.hs:256
    // 
    // 0x007B  0x30 0xED       JB 0x0068 (-19)
    goto hRList_SetItem_0x0068;

    // i++;                                                                     list.hs:256
    // 
hRList_SetItem_0x007D:
    // 0x007D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x007E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0080  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0081  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0082  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0084  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // if (IsReferenceType(etype))                                              list.hs:259
    // 
    // 0x0086  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0087  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0089  0x2E 0x06       JZB 0x008F (+6)
    if (PopStack() == 0) { goto hRList_SetItem_0x008F; }

    // GC.Release(oldData);                                                     list.hs:261
    // 
    // 0x008B  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x008D  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // WriteWord(pCurrent+liData, pData);                                       list.hs:264
    // 
hRList_SetItem_0x008F:
    // 0x008F  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0091  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0092  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0093  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0095  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent,   pCurrent);    // pRecent                      list.hs:265
    // 
    // 0x0097  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0099  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x009B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009C  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x009E  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent+2, index);       // iRecent                      list.hs:266
    // 
    // 0x00A0  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x00A2  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x00A4  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00A5  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00A7  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00A8  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x00AA  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:267
    // 
    // 0x00AC  0x2A 0x16       RETB 0x16
    DecSP(11); PopBP();
    return;
}

void HRList_Insert_0x0048()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type etype = Type(ReadByte(this+lsType));                                list.hs:271
    // 
    // 0x0002  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length = ReadWord(this+lsLength);                                   list.hs:272
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x000D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint pFirst  = ReadWord(this+lsFirst);                                   list.hs:273
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0016  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (index >= length)                                                     list.hs:274
    // 
    // 0x001D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x001F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0020  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0021  0x2E 0x0B       JZB 0x002C (+11)
    if (PopStack() == 0) { goto hRList_Insert_0x002C; }

    // Append(this, item, itype);                                               list.hs:276
    // 
    // 0x0023  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0026  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0028  0x2C 0x49       CALLB 0x49     // HRList.Append
    HRList_Append_0x0049();

    // }                                                                        list.hs:277
    // 
    // 0x002A  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;

    // }                                                                        list.hs:277
    // 
hRList_Insert_0x002C:
    // 0x002C  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x002E  0x2F 0x3D       JNZB 0x006B (+61)
    if (PopStack() != 0) { goto hRList_Insert_0x006B; }

    // uint pItem  = createItem(item, etype, itype);                            list.hs:280
    // 
    // 0x0030  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0031  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0033  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0034  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0036  0x2C 0x44       CALLB 0x44     // HRList.createItem
    HRList_createItem_0x0044();
    // 0x0038  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // WriteWord(pItem+liNext, pFirst);                                         list.hs:281
    // 
    // 0x003A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x003C  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x003E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0041  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsFirst, pItem);                                          list.hs:282
    // 
    // 0x0043  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0045  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0047  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0048  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x004A  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsLength,   length+1);                                    list.hs:284
    // 
    // 0x004C  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x004E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0050  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0051  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0052  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0053  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0054  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent,   0);                                           list.hs:285
    // 
    // 0x0056  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0058  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x005A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x005C  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent+2, 0);                                           list.hs:286
    // 
    // 0x005E  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0060  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0062  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0063  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0065  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0066  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0067  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:287
    // 
    // 0x0069  0x2A 0x10       RETB 0x10
    DecSP(8); PopBP();
    return;

    // uint pCurrent= pFirst;                                                   list.hs:290
    // 
hRList_Insert_0x006B:
    // 0x006B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x006C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x006E  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint pPrevious = 0;                                                      list.hs:291
    // 
    // 0x0070  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint pPrevious = 0;                                                      list.hs:291
    // 
    // 0x0071  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0072  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0074  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0076  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0077  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0079  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // uint iRecent  = ReadWord(this+lsRecent+2);                               list.hs:294
    // 
    // 0x007B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x007C  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x007E  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0080  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0081  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0083  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0084  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0086  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint count = 0;                                                          list.hs:296
    // 
    // 0x0088  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint count = 0;                                                          list.hs:296
    // 
    // 0x0089  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x008B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x008C  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x008D  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x008F  0x2E 0x07       JZB 0x0096 (+7)
    if (PopStack() == 0) { goto hRList_Insert_0x0096; }
    // 0x0091  0x56 0xFA 0x0C  PUSHLOCALBB 0x0CFA
    PushStack(GetStack(bp-3, &htype), htype);
    PushStack(GetStack(bp+6, &htype), htype);
    // 0x0094  0x07            GT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] > valuestack[sp]);
    // 0x0095  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRList_Insert_0x0096:
    // 0x0096  0x2E 0x0A       JZB 0x00A0 (+10)
    if (PopStack() == 0) { goto hRList_Insert_0x00A0; }

    // pCurrent= pRecent;                                                       list.hs:299
    // 
    // 0x0098  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x009A  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // count    = iRecent;                                                      list.hs:300
    // 
    // 0x009C  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x009E  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // uint pItem  = createItem(item, etype, itype);                            list.hs:303
    // 
hRList_Insert_0x00A0:
    // 0x00A0  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A1  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x00A3  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x00A4  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x00A6  0x2C 0x44       CALLB 0x44     // HRList.createItem
    HRList_createItem_0x0044();
    // 0x00A8  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // while (0 != pCurrent)                                                    list.hs:304
    // 
hRList_Insert_0x00AA:
    // 0x00AA  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00AB  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00AD  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00AE  0x2E 0x4C       JZB 0x00FA (+76)
    if (PopStack() == 0) { goto hRList_Insert_0x00FA; }

    // if (index == count)                                                      list.hs:306
    // 
    // 0x00B0  0x56 0xFA 0x0E  PUSHLOCALBB 0x0EFA
    PushStack(GetStack(bp-3, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x00B3  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00B4  0x2E 0x35       JZB 0x00E9 (+53)
    if (PopStack() == 0) { goto hRList_Insert_0x00E9; }

    // WriteWord(pItem+liNext, pCurrent);                                       list.hs:308
    // 
    // 0x00B6  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x00B8  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00BA  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00BB  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00BD  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(pPrevious+liNext, pItem);                                      list.hs:309
    // 
    // 0x00BF  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00C1  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00C3  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00C4  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x00C6  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent,   pItem);                                       list.hs:311
    // 
    // 0x00C8  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x00CA  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x00CC  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00CD  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x00CF  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent+2, count);                                       list.hs:312
    // 
    // 0x00D1  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x00D3  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x00D5  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00D6  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00D8  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00D9  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x00DB  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsLength,   length+1);                                    list.hs:313
    // 
    // 0x00DD  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x00DF  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00E1  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00E2  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x00E3  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x00E4  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00E5  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // break;                                                                   list.hs:314
    // 
    // 0x00E7  0x2A 0x1A       RETB 0x1A
    DecSP(13); PopBP();
    return;

    // break;                                                                   list.hs:314
    // 
hRList_Insert_0x00E9:
    // 0x00E9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00EB  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // pCurrent = ReadWord(pCurrent+liNext);                                    list.hs:317
    // 
    // 0x00ED  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00EF  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00F1  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00F2  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00F4  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // count++;                                                                 list.hs:318
    // 
    // 0x00F6  0x22 0x0E       INCLOCALB 0x0E (BP+14)
    htype = GetStackType(bp+7);
    PutStack(bp+7, GetStack(bp+7)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // count++;                                                                 list.hs:318
    // 
    // 0x00F8  0x30 0xB2       JB 0x00AA (-78)
    goto hRList_Insert_0x00AA;

    // count++;                                                                 list.hs:318
    // 
hRList_Insert_0x00FA:
    // 0x00FA  0x2A 0x1A       RETB 0x1A
    DecSP(13); PopBP();
    return;
}

void HRList_GetItem_0x0046()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // itype = Type(ReadByte(this+lsType));                                     list.hs:152
    // 
    // 0x0001  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0003  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0008  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // uint length = ReadWord(this+lsLength);                                   list.hs:153
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint i = 0;                                                              list.hs:162
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint pCurrent = ReadWord(this+lsFirst);                                  list.hs:163
    // 
    // 0x0014  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0015  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0017  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0019  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001A  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001C  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint pRecent  = ReadWord(this+lsRecent);                                 list.hs:164
    // 
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0021  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0023  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0024  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0026  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (pRecent != 0)                                                        list.hs:165
    // 
    // 0x0028  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x002A  0x2E 0x1E       JZB 0x0048 (+30)
    if (PopStack() == 0) { goto hRList_GetItem_0x0048; }

    // uint iRecent  = ReadWord(this+lsRecent+2);                               list.hs:167
    // 
    // 0x002C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x002F  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0031  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0032  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0034  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0035  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0037  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (iRecent <= index)                                                    list.hs:168
    // 
    // 0x0039  0x56 0x08 0xFC  PUSHLOCALBB 0xFC08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x003C  0x0A            LE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] <= valuestack[sp]);
    // 0x003D  0x2E 0x09       JZB 0x0046 (+9)
    if (PopStack() == 0) { goto hRList_GetItem_0x0046; }

    // i        = iRecent;                                                      list.hs:170
    // 
    // 0x003F  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0041  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // pCurrent = pRecent;                                                      list.hs:171
    // 
    // 0x0042  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0044  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // }                                                                        list.hs:173
    // 
hRList_GetItem_0x0046:
    // 0x0046  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        list.hs:173
    // 
hRList_GetItem_0x0048:
    // 0x0048  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0049  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x004B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x004C  0x2E 0x04       JZB 0x0050 (+4)
    if (PopStack() == 0) { goto hRList_GetItem_0x0050; }

    // break;                                                                   list.hs:179
    // 
    // 0x004E  0x30 0x0F       JB 0x005D (+15)
    goto hRList_GetItem_0x005D;

    // pCurrent = ReadWord(pCurrent+liNext);                                    list.hs:181
    // 
hRList_GetItem_0x0050:
    // 0x0050  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0052  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0054  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0055  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0057  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // i++;                                                                     list.hs:182
    // 
    // 0x0059  0x22 0x02       INCLOCALB 0x02 (BP+2)
    htype = GetStackType(bp+1);
    PutStack(bp+1, GetStack(bp+1)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // i++;                                                                     list.hs:182
    // 
    // 0x005B  0x30 0xED       JB 0x0048 (-19)
    goto hRList_GetItem_0x0048;

    // i++;                                                                     list.hs:182
    // 
hRList_GetItem_0x005D:
    // 0x005D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x005E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0060  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0061  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0062  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0064  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (itype == Type.Variant)                                               list.hs:187
    // 
    // 0x0066  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0068  0x1A 0x14       PUSHIB 0x14
    PushStack(0x14, Type::tByte);
    // 0x006A  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x006B  0x2E 0x0B       JZB 0x0076 (+11)
    if (PopStack() == 0) { goto hRList_GetItem_0x0076; }

    // pData = HRVariant.GetValue(pData, ref itype); // returns a clone of the boxed value
    // 
    // 0x006D  0x56 0x08 0xFE  PUSHLOCALBB 0xFE08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0070  0x2C 0x7A       CALLB 0x7A     // HRVariant.GetValue
    HRVariant_GetValue_0x007A();
    // 0x0072  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // }                                                                        list.hs:190
    // 
    // 0x0074  0x30 0x14       JB 0x0088 (+20)
    goto hRList_GetItem_0x0088;

    // else if (IsReferenceType(itype))                                         list.hs:191
    // 
hRList_GetItem_0x0076:
    // 0x0076  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0078  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x007A  0x2E 0x0E       JZB 0x0088 (+14)
    if (PopStack() == 0) { goto hRList_GetItem_0x0088; }

    // itype = Type(ReadByte(pData));                                           list.hs:193
    // 
    // 0x007C  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x007E  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0080  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // pData = GC.Clone(pData);                                                 list.hs:194
    // 
    // 0x0082  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0084  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0086  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // }                                                                        list.hs:195
    // 
hRList_GetItem_0x0088:
    // 0x0088  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x008A  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x008C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x008D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x008F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent+2, index);       // iRecent                      list.hs:198
    // 
    // 0x0091  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0093  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0095  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0096  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0098  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0099  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x009B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return pData;                                                            list.hs:199
    // 
    // 0x009D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x009F  0x2B 0x10       RETRETB 0x10
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 8;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRList_Clear_0x0043()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type etype  = Type(ReadByte(this+lsType));                               list.hs:99
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint pFirst = ReadWord(this+lsFirst);                                    list.hs:100
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (pFirst != 0)                                                         list.hs:101
    // 
    // 0x0013  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0014  0x2E 0x06       JZB 0x001A (+6)
    if (PopStack() == 0) { goto hRList_Clear_0x001A; }

    // clearAllItems(pFirst, etype);                                            list.hs:103
    // 
    // 0x0016  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0017  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0018  0x2C 0x42       CALLB 0x42     // HRList.clearAllItems
    HRList_clearAllItems_0x0042();

    // WriteWord(this+lsLength,   0);         // number of items                list.hs:105
    // 
hRList_Clear_0x001A:
    // 0x001A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001C  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x001E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0020  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsFirst,    0);         // pFirst                         list.hs:106
    // 
    // 0x0022  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0024  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0026  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0027  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0028  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent,   0);         // pRecent                        list.hs:107
    // 
    // 0x002A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002C  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x002E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0030  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent+2, 0);         // iRecent                        list.hs:108
    // 
    // 0x0032  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0034  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0036  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0037  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0039  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:109
    // 
    // 0x003D  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HRList_Remove_0x004B()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type etype = Type(ReadByte(this+lsType));                                list.hs:381
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint length = ReadWord(this+lsLength);                                   list.hs:382
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint pCurrent = ReadWord(this+lsFirst);                                  list.hs:390
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0016  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (index == 0)                                                          list.hs:391
    // 
    // 0x001D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001F  0x2F 0x1E       JNZB 0x003D (+30)
    if (PopStack() != 0) { goto hRList_Remove_0x003D; }

    // uint pNext    = ReadWord(pCurrent+liNext);                               list.hs:393
    // 
    // 0x0021  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0022  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0024  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0026  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0027  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0029  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // clearItem(pCurrent, etype);                                              list.hs:394
    // 
    // 0x002B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002E  0x2C 0x41       CALLB 0x41     // HRList.clearItem
    HRList_clearItem_0x0041();

    // WriteWord(this+lsFirst, pNext);                                          list.hs:395
    // 
    // 0x0030  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0032  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0034  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0035  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0037  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:396
    // 
    // 0x0039  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x003B  0x30 0x40       JB 0x007B (+64)
    goto hRList_Remove_0x007B;

    // uint pPrevious = pCurrent;            // 0th item                        list.hs:399
    // 
hRList_Remove_0x003D:
    // 0x003D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0040  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // pCurrent = ReadWord(pCurrent+liNext); // 1st item                        list.hs:400
    // 
    // 0x0042  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0044  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0046  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0047  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0049  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint count = 1;                                                          list.hs:402
    // 
    // 0x004B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x004D  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // while (count < index)                                                    list.hs:403
    // 
hRList_Remove_0x004F:
    // 0x004F  0x56 0x08 0xFE  PUSHLOCALBB 0xFE08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0052  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0053  0x2E 0x13       JZB 0x0066 (+19)
    if (PopStack() == 0) { goto hRList_Remove_0x0066; }

    // pPrevious = pCurrent;                                                    list.hs:405
    // 
    // 0x0055  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0057  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // pCurrent = ReadWord(pCurrent+liNext);                                    list.hs:406
    // 
    // 0x0059  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x005B  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x005D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005E  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0060  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // count++;                                                                 list.hs:407
    // 
    // 0x0062  0x22 0x08       INCLOCALB 0x08 (BP+8)
    htype = GetStackType(bp+4);
    PutStack(bp+4, GetStack(bp+4)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // count++;                                                                 list.hs:407
    // 
    // 0x0064  0x30 0xEB       JB 0x004F (-21)
    goto hRList_Remove_0x004F;

    // count++;                                                                 list.hs:407
    // 
hRList_Remove_0x0066:
    // 0x0066  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0068  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x006A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x006B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x006D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x006F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0070  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0072  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // clearItem(pCurrent, etype);                                              list.hs:410
    // 
    // 0x0074  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0076  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0077  0x2C 0x41       CALLB 0x41     // HRList.clearItem
    HRList_clearItem_0x0041();

    // }                                                                        list.hs:411
    // 
    // 0x0079  0x28 0x04       DECSP 0x04
    DecSP(2);

    // }                                                                        list.hs:411
    // 
hRList_Remove_0x007B:
    // 0x007B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x007C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x007E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0080  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0081  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0083  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0084  0x01            SUB
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] - valuestack[sp]);
    // 0x0085  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // WriteWord(this+lsLength,   length);  // number of items                  list.hs:413
    // 
    // 0x0086  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0088  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x008A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x008B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x008C  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent,   0);       // pRecent                          list.hs:414
    // 
    // 0x008E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0090  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x0092  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0093  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0094  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+lsRecent+2, 0);       // iRecent                          list.hs:415
    // 
    // 0x0096  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0098  0x1A 0x07       PUSHIB 0x07
    PushStack(0x07, Type::tByte);
    // 0x009A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009B  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x009D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x009F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        list.hs:416
    // 
    // 0x00A1  0x2A 0x0C       RETB 0x0C
    DecSP(6); PopBP();
    return;
}

void HRList_Contains_0x004A()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type etype = Type(ReadByte(this+lsType));                                list.hs:359
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint pCurrent  = ReadWord(this+lsFirst);                                 list.hs:360
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x000D  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (0 == pCurrent) { break; }                                            list.hs:363
    // 
hRList_Contains_0x0013:
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0015  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0016  0x2E 0x04       JZB 0x001A (+4)
    if (PopStack() == 0) { goto hRList_Contains_0x001A; }
    // 0x0018  0x30 0x32       JB 0x004A (+50)
    goto hRList_Contains_0x004A;

    // Type dtype = etype;                                                      list.hs:364
    // 
hRList_Contains_0x001A:
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001C  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint pData = ReadWord(pCurrent+liData);                                  list.hs:365
    // 
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0020  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0021  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0022  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0024  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (IsReferenceType(dtype))                                              list.hs:366
    // 
    // 0x0026  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0028  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x002A  0x2E 0x08       JZB 0x0032 (+8)
    if (PopStack() == 0) { goto hRList_Contains_0x0032; }

    // dtype = Type(ReadByte(pData));                                           list.hs:368
    // 
    // 0x002C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x002E  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0030  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (HRVariant.IsEqual(pData, dtype, item, itype))                        list.hs:370
    // 
hRList_Contains_0x0032:
    // 0x0032  0x56 0x06 0x04  PUSHLOCALBB 0x0406
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+2, &htype), htype);
    // 0x0035  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
    PushStack(GetStack(bp-2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0038  0x2C 0x7E       CALLB 0x7E     // HRVariant.IsEqual
    HRVariant_IsEqual_0x007E();
    // 0x003A  0x2E 0x05       JZB 0x003F (+5)
    if (PopStack() == 0) { goto hRList_Contains_0x003F; }

    // return true;                                                             list.hs:372
    // 
    // 0x003C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x003D  0x2B 0x0E       RETRETB 0x0E
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 7;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // pCurrent = ReadWord(pCurrent+liNext);                                    list.hs:374
    // 
hRList_Contains_0x003F:
    // 0x003F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0040  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0042  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0043  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0045  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // }                                                                        list.hs:375
    // 
    // 0x0046  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0048  0x30 0xCB       JB 0x0013 (-53)
    goto hRList_Contains_0x0013;

    // return false;                                                            list.hs:376
    // 
hRList_Contains_0x004A:
    // 0x004A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004B  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRList_Clone_0x0040()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type etype  = Type(ReadByte(original+lsType));                           list.hs:46
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint clone = HRList.New(etype);                                          list.hs:47
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x2C 0x3F       CALLB 0x3F     // HRList.New
    HRList_New();
    // 0x000E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint pCurrentItem  = ReadWord(original+lsFirst);                         list.hs:48
    // 
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0010  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0012  0x1A 0x05       PUSHIB 0x05
    PushStack(0x05, Type::tByte);
    // 0x0014  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0015  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0017  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint itemData = ReadWord(pCurrentItem+liData);                           list.hs:51
    // 
hRList_Clone_0x0019:
    // 0x0019  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001E  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0020  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Type itype = etype;                                                      list.hs:52
    // 
    // 0x0022  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0023  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0024  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (IsReferenceType(etype))                                              list.hs:53
    // 
    // 0x0026  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0027  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0029  0x2E 0x08       JZB 0x0031 (+8)
    if (PopStack() == 0) { goto hRList_Clone_0x0031; }

    // itype = Type(ReadByte(itemData));                                        list.hs:55
    // 
    // 0x002B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x002D  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x002F  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // Append(clone, itemData, itype); // Append clones the item                list.hs:57
    // 
hRList_Clone_0x0031:
    // 0x0031  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0032  0x56 0x06 0x08  PUSHLOCALBB 0x0806
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0035  0x2C 0x49       CALLB 0x49     // HRList.Append
    HRList_Append_0x0049();

    // pCurrentItem = ReadWord(pCurrentItem+liNext);                            list.hs:58
    // 
    // 0x0037  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0039  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x003B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x003E  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // if (pCurrentItem == 0)                                                   list.hs:59
    // 
    // 0x0040  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0042  0x2F 0x06       JNZB 0x0048 (+6)
    if (PopStack() != 0) { goto hRList_Clone_0x0048; }

    // break;                                                                   list.hs:61
    // 
    // 0x0044  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x0046  0x30 0x06       JB 0x004C (+6)
    goto hRList_Clone_0x004C;

    // }                                                                        list.hs:63
    // 
hRList_Clone_0x0048:
    // 0x0048  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x004A  0x30 0xCF       JB 0x0019 (-49)
    goto hRList_Clone_0x0019;

    // return clone;                                                            list.hs:64
    // 
hRList_Clone_0x004C:
    // 0x004C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x004D  0x2B 0x08       RETRETB 0x08
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 4;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRList_createItem_0x0044()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint pData = itemData;                                                   list.hs:113
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (IsReferenceType(etype))                                              list.hs:114
    // 
    // 0x0005  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0007  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0009  0x2E 0x15       JZB 0x001E (+21)
    if (PopStack() == 0) { goto hRList_createItem_0x001E; }

    // if (IsReferenceType(itype))                                              list.hs:116
    // 
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x000F  0x2E 0x09       JZB 0x0018 (+9)
    if (PopStack() == 0) { goto hRList_createItem_0x0018; }

    // pData = GC.Clone(itemData);                                              list.hs:118
    // 
    // 0x0011  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0013  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0015  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // }                                                                        list.hs:119
    // 
    // 0x0016  0x30 0x08       JB 0x001E (+8)
    goto hRList_createItem_0x001E;

    // pData = HRVariant.CreateValueVariant(itemData, itype);                   list.hs:131
    // 
hRList_createItem_0x0018:
    // 0x0018  0x56 0xFA 0xFE  PUSHLOCALBB 0xFEFA
    PushStack(GetStack(bp-3, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x001B  0x2C 0x77       CALLB 0x77     // HRVariant.CreateValueVariant
    HRVariant_CreateValueVariant_0x0077();
    // 0x001D  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint pitem = Memory.Allocate(4);                                         list.hs:137
    // 
hRList_createItem_0x001E:
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001F  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0021  0x2C 0x17       CALLB 0x17     // Memory.Allocate
    Memory_Allocate_0x0017();
    // 0x0023  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // Memory.WriteWord(pitem+liData, pData); // pData                          list.hs:140
    // 
    // 0x0024  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0025  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0026  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0027  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0028  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // Memory.WriteWord(pitem+liNext, 0);     // pNext                          list.hs:141
    // 
    // 0x002A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x002B  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x002D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return pitem;                                                            list.hs:142
    // 
    // 0x0031  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0032  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRList_clearAllItems_0x0042()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint pNext;                                                              list.hs:88
    // 
hRList_clearAllItems_0x0002:
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x2F 0x04       JNZB 0x0008 (+4)
    if (PopStack() != 0) { goto hRList_clearAllItems_0x0008; }
    // 0x0006  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;

    // pNext    = ReadWord(pCurrent+liNext);                                    list.hs:92
    // 
hRList_clearAllItems_0x0008:
    // 0x0008  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x000F  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // clearItem(pCurrent, etype);                                              list.hs:93
    // 
    // 0x0010  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
    PushStack(GetStack(bp-2, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0013  0x2C 0x41       CALLB 0x41     // HRList.clearItem
    HRList_clearItem_0x0041();

    // pCurrent = pNext;                                                        list.hs:94
    // 
    // 0x0015  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0016  0x1B 0xFC       POPLOCALB 0xFC (BP-4)
    PutStack(bp+-2, PopStack(&htype), htype);

    // }                                                                        list.hs:95
    // 
    // 0x0018  0x30 0xEA       JB 0x0002 (-22)
    goto hRList_clearAllItems_0x0002;
}

void HRList_clearItem_0x0041()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint pData    = ReadWord(pCurrent+liData);                               list.hs:68
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Memory.Free(pCurrent);                                                   list.hs:80
    // 
    // 0x0009  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000B  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();

    // if (IsReferenceType(etype))                                              list.hs:81
    // 
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0011  0x2E 0x05       JZB 0x0016 (+5)
    if (PopStack() == 0) { goto hRList_clearItem_0x0016; }

    // GC.Release(pData);                                                       list.hs:83
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        list.hs:85
    // 
hRList_clearItem_0x0016:
    // 0x0016  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HRPair_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(6, Type.Pair);                                     pair.hs:22
    // 
    // 0x0002  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0004  0x1A 0x10       PUSHIB 0x10
    PushStack(0x10, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteByte(address+ipKType, byte(ktype)); // key type                     pair.hs:23
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x000F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0011  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteByte(address+ipVType, byte(vtype)); // value type                   pair.hs:24
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0019  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x001B  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // if (IsReferenceType(ktype) && (0 != key))                                pair.hs:26
    // 
    // 0x001D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x001F  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0021  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0023  0x2E 0x07       JZB 0x002A (+7)
    if (PopStack() == 0) { goto hRPair_New_0x002A; }
    // 0x0025  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0026  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0028  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0029  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRPair_New_0x002A:
    // 0x002A  0x2E 0x08       JZB 0x0032 (+8)
    if (PopStack() == 0) { goto hRPair_New_0x0032; }

    // key = GC.Clone(key);                                                     pair.hs:28
    // 
    // 0x002C  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x002E  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0030  0x1B 0xFA       POPLOCALB 0xFA (BP-6)
    PutStack(bp+-3, PopStack(&htype), htype);

    // if (IsReferenceType(vtype) && (0 != value))                              pair.hs:30
    // 
hRPair_New_0x0032:
    // 0x0032  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0034  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0036  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0038  0x2E 0x07       JZB 0x003F (+7)
    if (PopStack() == 0) { goto hRPair_New_0x003F; }
    // 0x003A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x003D  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x003E  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRPair_New_0x003F:
    // 0x003F  0x2E 0x08       JZB 0x0047 (+8)
    if (PopStack() == 0) { goto hRPair_New_0x0047; }

    // value = GC.Clone(value);                                                 pair.hs:32
    // 
    // 0x0041  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0043  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x0045  0x1B 0xFE       POPLOCALB 0xFE (BP-2)
    PutStack(bp+-1, PopStack(&htype), htype);

    // WriteWord(address+ipKey, key);                                           pair.hs:34
    // 
hRPair_New_0x0047:
    // 0x0047  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0048  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x004A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x004D  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+ipValue, value);                                       pair.hs:35
    // 
    // 0x004F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0050  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0052  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0053  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0055  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          pair.hs:36
    // 
    // 0x0057  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0058  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRPair_GetValue_0x0058()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // vtype = Type(ReadByte(this+ipVType));                                    pair.hs:81
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0008  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // uint value = ReadWord(this+ipValue);                                     pair.hs:82
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000D  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (vtype == Type.Variant)                                               pair.hs:83
    // 
    // 0x0013  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0015  0x1A 0x14       PUSHIB 0x14
    PushStack(0x14, Type::tByte);
    // 0x0017  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0018  0x2E 0x0A       JZB 0x0022 (+10)
    if (PopStack() == 0) { goto hRPair_GetValue_0x0022; }

    // value = HRVariant.GetValue(value, ref vtype); // returns a clone of the boxed value
    // 
    // 0x001A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001D  0x2C 0x7A       CALLB 0x7A     // HRVariant.GetValue
    HRVariant_GetValue_0x007A();
    // 0x001F  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // }                                                                        pair.hs:86
    // 
    // 0x0020  0x30 0x11       JB 0x0031 (+17)
    goto hRPair_GetValue_0x0031;

    // else if (IsReferenceType(vtype))                                         pair.hs:87
    // 
hRPair_GetValue_0x0022:
    // 0x0022  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0024  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0026  0x2E 0x0B       JZB 0x0031 (+11)
    if (PopStack() == 0) { goto hRPair_GetValue_0x0031; }

    // value = GC.Clone(value);                                                 pair.hs:89
    // 
    // 0x0028  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0029  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x002B  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // vtype = Type(ReadByte(value));                                           pair.hs:90
    // 
    // 0x002C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002D  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x002F  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // }                                                                        pair.hs:91
    // 
hRPair_GetValue_0x0031:
    // 0x0031  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0032  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRPair_GetKey_0x0057()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // ktype = Type(ReadByte(this+ipKType));                                    pair.hs:70
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0008  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // uint key   = ReadWord(this+ipKey);                                       pair.hs:71
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000D  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (IsReferenceType(ktype))                                              pair.hs:72
    // 
    // 0x0013  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0015  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0017  0x2E 0x0B       JZB 0x0022 (+11)
    if (PopStack() == 0) { goto hRPair_GetKey_0x0022; }

    // key = GC.Clone(key);                                                     pair.hs:74
    // 
    // 0x0019  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001A  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x001C  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // ktype = Type(ReadByte(key)); // should be Type.String ..                 pair.hs:75
    // 
    // 0x001D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001E  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0020  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return key;                                                              pair.hs:77
    // 
hRPair_GetKey_0x0022:
    // 0x0022  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0023  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRPair_Clear_0x0056()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type dkType = Type(ReadByte(this+ipKType));                              pair.hs:51
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Type dvType = Type(ReadByte(this+ipVType));                              pair.hs:52
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint key   = ReadWord(this+ipKey);                                       pair.hs:54
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0016  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint value = ReadWord(this+ipValue);                                     pair.hs:55
    // 
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0020  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0022  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0023  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0025  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (IsReferenceType(dkType) && (0 != key))                               pair.hs:57
    // 
    // 0x0027  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0028  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x002A  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x002C  0x2E 0x07       JZB 0x0033 (+7)
    if (PopStack() == 0) { goto hRPair_Clear_0x0033; }
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0031  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0032  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRPair_Clear_0x0033:
    // 0x0033  0x2E 0x06       JZB 0x0039 (+6)
    if (PopStack() == 0) { goto hRPair_Clear_0x0039; }

    // GC.Release(key);                                                         pair.hs:59
    // 
    // 0x0035  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0037  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // if (IsReferenceType(dvType) && (0 != value))                             pair.hs:61
    // 
hRPair_Clear_0x0039:
    // 0x0039  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003A  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x003C  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x003E  0x2E 0x07       JZB 0x0045 (+7)
    if (PopStack() == 0) { goto hRPair_Clear_0x0045; }
    // 0x0040  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0041  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0043  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0044  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRPair_Clear_0x0045:
    // 0x0045  0x2E 0x06       JZB 0x004B (+6)
    if (PopStack() == 0) { goto hRPair_Clear_0x004B; }

    // GC.Release(value);                                                       pair.hs:63
    // 
    // 0x0047  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0049  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // WriteWord(this+ipKey, 0);                                                pair.hs:65
    // 
hRPair_Clear_0x004B:
    // 0x004B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x004D  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x004F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0050  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0051  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+ipValue, 0);                                              pair.hs:66
    // 
    // 0x0053  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0055  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0057  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0058  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0059  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        pair.hs:67
    // 
    // 0x005B  0x2A 0x0A       RETB 0x0A
    DecSP(5); PopBP();
    return;
}

void HRPair_Clone_0x0055()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type dkType = Type(ReadByte(original+ipKType));                          pair.hs:41
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Type dvType = Type(ReadByte(original+ipVType));                          pair.hs:42
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint key   = ReadWord(original+ipKey);                                   pair.hs:44
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0016  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint value = ReadWord(original+ipValue);                                 pair.hs:45
    // 
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0020  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0022  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0023  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0025  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // return New(dkType, key, dvType, value);                                  pair.hs:47
    // 
    // 0x0027  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0028  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002A  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x002B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x002D  0x2C 0x54       CALLB 0x54     // HRPair.New
    HRPair_New();
    // 0x002F  0x2B 0x0A       RETRETB 0x0A
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 5;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRVariant_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(3, Type.Variant);                                  variant.hs:51
    // 
    // 0x0002  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0004  0x1A 0x14       PUSHIB 0x14
    PushStack(0x14, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteByte(address+ivType, byte(vtype));                                  variant.hs:52
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0011  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // if (IsReferenceType(vtype))                                              variant.hs:53
    // 
    // 0x0013  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0015  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0017  0x2E 0x08       JZB 0x001F (+8)
    if (PopStack() == 0) { goto hRVariant_New_0x001F; }

    // value = GC.Clone(value);                                                 variant.hs:55
    // 
    // 0x0019  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x001B  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x001D  0x1B 0xFC       POPLOCALB 0xFC (BP-4)
    PutStack(bp+-2, PopStack(&htype), htype);

    // WriteWord(address+ivValue, value);                                       variant.hs:57
    // 
hRVariant_New_0x001F:
    // 0x001F  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0020  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0022  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0023  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0025  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          variant.hs:58
    // 
    // 0x0027  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0028  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRVariant_Clear_0x007D()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type vtype = Type(ReadByte(this+ivType));                                variant.hs:87
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint value = ReadWord(this+ivValue);                                     variant.hs:88
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (IsReferenceType(vtype) && (0 != value))                              variant.hs:90
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0016  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0018  0x2E 0x06       JZB 0x001E (+6)
    if (PopStack() == 0) { goto hRVariant_Clear_0x001E; }
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x001C  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x001D  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRVariant_Clear_0x001E:
    // 0x001E  0x2E 0x05       JZB 0x0023 (+5)
    if (PopStack() == 0) { goto hRVariant_Clear_0x0023; }

    // GC.Release(value);                                                       variant.hs:92
    // 
    // 0x0020  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0021  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // WriteWord(this+ivType, 0);                                               variant.hs:94
    // 
hRVariant_Clear_0x0023:
    // 0x0023  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0025  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0027  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0028  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0029  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+ivValue, 0);                                              variant.hs:95
    // 
    // 0x002B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x002F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0030  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0031  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        variant.hs:96
    // 
    // 0x0033  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HRVariant_Clone_0x007C()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type vtype = Type(ReadByte(original+ivType));                            variant.hs:81
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint value = ReadWord(original+ivValue);                                 variant.hs:82
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // return New(value, vtype);                                                variant.hs:83
    // 
    // 0x0013  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0014  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0015  0x2C 0x79       CALLB 0x79     // HRVariant.New
    HRVariant_New();
    // 0x0017  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRVariant_CreateValueVariant_0x0077()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(3, Type.Variant);                                  variant.hs:25
    // 
    // 0x0002  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0004  0x1A 0x14       PUSHIB 0x14
    PushStack(0x14, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteByte(address+ivType, byte(vtype));                                  variant.hs:26
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0011  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteWord(address+ivValue, value);                                       variant.hs:27
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0019  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          variant.hs:28
    // 
    // 0x001B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001C  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRVariant_GetValue_0x007A()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // vtype = Type(ReadByte(this+ivType));                                     variant.hs:63
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0008  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // uint value = ReadWord(this+ivValue);                                     variant.hs:64
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0012  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (IsReferenceType(vtype))                                              variant.hs:65
    // 
    // 0x0013  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x0015  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0017  0x2E 0x0B       JZB 0x0022 (+11)
    if (PopStack() == 0) { goto hRVariant_GetValue_0x0022; }

    // value = GC.Clone(value);                                                 variant.hs:67
    // 
    // 0x0019  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001A  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x001C  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // vtype = Type(ReadByte(value));                                           variant.hs:68
    // 
    // 0x001D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001E  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0020  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return value;                                                            variant.hs:70
    // 
hRVariant_GetValue_0x0022:
    // 0x0022  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0023  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRVariant_IsEqual_0x007E()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // bool lref = Types.IsReferenceType(ltype);                                variant.hs:100
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0006  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // bool rref = Types.IsReferenceType(rtype);                                variant.hs:101
    // 
    // 0x0007  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0008  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000A  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x000C  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // if (lref == rref)                                                        variant.hs:102
    // 
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x000F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0010  0x31 0xAD 0x00  JZW 0x00BD (+173)
    if (PopStack() == 0) { goto hRVariant_IsEqual_0x00BD; }

    // if (lref)                                                                variant.hs:104
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x2E 0x33       JZB 0x0047 (+51)
    if (PopStack() == 0) { goto hRVariant_IsEqual_0x0047; }

    // if (ltype == rtype)                                                      variant.hs:107
    // 
    // 0x0016  0x56 0xFA 0xFE  PUSHLOCALBB 0xFEFA
    PushStack(GetStack(bp-3, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0019  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x001A  0x2E 0x2B       JZB 0x0045 (+43)
    if (PopStack() == 0) { goto hRVariant_IsEqual_0x0045; }

    // switch (ltype)                                                           variant.hs:109
    // 
    // 0x001C  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x001E  0x30 0x1E       JB 0x003C (+30)
    goto hRVariant_IsEqual_0x003C;

    // return 0 == HRString.Compare(left, right);                               variant.hs:113
    // 
hRVariant_IsEqual_0x0020:
    // 0x0020  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0021  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0024  0x2C 0x74       CALLB 0x74     // HRString.Compare
    HRString_Compare_0x0074();
    // 0x0026  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0027  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return 0 != External.LongEQ(left, right);                                variant.hs:117
    // 
hRVariant_IsEqual_0x0029:
    // 0x0029  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002A  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x002D  0x2C 0x8E       CALLB 0x8E     // External.LongEQ
    External_LongEQ();
    // 0x002F  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0030  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // ErrorDump(75);                                                           variant.hs:126
    // 
hRVariant_IsEqual_0x0032:
    // 0x0032  0x1A 0x4B       PUSHIB 0x4B
    PushStack(0x4B, Type::tByte);
    // 0x0034  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x0A;                                                            variant.hs:127
    // 
    // 0x0036  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0038  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();
    // 0x003A  0x30 0x0B       JB 0x0045 (+11)
    goto hRVariant_IsEqual_0x0045;
hRVariant_IsEqual_0x003C:
    // 0x003C  0x68 0x0E 0x0F  JIXB [0x0E..0x0F] -0x001E

    switch(PopStack())
    {
        case 0x0E: { goto hRVariant_IsEqual_0x0029; }
        case 0x0F: { goto hRVariant_IsEqual_0x0020; }
    }
    // 0x0043  0x30 0xEF       JB 0x0032 (-17)
    goto hRVariant_IsEqual_0x0032;

    // }                                                                        variant.hs:131
    // 
hRVariant_IsEqual_0x0045:
    // 0x0045  0x30 0x78       JB 0x00BD (+120)
    goto hRVariant_IsEqual_0x00BD;

    // }                                                                        variant.hs:131
    // 
hRVariant_IsEqual_0x0047:
    // 0x0047  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0049  0x30 0x69       JB 0x00B2 (+105)
    goto hRVariant_IsEqual_0x00B2;

    // if (rtype != Type.Bool)                                                  variant.hs:139
    // 
hRVariant_IsEqual_0x004B:
    // 0x004B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x004D  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x004F  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0050  0x2E 0x05       JZB 0x0055 (+5)
    if (PopStack() == 0) { goto hRVariant_IsEqual_0x0055; }

    // return false;                                                            variant.hs:141
    // 
    // 0x0052  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0053  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return left == right;                                                    variant.hs:143
    // 
hRVariant_IsEqual_0x0055:
    // 0x0055  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0058  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0059  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // if (rtype != Type.Char)                                                  variant.hs:147
    // 
hRVariant_IsEqual_0x005B:
    // 0x005B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x005D  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x005E  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x005F  0x2E 0x05       JZB 0x0064 (+5)
    if (PopStack() == 0) { goto hRVariant_IsEqual_0x0064; }

    // return false;                                                            variant.hs:149
    // 
    // 0x0061  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0062  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // return left == right;                                                    variant.hs:151
    // 
hRVariant_IsEqual_0x0064:
    // 0x0064  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0067  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0068  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // switch (rtype)                                                           variant.hs:156
    // 
hRVariant_IsEqual_0x006A:
    // 0x006A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x006C  0x30 0x18       JB 0x0084 (+24)
    goto hRVariant_IsEqual_0x0084;

    // return left == right;                                                    variant.hs:161
    // 
hRVariant_IsEqual_0x006E:
    // 0x006E  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0071  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0072  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // if (0 == (0x8000 & right))                                               variant.hs:165
    // 
hRVariant_IsEqual_0x0074:
    // 0x0074  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0075  0x37 0x00 0x80  PUSHIW 0x8000
    PushStack(0x8000, Type::tUInt);
    // 0x0078  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x007A  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x007B  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x007C  0x2E 0x41       JZB 0x00BD (+65)
    if (PopStack() == 0) { goto hRVariant_IsEqual_0x00BD; }

    // return left == right;                                                    variant.hs:167
    // 
    // 0x007E  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0081  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0082  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        variant.hs:168
    // 
hRVariant_IsEqual_0x0084:
    // 0x0084  0x68 0x02 0x04  JIXB [0x02..0x04] -0x0018

    switch(PopStack())
    {
        case 0x02: { goto hRVariant_IsEqual_0x0074; }
        case 0x03: { goto hRVariant_IsEqual_0x006E; }
        case 0x04: { goto hRVariant_IsEqual_0x006E; }
    }
    // 0x008C  0x30 0x31       JB 0x00BD (+49)
    goto hRVariant_IsEqual_0x00BD;

    // switch (rtype)                                                           variant.hs:174
    // 
hRVariant_IsEqual_0x008E:
    // 0x008E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0090  0x30 0x18       JB 0x00A8 (+24)
    goto hRVariant_IsEqual_0x00A8;

    // if (0 == (0x8000 & left))                                                variant.hs:179
    // 
hRVariant_IsEqual_0x0092:
    // 0x0092  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0093  0x37 0x00 0x80  PUSHIW 0x8000
    PushStack(0x8000, Type::tUInt);
    // 0x0096  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0098  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0099  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x009A  0x2E 0x23       JZB 0x00BD (+35)
    if (PopStack() == 0) { goto hRVariant_IsEqual_0x00BD; }

    // return left == right;                                                    variant.hs:181
    // 
    // 0x009C  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x009F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00A0  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        variant.hs:182
    // 
hRVariant_IsEqual_0x00A2:
    // 0x00A2  0x56 0xF8 0xFC  PUSHLOCALBB 0xFCF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x00A5  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00A6  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
hRVariant_IsEqual_0x00A8:
    // 0x00A8  0x68 0x02 0x04  JIXB [0x02..0x04] -0x0018

    switch(PopStack())
    {
        case 0x02: { goto hRVariant_IsEqual_0x00A2; }
        case 0x03: { goto hRVariant_IsEqual_0x0092; }
        case 0x04: { goto hRVariant_IsEqual_0x0092; }
    }
    // 0x00B0  0x30 0x0D       JB 0x00BD (+13)
    goto hRVariant_IsEqual_0x00BD;
hRVariant_IsEqual_0x00B2:
    // 0x00B2  0x68 0x01 0x06  JIXB [0x01..0x06] -0x0069

    switch(PopStack())
    {
        case 0x01: { goto hRVariant_IsEqual_0x005B; }
        case 0x02: { goto hRVariant_IsEqual_0x008E; }
        case 0x03: { goto hRVariant_IsEqual_0x006A; }
        case 0x04: { goto hRVariant_IsEqual_0x006A; }
        case 0x06: { goto hRVariant_IsEqual_0x004B; }
    }

    // return false;                                                            variant.hs:193
    // 
hRVariant_IsEqual_0x00BD:
    // 0x00BD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00BE  0x2B 0x0C       RETRETB 0x0C
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 6;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_New()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint address = GC.New(8, Type.Dictionary);                               dictionary.hs:69
    // 
    // 0x0002  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0004  0x1A 0x13       PUSHIB 0x13
    PushStack(0x13, Type::tByte);
    // 0x0006  0x2C 0x1D       CALLB 0x1D     // GC.New
    GC_New();
    // 0x0008  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteByte(address+idKType, byte(ktype)); // key type                     dictionary.hs:70
    // 
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x000C  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000F  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0011  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteByte(address+idVType, byte(vtype)); // value type                   dictionary.hs:71
    // 
    // 0x0013  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0014  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0016  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0017  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0019  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x001B  0x24 0xAA       SYSCALL0 0xAA  // Memory.WriteByte
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)valuestack[sp+1];

    // WriteWord(address+idCount, 0);           // count                        dictionary.hs:72
    // 
    // 0x001D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001E  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0020  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0021  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0022  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+idCapacity, 0);        // capacity                     dictionary.hs:73
    // 
    // 0x0024  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0025  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0027  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0028  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0029  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(address+idEntries, 0);         // pEntries                     dictionary.hs:74
    // 
    // 0x002B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x002C  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x002E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0030  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return address;                                                          dictionary.hs:75
    // 
    // 0x0032  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0033  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_GetCount_0x002C()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // return ReadWord(this+idCount);                                           dictionary.hs:80
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0008  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_Set_0x0035()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type dkType = Type(ReadByte(this+idKType));                              dictionary.hs:594
    // 
    // 0x0002  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Type dvType = Type(ReadByte(this+idVType));                              dictionary.hs:595
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x000D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint count    = ReadWord(this + idCount);                                dictionary.hs:606
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x0016  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint capacity = ReadWord(this + idCapacity);                             dictionary.hs:607
    // 
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001E  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x0020  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0022  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0023  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0025  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // bool valueKeys = (dkType != Type.String);                                dictionary.hs:608
    // 
    // 0x0027  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0028  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0029  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x002B  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x002C  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (4 * (count + 1) > capacity * 3) // max load of 75%                   dictionary.hs:610
    // 
    // 0x002E  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0030  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0032  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0033  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0034  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0035  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0037  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0039  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x003A  0x07            GT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] > valuestack[sp]);
    // 0x003B  0x2E 0x2B       JZB 0x0066 (+43)
    if (PopStack() == 0) { goto hRDictionary_Set_0x0066; }

    // uint newCapacity = 32;                                                   dictionary.hs:612
    // 
    // 0x003D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003E  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x0040  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (capacity >= 128)                                                     dictionary.hs:613
    // 
    // 0x0042  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0044  0x1A 0x80       PUSHIB 0x80
    PushStack(0x80, Type::tByte);
    // 0x0046  0x09            GE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] >= valuestack[sp]);
    // 0x0047  0x2E 0x0B       JZB 0x0052 (+11)
    if (PopStack() == 0) { goto hRDictionary_Set_0x0052; }

    // newCapacity = capacity + 32;                                             dictionary.hs:615
    // 
    // 0x0049  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x004B  0x1A 0x20       PUSHIB 0x20
    PushStack(0x20, Type::tByte);
    // 0x004D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004E  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:616
    // 
    // 0x0050  0x30 0x0F       JB 0x005F (+15)
    goto hRDictionary_Set_0x005F;

    // else if (capacity > 0)                                                   dictionary.hs:617
    // 
hRDictionary_Set_0x0052:
    // 0x0052  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0054  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0055  0x07            GT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] > valuestack[sp]);
    // 0x0056  0x2E 0x09       JZB 0x005F (+9)
    if (PopStack() == 0) { goto hRDictionary_Set_0x005F; }

    // newCapacity = capacity*2;                                                dictionary.hs:619
    // 
    // 0x0058  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x005A  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x005C  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x005D  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:620
    // 
hRDictionary_Set_0x005F:
    // 0x005F  0x56 0xF6 0x0A  PUSHLOCALBB 0x0AF6
    PushStack(GetStack(bp-5, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x0062  0x2C 0x33       CALLB 0x33     // HRDictionary.adjustCapacity
    HRDictionary_adjustCapacity_0x0033();

    // }                                                                        dictionary.hs:622
    // 
    // 0x0064  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        dictionary.hs:622
    // 
hRDictionary_Set_0x0066:
    // 0x0066  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0067  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x0069  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x006B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x006C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x006E  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // uint capacity = ReadWord(this+idCapacity);                               dictionary.hs:625
    // 
    // 0x0070  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0071  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x0073  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0075  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0076  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0078  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint hash;                                                               dictionary.hs:627
    // 
    // 0x007A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint hash;                                                               dictionary.hs:627
    // 
    // 0x007B  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x007D  0x2F 0x08       JNZB 0x0085 (+8)
    if (PopStack() != 0) { goto hRDictionary_Set_0x0085; }

    // hash = hashKey16(key);                                                   dictionary.hs:630
    // 
    // 0x007F  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0081  0x2C 0x2A       CALLB 0x2A     // HRDictionary.hashKey16
    HRDictionary_hashKey16_0x002A();
    // 0x0083  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // uint pEntry = findEntry(pEntries, capacity, key, hash, valueKeys);
    // 
hRDictionary_Set_0x0085:
    // 0x0085  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0086  0x56 0x0A 0x06  PUSHLOCALBB 0x060A
    PushStack(GetStack(bp+5, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0089  0x56 0xF8 0x0E  PUSHLOCALBB 0x0EF8
    PushStack(GetStack(bp-4, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x008C  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x008E  0x2C 0x31       CALLB 0x31     // HRDictionary.findEntry
    HRDictionary_findEntry_0x0031();
    // 0x0090  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // uint ekey   = ReadWord(pEntry+ieKey);                                    dictionary.hs:634
    // 
    // 0x0092  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0093  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0095  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0096  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0097  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0099  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // uint evalue = ReadWord(pEntry+ieValue);                                  dictionary.hs:635
    // 
    // 0x009B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x009C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x009E  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x00A0  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00A1  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00A3  0x1B 0x14       POPLOCALB 0x14 (BP+20)
    PutStack(bp+10, PopStack(&htype), htype);

    // bool isNewKey = (ekey == 0);                                             dictionary.hs:637
    // 
    // 0x00A5  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A6  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x00A8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A9  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00AA  0x1B 0x16       POPLOCALB 0x16 (BP+22)
    PutStack(bp+11, PopStack(&htype), htype);

    // bool existingValue = evalue != 0;                                        dictionary.hs:638
    // 
    // 0x00AC  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00AD  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x00AF  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00B0  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00B1  0x1B 0x18       POPLOCALB 0x18 (BP+24)
    PutStack(bp+12, PopStack(&htype), htype);

    // if (valueKeys)                                                           dictionary.hs:639
    // 
    // 0x00B3  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00B5  0x2E 0x20       JZB 0x00D5 (+32)
    if (PopStack() == 0) { goto hRDictionary_Set_0x00D5; }

    // bool isOccupied = ReadByte(pEntry+ieOccupied) != 0;                      dictionary.hs:641
    // 
    // 0x00B7  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00B8  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x00BA  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x00BC  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00BD  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x00BF  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00C0  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00C1  0x1B 0x1A       POPLOCALB 0x1A (BP+26)
    PutStack(bp+13, PopStack(&htype), htype);

    // isNewKey = !isOccupied;                                                  dictionary.hs:642
    // 
    // 0x00C3  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
    PushStack(GetStack(bp +13, &htype), htype);
    // 0x00C5  0x41            BOOLNOT
    top = PopStack();
    PushStack((top == 0) ? 1 : 0, Type::tBool);
    // 0x00C6  0x1B 0x16       POPLOCALB 0x16 (BP+22)
    PutStack(bp+11, PopStack(&htype), htype);

    // existingValue = existingValue && isOccupied;                             dictionary.hs:643
    // 
    // 0x00C8  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
    PushStack(GetStack(bp +12, &htype), htype);
    // 0x00CA  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x00CC  0x2E 0x05       JZB 0x00D1 (+5)
    if (PopStack() == 0) { goto hRDictionary_Set_0x00D1; }
    // 0x00CE  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
    PushStack(GetStack(bp +13, &htype), htype);
    // 0x00D0  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRDictionary_Set_0x00D1:
    // 0x00D1  0x1B 0x18       POPLOCALB 0x18 (BP+24)
    PutStack(bp+12, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:644
    // 
    // 0x00D3  0x28 0x02       DECSP 0x02
    DecSP(1);

    // }                                                                        dictionary.hs:644
    // 
hRDictionary_Set_0x00D5:
    // 0x00D5  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
    PushStack(GetStack(bp +11, &htype), htype);
    // 0x00D7  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x00D9  0x2E 0x07       JZB 0x00E0 (+7)
    if (PopStack() == 0) { goto hRDictionary_Set_0x00E0; }
    // 0x00DB  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x00DD  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00DE  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x00DF  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRDictionary_Set_0x00E0:
    // 0x00E0  0x2E 0x12       JZB 0x00F2 (+18)
    if (PopStack() == 0) { goto hRDictionary_Set_0x00F2; }

    // WriteWord(this+idCount, ReadWord(this+idCount)+1);                       dictionary.hs:647
    // 
    // 0x00E2  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x00E4  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00E6  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00E7  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x00E9  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00EB  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00EC  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00EE  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x00EF  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00F0  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (valueKeys)                                                           dictionary.hs:649
    // 
hRDictionary_Set_0x00F2:
    // 0x00F2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00F4  0x2E 0x14       JZB 0x0108 (+20)
    if (PopStack() == 0) { goto hRDictionary_Set_0x0108; }

    // WriteWord(pEntry+ieKey, key);                                            dictionary.hs:651
    // 
    // 0x00F6  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x00F8  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00F9  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00FA  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x00FC  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(pEntry+ieOccupied, 1);                                         dictionary.hs:652
    // 
    // 0x00FE  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0100  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0102  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0103  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0104  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        dictionary.hs:653
    // 
    // 0x0106  0x30 0x1F       JB 0x0125 (+31)
    goto hRDictionary_Set_0x0125;

    // }                                                                        dictionary.hs:653
    // 
hRDictionary_Set_0x0108:
    // 0x0108  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0109  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x010B  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x010C  0x2E 0x06       JZB 0x0112 (+6)
    if (PopStack() == 0) { goto hRDictionary_Set_0x0112; }

    // GC.Release(ekey);                                                        dictionary.hs:658
    // 
    // 0x010E  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x0110  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // WriteWord(pEntry+ieKey, GC.Clone(key));                                  dictionary.hs:660
    // 
hRDictionary_Set_0x0112:
    // 0x0112  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0114  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0115  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0116  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x0118  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x011A  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(pEntry+ieHash, hash);                                          dictionary.hs:661
    // 
    // 0x011C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x011E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0120  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0121  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0123  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if (IsReferenceType(dvType))                                             dictionary.hs:663
    // 
hRDictionary_Set_0x0125:
    // 0x0125  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0126  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0128  0x2E 0x17       JZB 0x013F (+23)
    if (PopStack() == 0) { goto hRDictionary_Set_0x013F; }

    // if (existingValue)                                                       dictionary.hs:665
    // 
    // 0x012A  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
    PushStack(GetStack(bp +12, &htype), htype);
    // 0x012C  0x2E 0x06       JZB 0x0132 (+6)
    if (PopStack() == 0) { goto hRDictionary_Set_0x0132; }

    // GC.Release(evalue); // replacing an existing entry                       dictionary.hs:667
    // 
    // 0x012E  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x0130  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // WriteWord(pEntry+ieValue, GC.Clone(value));                              dictionary.hs:669
    // 
hRDictionary_Set_0x0132:
    // 0x0132  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0134  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0136  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0137  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0139  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x013B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        dictionary.hs:670
    // 
    // 0x013D  0x2A 0x24       RETB 0x24
    DecSP(18); PopBP();
    return;

    // }                                                                        dictionary.hs:670
    // 
hRDictionary_Set_0x013F:
    // 0x013F  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0141  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0143  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0144  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0146  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        dictionary.hs:675
    // 
    // 0x0148  0x2A 0x24       RETB 0x24
    DecSP(18); PopBP();
    return;
}

void HRDictionary_Next_0x0034()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x05       ENTERB 0x05
    PushBP();
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);

    // Type ktype;                                                              dictionary.hs:578
    // 
    // 0x0002  0x56 0xFA 0xFC  PUSHLOCALBB 0xFCFA
    PushStack(GetStack(bp-3, &htype), htype);
    PushStack(GetStack(bp-2, &htype), htype);
    // 0x0005  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0007  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0009  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x000B  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x000D  0x2C 0x30       CALLB 0x30     // HRDictionary.next
    HRDictionary_next_0x0030();
    // 0x000F  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (found && (0 != value) && (vtype == Type.Variant))                    dictionary.hs:584
    // 
    // 0x0011  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0013  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x0015  0x2E 0x11       JZB 0x0026 (+17)
    if (PopStack() == 0) { goto hRDictionary_Next_0x0026; }
    // 0x0017  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0018  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x001A  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x001B  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
    // 0x001C  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x001E  0x2E 0x08       JZB 0x0026 (+8)
    if (PopStack() == 0) { goto hRDictionary_Next_0x0026; }
    // 0x0020  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0022  0x1A 0x14       PUSHIB 0x14
    PushStack(0x14, Type::tByte);
    // 0x0024  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0025  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRDictionary_Next_0x0026:
    // 0x0026  0x2E 0x0A       JZB 0x0030 (+10)
    if (PopStack() == 0) { goto hRDictionary_Next_0x0030; }

    // value = HRVariant.UnBox(value, ref vtype); // no cloning                 dictionary.hs:586
    // 
    // 0x0028  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x002A  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x002C  0x2C 0x7B       CALLB 0x7B     // HRVariant.UnBox
    HRVariant_UnBox_0x007B();
    // 0x002E  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // hrpair = HRPair.New(ktype, key, vtype, value); // clones reference type members, unboxes variants
    // 
hRDictionary_Next_0x0030:
    // 0x0030  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0031  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0032  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0035  0x2C 0x54       CALLB 0x54     // HRPair.New
    HRPair_New();
    // 0x0037  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return found;                                                            dictionary.hs:589
    // 
    // 0x0039  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x003B  0x2B 0x10       RETRETB 0x10
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 8;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_Contains_0x0037()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type dkType = Type(ReadByte(this+idKType));                              dictionary.hs:717
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // bool valueKeys = (dkType != Type.String);                                dictionary.hs:718
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x000E  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x000F  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint pEntries = ReadWord(this+idEntries);                                dictionary.hs:719
    // 
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0011  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0013  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0015  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0016  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint capacity = ReadWord(this+idCapacity);                               dictionary.hs:720
    // 
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x001D  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x001F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0020  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0022  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint hash;                                                               dictionary.hs:721
    // 
    // 0x0024  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint hash;                                                               dictionary.hs:721
    // 
    // 0x0025  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0026  0x2F 0x08       JNZB 0x002E (+8)
    if (PopStack() != 0) { goto hRDictionary_Contains_0x002E; }

    // hash = hashKey16(key);                                                   dictionary.hs:724
    // 
    // 0x0028  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002A  0x2C 0x2A       CALLB 0x2A     // HRDictionary.hashKey16
    HRDictionary_hashKey16_0x002A();
    // 0x002C  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint pEntry = findEntry(pEntries, capacity, key, hash, valueKeys);
    // 
hRDictionary_Contains_0x002E:
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0032  0x56 0xFE 0x08  PUSHLOCALBB 0x08FE
    PushStack(GetStack(bp-1, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0035  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0036  0x2C 0x31       CALLB 0x31     // HRDictionary.findEntry
    HRDictionary_findEntry_0x0031();
    // 0x0038  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // return validEntry(pEntry, valueKeys);                                    dictionary.hs:727
    // 
    // 0x003A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x003C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003D  0x2C 0x32       CALLB 0x32     // HRDictionary.validEntry
    HRDictionary_validEntry_0x0032();
    // 0x003F  0x2B 0x10       RETRETB 0x10
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 8;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_Get_0x0036()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type dkType = Type(ReadByte(this+idKType));                              dictionary.hs:680
    // 
    // 0x0002  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // bool valueKeys = (dkType != Type.String);                                dictionary.hs:681
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x000E  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x000F  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint pEntries = ReadWord(this+idEntries);                                dictionary.hs:682
    // 
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0011  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x0013  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0015  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0016  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint capacity = ReadWord(this+idCapacity);                               dictionary.hs:683
    // 
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x001D  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x001F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0020  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0022  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint hash;                                                               dictionary.hs:685
    // 
    // 0x0024  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint hash;                                                               dictionary.hs:685
    // 
    // 0x0025  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0026  0x2F 0x08       JNZB 0x002E (+8)
    if (PopStack() != 0) { goto hRDictionary_Get_0x002E; }

    // hash = hashKey16(key);                                                   dictionary.hs:688
    // 
    // 0x0028  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x002A  0x2C 0x2A       CALLB 0x2A     // HRDictionary.hashKey16
    HRDictionary_hashKey16_0x002A();
    // 0x002C  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint pEntry = findEntry(pEntries, capacity, key, hash, valueKeys);
    // 
hRDictionary_Get_0x002E:
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x56 0x04 0x06  PUSHLOCALBB 0x0604
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+3, &htype), htype);
    // 0x0032  0x56 0xFC 0x08  PUSHLOCALBB 0x08FC
    PushStack(GetStack(bp-2, &htype), htype);
    PushStack(GetStack(bp+4, &htype), htype);
    // 0x0035  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0036  0x2C 0x31       CALLB 0x31     // HRDictionary.findEntry
    HRDictionary_findEntry_0x0031();
    // 0x0038  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (!validEntry(pEntry, valueKeys))                                      dictionary.hs:691
    // 
    // 0x003A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x003C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x003D  0x2C 0x32       CALLB 0x32     // HRDictionary.validEntry
    HRDictionary_validEntry_0x0032();
    // 0x003F  0x2F 0x0D       JNZB 0x004C (+13)
    if (PopStack() != 0) { goto hRDictionary_Get_0x004C; }

    // ErrorDump(89);                                                           dictionary.hs:693
    // 
    // 0x0041  0x1A 0x59       PUSHIB 0x59
    PushStack(0x59, Type::tByte);
    // 0x0043  0x2C 0x04       CALLB 0x04     // Runtime.ErrorDump
    Runtime_ErrorDump_0x0004();

    // Error = 0x03; // no entry for key in dictionary                          dictionary.hs:694
    // 
    // 0x0045  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0047  0x2C 0x0D       CALLB 0x0D     // Minimal.Error_Set
    Minimal_Error_Set_0x000D();

    // return 0;                                                                dictionary.hs:695
    // 
    // 0x0049  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004A  0x2B 0x12       RETRETB 0x12
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 9;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // Type dvType = Type(ReadByte(this+idVType));                              dictionary.hs:697
    // 
hRDictionary_Get_0x004C:
    // 0x004C  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
    PushStack(GetStack(bp -3, &htype), htype);
    // 0x004F  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0051  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0052  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0054  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // uint value = ReadWord(pEntry+ieValue);                                   dictionary.hs:698
    // 
    // 0x0056  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0057  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0059  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x005B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x005E  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // vtype = dvType;                                                          dictionary.hs:699
    // 
    // 0x0060  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0062  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // if (0 != value)                                                          dictionary.hs:700
    // 
    // 0x0064  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0065  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0067  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0068  0x2E 0x24       JZB 0x008C (+36)
    if (PopStack() == 0) { goto hRDictionary_Get_0x008C; }

    // if (vtype == Type.Variant)                                               dictionary.hs:702
    // 
    // 0x006A  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x006C  0x1A 0x14       PUSHIB 0x14
    PushStack(0x14, Type::tByte);
    // 0x006E  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x006F  0x2E 0x0B       JZB 0x007A (+11)
    if (PopStack() == 0) { goto hRDictionary_Get_0x007A; }

    // value = HRVariant.GetValue(value, ref vtype); // returns a clone of the boxed value
    // 
    // 0x0071  0x56 0x0E 0xFE  PUSHLOCALBB 0xFE0E
    PushStack(GetStack(bp+7, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x0074  0x2C 0x7A       CALLB 0x7A     // HRVariant.GetValue
    HRVariant_GetValue_0x007A();
    // 0x0076  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:705
    // 
    // 0x0078  0x30 0x14       JB 0x008C (+20)
    goto hRDictionary_Get_0x008C;

    // else if (IsReferenceType(vtype))                                         dictionary.hs:706
    // 
hRDictionary_Get_0x007A:
    // 0x007A  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x007C  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x007E  0x2E 0x0E       JZB 0x008C (+14)
    if (PopStack() == 0) { goto hRDictionary_Get_0x008C; }

    // vtype = Type(ReadByte(value));                                           dictionary.hs:708
    // 
    // 0x0080  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0082  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0084  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // value = GC.Clone(value);                                                 dictionary.hs:709
    // 
    // 0x0086  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x0088  0x2C 0x1E       CALLB 0x1E     // GC.Clone
    GC_Clone_0x001E();
    // 0x008A  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
    PutStack(bp+7, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:710
    // 
hRDictionary_Get_0x008C:
    // 0x008C  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
    PushStack(GetStack(bp +7, &htype), htype);
    // 0x008E  0x2B 0x16       RETRETB 0x16
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 11;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_Clear_0x002F()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x05       ENTERB 0x05
    PushBP();
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);
    PushStack(0, Type::tByte);

    // uint iterator;                                                           dictionary.hs:346
    // 
hRDictionary_Clear_0x0002:
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
    PushStack(bp+0, Type::tReference);
    // 0x0006  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
    PushStack(bp+1, Type::tReference);
    // 0x0008  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
    PushStack(bp+2, Type::tReference);
    // 0x000A  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x000C  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x000E  0x2C 0x30       CALLB 0x30     // HRDictionary.next
    HRDictionary_next_0x0030();
    // 0x0010  0x2E 0x18       JZB 0x0028 (+24)
    if (PopStack() == 0) { goto hRDictionary_Clear_0x0028; }

    // if (ktype == Type.String)                                                dictionary.hs:353
    // 
    // 0x0012  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0013  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0015  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0016  0x2E 0x06       JZB 0x001C (+6)
    if (PopStack() == 0) { goto hRDictionary_Clear_0x001C; }

    // GC.Release(key);                                                         dictionary.hs:355
    // 
    // 0x0018  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001A  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // if (IsReferenceType(vtype))                                              dictionary.hs:357
    // 
hRDictionary_Clear_0x001C:
    // 0x001C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x001E  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x0020  0x2E 0xE2       JZB 0x0002 (-30)
    if (PopStack() == 0) { goto hRDictionary_Clear_0x0002; }

    // GC.Release(value);                                                       dictionary.hs:359
    // 
    // 0x0022  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0024  0x2C 0x20       CALLB 0x20     // GC.Release
    GC_Release_0x0020();

    // }                                                                        dictionary.hs:361
    // 
    // 0x0026  0x30 0xDC       JB 0x0002 (-36)
    goto hRDictionary_Clear_0x0002;

    // }                                                                        dictionary.hs:361
    // 
hRDictionary_Clear_0x0028:
    // 0x0028  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0029  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x002B  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x002D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002E  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0030  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (pEntries != 0)                                                       dictionary.hs:363
    // 
    // 0x0032  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0034  0x2E 0x06       JZB 0x003A (+6)
    if (PopStack() == 0) { goto hRDictionary_Clear_0x003A; }

    // Memory.Free(pEntries);                                                   dictionary.hs:365
    // 
    // 0x0036  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0038  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();

    // WriteWord(this+idCount, 0);           // count                           dictionary.hs:367
    // 
hRDictionary_Clear_0x003A:
    // 0x003A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x003C  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x003E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0040  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+idCapacity, 0);        // capacity                        dictionary.hs:368
    // 
    // 0x0042  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0044  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0046  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0047  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0048  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+idEntries, 0);         // pEntries                        dictionary.hs:369
    // 
    // 0x004A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x004C  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x004E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0050  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        dictionary.hs:370
    // 
    // 0x0052  0x2A 0x0E       RETB 0x0E
    DecSP(7); PopBP();
    return;
}

void HRDictionary_Clone_0x002E()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type dkType = Type(ReadByte(original+idKType));                          dictionary.hs:327
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // Type dvType = Type(ReadByte(original+idVType));                          dictionary.hs:328
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0010  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint clone = New (dkType, dvType);                                       dictionary.hs:330
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0015  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0016  0x2C 0x2B       CALLB 0x2B     // HRDictionary.New
    HRDictionary_New();
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint iterator;                                                           dictionary.hs:332
    // 
    // 0x001A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint iterator;                                                           dictionary.hs:332
    // 
    // 0x001B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type ktype;                                                              dictionary.hs:333
    // 
    // 0x001C  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint key;                                                                dictionary.hs:334
    // 
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // Type vtype;                                                              dictionary.hs:335
    // 
    // 0x001E  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint value;                                                              dictionary.hs:336
    // 
hRDictionary_Clone_0x001F:
    // 0x001F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0021  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
    PushStack(bp+3, Type::tReference);
    // 0x0023  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
    PushStack(bp+4, Type::tReference);
    // 0x0025  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
    PushStack(bp+5, Type::tReference);
    // 0x0027  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
    PushStack(bp+6, Type::tReference);
    // 0x0029  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
    PushStack(bp+7, Type::tReference);
    // 0x002B  0x2C 0x30       CALLB 0x30     // HRDictionary.next
    HRDictionary_next_0x0030();
    // 0x002D  0x2E 0x0E       JZB 0x003B (+14)
    if (PopStack() == 0) { goto hRDictionary_Clone_0x003B; }

    // Set(clone, key, ktype, value, vtype);                                    dictionary.hs:339
    // 
    // 0x002F  0x56 0x04 0x0A  PUSHLOCALBB 0x0A04
    PushStack(GetStack(bp+2, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x0032  0x56 0x08 0x0E  PUSHLOCALBB 0x0E08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x0035  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0037  0x2C 0x35       CALLB 0x35     // HRDictionary.Set
    HRDictionary_Set_0x0035();

    // }                                                                        dictionary.hs:340
    // 
    // 0x0039  0x30 0xE6       JB 0x001F (-26)
    goto hRDictionary_Clone_0x001F;

    // }                                                                        dictionary.hs:340
    // 
hRDictionary_Clone_0x003B:
    // 0x003B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x003D  0x2B 0x12       RETRETB 0x12
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 9;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_adjustCapacity_0x0033()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // Type dkType = Type(ReadByte(this+idKType));                              dictionary.hs:539
    // 
    // 0x0002  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // bool valueKeys = (dkType != Type.String);                                dictionary.hs:540
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000C  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x000E  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x000F  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint sizeRequired = entrySize * newCapacity;                             dictionary.hs:541
    // 
    // 0x0010  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0011  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0013  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0015  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0016  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint pNewEntries = Memory.Allocate(sizeRequired);                        dictionary.hs:543
    // 
    // 0x0018  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0019  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001B  0x2C 0x17       CALLB 0x17     // Memory.Allocate
    Memory_Allocate_0x0017();
    // 0x001D  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // Memory.Set(pNewEntries, 0, sizeRequired);                                dictionary.hs:544
    // 
    // 0x001F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0021  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0022  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0024  0x2C 0x1B       CALLB 0x1B     // Memory.Set
    Memory_Set_0x001B();

    // uint pOldEntries = ReadWord(this+idEntries);                             dictionary.hs:546
    // 
    // 0x0026  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0027  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0029  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x002B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x002E  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint capacity = ReadWord(this+idCapacity);                               dictionary.hs:547
    // 
    // 0x0030  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0031  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0033  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0035  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0036  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0038  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // uint count = 0;                                                          dictionary.hs:550
    // 
    // 0x003A  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint count = 0;                                                          dictionary.hs:550
    // 
    // 0x003B  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRDictionary_adjustCapacity_0x003C:
    // 0x003C  0x56 0x0E 0x0A  PUSHLOCALBB 0x0A0E
    PushStack(GetStack(bp+7, &htype), htype);
    PushStack(GetStack(bp+5, &htype), htype);
    // 0x003F  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0040  0x2E 0x5D       JZB 0x009D (+93)
    if (PopStack() == 0) { goto hRDictionary_adjustCapacity_0x009D; }

    // uint pOldEntry = pOldEntries + i * entrySize;                            dictionary.hs:553
    // 
    // 0x0042  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0043  0x56 0x08 0x0E  PUSHLOCALBB 0x0E08
    PushStack(GetStack(bp+4, &htype), htype);
    PushStack(GetStack(bp+7, &htype), htype);
    // 0x0046  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0048  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0049  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x004A  0x1B 0x10       POPLOCALB 0x10 (BP+16)
    PutStack(bp+8, PopStack(&htype), htype);

    // if (!validEntry(pOldEntry, valueKeys))                                   dictionary.hs:554
    // 
    // 0x004C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x004E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x004F  0x2C 0x32       CALLB 0x32     // HRDictionary.validEntry
    HRDictionary_validEntry_0x0032();
    // 0x0051  0x2F 0x06       JNZB 0x0057 (+6)
    if (PopStack() != 0) { goto hRDictionary_adjustCapacity_0x0057; }

    // continue;                                                                dictionary.hs:556
    // 
    // 0x0053  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0055  0x30 0x44       JB 0x0099 (+68)
    goto hRDictionary_adjustCapacity_0x0099;

    // uint key   = ReadWord(pOldEntry+ieKey);                                  dictionary.hs:558
    // 
hRDictionary_adjustCapacity_0x0057:
    // 0x0057  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0058  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x005A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x005B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x005C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x005E  0x1B 0x12       POPLOCALB 0x12 (BP+18)
    PutStack(bp+9, PopStack(&htype), htype);

    // uint hash  = ReadWord(pOldEntry+ieHash);                                 dictionary.hs:559
    // 
    // 0x0060  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0061  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x0063  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0065  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0066  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0068  0x1B 0x14       POPLOCALB 0x14 (BP+20)
    PutStack(bp+10, PopStack(&htype), htype);

    // uint pNewEntry = findEntry(pNewEntries, newCapacity, key, hash, valueKeys);
    // 
    // 0x006A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x006B  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-1, &htype), htype);
    // 0x006E  0x56 0x12 0x14  PUSHLOCALBB 0x1412
    PushStack(GetStack(bp+9, &htype), htype);
    PushStack(GetStack(bp+10, &htype), htype);
    // 0x0071  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0072  0x2C 0x31       CALLB 0x31     // HRDictionary.findEntry
    HRDictionary_findEntry_0x0031();
    // 0x0074  0x1B 0x16       POPLOCALB 0x16 (BP+22)
    PutStack(bp+11, PopStack(&htype), htype);

    // WriteWord(pNewEntry+ieKey, key);                                         dictionary.hs:561
    // 
    // 0x0076  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
    PushStack(GetStack(bp +11, &htype), htype);
    // 0x0078  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0079  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x007A  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
    PushStack(GetStack(bp +9, &htype), htype);
    // 0x007C  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(pNewEntry+ieHash, hash);                                       dictionary.hs:562
    // 
    // 0x007E  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
    PushStack(GetStack(bp +11, &htype), htype);
    // 0x0080  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0082  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0083  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
    PushStack(GetStack(bp +10, &htype), htype);
    // 0x0085  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(pNewEntry+ieValue, ReadWord(pOldEntry+ieValue));               dictionary.hs:563
    // 
    // 0x0087  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
    PushStack(GetStack(bp +11, &htype), htype);
    // 0x0089  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x008B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x008C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
    PushStack(GetStack(bp +8, &htype), htype);
    // 0x008E  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0090  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0091  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0093  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // count++;                                                                 dictionary.hs:564
    // 
    // 0x0095  0x22 0x0C       INCLOCALB 0x0C (BP+12)
    htype = GetStackType(bp+6);
    PutStack(bp+6, GetStack(bp+6)+1, (htype == Type::tByte) ? Type::tUInt : htype);

    // count++;                                                                 dictionary.hs:564
    // 
    // 0x0097  0x28 0x08       DECSP 0x08
    DecSP(4);
hRDictionary_adjustCapacity_0x0099:
    // 0x0099  0x22 0x0E       INCLOCALB 0x0E (BP+14)
    htype = GetStackType(bp+7);
    PutStack(bp+7, GetStack(bp+7)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x009B  0x30 0xA1       JB 0x003C (-95)
    goto hRDictionary_adjustCapacity_0x003C;
hRDictionary_adjustCapacity_0x009D:
    // 0x009D  0x28 0x02       DECSP 0x02
    DecSP(1);

    // if (0 != pOldEntries)                                                    dictionary.hs:567
    // 
    // 0x009F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A0  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00A2  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x00A3  0x2E 0x06       JZB 0x00A9 (+6)
    if (PopStack() == 0) { goto hRDictionary_adjustCapacity_0x00A9; }

    // Memory.Free(pOldEntries);                                                dictionary.hs:569
    // 
    // 0x00A5  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x00A7  0x2C 0x18       CALLB 0x18     // Memory.Free
    Memory_Free_0x0018();

    // WriteWord(this+idCount, count);           // count                       dictionary.hs:571
    // 
hRDictionary_adjustCapacity_0x00A9:
    // 0x00A9  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x00AB  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x00AD  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00AE  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x00B0  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+idCapacity, newCapacity);  // capacity                    dictionary.hs:572
    // 
    // 0x00B2  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x00B4  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x00B6  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x00B9  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+idEntries, pNewEntries);   // pEntries                    dictionary.hs:573
    // 
    // 0x00BB  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x00BD  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x00BF  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00C0  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x00C2  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        dictionary.hs:574
    // 
    // 0x00C4  0x2A 0x12       RETB 0x12
    DecSP(9); PopBP();
    return;
}

void HRDictionary_hashKey16_0x002A()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint length = ReadWord(key+2);                                           dictionary.hs:55
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint hash = 0x9DC5;                                                      dictionary.hs:56
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x37 0xC5 0x9D  PUSHIW 0x9DC5
    PushStack(0x9DC5, Type::tUInt);
    // 0x000E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // for (uint i = 0; i < length; i++)                                        dictionary.hs:57
    // 
    // 0x000F  0x44            PUSHI0
    PushStack(0, Type::tByte);
hRDictionary_hashKey16_0x0010:
    // 0x0010  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0012  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0013  0x08            LT
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] < valuestack[sp]);
    // 0x0014  0x2E 0x20       JZB 0x0034 (+32)
    if (PopStack() == 0) { goto hRDictionary_hashKey16_0x0034; }

    // uint ch = ReadByte(key+4+i);                                             dictionary.hs:59
    // 
    // 0x0016  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0017  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0019  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x001B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001F  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0021  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // hash = hash ^ ch;                                                        dictionary.hs:60
    // 
    // 0x0023  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0024  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x0026  0x64            BITXOR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] ^ valuestack[sp]);
    // 0x0027  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // hash = hash * 0x0193;                                                    dictionary.hs:61
    // 
    // 0x0028  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0029  0x37 0x93 0x01  PUSHIW 0x0193
    PushStack(0x0193, Type::tUInt);
    // 0x002C  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x002D  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:62
    // 
    // 0x002E  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0030  0x22 0x04       INCLOCALB 0x04 (BP+4)
    htype = GetStackType(bp+2);
    PutStack(bp+2, GetStack(bp+2)+1, (htype == Type::tByte) ? Type::tUInt : htype);
    // 0x0032  0x30 0xDE       JB 0x0010 (-34)
    goto hRDictionary_hashKey16_0x0010;
hRDictionary_hashKey16_0x0034:
    // 0x0034  0x28 0x02       DECSP 0x02
    DecSP(1);

    // return hash;                                                             dictionary.hs:63
    // 
    // 0x0036  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0037  0x2B 0x06       RETRETB 0x06
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 3;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_findEntry_0x0031()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint index;                                                              dictionary.hs:451
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x2E 0x09       JZB 0x000D (+9)
    if (PopStack() == 0) { goto hRDictionary_findEntry_0x000D; }

    // index = key % capacity;                                                  dictionary.hs:454
    // 
    // 0x0006  0x56 0xFA 0xF8  PUSHLOCALBB 0xF8FA
    PushStack(GetStack(bp-3, &htype), htype);
    PushStack(GetStack(bp-4, &htype), htype);
    // 0x0009  0x04            MOD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] % valuestack[sp]);
    // 0x000A  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:455
    // 
    // 0x000B  0x30 0x07       JB 0x0012 (+7)
    goto hRDictionary_findEntry_0x0012;

    // index = hash % capacity;                                                 dictionary.hs:458
    // 
hRDictionary_findEntry_0x000D:
    // 0x000D  0x56 0xFC 0xF8  PUSHLOCALBB 0xF8FC
    PushStack(GetStack(bp-2, &htype), htype);
    PushStack(GetStack(bp-4, &htype), htype);
    // 0x0010  0x04            MOD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] % valuestack[sp]);
    // 0x0011  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // uint tombstone = 0;                                                      dictionary.hs:460
    // 
hRDictionary_findEntry_0x0012:
    // 0x0012  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // uint tombstone = 0;                                                      dictionary.hs:460
    // 
hRDictionary_findEntry_0x0013:
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
    PushStack(GetStack(bp -5, &htype), htype);
    // 0x0016  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0017  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x0019  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x001A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint ekey   = ReadWord(pEntry+ieKey);                                    dictionary.hs:464
    // 
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0020  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0021  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0022  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0024  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // if (valueKeys)                                                           dictionary.hs:465
    // 
    // 0x0026  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0028  0x2E 0x42       JZB 0x006A (+66)
    if (PopStack() == 0) { goto hRDictionary_findEntry_0x006A; }

    // bool isOccupied = ReadByte(pEntry+ieOccupied) != 0;                      dictionary.hs:467
    // 
    // 0x002A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002D  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x002F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0030  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0032  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0033  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0034  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (!isOccupied)                                                         dictionary.hs:468
    // 
    // 0x0036  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x0038  0x2F 0x24       JNZB 0x005C (+36)
    if (PopStack() != 0) { goto hRDictionary_findEntry_0x005C; }

    // uint value = ReadWord(pEntry+ieValue);                                   dictionary.hs:470
    // 
    // 0x003A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x003B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x003D  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x003F  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0040  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0042  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // if (value == 0)                                                          dictionary.hs:471
    // 
    // 0x0044  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0046  0x2F 0x0C       JNZB 0x0052 (+12)
    if (PopStack() != 0) { goto hRDictionary_findEntry_0x0052; }

    // return tombstone != 0 ? tombstone : pEntry;                              dictionary.hs:474
    // 
    // 0x0048  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0049  0x2E 0x05       JZB 0x004E (+5)
    if (PopStack() == 0) { goto hRDictionary_findEntry_0x004E; }
    // 0x004B  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x004C  0x2B 0x16       RETRETB 0x16
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 11;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
hRDictionary_findEntry_0x004E:
    // 0x004E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0050  0x2B 0x16       RETRETB 0x16
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 11;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        dictionary.hs:475
    // 
hRDictionary_findEntry_0x0052:
    // 0x0052  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0053  0x2F 0x05       JNZB 0x0058 (+5)
    if (PopStack() != 0) { goto hRDictionary_findEntry_0x0058; }

    // tombstone = pEntry;                                                      dictionary.hs:481
    // 
    // 0x0055  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0057  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:484
    // 
hRDictionary_findEntry_0x0058:
    // 0x0058  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x005A  0x30 0x0C       JB 0x0066 (+12)
    goto hRDictionary_findEntry_0x0066;

    // else if (ekey == key)                                                    dictionary.hs:485
    // 
hRDictionary_findEntry_0x005C:
    // 0x005C  0x56 0x06 0xFA  PUSHLOCALBB 0xFA06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-3, &htype), htype);
    // 0x005F  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0060  0x2E 0x06       JZB 0x0066 (+6)
    if (PopStack() == 0) { goto hRDictionary_findEntry_0x0066; }

    // return pEntry;                                                           dictionary.hs:487
    // 
    // 0x0062  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0064  0x2B 0x14       RETRETB 0x14
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 10;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        dictionary.hs:488
    // 
hRDictionary_findEntry_0x0066:
    // 0x0066  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x0068  0x30 0x33       JB 0x009B (+51)
    goto hRDictionary_findEntry_0x009B;

    // if (ekey == 0)                                                           dictionary.hs:492
    // 
hRDictionary_findEntry_0x006A:
    // 0x006A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x006C  0x2F 0x24       JNZB 0x0090 (+36)
    if (PopStack() != 0) { goto hRDictionary_findEntry_0x0090; }

    // uint value = ReadWord(pEntry+ieValue);                                   dictionary.hs:494
    // 
    // 0x006E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x006F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0071  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0073  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0074  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0076  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // if (value == 0)                                                          dictionary.hs:495
    // 
    // 0x0078  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x007A  0x2F 0x0C       JNZB 0x0086 (+12)
    if (PopStack() != 0) { goto hRDictionary_findEntry_0x0086; }

    // return tombstone != 0 ? tombstone : pEntry;                              dictionary.hs:498
    // 
    // 0x007C  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x007D  0x2E 0x05       JZB 0x0082 (+5)
    if (PopStack() == 0) { goto hRDictionary_findEntry_0x0082; }
    // 0x007F  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0080  0x2B 0x14       RETRETB 0x14
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 10;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
hRDictionary_findEntry_0x0082:
    // 0x0082  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0084  0x2B 0x14       RETRETB 0x14
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 10;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        dictionary.hs:499
    // 
hRDictionary_findEntry_0x0086:
    // 0x0086  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0087  0x2F 0x05       JNZB 0x008C (+5)
    if (PopStack() != 0) { goto hRDictionary_findEntry_0x008C; }

    // tombstone = pEntry;                                                      dictionary.hs:505
    // 
    // 0x0089  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x008B  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // }                                                                        dictionary.hs:508
    // 
hRDictionary_findEntry_0x008C:
    // 0x008C  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x008E  0x30 0x0D       JB 0x009B (+13)
    goto hRDictionary_findEntry_0x009B;

    // else if (HRString.Compare(ekey, key) == 0)                               dictionary.hs:509
    // 
hRDictionary_findEntry_0x0090:
    // 0x0090  0x56 0x06 0xFA  PUSHLOCALBB 0xFA06
    PushStack(GetStack(bp+3, &htype), htype);
    PushStack(GetStack(bp-3, &htype), htype);
    // 0x0093  0x2C 0x74       CALLB 0x74     // HRString.Compare
    HRString_Compare_0x0074();
    // 0x0095  0x2F 0x06       JNZB 0x009B (+6)
    if (PopStack() != 0) { goto hRDictionary_findEntry_0x009B; }

    // return pEntry;                                                           dictionary.hs:511
    // 
    // 0x0097  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0099  0x2B 0x12       RETRETB 0x12
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 9;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        dictionary.hs:512
    // 
hRDictionary_findEntry_0x009B:
    // 0x009B  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x009C  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x009D  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x009E  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
    PushStack(GetStack(bp -4, &htype), htype);
    // 0x00A0  0x04            MOD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] % valuestack[sp]);
    // 0x00A1  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // } // loop                                                                dictionary.hs:515
    // 
    // 0x00A2  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x00A4  0x33 0x6F 0xFF  JW 0x0013 (-145)
    goto hRDictionary_findEntry_0x0013;
}

void HRDictionary_next_0x0030()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint count = ReadWord(this+idCount);                                     dictionary.hs:374
    // 
    // 0x0002  0x1C 0xF4       PUSHLOCALB 0xF4 (BP-12)
    PushStack(GetStack(bp -6, &htype), htype);
    // 0x0004  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0006  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0007  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // if (count == 0)                                                          dictionary.hs:375
    // 
    // 0x000A  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000B  0x2F 0x05       JNZB 0x0010 (+5)
    if (PopStack() != 0) { goto hRDictionary_next_0x0010; }

    // return false;                                                            dictionary.hs:377
    // 
    // 0x000D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000E  0x2B 0x0E       RETRETB 0x0E
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 7;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // if (iterator == 0xFFFF)                                                  dictionary.hs:379
    // 
hRDictionary_next_0x0010:
    // 0x0010  0x1E 0xF6       PUSHRELB 0xF6 (BP-10)
    PushStack(GetStack(GetStack(bp-5), &htype), htype);
    // 0x0012  0x37 0xFF 0xFF  PUSHIW 0xFFFF
    PushStack(0xFFFF, Type::tUInt);
    // 0x0015  0x05            EQ
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] == valuestack[sp]);
    // 0x0016  0x2E 0x05       JZB 0x001B (+5)
    if (PopStack() == 0) { goto hRDictionary_next_0x001B; }

    // return false;                                                            dictionary.hs:381
    // 
    // 0x0018  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0019  0x2B 0x0E       RETRETB 0x0E
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 7;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // bool success = false;                                                    dictionary.hs:383
    // 
hRDictionary_next_0x001B:
    // 0x001B  0x44            PUSHI0
    PushStack(0, Type::tByte);

    // bool success = false;                                                    dictionary.hs:383
    // 
    // 0x001C  0x1C 0xF4       PUSHLOCALB 0xF4 (BP-12)
    PushStack(GetStack(bp -6, &htype), htype);
    // 0x001E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0020  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0021  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0023  0x1D 0xF8       POPRELB 0xF8 (BP-8)
    PutStack(GetStack(bp-4), PopStack(&htype), htype);

    // vtype = Type(ReadByte(this+idVType));                                    dictionary.hs:385
    // 
    // 0x0025  0x1C 0xF4       PUSHLOCALB 0xF4 (BP-12)
    PushStack(GetStack(bp -6, &htype), htype);
    // 0x0027  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0029  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x002A  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x002C  0x1D 0xFC       POPRELB 0xFC (BP-4)
    PutStack(GetStack(bp-2), PopStack(&htype), htype);

    // bool isValueTable = (ktype != Type.String);                              dictionary.hs:386
    // 
    // 0x002E  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x002F  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
    PushStack(GetStack(GetStack(bp-4), &htype), htype);
    // 0x0031  0x1A 0x0F       PUSHIB 0x0F
    PushStack(0x0F, Type::tByte);
    // 0x0033  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0034  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // uint pEntries = ReadWord(this+idEntries);                                dictionary.hs:388
    // 
    // 0x0036  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0037  0x1C 0xF4       PUSHLOCALB 0xF4 (BP-12)
    PushStack(GetStack(bp -6, &htype), htype);
    // 0x0039  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x003B  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x003C  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x003E  0x1B 0x06       POPLOCALB 0x06 (BP+6)
    PutStack(bp+3, PopStack(&htype), htype);

    // uint capacity = ReadWord(this+idCapacity);                               dictionary.hs:389
    // 
    // 0x0040  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0041  0x1C 0xF4       PUSHLOCALB 0xF4 (BP-12)
    PushStack(GetStack(bp -6, &htype), htype);
    // 0x0043  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0045  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0046  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0048  0x1B 0x08       POPLOCALB 0x08 (BP+8)
    PutStack(bp+4, PopStack(&htype), htype);

    // uint pEntry = pEntries + entrySize * iterator;                           dictionary.hs:392
    // 
hRDictionary_next_0x004A:
    // 0x004A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x004B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
    PushStack(GetStack(bp +3, &htype), htype);
    // 0x004D  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x004F  0x1E 0xF6       PUSHRELB 0xF6 (BP-10)
    PushStack(GetStack(GetStack(bp-5), &htype), htype);
    // 0x0051  0x03            MUL
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] * valuestack[sp]);
    // 0x0052  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0053  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
    PutStack(bp+5, PopStack(&htype), htype);

    // iterator = (iterator + 1) % capacity;                                    dictionary.hs:393
    // 
    // 0x0055  0x1E 0xF6       PUSHRELB 0xF6 (BP-10)
    PushStack(GetStack(GetStack(bp-5), &htype), htype);
    // 0x0057  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0058  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0059  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
    PushStack(GetStack(bp +4, &htype), htype);
    // 0x005B  0x04            MOD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] % valuestack[sp]);
    // 0x005C  0x1D 0xF6       POPRELB 0xF6 (BP-10)
    PutStack(GetStack(bp-5), PopStack(&htype), htype);

    // if (isValueTable)                                                        dictionary.hs:395
    // 
    // 0x005E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0060  0x2E 0x41       JZB 0x00A1 (+65)
    if (PopStack() == 0) { goto hRDictionary_next_0x00A1; }

    // value = ReadWord(pEntry+ieValue);                                        dictionary.hs:397
    // 
    // 0x0062  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0064  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0066  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0067  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0069  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // bool isOccupied = ReadByte(pEntry+ieOccupied) != 0;                      dictionary.hs:398
    // 
    // 0x006B  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x006C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x006E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0070  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0071  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0073  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0074  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0075  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
    PutStack(bp+6, PopStack(&htype), htype);

    // if (!isOccupied)                                                         dictionary.hs:399
    // 
    // 0x0077  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
    PushStack(GetStack(bp +6, &htype), htype);
    // 0x0079  0x2F 0x04       JNZB 0x007D (+4)
    if (PopStack() != 0) { goto hRDictionary_next_0x007D; }

    // }                                                                        dictionary.hs:402
    // 
    // 0x007B  0x30 0x22       JB 0x009D (+34)
    goto hRDictionary_next_0x009D;

    // key   = ReadWord(pEntry+ieKey);                                          dictionary.hs:405
    // 
hRDictionary_next_0x007D:
    // 0x007D  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x007F  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0080  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0081  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0083  0x1D 0xFA       POPRELB 0xFA (BP-6)
    PutStack(GetStack(bp-3), PopStack(&htype), htype);

    // value = ReadWord(pEntry+ieValue);                                        dictionary.hs:406
    // 
    // 0x0085  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x0087  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x0089  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x008A  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x008C  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // if (iterator == 0)                                                       dictionary.hs:407
    // 
    // 0x008E  0x1E 0xF6       PUSHRELB 0xF6 (BP-10)
    PushStack(GetStack(GetStack(bp-5), &htype), htype);
    // 0x0090  0x2F 0x07       JNZB 0x0097 (+7)
    if (PopStack() != 0) { goto hRDictionary_next_0x0097; }

    // iterator = 0xFFFF; // end indicator for foreach loop                     dictionary.hs:409
    // 
    // 0x0092  0x37 0xFF 0xFF  PUSHIW 0xFFFF
    PushStack(0xFFFF, Type::tUInt);
    // 0x0095  0x1D 0xF6       POPRELB 0xF6 (BP-10)
    PutStack(GetStack(bp-5), PopStack(&htype), htype);

    // success = true;                                                          dictionary.hs:411
    // 
hRDictionary_next_0x0097:
    // 0x0097  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x0098  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // break;                                                                   dictionary.hs:412
    // 
    // 0x0099  0x28 0x04       DECSP 0x04
    DecSP(2);
    // 0x009B  0x30 0x3B       JB 0x00D6 (+59)
    goto hRDictionary_next_0x00D6;

    // }                                                                        dictionary.hs:415
    // 
hRDictionary_next_0x009D:
    // 0x009D  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x009F  0x30 0x28       JB 0x00C7 (+40)
    goto hRDictionary_next_0x00C7;

    // key = ReadWord(pEntry+ieKey);                                            dictionary.hs:418
    // 
hRDictionary_next_0x00A1:
    // 0x00A1  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00A3  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00A4  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00A5  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00A7  0x1D 0xFA       POPRELB 0xFA (BP-6)
    PutStack(GetStack(bp-3), PopStack(&htype), htype);

    // if (key == 0)                                                            dictionary.hs:419
    // 
    // 0x00A9  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
    PushStack(GetStack(GetStack(bp-3), &htype), htype);
    // 0x00AB  0x2F 0x04       JNZB 0x00AF (+4)
    if (PopStack() != 0) { goto hRDictionary_next_0x00AF; }

    // }                                                                        dictionary.hs:422
    // 
    // 0x00AD  0x30 0x1A       JB 0x00C7 (+26)
    goto hRDictionary_next_0x00C7;

    // value = ReadWord(pEntry+ieValue);                                        dictionary.hs:425
    // 
hRDictionary_next_0x00AF:
    // 0x00AF  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
    PushStack(GetStack(bp +5, &htype), htype);
    // 0x00B1  0x1A 0x06       PUSHIB 0x06
    PushStack(0x06, Type::tByte);
    // 0x00B3  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x00B4  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x00B6  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // if (iterator == 0)                                                       dictionary.hs:426
    // 
    // 0x00B8  0x1E 0xF6       PUSHRELB 0xF6 (BP-10)
    PushStack(GetStack(GetStack(bp-5), &htype), htype);
    // 0x00BA  0x2F 0x07       JNZB 0x00C1 (+7)
    if (PopStack() != 0) { goto hRDictionary_next_0x00C1; }

    // iterator = 0xFFFF; // end indicator for foreach loop                     dictionary.hs:428
    // 
    // 0x00BC  0x37 0xFF 0xFF  PUSHIW 0xFFFF
    PushStack(0xFFFF, Type::tUInt);
    // 0x00BF  0x1D 0xF6       POPRELB 0xF6 (BP-10)
    PutStack(GetStack(bp-5), PopStack(&htype), htype);

    // success = true;                                                          dictionary.hs:430
    // 
hRDictionary_next_0x00C1:
    // 0x00C1  0x45            PUSHI1
    PushStack(1, Type::tByte);
    // 0x00C2  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // break;                                                                   dictionary.hs:431
    // 
    // 0x00C3  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x00C5  0x30 0x11       JB 0x00D6 (+17)
    goto hRDictionary_next_0x00D6;

    // if (iterator == 0)                                                       dictionary.hs:436
    // 
hRDictionary_next_0x00C7:
    // 0x00C7  0x1E 0xF6       PUSHRELB 0xF6 (BP-10)
    PushStack(GetStack(GetStack(bp-5), &htype), htype);
    // 0x00C9  0x2F 0x08       JNZB 0x00D1 (+8)
    if (PopStack() != 0) { goto hRDictionary_next_0x00D1; }

    // success = false;                                                         dictionary.hs:438
    // 
    // 0x00CB  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x00CC  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // break;                                                                   dictionary.hs:439
    // 
    // 0x00CD  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x00CF  0x30 0x07       JB 0x00D6 (+7)
    goto hRDictionary_next_0x00D6;

    // }                                                                        dictionary.hs:441
    // 
hRDictionary_next_0x00D1:
    // 0x00D1  0x28 0x02       DECSP 0x02
    DecSP(1);
    // 0x00D3  0x33 0x77 0xFF  JW 0x004A (-137)
    goto hRDictionary_next_0x004A;

    // if (success && IsReferenceType(vtype))                                   dictionary.hs:442
    // 
hRDictionary_next_0x00D6:
    // 0x00D6  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x00D7  0x27 0x00       DUP 0x00
    PushStack(GetStack(sp-1, &htype), htype);
    // 0x00D9  0x2E 0x07       JZB 0x00E0 (+7)
    if (PopStack() == 0) { goto hRDictionary_next_0x00E0; }
    // 0x00DB  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
    PushStack(GetStack(GetStack(bp-2), &htype), htype);
    // 0x00DD  0x2C 0x1C       CALLB 0x1C     // Types.IsReferenceType
    Types_IsReferenceType_0x001C();
    // 0x00DF  0x0C            BOOLAND
    top = PopStack(); next = PopStack();
    PushStack((Bool)(next && top), Type::tBool);
hRDictionary_next_0x00E0:
    // 0x00E0  0x2E 0x08       JZB 0x00E8 (+8)
    if (PopStack() == 0) { goto hRDictionary_next_0x00E8; }

    // vtype = Type(ReadByte(value));                                           dictionary.hs:444
    // 
    // 0x00E2  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
    PushStack(GetStack(GetStack(bp-1), &htype), htype);
    // 0x00E4  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x00E6  0x1D 0xFC       POPRELB 0xFC (BP-4)
    PutStack(GetStack(bp-2), PopStack(&htype), htype);

    // return success;                                                          dictionary.hs:446
    // 
hRDictionary_next_0x00E8:
    // 0x00E8  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x00E9  0x2B 0x16       RETRETB 0x16
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 11;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRDictionary_validEntry_0x0032()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // if (pEntry == 0)                                                         dictionary.hs:522
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x2F 0x05       JNZB 0x0008 (+5)
    if (PopStack() != 0) { goto hRDictionary_validEntry_0x0008; }

    // return false;                                                            dictionary.hs:524
    // 
    // 0x0005  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0006  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        dictionary.hs:525
    // 
hRDictionary_validEntry_0x0008:
    // 0x0008  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000A  0x2E 0x0D       JZB 0x0017 (+13)
    if (PopStack() == 0) { goto hRDictionary_validEntry_0x0017; }

    // return ReadByte(pEntry+ieOccupied) != 0; // isOccupied                   dictionary.hs:528
    // 
    // 0x000C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000E  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0010  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0011  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x0015  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;

    // }                                                                        dictionary.hs:529
    // 
hRDictionary_validEntry_0x0017:
    // 0x0017  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0019  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001A  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x001B  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x001D  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x001E  0x06            NE
    sp--; typestack [sp-1] = Type::tBool;
    valuestack[sp-1] = (valuestack[sp-1] != valuestack[sp]);
    // 0x001F  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRUInt_ToLong_0x0076()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint this = HRLong.New();                                                uint.hs:5
    // 
    // 0x0002  0x2C 0x4D       CALLB 0x4D     // HRLong.New
    HRLong_New();
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(this+2, ui);                                                   uint.hs:6
    // 
    // 0x0005  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0006  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0008  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0009  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // WriteWord(this+4, 0);                                                    uint.hs:7
    // 
    // 0x000D  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000E  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0010  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0011  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0012  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return this;                                                             uint.hs:8
    // 
    // 0x0014  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0015  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRInt_ToLong_0x003D()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint this = HRLong.New();                                                int.hs:5
    // 
    // 0x0002  0x2C 0x4D       CALLB 0x4D     // HRLong.New
    HRLong_New();
    // 0x0004  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // WriteWord(this+2, ichunk);                                               int.hs:6
    // 
    // 0x0005  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0006  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0008  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0009  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000B  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // if ((0x8000 & ichunk) != 0)                                              int.hs:7
    // 
    // 0x000D  0x37 0x00 0x80  PUSHIW 0x8000
    PushStack(0x8000, Type::tUInt);
    // 0x0010  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0012  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0013  0x2E 0x0D       JZB 0x0020 (+13)
    if (PopStack() == 0) { goto hRInt_ToLong_0x0020; }

    // WriteWord(this+4, 0xFFFF);                                               int.hs:9
    // 
    // 0x0015  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0016  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0018  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0019  0x37 0xFF 0xFF  PUSHIW 0xFFFF
    PushStack(0xFFFF, Type::tUInt);
    // 0x001C  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // }                                                                        int.hs:10
    // 
    // 0x001E  0x30 0x09       JB 0x0027 (+9)
    goto hRInt_ToLong_0x0027;

    // WriteWord(this+4, 0);                                                    int.hs:13
    // 
hRInt_ToLong_0x0020:
    // 0x0020  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0021  0x1A 0x04       PUSHIB 0x04
    PushStack(0x04, Type::tByte);
    // 0x0023  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0024  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0025  0x24 0xD8       SYSCALL0 0xD8  // Memory.WriteWord
    sp--; sp--; memoryBlock[valuestack[sp]] = (Byte)(valuestack[sp+1] & 0xFF); memoryBlock[valuestack[sp]+1] = (Byte)(valuestack[sp+1] >> 8);

    // return this;                                                             int.hs:15
    // 
hRInt_ToLong_0x0027:
    // 0x0027  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x0028  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void HRInt_ToBytes_0x003E()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // byte lsb = byte(ichunk & 0xFF);                                          int.hs:19
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0xFF       PUSHIB 0xFF
    PushStack(0xFF, Type::tByte);
    // 0x0006  0x0E            BITAND
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] & valuestack[sp]);
    // 0x0007  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0009  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // byte msb = byte(ichunk >> 8);                                            int.hs:20
    // 
    // 0x000A  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x000B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000D  0x1A 0x08       PUSHIB 0x08
    PushStack(0x08, Type::tByte);
    // 0x000F  0x10            BITSHR
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] >> valuestack[sp]);
    // 0x0010  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x0012  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uint lst = HRList.New(Type.Byte);                                        int.hs:22
    // 
    // 0x0013  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0014  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0016  0x2C 0x3F       CALLB 0x3F     // HRList.New
    HRList_New();
    // 0x0018  0x1B 0x04       POPLOCALB 0x04 (BP+4)
    PutStack(bp+2, PopStack(&htype), htype);

    // HRList.Append(lst, lsb, Type.Byte);                                      int.hs:23
    // 
    // 0x001A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x001C  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x001D  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x001F  0x2C 0x49       CALLB 0x49     // HRList.Append
    HRList_Append_0x0049();

    // HRList.Append(lst, msb, Type.Byte);                                      int.hs:24
    // 
    // 0x0021  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x0023  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x0024  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x0026  0x2C 0x49       CALLB 0x49     // HRList.Append
    HRList_Append_0x0049();

    // return lst;                                                              int.hs:25
    // 
    // 0x0028  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
    PushStack(GetStack(bp +2, &htype), htype);
    // 0x002A  0x2B 0x08       RETRETB 0x08
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 4;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void IO_WriteUInt_0x00DB()
{
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // writeDigit(this);                                                        io.hs:102
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x2C 0xD9       CALLB 0xD9     // IO.writeDigit
    IO_writeDigit_0x00D9();

    // }                                                                        io.hs:103
    // 
    // 0x0005  0x2A 0x02       RETB 0x02
    DecSP(1); PopBP();
    return;
}

void IO_writeDigit_0x00D9()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x5F 0x01       ENTERB 0x01
    PushBP();
    PushStack(0, Type::tByte);

    // uint digit = uthis % 10;                                                 io.hs:80
    // 
    // 0x0002  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0004  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0006  0x04            MOD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] % valuestack[sp]);
    // 0x0007  0x4C            POPLOCALB00
    PutStack(bp, PopStack(&htype), htype);

    // char c = Char.ToDigit(byte(digit));                                      io.hs:81
    // 
    // 0x0008  0x44            PUSHI0
    PushStack(0, Type::tByte);
    // 0x0009  0x4E            PUSHLOCALB00
    PushStack(GetStack(bp , &htype), htype);
    // 0x000A  0x51 0x03       CAST 0x03
    PutStackType(sp-1, (Type)(0x03));
    // 0x000C  0x2C 0xBE       CALLB 0xBE     // Char.ToDigit
    Char_ToDigit_0x00BE();
    // 0x000E  0x4D            POPLOCALB02
    PutStack(bp+1, PopStack(&htype), htype);

    // uthis = uthis / 10;                                                      io.hs:82
    // 
    // 0x000F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0011  0x1A 0x0A       PUSHIB 0x0A
    PushStack(0x0A, Type::tByte);
    // 0x0013  0x02            DIV
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] = (valuestack[sp-1] / valuestack[sp]);
    // 0x0014  0x1B 0xFE       POPLOCALB 0xFE (BP-2)
    PutStack(bp+-1, PopStack(&htype), htype);

    // if (uthis != 0)                                                          io.hs:83
    // 
    // 0x0016  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0018  0x2E 0x06       JZB 0x001E (+6)
    if (PopStack() == 0) { goto iO_writeDigit_0x001E; }

    // writeDigit(uthis);                                                       io.hs:85
    // 
    // 0x001A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x001C  0x2C 0xD9       CALLB 0xD9     // IO.writeDigit
    IO_writeDigit_0x00D9();

    // Write(c);                                                                io.hs:87
    // 
iO_writeDigit_0x001E:
    // 0x001E  0x4F            PUSHLOCALB02
    PushStack(GetStack(bp +1, &htype), htype);
    // 0x001F  0x2C 0xDE       CALLB 0xDE     // IO.Write
    IO_Write_0x00DE();

    // }                                                                        io.hs:88
    // 
    // 0x0021  0x2A 0x06       RETB 0x06
    DecSP(3); PopBP();
    return;
}

void HRVariant_UnBox_0x007B()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // vtype = Type(ReadByte(this+ivType));                                     variant.hs:75
    // 
    // 0x0001  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x0003  0x1A 0x02       PUSHIB 0x02
    PushStack(0x02, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x24 0xA9       SYSCALL0 0xA9  // Memory.ReadByte
    valuestack[sp-1] = memoryBlock[valuestack[sp-1]]; typestack [sp-1] = Type::tByte;
    // 0x0008  0x1D 0xFE       POPRELB 0xFE (BP-2)
    PutStack(GetStack(bp-1), PopStack(&htype), htype);

    // return ReadWord(this+ivValue);                                           variant.hs:76
    // 
    // 0x000A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
    PushStack(GetStack(bp -2, &htype), htype);
    // 0x000C  0x1A 0x03       PUSHIB 0x03
    PushStack(0x03, Type::tByte);
    // 0x000E  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x000F  0x24 0xD7       SYSCALL0 0xD7  // Memory.ReadWord
    valuestack[sp-1] = (memoryBlock[valuestack[sp-1]] + (memoryBlock[valuestack[sp-1]+1] << 8)); typestack [sp-1] = Type::tUInt;
    // 0x0011  0x2B 0x04       RETRETB 0x04
    {   sp--; UInt rv = valuestack[sp]; htype = typestack[sp];
        sp = sp - 2;
        valuestack[sp] = rv; typestack[sp] = htype; sp++;
    }
    csp--; bp = callstack[csp];
    return;
}

void Char_ToDigit_0x00BE()
{
    UInt top   = 0;
    UInt next  = 0;
    Type htype = Type::tNone;

    // 0x0000  0x49            ENTER
    PushBP();

    // d = d + 48; // +0                                                        char.hs:29
    // 
    // 0x0001  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x0003  0x1A 0x30       PUSHIB 0x30
    PushStack(0x30, Type::tByte);
    // 0x0005  0x00            ADD
    sp--; typestack[sp-1] = Type::tUInt;
    valuestack[sp-1] += valuestack[sp];
    // 0x0006  0x1B 0xFE       POPLOCALB 0xFE (BP-2)
    PutStack(bp+-1, PopStack(&htype), htype);

    // return char(d);                                                          char.hs:30
    // 
    // 0x0008  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
    PushStack(GetStack(bp -1, &htype), htype);
    // 0x000A  0x2B 0x02       RETRETB 0x02
    sp--; valuestack[sp-1] = valuestack[sp]; typestack[sp-1] = typestack[sp];
    csp--; bp = callstack[csp];
    return;
}
