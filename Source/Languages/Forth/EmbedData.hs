program Embed
{
    //#define MCU            // running on a microcontroller (CALLIW vs CALLW for example)
    //#define SERIALCONSOLE  // no Keyboard
    //#define PORTABLE       // use Hopper versions of system calls when native ones are absent
    
    uses "/Source/System/System"    
    
#ifdef MCU    
    #define TINY2040
    uses "/Source/Library/MCU"
#endif

    uses "/Source/System/IO"         // write either to Screen or Screen and Serial, read from Keyboard or Keyboard and Serial

    
    const string constData = {
        0x14, 0xb9, 0x97, 0x00, 0x14, 0xcb, 0x97, 0x00, 0xf0, 0x71, 0x01, 0x00, 0x26, 0xa2, 0x08, 0x00, 
        0x89, 0xf6, 0xb0, 0xf5, 0x85, 0xf6, 0xb2, 0xf5, 0x1f, 0x00, 0x00, 0x00, 0x38, 0xa2, 0x38, 0xa2, 
        0x36, 0xa2, 0xd9, 0xf6, 0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xe2, 0xfe, 0x16, 0xec, 0xfe, 
        0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2e, 0xe2, 0xfe, 0x39, 0x1d, 0xe2, 0xfe, 
        0x16, 0xec, 0xfe, 0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2f, 0xe2, 0xfe, 0x15, 
        0xec, 0xfe, 0x28, 0xe2, 0xfe, 0x15, 0xed, 0xfe, 0x2a, 0xe3, 0xfe, 0x39, 0x1d, 0xe6, 0xfe, 0x16, 
        0xec, 0xfe, 0x2e, 0xe6, 0xfe, 0x1d, 0xe6, 0xfe, 0x16, 0xed, 0xfe, 0x39, 0x38, 0x5c, 0x80, 0x2f, 
        0x14, 0xb9, 0x97, 0x00, 0x14, 0xcb, 0x97, 0x00, 0xf0, 0x71, 0x01, 0x00, 0x26, 0xa2, 0x08, 0x00, 
        0x89, 0xf6, 0xb0, 0xf5, 0x85, 0xf6, 0xb2, 0xf5, 0x1f, 0x00, 0x00, 0x00, 0x38, 0xa2, 0x38, 0xa2, 
        0x36, 0xa2, 0xd9, 0xf6, 0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xe2, 0xfe, 0x16, 0xec, 0xfe, 
        0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2e, 0xe2, 0xfe, 0x39, 0x1d, 0xe2, 0xfe, 
        0x16, 0xec, 0xfe, 0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2f, 0xe2, 0xfe, 0x15, 
        0xec, 0xfe, 0x28, 0xe2, 0xfe, 0x15, 0xed, 0xfe, 0x2a, 0xe3, 0xfe, 0x39, 0x1d, 0xe6, 0xfe, 0x16, 
        0xec, 0xfe, 0x2e, 0xe6, 0xfe, 0x1d, 0xe6, 0xfe, 0x16, 0xed, 0xfe, 0x39, 0x38, 0x5c, 0x80, 0x2f, 
        0x14, 0xb9, 0x97, 0x00, 0x14, 0xcb, 0x97, 0x00, 0xf0, 0x71, 0x01, 0x00, 0x26, 0xa2, 0x08, 0x00, 
        0x89, 0xf6, 0xb0, 0xf5, 0x85, 0xf6, 0xb2, 0xf5, 0x1f, 0x00, 0x00, 0x00, 0x38, 0xa2, 0x38, 0xa2, 
        0x36, 0xa2, 0xd9, 0xf6, 0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xe2, 0xfe, 0x16, 0xec, 0xfe, 
        0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2e, 0xe2, 0xfe, 0x39, 0x1d, 0xe2, 0xfe, 
        0x16, 0xec, 0xfe, 0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2f, 0xe2, 0xfe, 0x15, 
        0xec, 0xfe, 0x28, 0xe2, 0xfe, 0x15, 0xed, 0xfe, 0x2a, 0xe3, 0xfe, 0x39, 0x1d, 0xe6, 0xfe, 0x16, 
        0xec, 0xfe, 0x2e, 0xe6, 0xfe, 0x1d, 0xe6, 0xfe, 0x16, 0xed, 0xfe, 0x39, 0x38, 0x5c, 0x80, 0x2f, 
        0x14, 0xb9, 0x97, 0x00, 0x14, 0xcb, 0x97, 0x00, 0xf0, 0x71, 0x01, 0x00, 0x26, 0xa2, 0x08, 0x00, 
        0x89, 0xf6, 0xb0, 0xf5, 0x85, 0xf6, 0xb2, 0xf5, 0x1f, 0x00, 0x00, 0x00, 0x38, 0xa2, 0x38, 0xa2, 
        0x36, 0xa2, 0xd9, 0xf6, 0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xe2, 0xfe, 0x16, 0xec, 0xfe, 
        0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2e, 0xe2, 0xfe, 0x39, 0x1d, 0xe2, 0xfe, 
        0x16, 0xec, 0xfe, 0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2f, 0xe2, 0xfe, 0x15, 
        0xec, 0xfe, 0x28, 0xe2, 0xfe, 0x15, 0xed, 0xfe, 0x2a, 0xe3, 0xfe, 0x39, 0x1d, 0xe6, 0xfe, 0x16, 
        0xec, 0xfe, 0x2e, 0xe6, 0xfe, 0x1d, 0xe6, 0xfe, 0x16, 0xed, 0xfe, 0x39, 0x38, 0x5c, 0x80, 0x2f, 
        0x14, 0xb9, 0x97, 0x00, 0x14, 0xcb, 0x97, 0x00, 0xf0, 0x71, 0x01, 0x00, 0x26, 0xa2, 0x08, 0x00, 
        0x89, 0xf6, 0xb0, 0xf5, 0x85, 0xf6, 0xb2, 0xf5, 0x1f, 0x00, 0x00, 0x00, 0x38, 0xa2, 0x38, 0xa2, 
        0x36, 0xa2, 0xd9, 0xf6, 0xe1, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xe2, 0xfe, 0x16, 0xec, 0xfe, 
        0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2e, 0xe2, 0xfe, 0x39, 0x1d, 0xe2, 0xfe, 
        0x16, 0xec, 0xfe, 0x2e, 0xe2, 0xfe, 0x1d, 0xe2, 0xfe, 0x16, 0xed, 0xfe, 0x2f, 0xe2, 0xfe, 0x15, 
        0xec, 0xfe, 0x28, 0xe2, 0xfe, 0x15, 0xed, 0xfe, 0x2a, 0xe3, 0xfe, 0x39, 0x1d, 0xe6, 0xfe, 0x16, 
        0xec, 0xfe, 0x2e, 0xe6, 0xfe, 0x1d, 0xe6, 0xfe, 0x16, 0xed, 0xfe, 0x39, 0x38, 0x5c, 0x80, 0x2f 
    };
            
    {
        string data = constData; // TODO: ideally it should be possible to use the constData directly
        
        for (uint i = 0; i < data.Length; i++)
        {
            byte b = byte(data[i]);
            Print(b.ToHexString(2) + " ");
            if (i % 16 == 15)
            {
                PrintLn();
            }
            else if (i % 8 == 7)
            {
                Print(' ');
            }
        }
#ifndef MCU
        Key k = ReadKey();
#endif        
    }
}
