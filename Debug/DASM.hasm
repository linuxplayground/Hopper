0x0000 0x0000 // binary version number
0x0002 0x0196 // offset to constant data
0x0004 0x0FB3 // 'main' entry point offset

0x0006 0x0005 0x1530
0x000A 0x0003 0x154A
0x000E 0x0002 0x1647
0x0012 0x0001 0x1835
0x0016 0x0081 0x1894
0x001A 0x0080 0x24F4
0x001E 0x00DC 0x250B
0x0022 0x00D9 0x2530
0x0026 0x00DD 0x255B
0x002A 0x0066 0x25D0
0x002E 0x0064 0x25FB
0x0032 0x0085 0x266F
0x0036 0x0088 0x2697
0x003A 0x0086 0x26CC
0x003E 0x0089 0x26D0
0x0042 0x0100 0x26E3
0x0046 0x0105 0x273E
0x004A 0x0102 0x276C
0x004E 0x0104 0x2785
0x0052 0x0020 0x27DA
0x0056 0x001C 0x27E9
0x005A 0x0051 0x27F5
0x005E 0x004F 0x2A6B
0x0062 0x0050 0x2A84
0x0066 0x0040 0x30D3
0x006A 0x00B3 0x31BE
0x006E 0x00B0 0x31EC
0x0072 0x012D 0x321F
0x0076 0x012E 0x3223
0x007A 0x012F 0x3228
0x007E 0x013F 0x322D
0x0082 0x013E 0x3231
0x0086 0x012B 0x3236
0x008A 0x012C 0x323B
0x008E 0x0127 0x3240
0x0092 0x010F 0x3245
0x0096 0x00AB 0x3248
0x009A 0x0059 0x3276
0x009E 0x0057 0x360C
0x00A2 0x0056 0x3C88
0x00A6 0x0054 0x3DE5
0x00AA 0x0055 0x3E50
0x00AE 0x00A5 0x3E7F
0x00B2 0x00A2 0x3E97
0x00B6 0x00A4 0x3EAB
0x00BA 0x009E 0x3EC7
0x00BE 0x00CE 0x3EDB
0x00C2 0x00D7 0x3EF1
0x00C6 0x00CF 0x3F19
0x00CA 0x006D 0x3F47
0x00CE 0x006E 0x3F4F
0x00D2 0x006F 0x3FD4
0x00D6 0x008F 0x4007
0x00DA 0x0096 0x4019
0x00DE 0x0097 0x403E
0x00E2 0x008A 0x4058
0x00E6 0x009A 0x405C
0x00EA 0x0098 0x4065
0x00EE 0x008C 0x4070
0x00F2 0x0093 0x4074
0x00F6 0x0090 0x407D
0x00FA 0x0095 0x4083
0x00FE 0x0099 0x408C
0x0102 0x009B 0x40EE
0x0106 0x0091 0x418D
0x010A 0x0087 0x423C
0x010E 0x0067 0x4267
0x0112 0x005C 0x42D6
0x0116 0x005B 0x4816
0x011A 0x00AC 0x4843
0x011E 0x00B7 0x488E
0x0122 0x0083 0x48CA
0x0126 0x007E 0x48F8
0x012A 0x0072 0x4B73
0x012E 0x0079 0x4B7A
0x0132 0x0075 0x4C36
0x0136 0x007C 0x4C4A
0x013A 0x007D 0x4DBC
0x013E 0x0078 0x4E40
0x0142 0x007A 0x4E61
0x0146 0x007B 0x4EE4
0x014A 0x0073 0x4F2D
0x014E 0x0076 0x4F42
0x0152 0x0077 0x4F49
0x0156 0x0074 0x4F60
0x015A 0x00CD 0x5000
0x015E 0x00D5 0x500B
0x0162 0x00A6 0x5054
0x0166 0x00A1 0x508C
0x016A 0x00A7 0x5098
0x016E 0x00A8 0x50BE
0x0172 0x006B 0x50C8
0x0176 0x006C 0x5114
0x017A 0x0069 0x5249
0x017E 0x006A 0x5295
0x0182 0x0063 0x5338
0x0186 0x005D 0x534C
0x018A 0x005A 0x5355
0x018E 0x011E 0x5386
0x0192 0x00D0 0x538B

// constant data  [3613]

0x0196  0x2D 0x5C 0x7C 0x2F 0x2D 0x5C 0x7C 0x2F  0x2E 0x68 0x65 0x78 0x65 0x2F 0x42 0x69  -\|/-\|/.hexe/Bi
0x01A6  0x6E 0x2F 0x2E 0x68 0x61 0x73 0x6D 0x2F  0x44 0x65 0x62 0x75 0x67 0x2F 0x46 0x61  n/.hasm/Debug/Fa
0x01B6  0x69 0x6C 0x65 0x64 0x20 0x74 0x6F 0x20  0x63 0x72 0x65 0x61 0x74 0x65 0x20 0x27  iled to create '
0x01C6  0x2E 0x63 0x6F 0x64 0x65 0x2F 0x44 0x65  0x62 0x75 0x67 0x2F 0x4F 0x62 0x6A 0x20  .code/Debug/Obj 
0x01D6  0x30 0x78 0x20 0x2F 0x2F 0x20 0x62 0x69  0x6E 0x61 0x72 0x79 0x20 0x76 0x65 0x72  0x // binary ver
0x01E6  0x73 0x69 0x6F 0x6E 0x20 0x6E 0x75 0x6D  0x62 0x65 0x72 0x20 0x2F 0x2F 0x20 0x6F  sion number // o
0x01F6  0x66 0x66 0x73 0x65 0x74 0x20 0x74 0x6F  0x20 0x63 0x6F 0x6E 0x73 0x74 0x61 0x6E  ffset to constan
0x0206  0x74 0x20 0x64 0x61 0x74 0x61 0x20 0x2F  0x2F 0x20 0x27 0x6D 0x61 0x69 0x6E 0x27  t data // 'main'
0x0216  0x20 0x65 0x6E 0x74 0x72 0x79 0x20 0x70  0x6F 0x69 0x6E 0x74 0x20 0x6F 0x66 0x66   entry point off
0x0226  0x73 0x65 0x74 0x30 0x78 0x30 0x30 0x30  0x30 0x20 0x20 0x5B 0x53 0x75 0x63 0x63  set0x0000  [Succ
0x0236  0x65 0x73 0x73 0x2C 0x20 0x20 0x62 0x79  0x74 0x65 0x73 0x2C 0x20 0x00 0x00 0x7A  ess,  bytes, ..z
0x0246  0x44 0x20 0x69 0x6E 0x73 0x74 0x72 0x75  0x63 0x74 0x69 0x6F 0x6E 0x73 0x20 0x64  D instructions d
0x0256  0x69 0x73 0x61 0x73 0x73 0x65 0x6D 0x62  0x6C 0x65 0x64 0x2E 0x20 0x49 0x6E 0x76  isassembled. Inv
0x0266  0x61 0x6C 0x69 0x64 0x20 0x61 0x72 0x67  0x75 0x6D 0x65 0x6E 0x74 0x73 0x20 0x66  alid arguments f
0x0276  0x6F 0x72 0x20 0x44 0x41 0x53 0x4D 0x3A  0x20 0x20 0x44 0x41 0x53 0x4D 0x20 0x3C  or DASM:  DASM <
0x0286  0x68 0x65 0x78 0x65 0x20 0x66 0x69 0x6C  0x65 0x3E 0x20 0x20 0x20 0x20 0x2D 0x67  hexe file>    -g
0x0296  0x20 0x3C 0x63 0x3E 0x20 0x3C 0x72 0x3E  0x20 0x3A 0x20 0x63 0x61 0x6C 0x6C 0x65   <c> <r> : calle
0x02A6  0x64 0x20 0x66 0x72 0x6F 0x6D 0x20 0x47  0x55 0x49 0x2C 0x20 0x6E 0x6F 0x74 0x20  d from GUI, not 
0x02B6  0x63 0x6F 0x6E 0x73 0x6F 0x6C 0x65 0x73  0x6F 0x75 0x72 0x63 0x65 0x6C 0x69 0x6E  consolesourcelin
0x02C6  0x65 0x6E 0x61 0x6D 0x65 0x64 0x65 0x62  0x75 0x67 0x2F 0x2F 0x20 0x23 0x23 0x23  enamedebug// ###
0x02D6  0x23 0x20 0x20 0x28 0x2E 0x2E 0x29 0x20  0x20 0x23 0x23 0x23 0x23 0x53 0x74 0x72  #  (..)  ####Str
0x02E6  0x69 0x6E 0x67 0x4E 0x65 0x77 0x46 0x72  0x6F 0x6D 0x43 0x6F 0x6E 0x73 0x74 0x61  ingNewFromConsta
0x02F6  0x6E 0x74 0x4E 0x65 0x77 0x46 0x72 0x6F  0x6D 0x43 0x68 0x61 0x72 0x41 0x70 0x70  ntNewFromCharApp
0x0306  0x65 0x6E 0x64 0x49 0x6E 0x73 0x65 0x72  0x74 0x43 0x68 0x61 0x72 0x43 0x6F 0x6D  endInsertCharCom
0x0316  0x70 0x61 0x72 0x65 0x4C 0x65 0x6E 0x67  0x74 0x68 0x5F 0x47 0x65 0x74 0x45 0x6E  pareLength_GetEn
0x0326  0x64 0x73 0x57 0x69 0x74 0x68 0x53 0x75  0x62 0x73 0x74 0x72 0x69 0x6E 0x67 0x52  dsWithSubstringR
0x0336  0x65 0x70 0x6C 0x61 0x63 0x65 0x47 0x65  0x74 0x43 0x68 0x61 0x72 0x41 0x72 0x72  eplaceGetCharArr
0x0346  0x61 0x79 0x43 0x6F 0x75 0x6E 0x74 0x5F  0x47 0x65 0x74 0x47 0x65 0x74 0x49 0x74  ayCount_GetGetIt
0x0356  0x65 0x6D 0x53 0x65 0x74 0x49 0x74 0x65  0x6D 0x4C 0x69 0x73 0x74 0x47 0x65 0x74  emSetItemListGet
0x0366  0x49 0x74 0x65 0x6D 0x41 0x73 0x56 0x61  0x72 0x69 0x61 0x6E 0x74 0x43 0x6C 0x65  ItemAsVariantCle
0x0376  0x61 0x72 0x52 0x65 0x6D 0x6F 0x76 0x65  0x43 0x6F 0x6E 0x74 0x61 0x69 0x6E 0x73  arRemoveContains
0x0386  0x44 0x69 0x63 0x74 0x69 0x6F 0x6E 0x61  0x72 0x79 0x4E 0x65 0x78 0x74 0x50 0x61  DictionaryNextPa
0x0396  0x69 0x72 0x4B 0x65 0x79 0x4B 0x65 0x79  0x54 0x79 0x70 0x65 0x56 0x61 0x6C 0x75  irKeyKeyTypeValu
0x03A6  0x65 0x56 0x61 0x6C 0x75 0x65 0x54 0x79  0x70 0x65 0x42 0x6F 0x78 0x55 0x6E 0x42  eValueTypeBoxUnB
0x03B6  0x6F 0x78 0x53 0x63 0x72 0x65 0x65 0x6E  0x50 0x72 0x69 0x6E 0x74 0x50 0x72 0x69  oxScreenPrintPri
0x03C6  0x6E 0x74 0x4C 0x6E 0x53 0x65 0x74 0x43  0x75 0x72 0x73 0x6F 0x72 0x43 0x6F 0x6C  ntLnSetCursorCol
0x03D6  0x75 0x6D 0x6E 0x73 0x5F 0x47 0x65 0x74  0x52 0x6F 0x77 0x73 0x5F 0x47 0x65 0x74  umns_GetRows_Get
0x03E6  0x43 0x75 0x72 0x73 0x6F 0x72 0x58 0x5F  0x47 0x65 0x74 0x43 0x75 0x72 0x73 0x6F  CursorX_GetCurso
0x03F6  0x72 0x59 0x5F 0x47 0x65 0x74 0x53 0x75  0x73 0x70 0x65 0x6E 0x64 0x52 0x65 0x73  rY_GetSuspendRes
0x0406  0x75 0x6D 0x65 0x44 0x72 0x61 0x77 0x43  0x68 0x61 0x72 0x49 0x6E 0x74 0x54 0x6F  umeDrawCharIntTo
0x0416  0x46 0x6C 0x6F 0x61 0x74 0x54 0x6F 0x4C  0x6F 0x6E 0x67 0x55 0x49 0x6E 0x74 0x54  FloatToLongUIntT
0x0426  0x6F 0x49 0x6E 0x74 0x54 0x6F 0x53 0x74  0x72 0x69 0x6E 0x67 0x54 0x6F 0x42 0x79  oIntToStringToBy
0x0436  0x74 0x65 0x73 0x54 0x6F 0x55 0x49 0x6E  0x74 0x41 0x64 0x64 0x44 0x69 0x76 0x4D  tesToUIntAddDivM
0x0446  0x75 0x6C 0x4D 0x6F 0x64 0x4E 0x65 0x67  0x61 0x74 0x65 0x54 0x69 0x6D 0x65 0x4D  ulModNegateTimeM
0x0456  0x69 0x6C 0x6C 0x69 0x73 0x5F 0x47 0x65  0x74 0x4D 0x69 0x63 0x72 0x6F 0x73 0x5F  illis_GetMicros_
0x0466  0x47 0x65 0x74 0x53 0x79 0x73 0x74 0x65  0x6D 0x41 0x72 0x67 0x75 0x6D 0x65 0x6E  GetSystemArgumen
0x0476  0x74 0x73 0x5F 0x47 0x65 0x74 0x43 0x75  0x72 0x72 0x65 0x6E 0x74 0x44 0x69 0x72  ts_GetCurrentDir
0x0486  0x65 0x63 0x74 0x6F 0x72 0x79 0x5F 0x47  0x65 0x74 0x43 0x75 0x72 0x72 0x65 0x6E  ectory_GetCurren
0x0496  0x74 0x44 0x69 0x72 0x65 0x63 0x74 0x6F  0x72 0x79 0x5F 0x53 0x65 0x74 0x42 0x65  tDirectory_SetBe
0x04A6  0x65 0x70 0x45 0x78 0x65 0x63 0x75 0x74  0x65 0x52 0x65 0x67 0x69 0x73 0x74 0x65  epExecuteRegiste
0x04B6  0x72 0x4F 0x62 0x6A 0x65 0x63 0x74 0x46  0x69 0x6C 0x65 0x45 0x78 0x69 0x73 0x74  rObjectFileExist
0x04C6  0x73 0x4F 0x70 0x65 0x6E 0x43 0x72 0x65  0x61 0x74 0x65 0x52 0x65 0x61 0x64 0x4C  sOpenCreateReadL
0x04D6  0x69 0x6E 0x65 0x49 0x73 0x56 0x61 0x6C  0x69 0x64 0x46 0x6C 0x75 0x73 0x68 0x44  ineIsValidFlushD
0x04E6  0x65 0x6C 0x65 0x74 0x65 0x47 0x65 0x74  0x53 0x69 0x7A 0x65 0x47 0x65 0x74 0x44  eleteGetSizeGetD
0x04F6  0x69 0x72 0x65 0x63 0x74 0x6F 0x72 0x79  0x43 0x6F 0x75 0x6E 0x74 0x47 0x65 0x74  irectoryCountGet
0x0506  0x46 0x69 0x6C 0x65 0x43 0x6F 0x75 0x6E  0x74 0x4B 0x65 0x79 0x62 0x6F 0x61 0x72  FileCountKeyboar
0x0516  0x64 0x52 0x65 0x61 0x64 0x4B 0x65 0x79  0x49 0x73 0x41 0x76 0x61 0x69 0x6C 0x61  dReadKeyIsAvaila
0x0526  0x62 0x6C 0x65 0x5F 0x47 0x65 0x74 0x54  0x6F 0x4B 0x65 0x79 0x43 0x6C 0x69 0x63  ble_GetToKeyClic
0x0536  0x6B 0x58 0x5F 0x47 0x65 0x74 0x43 0x6C  0x69 0x63 0x6B 0x59 0x5F 0x47 0x65 0x74  kX_GetClickY_Get
0x0546  0x43 0x6C 0x69 0x63 0x6B 0x55 0x70 0x5F  0x47 0x65 0x74 0x43 0x6C 0x69 0x63 0x6B  ClickUp_GetClick
0x0556  0x44 0x6F 0x75 0x62 0x6C 0x65 0x5F 0x47  0x65 0x74 0x53 0x63 0x72 0x6F 0x6C 0x6C  Double_GetScroll
0x0566  0x44 0x65 0x6C 0x74 0x61 0x5F 0x47 0x65  0x74 0x44 0x69 0x61 0x67 0x6E 0x6F 0x73  Delta_GetDiagnos
0x0576  0x74 0x69 0x63 0x73 0x4F 0x75 0x74 0x70  0x75 0x74 0x44 0x65 0x62 0x75 0x67 0x41  ticsOutputDebugA
0x0586  0x73 0x73 0x65 0x72 0x74 0x44 0x69 0x65  0x53 0x65 0x74 0x45 0x72 0x72 0x6F 0x72  ssertDieSetError
0x0596  0x54 0x79 0x70 0x65 0x73 0x54 0x79 0x70  0x65 0x4F 0x66 0x56 0x61 0x6C 0x75 0x65  TypesTypeOfValue
0x05A6  0x54 0x79 0x70 0x65 0x4F 0x66 0x4B 0x65  0x79 0x54 0x79 0x70 0x65 0x4F 0x66 0x42  TypeOfKeyTypeOfB
0x05B6  0x6F 0x78 0x54 0x79 0x70 0x65 0x4F 0x66  0x56 0x65 0x72 0x69 0x66 0x79 0x56 0x61  oxTypeOfVerifyVa
0x05C6  0x6C 0x75 0x65 0x54 0x79 0x70 0x65 0x73  0x42 0x75 0x69 0x6C 0x64 0x57 0x65 0x62  lueTypesBuildWeb
0x05D6  0x53 0x65 0x72 0x76 0x65 0x72 0x4D 0x65  0x74 0x68 0x6F 0x64 0x5F 0x47 0x65 0x74  ServerMethod_Get
0x05E6  0x55 0x52 0x4C 0x5F 0x47 0x65 0x74 0x53  0x65 0x6E 0x64 0x43 0x6C 0x65 0x61 0x72  URL_GetSendClear
0x05F6  0x48 0x61 0x6E 0x64 0x6C 0x65 0x72 0x73  0x48 0x74 0x74 0x70 0x43 0x6C 0x69 0x65  HandlersHttpClie
0x0606  0x6E 0x74 0x47 0x65 0x74 0x52 0x65 0x71  0x75 0x65 0x73 0x74 0x52 0x75 0x6E 0x74  ntGetRequestRunt
0x0616  0x69 0x6D 0x65 0x48 0x61 0x6C 0x74 0x65  0x64 0x5F 0x47 0x65 0x74 0x48 0x61 0x6C  imeHalted_GetHal
0x0626  0x74 0x65 0x64 0x5F 0x53 0x65 0x74 0x4C  0x6F 0x61 0x64 0x42 0x79 0x74 0x65 0x73  ted_SetLoadBytes
0x0636  0x4C 0x6F 0x61 0x64 0x65 0x64 0x5F 0x47  0x65 0x74 0x53 0x65 0x74 0x56 0x69 0x73  Loaded_GetSetVis
0x0646  0x69 0x62 0x69 0x6C 0x69 0x74 0x79 0x53  0x65 0x74 0x53 0x74 0x65 0x70 0x70 0x69  ibilitySetSteppi
0x0656  0x6E 0x67 0x53 0x74 0x65 0x70 0x49 0x6E  0x74 0x6F 0x53 0x74 0x65 0x70 0x4F 0x76  ngStepIntoStepOv
0x0666  0x65 0x72 0x53 0x74 0x65 0x70 0x52 0x75  0x6E 0x50 0x43 0x5F 0x47 0x65 0x74 0x57  erStepRunPC_GetW
0x0676  0x61 0x69 0x74 0x69 0x6E 0x67 0x5F 0x47  0x65 0x74 0x43 0x6C 0x65 0x61 0x72 0x42  aiting_GetClearB
0x0686  0x72 0x65 0x61 0x6B 0x70 0x6F 0x69 0x6E  0x74 0x73 0x43 0x6C 0x65 0x61 0x72 0x53  reakpointsClearS
0x0696  0x74 0x61 0x74 0x65 0x6D 0x65 0x6E 0x74  0x73 0x53 0x65 0x74 0x42 0x72 0x65 0x61  tatementsSetBrea
0x06A6  0x6B 0x70 0x6F 0x69 0x6E 0x74 0x53 0x65  0x74 0x53 0x74 0x61 0x74 0x65 0x6D 0x65  kpointSetStateme
0x06B6  0x6E 0x74 0x53 0x50 0x5F 0x47 0x65 0x74  0x42 0x50 0x5F 0x47 0x65 0x74 0x43 0x53  ntSP_GetBP_GetCS
0x06C6  0x50 0x5F 0x47 0x65 0x74 0x47 0x65 0x74  0x53 0x74 0x61 0x63 0x6B 0x57 0x6F 0x72  P_GetGetStackWor
0x06D6  0x64 0x47 0x65 0x74 0x53 0x74 0x61 0x63  0x6B 0x56 0x61 0x72 0x69 0x61 0x6E 0x74  dGetStackVariant
0x06E6  0x47 0x65 0x74 0x53 0x74 0x61 0x63 0x6B  0x54 0x79 0x70 0x65 0x47 0x65 0x74 0x43  GetStackTypeGetC
0x06F6  0x61 0x6C 0x6C 0x53 0x74 0x61 0x63 0x6B  0x57 0x6F 0x72 0x64 0x53 0x65 0x72 0x69  allStackWordSeri
0x0706  0x61 0x6C 0x43 0x6F 0x6E 0x6E 0x65 0x63  0x74 0x43 0x6C 0x6F 0x73 0x65 0x52 0x65  alConnectCloseRe
0x0716  0x61 0x64 0x43 0x68 0x61 0x72 0x57 0x72  0x69 0x74 0x65 0x43 0x68 0x61 0x72 0x48  adCharWriteCharH
0x0726  0x61 0x72 0x64 0x77 0x61 0x72 0x65 0x4C  0x45 0x44 0x5F 0x53 0x65 0x74 0x4D 0x65  ardwareLED_SetMe
0x0736  0x6D 0x6F 0x72 0x79 0x52 0x65 0x61 0x64  0x42 0x79 0x74 0x65 0x57 0x72 0x69 0x74  moryReadByteWrit
0x0746  0x65 0x42 0x79 0x74 0x65 0x4D 0x61 0x78  0x69 0x6D 0x75 0x6D 0x41 0x6C 0x6C 0x6F  eByteMaximumAllo
0x0756  0x63 0x61 0x74 0x65 0x46 0x72 0x65 0x65  0x54 0x72 0x61 0x63 0x65 0x5F 0x53 0x65  cateFreeTrace_Se
0x0766  0x74 0x54 0x72 0x61 0x63 0x65 0x5F 0x47  0x65 0x74 0x48 0x61 0x73 0x68 0x4B 0x65  tTrace_GetHashKe
0x0776  0x79 0x43 0x6C 0x69 0x70 0x62 0x6F 0x61  0x72 0x64 0x48 0x61 0x73 0x54 0x65 0x78  yClipboardHasTex
0x0786  0x74 0x5F 0x47 0x65 0x74 0x47 0x65 0x74  0x54 0x65 0x78 0x74 0x53 0x65 0x74 0x54  t_GetGetTextSetT
0x0796  0x65 0x78 0x74 0x42 0x75 0x69 0x6C 0x64  0x46 0x72 0x6F 0x6E 0x74 0x52 0x65 0x61  extBuildFrontRea
0x07A6  0x64 0x42 0x69 0x74 0x57 0x72 0x69 0x74  0x65 0x42 0x69 0x74 0x54 0x6F 0x55 0x70  dBitWriteBitToUp
0x07B6  0x70 0x65 0x72 0x49 0x73 0x55 0x70 0x70  0x65 0x72 0x49 0x73 0x44 0x69 0x67 0x69  perIsUpperIsDigi
0x07C6  0x74 0x49 0x73 0x4C 0x65 0x74 0x74 0x65  0x72 0x4F 0x72 0x44 0x69 0x67 0x69 0x74  tIsLetterOrDigit
0x07D6  0x49 0x73 0x4C 0x6F 0x77 0x65 0x72 0x54  0x6F 0x44 0x69 0x67 0x69 0x74 0x54 0x6F  IsLowerToDigitTo
0x07E6  0x48 0x65 0x78 0x49 0x73 0x48 0x65 0x78  0x44 0x69 0x67 0x69 0x74 0x54 0x6F 0x4C  HexIsHexDigitToL
0x07F6  0x6F 0x77 0x65 0x72 0x53 0x74 0x61 0x72  0x74 0x73 0x57 0x69 0x74 0x68 0x49 0x6E  owerStartsWithIn
0x0806  0x64 0x65 0x78 0x4F 0x66 0x57 0x61 0x72  0x70 0x5F 0x53 0x65 0x74 0x57 0x61 0x72  dexOfWarp_SetWar
0x0816  0x70 0x5F 0x47 0x65 0x74 0x44 0x65 0x6C  0x61 0x79 0x2F 0x54 0x65 0x6D 0x70 0x2F  p_GetDelay/Temp/
0x0826  0x45 0x72 0x72 0x6F 0x72 0x73 0x2E 0x74  0x78 0x74 0x6D 0x65 0x74 0x68 0x6F 0x64  Errors.txtmethod
0x0836  0x20 0x69 0x6E 0x64 0x65 0x78 0x20 0x65  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x6C   index expectedl
0x0846  0x65 0x78 0x65 0x6D 0x65 0x67 0x6C 0x6F  0x62 0x61 0x6C 0x73 0x27 0x2C 0x27 0x20  exemeglobals',' 
0x0856  0x63 0x6F 0x6D 0x6D 0x61 0x20 0x65 0x78  0x70 0x65 0x63 0x74 0x65 0x64 0x67 0x6C  comma expectedgl
0x0866  0x6F 0x62 0x61 0x6C 0x20 0x6F 0x66 0x66  0x73 0x65 0x74 0x20 0x65 0x78 0x70 0x65  obal offset expe
0x0876  0x63 0x74 0x65 0x64 0x67 0x6C 0x6F 0x62  0x61 0x6C 0x20 0x6D 0x65 0x6D 0x62 0x65  ctedglobal membe
0x0886  0x72 0x20 0x6E 0x61 0x6D 0x65 0x20 0x65  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x67  r name expectedg
0x0896  0x6C 0x6F 0x62 0x61 0x6C 0x20 0x6D 0x65  0x6D 0x62 0x65 0x72 0x20 0x76 0x61 0x6C  lobal member val
0x08A6  0x75 0x65 0x20 0x65 0x78 0x70 0x65 0x63  0x74 0x65 0x64 0x74 0x79 0x70 0x65 0x2E  ue expectedtype.
0x08B6  0x6D 0x61 0x69 0x6E 0x6B 0x65 0x79 0x20  0x6E 0x61 0x6D 0x65 0x20 0x65 0x78 0x70  mainkey name exp
0x08C6  0x65 0x63 0x74 0x65 0x64 0x6D 0x65 0x74  0x68 0x6F 0x64 0x20 0x6E 0x61 0x6D 0x65  ectedmethod name
0x08D6  0x20 0x65 0x78 0x70 0x65 0x63 0x74 0x65  0x64 0x73 0x6F 0x75 0x72 0x63 0x65 0x20   expectedsource 
0x08E6  0x70 0x61 0x74 0x68 0x20 0x65 0x78 0x70  0x65 0x63 0x74 0x65 0x64 0x6C 0x69 0x6E  path expectedlin
0x08F6  0x65 0x20 0x6E 0x75 0x6D 0x62 0x65 0x72  0x20 0x65 0x78 0x70 0x65 0x63 0x74 0x65  e number expecte
0x0906  0x64 0x68 0x69 0x74 0x73 0x68 0x69 0x74  0x73 0x20 0x65 0x78 0x70 0x65 0x63 0x74  dhitshits expect
0x0916  0x65 0x64 0x6C 0x6F 0x63 0x61 0x6C 0x73  0x61 0x63 0x74 0x69 0x76 0x65 0x20 0x72  edlocalsactive r
0x0926  0x61 0x6E 0x67 0x65 0x20 0x65 0x78 0x70  0x65 0x63 0x74 0x65 0x64 0x6C 0x6F 0x63  ange expectedloc
0x0936  0x61 0x6C 0x20 0x6D 0x65 0x6D 0x62 0x65  0x72 0x20 0x6E 0x61 0x6D 0x65 0x20 0x65  al member name e
0x0946  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x6C  0x6F 0x63 0x61 0x6C 0x20 0x6D 0x65 0x6D  xpectedlocal mem
0x0956  0x62 0x65 0x72 0x20 0x76 0x61 0x6C 0x75  0x65 0x20 0x65 0x78 0x70 0x65 0x63 0x74  ber value expect
0x0966  0x65 0x64 0x42 0x50 0x20 0x6F 0x66 0x66  0x73 0x65 0x74 0x20 0x65 0x78 0x70 0x65  edBP offset expe
0x0976  0x63 0x74 0x65 0x64 0x61 0x72 0x67 0x75  0x6D 0x65 0x6E 0x74 0x20 0x6D 0x65 0x6D  ctedargument mem
0x0986  0x62 0x65 0x72 0x20 0x6E 0x61 0x6D 0x65  0x20 0x65 0x78 0x70 0x65 0x63 0x74 0x65  ber name expecte
0x0996  0x64 0x61 0x72 0x67 0x75 0x6D 0x65 0x6E  0x74 0x20 0x6D 0x65 0x6D 0x62 0x65 0x72  dargument member
0x09A6  0x20 0x76 0x61 0x6C 0x75 0x65 0x20 0x65  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x72   value expectedr
0x09B6  0x65 0x66 0x6F 0x66 0x66 0x73 0x65 0x74  0x20 0x6B 0x65 0x79 0x20 0x65 0x78 0x70  efoffset key exp
0x09C6  0x65 0x63 0x74 0x65 0x64 0x6C 0x69 0x6E  0x65 0x20 0x76 0x61 0x6C 0x75 0x65 0x20  ectedline value 
0x09D6  0x65 0x78 0x70 0x65 0x63 0x74 0x65 0x64  0x63 0x6F 0x64 0x65 0x20 0x65 0x78 0x70  expectedcode exp
0x09E6  0x65 0x63 0x74 0x65 0x64 0x75 0x6E 0x65  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x20  ectedunexpected 
0x09F6  0x6B 0x65 0x79 0x20 0x27 0x20 0x20 0x20  0x20 0x20 0x20 0x20 0x20 0x20 0x20 0x20  key '           
0x0A06  0x20 0x28 0x42 0x50 0x00 0x00 0x01 0x00  0x20 0x20 0x2F 0x2F 0x20 0x30 0x78 0x43   (BP....  // 0xC
0x0A16  0x20 0x20 0x20 0x2F 0x2F 0x20 0x43 0x41  0x53 0x54 0x45 0x4E 0x54 0x45 0x52 0x45     // CASTENTERE
0x0A26  0x4E 0x54 0x45 0x52 0x42 0x4E 0x4F 0x50  0x43 0x41 0x4C 0x4C 0x42 0x54 0x45 0x53  NTERBNOPCALLBTES
0x0A36  0x54 0x42 0x50 0x42 0x43 0x41 0x4C 0x4C  0x57 0x43 0x41 0x4C 0x4C 0x52 0x45 0x4C  TBPBCALLWCALLREL
0x0A46  0x52 0x45 0x54 0x30 0x52 0x45 0x54 0x42  0x52 0x45 0x54 0x57 0x52 0x45 0x54 0x52  RET0RETBRETWRETR
0x0A56  0x45 0x54 0x42 0x52 0x45 0x54 0x52 0x45  0x54 0x57 0x53 0x59 0x53 0x43 0x41 0x4C  ETBRETRETWSYSCAL
0x0A66  0x4C 0x53 0x59 0x53 0x43 0x41 0x4C 0x4C  0x30 0x53 0x59 0x53 0x43 0x41 0x4C 0x4C  LSYSCALL0SYSCALL
0x0A76  0x31 0x50 0x55 0x53 0x48 0x49 0x30 0x50  0x55 0x53 0x48 0x49 0x31 0x50 0x55 0x53  1PUSHI0PUSHI1PUS
0x0A86  0x48 0x49 0x4D 0x31 0x50 0x55 0x53 0x48  0x47 0x50 0x50 0x55 0x53 0x48 0x49 0x42  HIM1PUSHGPPUSHIB
0x0A96  0x50 0x55 0x53 0x48 0x49 0x57 0x50 0x55  0x53 0x48 0x49 0x57 0x4C 0x45 0x50 0x55  PUSHIWPUSHIWLEPU
0x0AA6  0x53 0x48 0x49 0x57 0x4C 0x54 0x49 0x4E  0x43 0x47 0x4C 0x4F 0x42 0x41 0x4C 0x42  SHIWLTINCGLOBALB
0x0AB6  0x44 0x45 0x43 0x47 0x4C 0x4F 0x42 0x41  0x4C 0x42 0x49 0x4E 0x43 0x4C 0x4F 0x43  DECGLOBALBINCLOC
0x0AC6  0x41 0x4C 0x42 0x49 0x4E 0x43 0x4C 0x4F  0x43 0x41 0x4C 0x42 0x42 0x44 0x45 0x43  ALBINCLOCALBBDEC
0x0AD6  0x4C 0x4F 0x43 0x41 0x4C 0x42 0x50 0x4F  0x50 0x47 0x4C 0x4F 0x42 0x41 0x4C 0x42  LOCALBPOPGLOBALB
0x0AE6  0x50 0x4F 0x50 0x47 0x4C 0x4F 0x42 0x41  0x4C 0x57 0x50 0x4F 0x50 0x4C 0x4F 0x43  POPGLOBALWPOPLOC
0x0AF6  0x41 0x4C 0x42 0x50 0x4F 0x50 0x4C 0x4F  0x43 0x41 0x4C 0x57 0x50 0x4F 0x50 0x52  ALBPOPLOCALWPOPR
0x0B06  0x45 0x4C 0x42 0x50 0x4F 0x50 0x52 0x45  0x4C 0x57 0x50 0x4F 0x50 0x43 0x4F 0x50  ELBPOPRELWPOPCOP
0x0B16  0x59 0x47 0x4C 0x4F 0x42 0x41 0x4C 0x42  0x50 0x4F 0x50 0x43 0x4F 0x50 0x59 0x47  YGLOBALBPOPCOPYG
0x0B26  0x4C 0x4F 0x42 0x41 0x4C 0x57 0x50 0x4F  0x50 0x43 0x4F 0x50 0x59 0x4C 0x4F 0x43  LOBALWPOPCOPYLOC
0x0B36  0x41 0x4C 0x42 0x50 0x4F 0x50 0x43 0x4F  0x50 0x59 0x4C 0x4F 0x43 0x41 0x4C 0x57  ALBPOPCOPYLOCALW
0x0B46  0x50 0x4F 0x50 0x43 0x4F 0x50 0x59 0x52  0x45 0x4C 0x42 0x50 0x4F 0x50 0x43 0x4F  POPCOPYRELBPOPCO
0x0B56  0x50 0x59 0x52 0x45 0x4C 0x57 0x50 0x4F  0x50 0x4C 0x4F 0x43 0x41 0x4C 0x42 0x30  PYRELWPOPLOCALB0
0x0B66  0x32 0x50 0x4F 0x50 0x4C 0x4F 0x43 0x41  0x4C 0x42 0x30 0x30 0x50 0x4F 0x50 0x43  2POPLOCALB00POPC
0x0B76  0x4F 0x50 0x59 0x4C 0x4F 0x43 0x41 0x4C  0x42 0x30 0x32 0x50 0x4F 0x50 0x43 0x4F  OPYLOCALB02POPCO
0x0B86  0x50 0x59 0x4C 0x4F 0x43 0x41 0x4C 0x42  0x30 0x30 0x50 0x55 0x53 0x48 0x47 0x4C  PYLOCALB00PUSHGL
0x0B96  0x4F 0x42 0x41 0x4C 0x42 0x50 0x55 0x53  0x48 0x47 0x4C 0x4F 0x42 0x41 0x4C 0x42  OBALBPUSHGLOBALB
0x0BA6  0x42 0x50 0x55 0x53 0x48 0x4C 0x4F 0x43  0x41 0x4C 0x42 0x42 0x50 0x55 0x53 0x48  BPUSHLOCALBBPUSH
0x0BB6  0x47 0x4C 0x4F 0x42 0x41 0x4C 0x57 0x50  0x55 0x53 0x48 0x53 0x54 0x41 0x43 0x4B  GLOBALWPUSHSTACK
0x0BC6  0x41 0x44 0x44 0x52 0x42 0x50 0x55 0x53  0x48 0x53 0x54 0x41 0x43 0x4B 0x41 0x44  ADDRBPUSHSTACKAD
0x0BD6  0x44 0x52 0x57 0x50 0x55 0x53 0x48 0x4C  0x4F 0x43 0x41 0x4C 0x42 0x30 0x30 0x50  DRWPUSHLOCALB00P
0x0BE6  0x55 0x53 0x48 0x4C 0x4F 0x43 0x41 0x4C  0x42 0x30 0x32 0x50 0x55 0x53 0x48 0x4C  USHLOCALB02PUSHL
0x0BF6  0x4F 0x43 0x41 0x4C 0x57 0x50 0x55 0x53  0x48 0x52 0x45 0x4C 0x42 0x50 0x55 0x53  OCALWPUSHRELBPUS
0x0C06  0x48 0x52 0x45 0x4C 0x57 0x42 0x4F 0x4F  0x4C 0x4E 0x4F 0x54 0x42 0x4F 0x4F 0x4C  HRELWBOOLNOTBOOL
0x0C16  0x41 0x4E 0x44 0x42 0x4F 0x4F 0x4C 0x4F  0x52 0x42 0x49 0x54 0x41 0x4E 0x44 0x42  ANDBOOLORBITANDB
0x0C26  0x49 0x54 0x4F 0x52 0x42 0x49 0x54 0x4E  0x4F 0x54 0x4A 0x5A 0x42 0x4A 0x4E 0x5A  ITORBITNOTJZBJNZ
0x0C36  0x42 0x4A 0x5A 0x57 0x4A 0x4E 0x5A 0x57  0x43 0x4F 0x50 0x59 0x4E 0x45 0x58 0x54  BJZWJNZWCOPYNEXT
0x0C46  0x50 0x4F 0x50 0x47 0x54 0x49 0x47 0x45  0x49 0x4C 0x45 0x49 0x53 0x55 0x42 0x44  POPGTIGEILEISUBD
0x0C56  0x49 0x56 0x4D 0x55 0x4C 0x4D 0x4F 0x44  0x41 0x44 0x44 0x49 0x53 0x55 0x42 0x49  IVMULMODADDISUBI
0x0C66  0x44 0x49 0x56 0x49 0x4D 0x55 0x4C 0x49  0x4D 0x4F 0x44 0x49 0x44 0x55 0x50 0x53  DIVIMULIMODIDUPS
0x0C76  0x57 0x41 0x50 0x44 0x45 0x43 0x53 0x50  0x44 0x49 0x45 0x42 0x49 0x54 0x53 0x48  WAPDECSPDIEBITSH
0x0C86  0x52 0x42 0x49 0x54 0x53 0x48 0x4C 0x55  0x6E 0x64 0x65 0x66 0x69 0x6E 0x65 0x64  RBITSHLUndefined
0x0C96  0x3A 0x20 0x30 0x78 0x27 0x20 0x65 0x78  0x70 0x65 0x63 0x74 0x65 0x64 0x20 0x45  : 0x' expected E
0x0CA6  0x72 0x72 0x6F 0x72 0x20 0x61 0x74 0x20  0x65 0x6E 0x64 0x20 0x45 0x72 0x72 0x6F  rror at end Erro
0x0CB6  0x72 0x20 0x61 0x74 0x20 0x27 0x45 0x4F  0x46 0x42 0x6F 0x6F 0x6C 0x4B 0x65 0x79  r at 'EOFBoolKey
0x0CC6  0x77 0x6F 0x72 0x64 0x44 0x69 0x72 0x65  0x63 0x74 0x69 0x76 0x65 0x49 0x64 0x65  wordDirectiveIde
0x0CD6  0x6E 0x74 0x69 0x66 0x69 0x65 0x72 0x44  0x6F 0x74 0x74 0x65 0x64 0x49 0x64 0x65  ntifierDottedIde
0x0CE6  0x6E 0x74 0x69 0x66 0x69 0x65 0x72 0x49  0x6E 0x74 0x65 0x67 0x65 0x72 0x53 0x74  ntifierIntegerSt
0x0CF6  0x72 0x69 0x6E 0x67 0x43 0x6F 0x6E 0x73  0x74 0x61 0x6E 0x74 0x41 0x73 0x73 0x69  ringConstantAssi
0x0D06  0x67 0x6E 0x42 0x69 0x74 0x41 0x6E 0x64  0x42 0x69 0x74 0x4F 0x72 0x4C 0x50 0x61  gnBitAndBitOrLPa
0x0D16  0x72 0x65 0x6E 0x52 0x50 0x61 0x72 0x65  0x6E 0x4C 0x42 0x72 0x61 0x63 0x65 0x52  renRParenLBraceR
0x0D26  0x42 0x72 0x61 0x63 0x65 0x4C 0x42 0x72  0x61 0x63 0x6B 0x65 0x74 0x52 0x42 0x72  BraceLBracketRBr
0x0D36  0x61 0x63 0x6B 0x65 0x74 0x53 0x65 0x6D  0x69 0x43 0x6F 0x6C 0x6F 0x6E 0x43 0x6F  acketSemiColonCo
0x0D46  0x6D 0x6D 0x61 0x53 0x75 0x62 0x74 0x72  0x61 0x63 0x74 0x4D 0x75 0x6C 0x74 0x69  mmaSubtractMulti
0x0D56  0x70 0x6C 0x79 0x44 0x69 0x76 0x69 0x64  0x65 0x4D 0x6F 0x64 0x75 0x6C 0x75 0x73  plyDivideModulus
0x0D66  0x49 0x6E 0x63 0x72 0x65 0x6D 0x65 0x6E  0x74 0x44 0x65 0x63 0x72 0x65 0x6D 0x65  IncrementDecreme
0x0D76  0x6E 0x74 0x53 0x68 0x69 0x66 0x74 0x4C  0x65 0x66 0x74 0x53 0x68 0x69 0x66 0x74  ntShiftLeftShift
0x0D86  0x52 0x69 0x67 0x68 0x74 0x42 0x6F 0x6F  0x6C 0x65 0x61 0x6E 0x4E 0x6F 0x74 0x42  RightBooleanNotB
0x0D96  0x6F 0x6F 0x6C 0x65 0x61 0x6E 0x4F 0x72  0x42 0x6F 0x6F 0x6C 0x65 0x61 0x6E 0x41  ooleanOrBooleanA
0x0DA6  0x6E 0x64 0x42 0x69 0x74 0x4E 0x6F 0x74  0x42 0x69 0x74 0x58 0x6F 0x72 0x70 0x6F  ndBitNotBitXorpo
0x0DB6  0x72 0x74 0x6D 0x65 0x6D 0x6F 0x72 0x79  0x6D 0x65 0x6D 0x6F 0x72 0x79 0x77 0x6F  rtmemorymemorywo
0x0DC6  0x72 0x64 0x61 0x72 0x72 0x61 0x79 0x62  0x6F 0x6F 0x6C 0x63 0x68 0x61 0x72 0x64  rdarrayboolchard
0x0DD6  0x65 0x6C 0x65 0x67 0x61 0x74 0x65 0x64  0x69 0x63 0x74 0x69 0x6F 0x6E 0x61 0x72  elegatedictionar
0x0DE6  0x79 0x64 0x69 0x72 0x65 0x63 0x74 0x6F  0x72 0x79 0x65 0x6E 0x75 0x6D 0x66 0x6C  ydirectoryenumfl
0x0DF6  0x61 0x67 0x73 0x66 0x6C 0x6F 0x61 0x74  0x75 0x69 0x6E 0x74 0x6C 0x69 0x73 0x74  agsfloatuintlist
0x0E06  0x6C 0x6F 0x6E 0x67 0x70 0x61 0x69 0x72  0x76 0x61 0x72 0x69 0x61 0x6E 0x74 0x66  longpairvariantf
0x0E16  0x61 0x6C 0x73 0x65 0x74 0x72 0x75 0x65  0x23 0x69 0x66 0x23 0x69 0x66 0x64 0x65  alsetrue#if#ifde
0x0E26  0x66 0x23 0x69 0x66 0x6E 0x64 0x65 0x66  0x23 0x65 0x6C 0x73 0x65 0x23 0x65 0x6E  f#ifndef#else#en
0x0E36  0x64 0x69 0x66 0x23 0x64 0x65 0x66 0x69  0x6E 0x65 0x62 0x72 0x65 0x61 0x6B 0x63  dif#definebreakc
0x0E46  0x61 0x73 0x65 0x63 0x6F 0x6E 0x74 0x69  0x6E 0x75 0x65 0x64 0x65 0x66 0x61 0x75  asecontinuedefau
0x0E56  0x6C 0x74 0x65 0x6D 0x62 0x65 0x64 0x66  0x6F 0x72 0x65 0x61 0x63 0x68 0x67 0x65  ltembedforeachge
0x0E66  0x74 0x6C 0x6F 0x6F 0x70 0x70 0x72 0x6F  0x67 0x72 0x61 0x6D 0x72 0x65 0x74 0x75  tloopprogramretu
0x0E76  0x72 0x6E 0x73 0x77 0x69 0x74 0x63 0x68  0x73 0x79 0x73 0x74 0x65 0x6D 0x74 0x79  rnswitchsystemty
0x0E86  0x70 0x65 0x6F 0x66 0x75 0x6E 0x69 0x74  0x75 0x73 0x65 0x73 0x77 0x68 0x69 0x6C  peofunituseswhil
0x0E96  0x65 0x54 0x4F 0x44 0x4F 0x20 0x3A 0x20  0x74 0x6F 0x6B 0x65 0x6E 0x20 0x6E 0x6F  eTODO : token no
0x0EA6  0x74 0x20 0x69 0x6D 0x70 0x6C 0x65 0x6D  0x65 0x6E 0x74 0x65 0x64 0x20 0x69 0x6E  t implemented in
0x0EB6  0x20 0x54 0x6F 0x6B 0x65 0x6E 0x2E 0x47  0x65 0x74 0x54 0x79 0x70 0x65 0x75 0x6E   Token.GetTypeun
0x0EC6  0x65 0x78 0x70 0x65 0x63 0x74 0x65 0x64  0x20 0x63 0x68 0x61 0x72 0x61 0x63 0x74  expected charact
0x0ED6  0x65 0x72 0x3A 0x20 0x27 0x27 0x20 0x28  0x30 0x78 0x69 0x6E 0x76 0x61 0x6C 0x69  er: '' (0xinvali
0x0EE6  0x64 0x20 0x68 0x65 0x78 0x20 0x69 0x6E  0x74 0x65 0x67 0x65 0x72 0x20 0x6C 0x69  d hex integer li
0x0EF6  0x74 0x65 0x72 0x61 0x6C 0x69 0x6E 0x76  0x61 0x6C 0x69 0x64 0x20 0x62 0x69 0x6E  teralinvalid bin
0x0F06  0x61 0x72 0x79 0x20 0x69 0x6E 0x74 0x65  0x67 0x65 0x72 0x20 0x6C 0x69 0x74 0x65  ary integer lite
0x0F16  0x72 0x61 0x6C 0x69 0x6E 0x76 0x61 0x6C  0x69 0x64 0x20 0x66 0x6C 0x6F 0x61 0x74  ralinvalid float
0x0F26  0x20 0x6C 0x69 0x74 0x65 0x72 0x61 0x6C  0x69 0x6E 0x76 0x61 0x6C 0x69 0x64 0x20   literalinvalid 
0x0F36  0x69 0x6E 0x74 0x65 0x67 0x65 0x72 0x20  0x6C 0x69 0x74 0x65 0x72 0x61 0x6C 0x75  integer literalu
0x0F46  0x6E 0x65 0x78 0x70 0x65 0x63 0x74 0x65  0x64 0x20 0x45 0x4F 0x4C 0x20 0x69 0x6E  nexpected EOL in
0x0F56  0x20 0x73 0x74 0x72 0x69 0x6E 0x67 0x75  0x6E 0x74 0x65 0x72 0x6D 0x69 0x6E 0x61   stringuntermina
0x0F66  0x74 0x65 0x64 0x20 0x73 0x74 0x72 0x69  0x6E 0x67 0x3A 0x20 0x27 0x70 0x6F 0x73  ted string: 'pos
0x0F76  0x00 0x00 0x20 0x41 0x54 0x4F 0x44 0x4F  0x20 0x3A 0x20 0x74 0x6F 0x6B 0x65 0x6E  .. ATODO : token
0x0F86  0x20 0x6E 0x6F 0x74 0x20 0x69 0x6D 0x70  0x6C 0x65 0x6D 0x65 0x6E 0x74 0x65 0x64   not implemented
0x0F96  0x20 0x69 0x6E 0x20 0x54 0x6F 0x6B 0x65  0x6E 0x2E 0x48 0x6F 0x70 0x70 0x65 0x72   in Token.Hopper
0x0FA6  0x54 0x6F 0x6B 0x65 0x6E 0x54 0x6F 0x53  0x74 0x72 0x69 0x6E 0x67                 TokenToString


// DASM.hs:226
// ####  DASM.main(..)  ####                                                    0x0000

0x0FB3  0x44            PUSHI0
0x0FB4  0x44            PUSHI0
0x0FB5  0x1F 0x00       POPGLOBALB 0x00
0x0FB7  0x44            PUSHI0
0x0FB8  0x44            PUSHI0
0x0FB9  0x1F 0x02       POPGLOBALB 0x02
0x0FBB  0x24 0x02       SYSCALL0 0x02  // String.New
0x0FBD  0x1A 0x0F       PUSHIB 0x0F
0x0FBF  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x0FC1  0x44            PUSHI0
0x0FC2  0x1A 0x04       PUSHIB 0x04
0x0FC4  0x1A 0x19       PUSHIB 0x19
0x0FC6  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FC8  0x1A 0x04       PUSHIB 0x04
0x0FCA  0x1A 0x04       PUSHIB 0x04
0x0FCC  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FCE  0x1A 0x04       PUSHIB 0x04
0x0FD0  0x1A 0x04       PUSHIB 0x04
0x0FD2  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FD4  0x1A 0x04       PUSHIB 0x04
0x0FD6  0x1A 0x0F       PUSHIB 0x0F
0x0FD8  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FDA  0x1A 0x03       PUSHIB 0x03
0x0FDC  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x0FDE  0x1A 0x0F       PUSHIB 0x0F
0x0FE0  0x1A 0x13       PUSHIB 0x13
0x0FE2  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FE4  0x1A 0x0F       PUSHIB 0x0F
0x0FE6  0x1A 0x13       PUSHIB 0x13
0x0FE8  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FEA  0x1A 0x04       PUSHIB 0x04
0x0FEC  0x1A 0x0F       PUSHIB 0x0F
0x0FEE  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FF0  0x24 0x02       SYSCALL0 0x02  // String.New
0x0FF2  0x1A 0x0F       PUSHIB 0x0F
0x0FF4  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x0FF6  0x1A 0x0F       PUSHIB 0x0F
0x0FF8  0x1A 0x06       PUSHIB 0x06
0x0FFA  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x0FFC  0x1A 0x0F       PUSHIB 0x0F
0x0FFE  0x1A 0x06       PUSHIB 0x06
0x1000  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1002  0x1A 0x0F       PUSHIB 0x0F
0x1004  0x1A 0x06       PUSHIB 0x06
0x1006  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1008  0x1A 0x0F       PUSHIB 0x0F
0x100A  0x1A 0x06       PUSHIB 0x06
0x100C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x100E  0x1A 0x0F       PUSHIB 0x0F
0x1010  0x1A 0x06       PUSHIB 0x06
0x1012  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1014  0x1A 0x0F       PUSHIB 0x0F
0x1016  0x1A 0x07       PUSHIB 0x07
0x1018  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x101A  0x1A 0x07       PUSHIB 0x07
0x101C  0x1A 0x0F       PUSHIB 0x0F
0x101E  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1020  0x1A 0x0F       PUSHIB 0x0F
0x1022  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1024  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x1026  0x44            PUSHI0
0x1027  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x1029  0x44            PUSHI0
0x102A  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x102C  0x24 0x02       SYSCALL0 0x02  // String.New
0x102E  0x44            PUSHI0
0x102F  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x1031  0x44            PUSHI0
0x1032  0x44            PUSHI0
0x1033  0x1A 0x0F       PUSHIB 0x0F
0x1035  0x1A 0x0F       PUSHIB 0x0F
0x1037  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1039  0x44            PUSHI0
0x103A  0x44            PUSHI0
0x103B  0x1F 0x44       POPGLOBALB 0x44
0x103D  0x1A 0x0F       PUSHIB 0x0F
0x103F  0x1A 0x03       PUSHIB 0x03
0x1041  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1043  0x1A 0x0F       PUSHIB 0x0F
0x1045  0x1A 0x0F       PUSHIB 0x0F
0x1047  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1049  0x1A 0x0F       PUSHIB 0x0F
0x104B  0x1A 0x0F       PUSHIB 0x0F
0x104D  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x104F  0x44            PUSHI0
0x1050  0x44            PUSHI0
0x1051  0x24 0x02       SYSCALL0 0x02  // String.New
0x1053  0x44            PUSHI0
0x1054  0x1A 0x08       PUSHIB 0x08
0x1056  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1058  0x1F 0x50       POPGLOBALB 0x50
0x105A  0x24 0x60       SYSCALL0 0x60  // File.New
0x105C  0x44            PUSHI0
0x105D  0x44            PUSHI0
0x105E  0x44            PUSHI0
0x105F  0x49            ENTER

                        // SysCalls.New();                                      DASM.hs:227

0x1060  0x2C 0x81       CALLB 0x81     // SysCalls.New

                        // <string> rawArgs = System.Arguments;                 DASM.hs:233

0x1062  0x1A 0x0F       PUSHIB 0x0F
0x1064  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1066  0x24 0x59       SYSCALL0 0x59  // System.Arguments_Get
0x1068  0x5D            POPCOPYLOCALB00

                        // <string> args;                                       DASM.hs:234

0x1069  0x1A 0x0F       PUSHIB 0x0F
0x106B  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // for (uint iArg = 0; iArg < rawArgs.Length; iArg++)

0x106D  0x44            PUSHI0
0x106E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1070  0x4E            PUSHLOCALB00
0x1071  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x1073  0x08            LT
0x1074  0x31 0x76 0x00  JZW 0x10EA (+118)

                        // string arg = rawArgs[iArg];                          DASM.hs:237

0x1077  0x24 0x02       SYSCALL0 0x02  // String.New
0x1079  0x4E            PUSHLOCALB00
0x107A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x107C  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x107E  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if ((arg.Length == 2) && (arg[0] == '-'))            DASM.hs:238

0x1080  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1082  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x1084  0x1A 0x02       PUSHIB 0x02
0x1086  0x05            EQ
0x1087  0x27 0x00       DUP 0x00
0x1089  0x2E 0x0B       JZB 0x1094 (+11)
0x108B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x108D  0x44            PUSHI0
0x108E  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x1090  0x1A 0x2D       PUSHIB 0x2D
0x1092  0x05            EQ
0x1093  0x0C            BOOLAND
0x1094  0x2E 0x4A       JZB 0x10DE (+74)

                        // arg = arg.ToLower();                                 DASM.hs:240

0x1096  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1098  0x2C 0xDC       CALLB 0xDC     // String.ToLower
0x109A  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // switch (arg)                                         DASM.hs:241

0x109C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)

                        // case "-g":                                           DASM.hs:243

0x109E  0x37 0x2D 0x67  PUSHIW 0x672D
0x10A1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x10A3  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x10A5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x10A7  0x2F 0x2C       JNZB 0x10D3 (+44)

                        // uint col;                                            DASM.hs:245

0x10A9  0x44            PUSHI0

                        // uint row;                                            DASM.hs:246

0x10AA  0x44            PUSHI0

                        // iArg++;                                              DASM.hs:247

0x10AB  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // if (TryParseUInt(rawArgs[iArg], ref col))            DASM.hs:248

0x10AD  0x4E            PUSHLOCALB00
0x10AE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x10B0  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x10B2  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x10B4  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x10B6  0x2E 0x02       JZB 0x10B8 (+2)

                        // iArg++;                                              DASM.hs:251

0x10B8  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // if (TryParseUInt(rawArgs[iArg], ref row))            DASM.hs:252

0x10BA  0x4E            PUSHLOCALB00
0x10BB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x10BD  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x10BF  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x10C1  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x10C3  0x2E 0x02       JZB 0x10C5 (+2)

                        // Parser.SetInteractive(byte(col), byte(row));

0x10C5  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x10C7  0x51 0x03       CAST 0x03
0x10C9  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x10CB  0x51 0x03       CAST 0x03
0x10CD  0x2C 0x85       CALLB 0x85     // Parser.SetInteractive

                        // }                                                    DASM.hs:256

0x10CF  0x28 0x04       DECSP 0x04
0x10D1  0x30 0x09       JB 0x10DA (+9)

                        // args.Clear();                                        DASM.hs:259

0x10D3  0x4F            PUSHLOCALB02
0x10D4  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // break;                                               DASM.hs:260

0x10D6  0x28 0x06       DECSP 0x06
0x10D8  0x30 0x14       JB 0x10EC (+20)

                        // }                                                    DASM.hs:262

0x10DA  0x28 0x02       DECSP 0x02

                        // }                                                    DASM.hs:263

0x10DC  0x30 0x07       JB 0x10E3 (+7)

                        // args.Append(arg);                                    DASM.hs:266

0x10DE  0x4F            PUSHLOCALB02
0x10DF  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x10E1  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    DASM.hs:268

0x10E3  0x28 0x02       DECSP 0x02
0x10E5  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x10E7  0x33 0x87 0xFF  JW 0x106E (-121)
0x10EA  0x28 0x02       DECSP 0x02

                        // if (args.Length != 1)                                DASM.hs:270

0x10EC  0x4F            PUSHLOCALB02
0x10ED  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x10EF  0x45            PUSHI1
0x10F0  0x06            NE
0x10F1  0x2E 0x08       JZB 0x10F9 (+8)

                        // BadArguments();                                      DASM.hs:272

0x10F3  0x2C 0x05       CALLB 0x05     // DASM.BadArguments

                        // break;                                               DASM.hs:273

0x10F5  0x28 0x04       DECSP 0x04
0x10F7  0x2A 0x5A       RETB 0x5A

                        // string ext = hexeExtension;                          DASM.hs:275

0x10F9  0x24 0x02       SYSCALL0 0x02  // String.New
0x10FB  0x1A 0x08       PUSHIB 0x08
0x10FD  0x1A 0x05       PUSHIB 0x05
0x10FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1101  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // string codePath = args[0];                           DASM.hs:276

0x1103  0x24 0x02       SYSCALL0 0x02  // String.New
0x1105  0x4F            PUSHLOCALB02
0x1106  0x44            PUSHI0
0x1107  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x1109  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if (!File.Exists(ref codePath, ref ext, "/Bin/"))

0x110B  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x110D  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x110F  0x1A 0x0D       PUSHIB 0x0D
0x1111  0x1A 0x05       PUSHIB 0x05
0x1113  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1115  0x34 0x00 0x01  CALLW 0x0100   // File.Exists
0x1118  0x2F 0x04       JNZB 0x111C (+4)

                        // BadArguments();                                      DASM.hs:279

0x111A  0x2C 0x05       CALLB 0x05     // DASM.BadArguments

                        // long startTime = Millis;                             DASM.hs:282

0x111C  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x111E  0x24 0x57       SYSCALL0 0x57  // Time.Millis_Get
0x1120  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // string extension = Path.GetExtension(codePath);

0x1122  0x24 0x02       SYSCALL0 0x02  // String.New
0x1124  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1126  0x34 0x05 0x01  CALLW 0x0105   // Path.GetExtension
0x1129  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // string hasmPath  = codePath.Replace(extension, hasmExtension);

0x112B  0x24 0x02       SYSCALL0 0x02  // String.New
0x112D  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x1130  0x1A 0x12       PUSHIB 0x12
0x1132  0x1A 0x05       PUSHIB 0x05
0x1134  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1136  0x24 0x09       SYSCALL0 0x09  // String.Replace
0x1138  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // hasmPath = Path.GetFileName(hasmPath);               DASM.hs:287

0x113A  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x113C  0x34 0x02 0x01  CALLW 0x0102   // Path.GetFileName
0x113F  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // hasmPath = Path.Combine("/Debug/", hasmPath);

0x1141  0x1A 0x17       PUSHIB 0x17
0x1143  0x1A 0x07       PUSHIB 0x07
0x1145  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1147  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1149  0x34 0x04 0x01  CALLW 0x0104   // Path.Combine
0x114C  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // File.Delete(hasmPath);                               DASM.hs:289

0x114E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1150  0x24 0x68       SYSCALL0 0x68  // File.Delete

                        // file hasmFile = File.Create(hasmPath);               DASM.hs:291

0x1152  0x24 0x60       SYSCALL0 0x60  // File.New
0x1154  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1156  0x24 0x62       SYSCALL0 0x62  // File.Create
0x1158  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // if (!hasmFile.IsValid())                             DASM.hs:292

0x115A  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x115C  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x115E  0x2F 0x19       JNZB 0x1177 (+25)

                        // PrintLn("Failed to create '" + hasmPath + "'");

0x1160  0x1A 0x1E       PUSHIB 0x1E
0x1162  0x1A 0x12       PUSHIB 0x12
0x1164  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1166  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1168  0x24 0x03       SYSCALL0 0x03  // String.Append
0x116A  0x1A 0x27       PUSHIB 0x27
0x116C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x116E  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1170  0x2C 0x20       CALLB 0x20     // Screen.PrintLn

                        // break;                                               DASM.hs:295

0x1172  0x28 0x06       DECSP 0x06
0x1174  0x33 0xB8 0x03  JW 0x152C (+952)

                        // string symbolsPath  = codePath.Replace(extension, ".code");

0x1177  0x24 0x02       SYSCALL0 0x02  // String.New
0x1179  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x117C  0x1A 0x30       PUSHIB 0x30
0x117E  0x1A 0x05       PUSHIB 0x05
0x1180  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1182  0x24 0x09       SYSCALL0 0x09  // String.Replace
0x1184  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // symbolsPath = Path.GetFileName(symbolsPath);

0x1186  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1188  0x34 0x02 0x01  CALLW 0x0102   // Path.GetFileName
0x118B  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // symbolsPath = Path.Combine("/Debug/Obj", symbolsPath);

0x118D  0x1A 0x35       PUSHIB 0x35
0x118F  0x1A 0x0A       PUSHIB 0x0A
0x1191  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1193  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1195  0x34 0x04 0x01  CALLW 0x0104   // Path.Combine
0x1198  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // if (File.Exists(symbolsPath))                        DASM.hs:302

0x119A  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x119C  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x119E  0x2E 0x10       JZB 0x11AE (+16)

                        // if (!ParseCode(symbolsPath, false, true, false))

0x11A0  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x11A2  0x44            PUSHI0
0x11A3  0x45            PUSHI1
0x11A4  0x44            PUSHI0
0x11A5  0x2C 0x51       CALLB 0x51     // Code.ParseCode
0x11A7  0x2F 0x07       JNZB 0x11AE (+7)

                        // break;                                               DASM.hs:306

0x11A9  0x28 0x08       DECSP 0x08
0x11AB  0x33 0x81 0x03  JW 0x152C (+897)

                        // uint address = 0;                                    DASM.hs:310

0x11AE  0x44            PUSHI0

                        // file binFile = File.Open(codePath);                  DASM.hs:311

0x11AF  0x24 0x60       SYSCALL0 0x60  // File.New
0x11B1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x11B3  0x24 0x61       SYSCALL0 0x61  // File.Open
0x11B5  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // byte lsb = binFile.Read();                           DASM.hs:313

0x11B7  0x44            PUSHI0
0x11B8  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x11BA  0x24 0x64       SYSCALL0 0x64  // File.Read
0x11BC  0x1B 0x16       POPLOCALB 0x16 (BP+22)

                        // if (!binFile.IsValid())                              DASM.hs:314

0x11BE  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x11C0  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x11C2  0x2F 0x07       JNZB 0x11C9 (+7)

                        // break;                                               DASM.hs:316

0x11C4  0x28 0x0E       DECSP 0x0E
0x11C6  0x33 0x66 0x03  JW 0x152C (+870)

                        // byte msb = binFile.Read();                           DASM.hs:318

0x11C9  0x44            PUSHI0
0x11CA  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x11CC  0x24 0x64       SYSCALL0 0x64  // File.Read
0x11CE  0x1B 0x18       POPLOCALB 0x18 (BP+24)

                        // if (!binFile.IsValid())                              DASM.hs:319

0x11D0  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x11D2  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x11D4  0x2F 0x07       JNZB 0x11DB (+7)

                        // break;                                               DASM.hs:321

0x11D6  0x28 0x10       DECSP 0x10
0x11D8  0x33 0x54 0x03  JW 0x152C (+852)

                        // uint version = lsb + (msb << 8);                     DASM.hs:323

0x11DB  0x44            PUSHI0
0x11DC  0x56 0x16 0x18  PUSHLOCALBB 0x1816
0x11DF  0x1A 0x08       PUSHIB 0x08
0x11E1  0x0F            BITSHL
0x11E2  0x00            ADD
0x11E3  0x1B 0x1A       POPLOCALB 0x1A (BP+26)

                        // hasmFile.Append("0x" + address.ToHexString(4) + " 0x" + version.ToHexString(4) + " // binary version number" + char(0x0A));

0x11E5  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x11E7  0x37 0x30 0x78  PUSHIW 0x7830
0x11EA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x11EC  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x11EE  0x1A 0x04       PUSHIB 0x04
0x11F0  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x11F2  0x24 0x03       SYSCALL0 0x03  // String.Append
0x11F4  0x1A 0x3F       PUSHIB 0x3F
0x11F6  0x1A 0x03       PUSHIB 0x03
0x11F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x11FA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x11FC  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x11FE  0x1A 0x04       PUSHIB 0x04
0x1200  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x1202  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1204  0x1A 0x42       PUSHIB 0x42
0x1206  0x1A 0x19       PUSHIB 0x19
0x1208  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x120A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x120C  0x1A 0x0A       PUSHIB 0x0A
0x120E  0x25 0x03       SYSCALL1 0x03  // String.Append
0x1210  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // address = address + 2;                               DASM.hs:325

0x1212  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1214  0x1A 0x02       PUSHIB 0x02
0x1216  0x00            ADD
0x1217  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // lsb = binFile.Read();                                DASM.hs:327

0x1219  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x121B  0x24 0x64       SYSCALL0 0x64  // File.Read
0x121D  0x1B 0x16       POPLOCALB 0x16 (BP+22)

                        // if (!binFile.IsValid())                              DASM.hs:328

0x121F  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1221  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1223  0x2F 0x07       JNZB 0x122A (+7)

                        // break;                                               DASM.hs:330

0x1225  0x28 0x12       DECSP 0x12
0x1227  0x33 0x05 0x03  JW 0x152C (+773)

                        // msb = binFile.Read();                                DASM.hs:332

0x122A  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x122C  0x24 0x64       SYSCALL0 0x64  // File.Read
0x122E  0x1B 0x18       POPLOCALB 0x18 (BP+24)

                        // if (!binFile.IsValid())                              DASM.hs:333

0x1230  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1232  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1234  0x2F 0x07       JNZB 0x123B (+7)

                        // break;                                               DASM.hs:335

0x1236  0x28 0x12       DECSP 0x12
0x1238  0x33 0xF4 0x02  JW 0x152C (+756)

                        // uint constOffset = lsb + (msb << 8);                 DASM.hs:337

0x123B  0x44            PUSHI0
0x123C  0x56 0x16 0x18  PUSHLOCALBB 0x1816
0x123F  0x1A 0x08       PUSHIB 0x08
0x1241  0x0F            BITSHL
0x1242  0x00            ADD
0x1243  0x1B 0x1C       POPLOCALB 0x1C (BP+28)

                        // hasmFile.Append("0x" + address.ToHexString(4) + " 0x" + constOffset.ToHexString(4) + " // offset to constant data" + char(0x0A));

0x1245  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x1247  0x37 0x30 0x78  PUSHIW 0x7830
0x124A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x124C  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x124E  0x1A 0x04       PUSHIB 0x04
0x1250  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x1252  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1254  0x1A 0x3F       PUSHIB 0x3F
0x1256  0x1A 0x03       PUSHIB 0x03
0x1258  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x125A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x125C  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x125E  0x1A 0x04       PUSHIB 0x04
0x1260  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x1262  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1264  0x1A 0x5B       PUSHIB 0x5B
0x1266  0x1A 0x1B       PUSHIB 0x1B
0x1268  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x126A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x126C  0x1A 0x0A       PUSHIB 0x0A
0x126E  0x25 0x03       SYSCALL1 0x03  // String.Append
0x1270  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // address = address + 2;                               DASM.hs:339

0x1272  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1274  0x1A 0x02       PUSHIB 0x02
0x1276  0x00            ADD
0x1277  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // lsb = binFile.Read();                                DASM.hs:341

0x1279  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x127B  0x24 0x64       SYSCALL0 0x64  // File.Read
0x127D  0x1B 0x16       POPLOCALB 0x16 (BP+22)

                        // if (!binFile.IsValid())                              DASM.hs:342

0x127F  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1281  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1283  0x2F 0x07       JNZB 0x128A (+7)

                        // break;                                               DASM.hs:344

0x1285  0x28 0x14       DECSP 0x14
0x1287  0x33 0xA5 0x02  JW 0x152C (+677)

                        // msb = binFile.Read();                                DASM.hs:346

0x128A  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x128C  0x24 0x64       SYSCALL0 0x64  // File.Read
0x128E  0x1B 0x18       POPLOCALB 0x18 (BP+24)

                        // if (!binFile.IsValid())                              DASM.hs:347

0x1290  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1292  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1294  0x2F 0x07       JNZB 0x129B (+7)

                        // break;                                               DASM.hs:349

0x1296  0x28 0x14       DECSP 0x14
0x1298  0x33 0x94 0x02  JW 0x152C (+660)

                        // uint codeOffset = lsb + (msb << 8);                  DASM.hs:352

0x129B  0x44            PUSHI0
0x129C  0x56 0x16 0x18  PUSHLOCALBB 0x1816
0x129F  0x1A 0x08       PUSHIB 0x08
0x12A1  0x0F            BITSHL
0x12A2  0x00            ADD
0x12A3  0x1B 0x1E       POPLOCALB 0x1E (BP+30)

                        // hasmFile.Append("0x" + address.ToHexString(4) + " 0x" + codeOffset.ToHexString(4) + " // 'main' entry point offset" + char(0x0A));

0x12A5  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x12A7  0x37 0x30 0x78  PUSHIW 0x7830
0x12AA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x12AC  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x12AE  0x1A 0x04       PUSHIB 0x04
0x12B0  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x12B2  0x24 0x03       SYSCALL0 0x03  // String.Append
0x12B4  0x1A 0x3F       PUSHIB 0x3F
0x12B6  0x1A 0x03       PUSHIB 0x03
0x12B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x12BA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x12BC  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x12BE  0x1A 0x04       PUSHIB 0x04
0x12C0  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x12C2  0x24 0x03       SYSCALL0 0x03  // String.Append
0x12C4  0x1A 0x76       PUSHIB 0x76
0x12C6  0x1A 0x1D       PUSHIB 0x1D
0x12C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x12CA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x12CC  0x1A 0x0A       PUSHIB 0x0A
0x12CE  0x25 0x03       SYSCALL1 0x03  // String.Append
0x12D0  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // address = address + 2;                               DASM.hs:354

0x12D2  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x12D4  0x1A 0x02       PUSHIB 0x02
0x12D6  0x00            ADD
0x12D7  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // codeSize = codeSize + 6;                             DASM.hs:356

0x12D9  0x20 0x00       PUSHGLOBALB 0x00
0x12DB  0x1A 0x06       PUSHIB 0x06
0x12DD  0x00            ADD
0x12DE  0x1F 0x00       POPGLOBALB 0x00

                        // <uint,string> methodNames;                           DASM.hs:359

0x12E0  0x1A 0x04       PUSHIB 0x04
0x12E2  0x1A 0x0F       PUSHIB 0x0F
0x12E4  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // methodNames[constOffset] = "constant data";

0x12E6  0x56 0x20 0x1C  PUSHLOCALBB 0x1C20
0x12E9  0x1A 0x69       PUSHIB 0x69
0x12EB  0x1A 0x0D       PUSHIB 0x0D
0x12ED  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x12EF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // methodNames[codeOffset] = "0x0000";                  DASM.hs:361

0x12F1  0x56 0x20 0x1E  PUSHLOCALBB 0x1E20
0x12F4  0x1A 0x93       PUSHIB 0x93
0x12F6  0x1A 0x06       PUSHIB 0x06
0x12F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x12FA  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // uint constLength = codeOffset - constOffset;

0x12FC  0x44            PUSHI0
0x12FD  0x56 0x1E 0x1C  PUSHLOCALBB 0x1C1E
0x1300  0x01            SUB
0x1301  0x1B 0x22       POPLOCALB 0x22 (BP+34)

                        // uint tableEntries = (constOffset - 6) / 4;           DASM.hs:365

0x1303  0x44            PUSHI0
0x1304  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x1306  0x1A 0x06       PUSHIB 0x06
0x1308  0x01            SUB
0x1309  0x1A 0x04       PUSHIB 0x04
0x130B  0x02            DIV
0x130C  0x1B 0x24       POPLOCALB 0x24 (BP+36)

                        // if (tableEntries > 0)                                DASM.hs:366

0x130E  0x1C 0x24       PUSHLOCALB 0x24 (BP+36)
0x1310  0x44            PUSHI0
0x1311  0x07            GT
0x1312  0x31 0xCF 0x00  JZW 0x13E1 (+207)

                        // hasmFile.Append(""  + char(0x0A));                   DASM.hs:368

0x1315  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x1317  0x24 0x02       SYSCALL0 0x02  // String.New
0x1319  0x1A 0x0A       PUSHIB 0x0A
0x131B  0x25 0x03       SYSCALL1 0x03  // String.Append
0x131D  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // for (uint i=0; i < tableEntries; i++)                DASM.hs:369

0x131F  0x44            PUSHI0
0x1320  0x56 0x26 0x24  PUSHLOCALBB 0x2426
0x1323  0x08            LT
0x1324  0x31 0xB5 0x00  JZW 0x13D9 (+181)

                        // lsb = binFile.Read();                                DASM.hs:371

0x1327  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1329  0x24 0x64       SYSCALL0 0x64  // File.Read
0x132B  0x1B 0x16       POPLOCALB 0x16 (BP+22)

                        // if (!binFile.IsValid())                              DASM.hs:372

0x132D  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x132F  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1331  0x2F 0x07       JNZB 0x1338 (+7)

                        // break;                                               DASM.hs:374

0x1333  0x28 0x02       DECSP 0x02
0x1335  0x33 0xA6 0x00  JW 0x13DB (+166)

                        // msb = binFile.Read();                                DASM.hs:376

0x1338  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x133A  0x24 0x64       SYSCALL0 0x64  // File.Read
0x133C  0x1B 0x18       POPLOCALB 0x18 (BP+24)

                        // if (!binFile.IsValid())                              DASM.hs:377

0x133E  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1340  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1342  0x2F 0x07       JNZB 0x1349 (+7)

                        // break;                                               DASM.hs:379

0x1344  0x28 0x02       DECSP 0x02
0x1346  0x33 0x95 0x00  JW 0x13DB (+149)

                        // uint methodIndex = lsb + (msb << 8);                 DASM.hs:382

0x1349  0x44            PUSHI0
0x134A  0x56 0x16 0x18  PUSHLOCALBB 0x1816
0x134D  0x1A 0x08       PUSHIB 0x08
0x134F  0x0F            BITSHL
0x1350  0x00            ADD
0x1351  0x1B 0x28       POPLOCALB 0x28 (BP+40)

                        // lsb = binFile.Read();                                DASM.hs:383

0x1353  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1355  0x24 0x64       SYSCALL0 0x64  // File.Read
0x1357  0x1B 0x16       POPLOCALB 0x16 (BP+22)

                        // if (!binFile.IsValid())                              DASM.hs:384

0x1359  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x135B  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x135D  0x2F 0x06       JNZB 0x1363 (+6)

                        // break;                                               DASM.hs:386

0x135F  0x28 0x04       DECSP 0x04
0x1361  0x30 0x7A       JB 0x13DB (+122)

                        // msb = binFile.Read();                                DASM.hs:388

0x1363  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1365  0x24 0x64       SYSCALL0 0x64  // File.Read
0x1367  0x1B 0x18       POPLOCALB 0x18 (BP+24)

                        // if (!binFile.IsValid())                              DASM.hs:389

0x1369  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x136B  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x136D  0x2F 0x06       JNZB 0x1373 (+6)

                        // break;                                               DASM.hs:391

0x136F  0x28 0x04       DECSP 0x04
0x1371  0x30 0x6A       JB 0x13DB (+106)

                        // uint methodOffset = lsb + (msb << 8);                DASM.hs:394

0x1373  0x44            PUSHI0
0x1374  0x56 0x16 0x18  PUSHLOCALBB 0x1816
0x1377  0x1A 0x08       PUSHIB 0x08
0x1379  0x0F            BITSHL
0x137A  0x00            ADD
0x137B  0x1B 0x2A       POPLOCALB 0x2A (BP+42)

                        // hasmFile.Append("0x" + address.ToHexString(4)

0x137D  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x137F  0x37 0x30 0x78  PUSHIW 0x7830
0x1382  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1384  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1386  0x1A 0x04       PUSHIB 0x04
0x1388  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x138A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x138C  0x1A 0x3F       PUSHIB 0x3F
0x138E  0x1A 0x03       PUSHIB 0x03
0x1390  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1392  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1394  0x1C 0x28       PUSHLOCALB 0x28 (BP+40)
0x1396  0x1A 0x04       PUSHIB 0x04
0x1398  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x139A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x139C  0x1A 0x3F       PUSHIB 0x3F
0x139E  0x1A 0x03       PUSHIB 0x03
0x13A0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x13A2  0x24 0x03       SYSCALL0 0x03  // String.Append
0x13A4  0x1C 0x2A       PUSHLOCALB 0x2A (BP+42)
0x13A6  0x1A 0x04       PUSHIB 0x04
0x13A8  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x13AA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x13AC  0x1A 0x0A       PUSHIB 0x0A
0x13AE  0x25 0x03       SYSCALL1 0x03  // String.Append
0x13B0  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // codeSize = codeSize + 4;                             DASM.hs:399

0x13B2  0x20 0x00       PUSHGLOBALB 0x00
0x13B4  0x1A 0x04       PUSHIB 0x04
0x13B6  0x00            ADD
0x13B7  0x1F 0x00       POPGLOBALB 0x00

                        // address = address + 4;                               DASM.hs:400

0x13B9  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x13BB  0x1A 0x04       PUSHIB 0x04
0x13BD  0x00            ADD
0x13BE  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // methodNames[methodOffset] = "0x" + methodIndex.ToHexString(4);

0x13C0  0x56 0x20 0x2A  PUSHLOCALBB 0x2A20
0x13C3  0x37 0x30 0x78  PUSHIW 0x7830
0x13C6  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x13C8  0x1C 0x28       PUSHLOCALB 0x28 (BP+40)
0x13CA  0x1A 0x04       PUSHIB 0x04
0x13CC  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x13CE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x13D0  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    DASM.hs:402

0x13D2  0x28 0x04       DECSP 0x04
0x13D4  0x22 0x26       INCLOCALB 0x26 (BP+38)
0x13D6  0x33 0x4A 0xFF  JW 0x1320 (-182)
0x13D9  0x28 0x02       DECSP 0x02

                        // Parser.ProgressTick(".");                            DASM.hs:403

0x13DB  0x1A 0x2E       PUSHIB 0x2E
0x13DD  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x13DF  0x2C 0x88       CALLB 0x88     // Parser.ProgressTick

                        // if (!binFile.IsValid())                              DASM.hs:405

0x13E1  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x13E3  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x13E5  0x2F 0x07       JNZB 0x13EC (+7)

                        // break;                                               DASM.hs:407

0x13E7  0x28 0x1C       DECSP 0x1C
0x13E9  0x33 0x43 0x01  JW 0x152C (+323)

                        // <byte> code;                                         DASM.hs:409

0x13EC  0x1A 0x03       PUSHIB 0x03
0x13EE  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // if (constLength > 0)                                 DASM.hs:410

0x13F0  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x13F2  0x44            PUSHI0
0x13F3  0x07            GT
0x13F4  0x31 0x87 0x00  JZW 0x147B (+135)

                        // if (methodNames.Contains(address))                   DASM.hs:412

0x13F7  0x56 0x20 0x12  PUSHLOCALBB 0x1220
0x13FA  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x13FC  0x2E 0x3D       JZB 0x1439 (+61)

                        // string name = methodNames[address];                  DASM.hs:414

0x13FE  0x24 0x02       SYSCALL0 0x02  // String.New
0x1400  0x56 0x20 0x12  PUSHLOCALBB 0x1220
0x1403  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1405  0x57 0x28       POPCOPYLOCALB 0x28 (BP+40)

                        // hasmFile.Append(""  + char(0x0A));                   DASM.hs:415

0x1407  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x1409  0x24 0x02       SYSCALL0 0x02  // String.New
0x140B  0x1A 0x0A       PUSHIB 0x0A
0x140D  0x25 0x03       SYSCALL1 0x03  // String.Append
0x140F  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // hasmFile.Append("// " + name + "  [" + constLength.ToString() +"]" +char(0x0A));

0x1411  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x1413  0x1A 0x43       PUSHIB 0x43
0x1415  0x1A 0x03       PUSHIB 0x03
0x1417  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1419  0x1C 0x28       PUSHLOCALB 0x28 (BP+40)
0x141B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x141D  0x1A 0x99       PUSHIB 0x99
0x141F  0x1A 0x03       PUSHIB 0x03
0x1421  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1423  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1425  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x1427  0x2C 0xB0       CALLB 0xB0     // UInt.ToString
0x1429  0x24 0x03       SYSCALL0 0x03  // String.Append
0x142B  0x1A 0x5D       PUSHIB 0x5D
0x142D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x142F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1431  0x1A 0x0A       PUSHIB 0x0A
0x1433  0x25 0x03       SYSCALL1 0x03  // String.Append
0x1435  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    DASM.hs:417

0x1437  0x28 0x02       DECSP 0x02

                        // byte b = binFile.Read();                             DASM.hs:420

0x1439  0x44            PUSHI0
0x143A  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x143C  0x24 0x64       SYSCALL0 0x64  // File.Read
0x143E  0x1B 0x28       POPLOCALB 0x28 (BP+40)

                        // if (!binFile.IsValid())                              DASM.hs:421

0x1440  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1442  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1444  0x2F 0x06       JNZB 0x144A (+6)

                        // break;                                               DASM.hs:423

0x1446  0x28 0x02       DECSP 0x02
0x1448  0x30 0x15       JB 0x145D (+21)

                        // code.Append(b);                                      DASM.hs:425

0x144A  0x56 0x26 0x28  PUSHLOCALBB 0x2826
0x144D  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // constLength--;                                       DASM.hs:426

0x144F  0x23 0x22       DECLOCALB 0x22 (BP+34)

                        // if (constLength == 0)                                DASM.hs:427

0x1451  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x1453  0x2F 0x06       JNZB 0x1459 (+6)

                        // break;                                               DASM.hs:429

0x1455  0x28 0x02       DECSP 0x02
0x1457  0x30 0x06       JB 0x145D (+6)

                        // }                                                    DASM.hs:431

0x1459  0x28 0x02       DECSP 0x02
0x145B  0x30 0xDE       JB 0x1439 (-34)

                        // DisassembleData(hasmFile, code, address);            DASM.hs:432

0x145D  0x56 0x0E 0x26  PUSHLOCALBB 0x260E
0x1460  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1462  0x2C 0x03       CALLB 0x03     // DASM.DisassembleData

                        // address = address + code.Length;                     DASM.hs:433

0x1464  0x56 0x12 0x26  PUSHLOCALBB 0x2612
0x1467  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x1469  0x00            ADD
0x146A  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // codeSize = codeSize + code.Length;                   DASM.hs:434

0x146C  0x20 0x00       PUSHGLOBALB 0x00
0x146E  0x1C 0x26       PUSHLOCALB 0x26 (BP+38)
0x1470  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x1472  0x00            ADD
0x1473  0x1F 0x00       POPGLOBALB 0x00

                        // Parser.ProgressTick(".");                            DASM.hs:435

0x1475  0x1A 0x2E       PUSHIB 0x2E
0x1477  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1479  0x2C 0x88       CALLB 0x88     // Parser.ProgressTick

                        // code.Clear();                                        DASM.hs:437

0x147B  0x1C 0x26       PUSHLOCALB 0x26 (BP+38)
0x147D  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // byte b = binFile.Read();                             DASM.hs:440

0x147F  0x44            PUSHI0
0x1480  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1482  0x24 0x64       SYSCALL0 0x64  // File.Read
0x1484  0x1B 0x28       POPLOCALB 0x28 (BP+40)

                        // if (!binFile.IsValid())                              DASM.hs:441

0x1486  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1488  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x148A  0x2F 0x06       JNZB 0x1490 (+6)

                        // break;                                               DASM.hs:443

0x148C  0x28 0x02       DECSP 0x02
0x148E  0x30 0x0B       JB 0x1499 (+11)

                        // code.Append(b);                                      DASM.hs:445

0x1490  0x56 0x26 0x28  PUSHLOCALBB 0x2826
0x1493  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    DASM.hs:446

0x1495  0x28 0x02       DECSP 0x02
0x1497  0x30 0xE8       JB 0x147F (-24)

                        // DisassembleCode(hasmFile, code, address, methodNames);

0x1499  0x56 0x0E 0x26  PUSHLOCALBB 0x260E
0x149C  0x56 0x12 0x20  PUSHLOCALBB 0x2012
0x149F  0x2C 0x02       CALLB 0x02     // DASM.DisassembleCode

                        // codeSize = codeSize + code.Length;                   DASM.hs:448

0x14A1  0x20 0x00       PUSHGLOBALB 0x00
0x14A3  0x1C 0x26       PUSHLOCALB 0x26 (BP+38)
0x14A5  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x14A7  0x00            ADD
0x14A8  0x1F 0x00       POPGLOBALB 0x00

                        // Parser.ProgressTick(".");                            DASM.hs:449

0x14AA  0x1A 0x2E       PUSHIB 0x2E
0x14AC  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x14AE  0x2C 0x88       CALLB 0x88     // Parser.ProgressTick

                        // hasmFile.Flush();                                    DASM.hs:450

0x14B0  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x14B2  0x24 0x67       SYSCALL0 0x67  // File.Flush

                        // if (!Parser.IsInteractive())                         DASM.hs:451

0x14B4  0x2C 0x86       CALLB 0x86     // Parser.IsInteractive
0x14B6  0x2F 0x72       JNZB 0x1528 (+114)

                        // PrintLn();                                           DASM.hs:453

0x14B8  0x24 0x2A       SYSCALL0 0x2A  // Screen.PrintLn

                        // Print("Success, " + codeSize.ToString() + " bytes, ", Color.ProgressText, Color.ProgressFace);

0x14BA  0x1A 0x9C       PUSHIB 0x9C
0x14BC  0x1A 0x09       PUSHIB 0x09
0x14BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x14C0  0x20 0x00       PUSHGLOBALB 0x00
0x14C2  0x2C 0xB0       CALLB 0xB0     // UInt.ToString
0x14C4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x14C6  0x1A 0xA5       PUSHIB 0xA5
0x14C8  0x1A 0x08       PUSHIB 0x08
0x14CA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x14CC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x14CE  0x34 0x2D 0x01  CALLW 0x012D   // Color.ProgressText_Get
0x14D1  0x34 0x2E 0x01  CALLW 0x012E   // Color.ProgressFace_Get
0x14D4  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // long elapsedTime = Millis - startTime;               DASM.hs:455

0x14D6  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x14D8  0x24 0x57       SYSCALL0 0x57  // Time.Millis_Get
0x14DA  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x14DC  0x24 0x40       SYSCALL0 0x40  // Long.Sub
0x14DE  0x57 0x28       POPCOPYLOCALB 0x28 (BP+40)

                        // float seconds = elapsedTime / 1000.0;                DASM.hs:456

0x14E0  0x24 0x4C       SYSCALL0 0x4C  // Float.New
0x14E2  0x1C 0x28       PUSHLOCALB 0x28 (BP+40)
0x14E4  0x1A 0xAD       PUSHIB 0xAD
0x14E6  0x24 0x4D       SYSCALL0 0x4D  // Float.NewFromConstant
0x14E8  0x43            SWAP
0x14E9  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x14EB  0x43            SWAP
0x14EC  0x24 0x50       SYSCALL0 0x50  // Float.Div
0x14EE  0x57 0x2A       POPCOPYLOCALB 0x2A (BP+42)

                        // PrintLn("  " + seconds.ToString() +"s", Color.ProgressHighlight, Color.ProgressFace);

0x14F0  0x37 0x20 0x20  PUSHIW 0x2020
0x14F3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x14F5  0x1C 0x2A       PUSHLOCALB 0x2A (BP+42)
0x14F7  0x24 0x4A       SYSCALL0 0x4A  // Float.ToString
0x14F9  0x24 0x03       SYSCALL0 0x03  // String.Append
0x14FB  0x1A 0x73       PUSHIB 0x73
0x14FD  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x14FF  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1501  0x34 0x2F 0x01  CALLW 0x012F   // Color.ProgressHighlight_Get
0x1504  0x34 0x2E 0x01  CALLW 0x012E   // Color.ProgressFace_Get
0x1507  0x2C 0x1C       CALLB 0x1C     // Screen.PrintLn

                        // PrintLn("  " + instructionCount.ToString() + " instructions disassembled. ", Color.ProgressText, Color.ProgressFace);

0x1509  0x37 0x20 0x20  PUSHIW 0x2020
0x150C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x150E  0x20 0x02       PUSHGLOBALB 0x02
0x1510  0x2C 0xB0       CALLB 0xB0     // UInt.ToString
0x1512  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1514  0x1A 0xB1       PUSHIB 0xB1
0x1516  0x1A 0x1C       PUSHIB 0x1C
0x1518  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x151A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x151C  0x34 0x2D 0x01  CALLW 0x012D   // Color.ProgressText_Get
0x151F  0x34 0x2E 0x01  CALLW 0x012E   // Color.ProgressFace_Get
0x1522  0x2C 0x1C       CALLB 0x1C     // Screen.PrintLn

                        // }                                                    DASM.hs:459

0x1524  0x28 0x04       DECSP 0x04
0x1526  0x30 0x04       JB 0x152A (+4)

                        // Parser.ProgressDone();                               DASM.hs:462

0x1528  0x2C 0x89       CALLB 0x89     // Parser.ProgressDone

                        // break;                                               DASM.hs:464

0x152A  0x28 0x1E       DECSP 0x1E

                        // break;                                               DASM.hs:466

0x152C  0x28 0x0A       DECSP 0x0A
0x152E  0x2A 0x5A       RETB 0x5A


// DASM.hs:221
// ####  DASM.BadArguments(..)  ####                                            0x0005

0x1530  0x49            ENTER

                        // PrintLn("Invalid arguments for DASM:");              DASM.hs:222

0x1531  0x1A 0xCD       PUSHIB 0xCD
0x1533  0x1A 0x1B       PUSHIB 0x1B
0x1535  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1537  0x2C 0x20       CALLB 0x20     // Screen.PrintLn

                        // PrintLn("  DASM <hexe file>");                       DASM.hs:223

0x1539  0x1A 0xE8       PUSHIB 0xE8
0x153B  0x1A 0x12       PUSHIB 0x12
0x153D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x153F  0x2C 0x20       CALLB 0x20     // Screen.PrintLn

                        // PrintLn("    -g <c> <r> : called from GUI, not console");

0x1541  0x1A 0xFA       PUSHIB 0xFA
0x1543  0x1A 0x2D       PUSHIB 0x2D
0x1545  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1547  0x2C 0x20       CALLB 0x20     // Screen.PrintLn

                        // }                                                    DASM.hs:225

0x1549  0x4A            RET0


// DASM.hs:143
// ####  DASM.DisassembleData(..)  ####                                         0x0003

0x154A  0x49            ENTER

                        // string content;                                      DASM.hs:144

0x154B  0x24 0x02       SYSCALL0 0x02  // String.New

                        // uint length = code.Length;                           DASM.hs:145

0x154D  0x44            PUSHI0
0x154E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x1550  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x1552  0x4D            POPLOCALB02

                        // string literal;                                      DASM.hs:146

0x1553  0x24 0x02       SYSCALL0 0x02  // String.New

                        // for (uint address = 0; address < length; address++)

0x1555  0x44            PUSHI0
0x1556  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1558  0x4F            PUSHLOCALB02
0x1559  0x08            LT
0x155A  0x31 0xB0 0x00  JZW 0x160A (+176)

                        // if ((address % 16) == 0)                             DASM.hs:149

0x155D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x155F  0x1A 0x10       PUSHIB 0x10
0x1561  0x04            MOD
0x1562  0x2F 0x30       JNZB 0x1592 (+48)

                        // uint actualAddress = startAddress + address;

0x1564  0x44            PUSHI0
0x1565  0x56 0xFE 0x06  PUSHLOCALBB 0x06FE
0x1568  0x00            ADD
0x1569  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // content = char(0x0A) + "0x" + actualAddress.ToHexString(4) + "  ";

0x156B  0x1A 0x0A       PUSHIB 0x0A
0x156D  0x37 0x30 0x78  PUSHIW 0x7830
0x1570  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1572  0x43            SWAP
0x1573  0x44            PUSHI0
0x1574  0x43            SWAP
0x1575  0x24 0x04       SYSCALL0 0x04  // String.InsertChar
0x1577  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x1579  0x1A 0x04       PUSHIB 0x04
0x157B  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x157D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x157F  0x37 0x20 0x20  PUSHIW 0x2020
0x1582  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1584  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1586  0x5D            POPCOPYLOCALB00

                        // hasmFile.Append(content);                            DASM.hs:153

0x1587  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x1589  0x4E            PUSHLOCALB00
0x158A  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // literal = "";                                        DASM.hs:154

0x158C  0x24 0x02       SYSCALL0 0x02  // String.New
0x158E  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    DASM.hs:155

0x1590  0x28 0x02       DECSP 0x02

                        // byte cd = code[address];                             DASM.hs:156

0x1592  0x44            PUSHI0
0x1593  0x56 0xFC 0x06  PUSHLOCALBB 0x06FC
0x1596  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x1598  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // content = "0x" + cd.ToHexString(2) + " ";            DASM.hs:157

0x159A  0x37 0x30 0x78  PUSHIW 0x7830
0x159D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x159F  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x15A1  0x1A 0x02       PUSHIB 0x02
0x15A3  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x15A5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x15A7  0x1A 0x20       PUSHIB 0x20
0x15A9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x15AB  0x24 0x03       SYSCALL0 0x03  // String.Append
0x15AD  0x5D            POPCOPYLOCALB00

                        // if ((address % 16) == 7)                             DASM.hs:158

0x15AE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x15B0  0x1A 0x10       PUSHIB 0x10
0x15B2  0x04            MOD
0x15B3  0x1A 0x07       PUSHIB 0x07
0x15B5  0x05            EQ
0x15B6  0x2E 0x0A       JZB 0x15C0 (+10)

                        // content = content + " ";                             DASM.hs:160

0x15B8  0x4E            PUSHLOCALB00
0x15B9  0x1A 0x20       PUSHIB 0x20
0x15BB  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x15BD  0x24 0x03       SYSCALL0 0x03  // String.Append
0x15BF  0x5D            POPCOPYLOCALB00

                        // if ((cd > 31) && (cd < 128))                         DASM.hs:162

0x15C0  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x15C2  0x1A 0x1F       PUSHIB 0x1F
0x15C4  0x07            GT
0x15C5  0x27 0x00       DUP 0x00
0x15C7  0x2E 0x08       JZB 0x15CF (+8)
0x15C9  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x15CB  0x1A 0x80       PUSHIB 0x80
0x15CD  0x08            LT
0x15CE  0x0C            BOOLAND
0x15CF  0x2E 0x0B       JZB 0x15DA (+11)

                        // literal = literal + char(cd);                        DASM.hs:164

0x15D1  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x15D4  0x25 0x03       SYSCALL1 0x03  // String.Append
0x15D6  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    DASM.hs:165

0x15D8  0x30 0x0C       JB 0x15E4 (+12)

                        // literal = literal + ".";                             DASM.hs:168

0x15DA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x15DC  0x1A 0x2E       PUSHIB 0x2E
0x15DE  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x15E0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x15E2  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if ((address % 16) == 15)                            DASM.hs:170

0x15E4  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x15E6  0x1A 0x10       PUSHIB 0x10
0x15E8  0x04            MOD
0x15E9  0x1A 0x0F       PUSHIB 0x0F
0x15EB  0x05            EQ
0x15EC  0x2E 0x12       JZB 0x15FE (+18)

                        // content = content + " " + literal;                   DASM.hs:172

0x15EE  0x4E            PUSHLOCALB00
0x15EF  0x1A 0x20       PUSHIB 0x20
0x15F1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x15F3  0x24 0x03       SYSCALL0 0x03  // String.Append
0x15F5  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x15F7  0x24 0x03       SYSCALL0 0x03  // String.Append
0x15F9  0x5D            POPCOPYLOCALB00

                        // literal = "";                                        DASM.hs:173

0x15FA  0x24 0x02       SYSCALL0 0x02  // String.New
0x15FC  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // hasmFile.Append(content);                            DASM.hs:175

0x15FE  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x1600  0x4E            PUSHLOCALB00
0x1601  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    DASM.hs:176

0x1603  0x28 0x02       DECSP 0x02
0x1605  0x22 0x06       INCLOCALB 0x06 (BP+6)
0x1607  0x33 0x4F 0xFF  JW 0x1556 (-177)
0x160A  0x28 0x02       DECSP 0x02

                        // content = "";                                        DASM.hs:177

0x160C  0x24 0x02       SYSCALL0 0x02  // String.New
0x160E  0x5D            POPCOPYLOCALB00

                        // if (literal.Length > 0)                              DASM.hs:178

0x160F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1611  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x1613  0x44            PUSHI0
0x1614  0x07            GT
0x1615  0x2E 0x25       JZB 0x163A (+37)

                        // uint padding = 16 - literal.Length;                  DASM.hs:180

0x1617  0x44            PUSHI0
0x1618  0x1A 0x10       PUSHIB 0x10
0x161A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x161C  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x161E  0x01            SUB
0x161F  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // padding = padding * 5 + 1;                           DASM.hs:181

0x1621  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1623  0x1A 0x05       PUSHIB 0x05
0x1625  0x03            MUL
0x1626  0x45            PUSHI1
0x1627  0x00            ADD
0x1628  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // content = content.Pad(' ', padding);                 DASM.hs:182

0x162A  0x4E            PUSHLOCALB00
0x162B  0x1A 0x20       PUSHIB 0x20
0x162D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x162F  0x2C 0xD9       CALLB 0xD9     // String.Pad
0x1631  0x5D            POPCOPYLOCALB00

                        // content = content + literal;                         DASM.hs:183

0x1632  0x4E            PUSHLOCALB00
0x1633  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1635  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1637  0x5D            POPCOPYLOCALB00

                        // }                                                    DASM.hs:184

0x1638  0x28 0x02       DECSP 0x02

                        // content = content + char(0x0A);                      DASM.hs:185

0x163A  0x4E            PUSHLOCALB00
0x163B  0x1A 0x0A       PUSHIB 0x0A
0x163D  0x25 0x03       SYSCALL1 0x03  // String.Append
0x163F  0x5D            POPCOPYLOCALB00

                        // hasmFile.Append(content);                            DASM.hs:186

0x1640  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x1642  0x4E            PUSHLOCALB00
0x1643  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    DASM.hs:187

0x1645  0x2A 0x0C       RETB 0x0C


// DASM.hs:65
// ####  DASM.DisassembleCode(..)  ####                                         0x0002

0x1647  0x49            ENTER

                        // <string,string> debugInfo;                           DASM.hs:66

0x1648  0x1A 0x0F       PUSHIB 0x0F
0x164A  0x1A 0x0F       PUSHIB 0x0F
0x164C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint doffset = 0;                                    DASM.hs:67

0x164E  0x44            PUSHI0

                        // string src;                                          DASM.hs:68

0x164F  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string srcName;                                      DASM.hs:69

0x1651  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string content;                                      DASM.hs:70

0x1653  0x24 0x02       SYSCALL0 0x02  // String.New

                        // uint length = code.Length;                           DASM.hs:71

0x1655  0x44            PUSHI0
0x1656  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x1658  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x165A  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // for (uint address = 0; address < length; address++)

0x165C  0x44            PUSHI0
0x165D  0x56 0x0C 0x0A  PUSHLOCALBB 0x0A0C
0x1660  0x08            LT
0x1661  0x31 0xD0 0x01  JZW 0x1831 (+464)

                        // uint actualAddress = startAddress + address;

0x1664  0x44            PUSHI0
0x1665  0x56 0xFC 0x0C  PUSHLOCALBB 0x0CFC
0x1668  0x00            ADD
0x1669  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // if (methodNames.Contains(actualAddress))             DASM.hs:77

0x166B  0x56 0xFE 0x0E  PUSHLOCALBB 0x0EFE
0x166E  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x1670  0x31 0xEC 0x00  JZW 0x175C (+236)

                        // hasmFile.Append(""  + char(0x0A));                   DASM.hs:79

0x1673  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x1675  0x24 0x02       SYSCALL0 0x02  // String.New
0x1677  0x1A 0x0A       PUSHIB 0x0A
0x1679  0x25 0x03       SYSCALL1 0x03  // String.Append
0x167B  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // string methodIndex = methodNames[actualAddress];

0x167D  0x24 0x02       SYSCALL0 0x02  // String.New
0x167F  0x56 0xFE 0x0E  PUSHLOCALBB 0x0EFE
0x1682  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1684  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // <string,variant> methodSymbols = Code.GetMethodSymbols(methodIndex);

0x1686  0x1A 0x0F       PUSHIB 0x0F
0x1688  0x1A 0x14       PUSHIB 0x14
0x168A  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x168C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x168E  0x2C 0x4F       CALLB 0x4F     // Code.GetMethodSymbols
0x1690  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // if (methodSymbols.Count > 0)                         DASM.hs:83

0x1692  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1694  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x1696  0x44            PUSHI0
0x1697  0x07            GT
0x1698  0x31 0xAA 0x00  JZW 0x1742 (+170)

                        // src = methodSymbols["source"];                       DASM.hs:85

0x169B  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x169D  0x37 0x27 0x01  PUSHIW 0x0127
0x16A0  0x1A 0x06       PUSHIB 0x06
0x16A2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16A4  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x16A6  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // srcName = Path.GetFileName(src);                     DASM.hs:86

0x16A8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x16AA  0x34 0x02 0x01  CALLW 0x0102   // Path.GetFileName
0x16AD  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string ln = methodSymbols["line"];                   DASM.hs:87

0x16AF  0x24 0x02       SYSCALL0 0x02  // String.New
0x16B1  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16B3  0x37 0x2D 0x01  PUSHIW 0x012D
0x16B6  0x1A 0x04       PUSHIB 0x04
0x16B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16BA  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x16BC  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // string nm = methodSymbols["name"];                   DASM.hs:88

0x16BE  0x24 0x02       SYSCALL0 0x02  // String.New
0x16C0  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16C2  0x37 0x31 0x01  PUSHIW 0x0131
0x16C5  0x1A 0x04       PUSHIB 0x04
0x16C7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16C9  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x16CB  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // debugInfo = methodSymbols["debug"];                  DASM.hs:89

0x16CD  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16CF  0x37 0x35 0x01  PUSHIW 0x0135
0x16D2  0x1A 0x05       PUSHIB 0x05
0x16D4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16D6  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x16D8  0x5D            POPCOPYLOCALB00

                        // doffset = address;                                   DASM.hs:90

0x16D9  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x16DB  0x4D            POPLOCALB02

                        // hasmFile.Append("" + char(0x0A));                    DASM.hs:91

0x16DC  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x16DE  0x24 0x02       SYSCALL0 0x02  // String.New
0x16E0  0x1A 0x0A       PUSHIB 0x0A
0x16E2  0x25 0x03       SYSCALL1 0x03  // String.Append
0x16E4  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // hasmFile.Append("// " + src + ":" + ln + char(0x0A));

0x16E6  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x16E8  0x1A 0x43       PUSHIB 0x43
0x16EA  0x1A 0x03       PUSHIB 0x03
0x16EC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16EE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x16F0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x16F2  0x1A 0x3A       PUSHIB 0x3A
0x16F4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x16F6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x16F8  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x16FA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x16FC  0x1A 0x0A       PUSHIB 0x0A
0x16FE  0x25 0x03       SYSCALL1 0x03  // String.Append
0x1700  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // string mname = "// ####  " + nm + "(..)  ####";

0x1702  0x24 0x02       SYSCALL0 0x02  // String.New
0x1704  0x37 0x3A 0x01  PUSHIW 0x013A
0x1707  0x1A 0x09       PUSHIB 0x09
0x1709  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x170B  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x170D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x170F  0x37 0x43 0x01  PUSHIW 0x0143
0x1712  0x1A 0x0A       PUSHIB 0x0A
0x1714  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1716  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1718  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // mname = mname.Pad(' ', 80);                          DASM.hs:95

0x171A  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x171C  0x1A 0x20       PUSHIB 0x20
0x171E  0x1A 0x50       PUSHIB 0x50
0x1720  0x2C 0xD9       CALLB 0xD9     // String.Pad
0x1722  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // mname = mname + methodIndex + char(0x0A);            DASM.hs:96

0x1724  0x56 0x18 0x10  PUSHLOCALBB 0x1018
0x1727  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1729  0x1A 0x0A       PUSHIB 0x0A
0x172B  0x25 0x03       SYSCALL1 0x03  // String.Append
0x172D  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // hasmFile.Append(mname);                              DASM.hs:97

0x172F  0x56 0xF8 0x18  PUSHLOCALBB 0x18F8
0x1732  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // hasmFile.Append("" + char(0x0A));                    DASM.hs:99

0x1734  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x1736  0x24 0x02       SYSCALL0 0x02  // String.New
0x1738  0x1A 0x0A       PUSHIB 0x0A
0x173A  0x25 0x03       SYSCALL1 0x03  // String.Append
0x173C  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    DASM.hs:100

0x173E  0x28 0x06       DECSP 0x06
0x1740  0x30 0x14       JB 0x1754 (+20)

                        // hasmFile.Append("// " + methodIndex + char(0x0A));

0x1742  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x1744  0x1A 0x43       PUSHIB 0x43
0x1746  0x1A 0x03       PUSHIB 0x03
0x1748  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x174A  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x174C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x174E  0x1A 0x0A       PUSHIB 0x0A
0x1750  0x25 0x03       SYSCALL1 0x03  // String.Append
0x1752  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // Parser.ProgressTick(".");                            DASM.hs:105

0x1754  0x1A 0x2E       PUSHIB 0x2E
0x1756  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1758  0x2C 0x88       CALLB 0x88     // Parser.ProgressTick

                        // }                                                    DASM.hs:106

0x175A  0x28 0x04       DECSP 0x04

                        // uint delta = (address-doffset);                      DASM.hs:107

0x175C  0x44            PUSHI0
0x175D  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x175F  0x4F            PUSHLOCALB02
0x1760  0x01            SUB
0x1761  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // string debugAddress = delta.ToString();              DASM.hs:108

0x1763  0x24 0x02       SYSCALL0 0x02  // String.New
0x1765  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1767  0x2C 0xB0       CALLB 0xB0     // UInt.ToString
0x1769  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // if (debugInfo.Contains(debugAddress))                DASM.hs:109

0x176B  0x4E            PUSHLOCALB00
0x176C  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x176E  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x1770  0x31 0xA3 0x00  JZW 0x1813 (+163)

                        // string dln = debugInfo[debugAddress];                DASM.hs:111

0x1773  0x24 0x02       SYSCALL0 0x02  // String.New
0x1775  0x4E            PUSHLOCALB00
0x1776  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1778  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x177A  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // hasmFile.Append("" + char(0x0A));                    DASM.hs:112

0x177C  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x177E  0x24 0x02       SYSCALL0 0x02  // String.New
0x1780  0x1A 0x0A       PUSHIB 0x0A
0x1782  0x25 0x03       SYSCALL1 0x03  // String.Append
0x1784  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // string sourceLine = GetSourceLine(src, dln);

0x1786  0x24 0x02       SYSCALL0 0x02  // String.New
0x1788  0x56 0x04 0x14  PUSHLOCALBB 0x1404
0x178B  0x2C 0x01       CALLB 0x01     // DASM.GetSourceLine
0x178D  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // if (sourceLine.Length > 0)                           DASM.hs:114

0x178F  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x1791  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x1793  0x44            PUSHI0
0x1794  0x07            GT
0x1795  0x2E 0x56       JZB 0x17EB (+86)

                        // string commentStart;                                 DASM.hs:116

0x1797  0x24 0x02       SYSCALL0 0x02  // String.New

                        // commentStart = commentStart.Pad(' ', 24) + "//";

0x1799  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x179B  0x1A 0x20       PUSHIB 0x20
0x179D  0x1A 0x18       PUSHIB 0x18
0x179F  0x2C 0xD9       CALLB 0xD9     // String.Pad
0x17A1  0x37 0x2F 0x2F  PUSHIW 0x2F2F
0x17A4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x17A6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17A8  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // sourceLine = commentStart + " " + sourceLine.Trim();

0x17AA  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x17AC  0x1A 0x20       PUSHIB 0x20
0x17AE  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x17B0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17B2  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x17B4  0x2C 0xDD       CALLB 0xDD     // String.Trim
0x17B6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17B8  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // if (sourceLine.Length < 70)                          DASM.hs:119

0x17BA  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x17BC  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x17BE  0x1A 0x46       PUSHIB 0x46
0x17C0  0x08            LT
0x17C1  0x2E 0x1D       JZB 0x17DE (+29)

                        // sourceLine = sourceLine.Pad(' ', 80);                DASM.hs:121

0x17C3  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x17C5  0x1A 0x20       PUSHIB 0x20
0x17C7  0x1A 0x50       PUSHIB 0x50
0x17C9  0x2C 0xD9       CALLB 0xD9     // String.Pad
0x17CB  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // sourceLine = sourceLine + srcName + ":" + dln;

0x17CD  0x56 0x16 0x06  PUSHLOCALBB 0x0616
0x17D0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17D2  0x1A 0x3A       PUSHIB 0x3A
0x17D4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x17D6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17D8  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x17DA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17DC  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // hasmFile.Append(sourceLine + char(0x0A));            DASM.hs:124

0x17DE  0x56 0xF8 0x16  PUSHLOCALBB 0x16F8
0x17E1  0x1A 0x0A       PUSHIB 0x0A
0x17E3  0x25 0x03       SYSCALL1 0x03  // String.Append
0x17E5  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    DASM.hs:125

0x17E7  0x28 0x02       DECSP 0x02
0x17E9  0x30 0x1E       JB 0x1807 (+30)

                        // hasmFile.Append("// " + src + ":" + dln + char(0x0A));

0x17EB  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x17ED  0x1A 0x43       PUSHIB 0x43
0x17EF  0x1A 0x03       PUSHIB 0x03
0x17F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17F3  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x17F5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17F7  0x1A 0x3A       PUSHIB 0x3A
0x17F9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x17FB  0x24 0x03       SYSCALL0 0x03  // String.Append
0x17FD  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x17FF  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1801  0x1A 0x0A       PUSHIB 0x0A
0x1803  0x25 0x03       SYSCALL1 0x03  // String.Append
0x1805  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // hasmFile.Append("" + char(0x0A));                    DASM.hs:131

0x1807  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x1809  0x24 0x02       SYSCALL0 0x02  // String.New
0x180B  0x1A 0x0A       PUSHIB 0x0A
0x180D  0x25 0x03       SYSCALL1 0x03  // String.Append
0x180F  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    DASM.hs:132

0x1811  0x28 0x04       DECSP 0x04

                        // content = Instructions.Disassemble(code, ref address, startAddress);

0x1813  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x1815  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x1817  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x1819  0x2C 0x59       CALLB 0x59     // Instructions.Disassemble
0x181B  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // instructionCount++;                                  DASM.hs:135

0x181D  0x53 0x02       INCGLOBALB 0x02

                        // String.Build(ref content, char(0x0A));               DASM.hs:137

0x181F  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x1821  0x1A 0x0A       PUSHIB 0x0A
0x1823  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // hasmFile.Append(content);                            DASM.hs:138

0x1825  0x56 0xF8 0x08  PUSHLOCALBB 0x08F8
0x1828  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    DASM.hs:139

0x182A  0x28 0x06       DECSP 0x06
0x182C  0x22 0x0C       INCLOCALB 0x0C (BP+12)
0x182E  0x33 0x2F 0xFE  JW 0x165D (-465)
0x1831  0x28 0x02       DECSP 0x02

                        // }                                                    DASM.hs:140

0x1833  0x2A 0x14       RETB 0x14


// DASM.hs:26
// ####  DASM.GetSourceLine(..)  ####                                           0x0001

0x1835  0x49            ENTER

                        // if (pathLoaded != path)                              DASM.hs:27

0x1836  0x20 0x04       PUSHGLOBALB 0x04
0x1838  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x183A  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x183C  0x2E 0x35       JZB 0x1871 (+53)

                        // file sourceFile = File.Open(path);                   DASM.hs:29

0x183E  0x24 0x60       SYSCALL0 0x60  // File.New
0x1840  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x1842  0x24 0x61       SYSCALL0 0x61  // File.Open
0x1844  0x5D            POPCOPYLOCALB00

                        // if (sourceFile.IsValid())                            DASM.hs:30

0x1845  0x4E            PUSHLOCALB00
0x1846  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1848  0x2E 0x27       JZB 0x186F (+39)

                        // sourceLines.Clear();                                 DASM.hs:32

0x184A  0x20 0x06       PUSHGLOBALB 0x06
0x184C  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // pathLoaded = path;                                   DASM.hs:33

0x184E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x1850  0x59 0x04       POPCOPYGLOBALB 0x04

                        // string ln = sourceFile.ReadLine();                   DASM.hs:36

0x1852  0x24 0x02       SYSCALL0 0x02  // String.New
0x1854  0x4E            PUSHLOCALB00
0x1855  0x24 0x63       SYSCALL0 0x63  // File.ReadLine
0x1857  0x5E            POPCOPYLOCALB02

                        // if (ln.Length == 0)                                  DASM.hs:37

0x1858  0x4F            PUSHLOCALB02
0x1859  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x185B  0x2F 0x0B       JNZB 0x1866 (+11)

                        // if (!sourceFile.IsValid())                           DASM.hs:39

0x185D  0x4E            PUSHLOCALB00
0x185E  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x1860  0x2F 0x06       JNZB 0x1866 (+6)

                        // break;                                               DASM.hs:41

0x1862  0x28 0x02       DECSP 0x02
0x1864  0x30 0x0B       JB 0x186F (+11)

                        // sourceLines.Append(ln);                              DASM.hs:44

0x1866  0x20 0x06       PUSHGLOBALB 0x06
0x1868  0x4F            PUSHLOCALB02
0x1869  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    DASM.hs:45

0x186B  0x28 0x02       DECSP 0x02
0x186D  0x30 0xE5       JB 0x1852 (-27)

                        // }                                                    DASM.hs:47

0x186F  0x28 0x02       DECSP 0x02

                        // string sourceLine;                                   DASM.hs:48

0x1871  0x24 0x02       SYSCALL0 0x02  // String.New

                        // uint iline;                                          DASM.hs:49

0x1873  0x44            PUSHI0

                        // if (Token.TryParseUInt(lnum, ref iline))             DASM.hs:50

0x1874  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1876  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x1878  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x187A  0x2E 0x17       JZB 0x1891 (+23)

                        // if (iline > 0)                                       DASM.hs:52

0x187C  0x4F            PUSHLOCALB02
0x187D  0x44            PUSHI0
0x187E  0x07            GT
0x187F  0x2E 0x04       JZB 0x1883 (+4)

                        // iline--;                                             DASM.hs:54

0x1881  0x23 0x02       DECLOCALB 0x02 (BP+2)

                        // if (sourceLines.Length > iline)                      DASM.hs:56

0x1883  0x20 0x06       PUSHGLOBALB 0x06
0x1885  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x1887  0x4F            PUSHLOCALB02
0x1888  0x07            GT
0x1889  0x2E 0x08       JZB 0x1891 (+8)

                        // sourceLine = sourceLines[iline];                     DASM.hs:58

0x188B  0x20 0x06       PUSHGLOBALB 0x06
0x188D  0x4F            PUSHLOCALB02
0x188E  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x1890  0x5D            POPCOPYLOCALB00

                        // return sourceLine;                                   DASM.hs:61

0x1891  0x4E            PUSHLOCALB00
0x1892  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/syscalls.hs:11
// ####  SysCalls.New(..)  ####                                                 0x0081

0x1894  0x49            ENTER

                        // syscalls.Clear(); // in case called a 2nd time

0x1895  0x20 0x46       PUSHGLOBALB 0x46
0x1897  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // addEntry("String", "NewFromConstant");               syscalls.hs:14

0x1899  0x37 0x4D 0x01  PUSHIW 0x014D
0x189C  0x1A 0x06       PUSHIB 0x06
0x189E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18A0  0x37 0x53 0x01  PUSHIW 0x0153
0x18A3  0x1A 0x0F       PUSHIB 0x0F
0x18A5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18A7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "NewFromChar");                   syscalls.hs:15

0x18A9  0x37 0x4D 0x01  PUSHIW 0x014D
0x18AC  0x1A 0x06       PUSHIB 0x06
0x18AE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18B0  0x37 0x62 0x01  PUSHIW 0x0162
0x18B3  0x1A 0x0B       PUSHIB 0x0B
0x18B5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18B7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "New");                           syscalls.hs:16

0x18B9  0x37 0x4D 0x01  PUSHIW 0x014D
0x18BC  0x1A 0x06       PUSHIB 0x06
0x18BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18C0  0x37 0x53 0x01  PUSHIW 0x0153
0x18C3  0x1A 0x03       PUSHIB 0x03
0x18C5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18C7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "Append");                        syscalls.hs:17

0x18C9  0x37 0x4D 0x01  PUSHIW 0x014D
0x18CC  0x1A 0x06       PUSHIB 0x06
0x18CE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18D0  0x37 0x6D 0x01  PUSHIW 0x016D
0x18D3  0x1A 0x06       PUSHIB 0x06
0x18D5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18D7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "InsertChar");                    syscalls.hs:18

0x18D9  0x37 0x4D 0x01  PUSHIW 0x014D
0x18DC  0x1A 0x06       PUSHIB 0x06
0x18DE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18E0  0x37 0x73 0x01  PUSHIW 0x0173
0x18E3  0x1A 0x0A       PUSHIB 0x0A
0x18E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18E7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "Compare");                       syscalls.hs:19

0x18E9  0x37 0x4D 0x01  PUSHIW 0x014D
0x18EC  0x1A 0x06       PUSHIB 0x06
0x18EE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18F0  0x37 0x7D 0x01  PUSHIW 0x017D
0x18F3  0x1A 0x07       PUSHIB 0x07
0x18F5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18F7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "Length_Get");                    syscalls.hs:20

0x18F9  0x37 0x4D 0x01  PUSHIW 0x014D
0x18FC  0x1A 0x06       PUSHIB 0x06
0x18FE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1900  0x37 0x84 0x01  PUSHIW 0x0184
0x1903  0x1A 0x0A       PUSHIB 0x0A
0x1905  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1907  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "EndsWith");                      syscalls.hs:21

0x1909  0x37 0x4D 0x01  PUSHIW 0x014D
0x190C  0x1A 0x06       PUSHIB 0x06
0x190E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1910  0x37 0x8E 0x01  PUSHIW 0x018E
0x1913  0x1A 0x08       PUSHIB 0x08
0x1915  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1917  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "Substring");                     syscalls.hs:22

0x1919  0x37 0x4D 0x01  PUSHIW 0x014D
0x191C  0x1A 0x06       PUSHIB 0x06
0x191E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1920  0x37 0x96 0x01  PUSHIW 0x0196
0x1923  0x1A 0x09       PUSHIB 0x09
0x1925  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1927  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "Replace");                       syscalls.hs:23

0x1929  0x37 0x4D 0x01  PUSHIW 0x014D
0x192C  0x1A 0x06       PUSHIB 0x06
0x192E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1930  0x37 0x9F 0x01  PUSHIW 0x019F
0x1933  0x1A 0x07       PUSHIB 0x07
0x1935  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1937  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "GetChar");                       syscalls.hs:24

0x1939  0x37 0x4D 0x01  PUSHIW 0x014D
0x193C  0x1A 0x06       PUSHIB 0x06
0x193E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1940  0x37 0xA6 0x01  PUSHIW 0x01A6
0x1943  0x1A 0x07       PUSHIB 0x07
0x1945  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1947  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Array", "New");                            syscalls.hs:26

0x1949  0x37 0xAD 0x01  PUSHIW 0x01AD
0x194C  0x1A 0x05       PUSHIB 0x05
0x194E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1950  0x37 0x53 0x01  PUSHIW 0x0153
0x1953  0x1A 0x03       PUSHIB 0x03
0x1955  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1957  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Array", "Count_Get");                      syscalls.hs:27

0x1959  0x37 0xAD 0x01  PUSHIW 0x01AD
0x195C  0x1A 0x05       PUSHIB 0x05
0x195E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1960  0x37 0xB2 0x01  PUSHIW 0x01B2
0x1963  0x1A 0x09       PUSHIB 0x09
0x1965  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1967  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Array", "GetItem");                        syscalls.hs:28

0x1969  0x37 0xAD 0x01  PUSHIW 0x01AD
0x196C  0x1A 0x05       PUSHIB 0x05
0x196E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1970  0x37 0xBB 0x01  PUSHIW 0x01BB
0x1973  0x1A 0x07       PUSHIB 0x07
0x1975  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1977  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Array", "SetItem");                        syscalls.hs:29

0x1979  0x37 0xAD 0x01  PUSHIW 0x01AD
0x197C  0x1A 0x05       PUSHIB 0x05
0x197E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1980  0x37 0xC2 0x01  PUSHIW 0x01C2
0x1983  0x1A 0x07       PUSHIB 0x07
0x1985  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1987  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "New");                             syscalls.hs:31

0x1989  0x37 0xC9 0x01  PUSHIW 0x01C9
0x198C  0x1A 0x04       PUSHIB 0x04
0x198E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1990  0x37 0x53 0x01  PUSHIW 0x0153
0x1993  0x1A 0x03       PUSHIB 0x03
0x1995  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1997  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "Length_Get");                      syscalls.hs:32

0x1999  0x37 0xC9 0x01  PUSHIW 0x01C9
0x199C  0x1A 0x04       PUSHIB 0x04
0x199E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19A0  0x37 0x84 0x01  PUSHIW 0x0184
0x19A3  0x1A 0x0A       PUSHIB 0x0A
0x19A5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19A7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "Append");                          syscalls.hs:33

0x19A9  0x37 0xC9 0x01  PUSHIW 0x01C9
0x19AC  0x1A 0x04       PUSHIB 0x04
0x19AE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19B0  0x37 0x6D 0x01  PUSHIW 0x016D
0x19B3  0x1A 0x06       PUSHIB 0x06
0x19B5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19B7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "Insert");                          syscalls.hs:34

0x19B9  0x37 0xC9 0x01  PUSHIW 0x01C9
0x19BC  0x1A 0x04       PUSHIB 0x04
0x19BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19C0  0x37 0x73 0x01  PUSHIW 0x0173
0x19C3  0x1A 0x06       PUSHIB 0x06
0x19C5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19C7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "GetItem");                         syscalls.hs:35

0x19C9  0x37 0xC9 0x01  PUSHIW 0x01C9
0x19CC  0x1A 0x04       PUSHIB 0x04
0x19CE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19D0  0x37 0xBB 0x01  PUSHIW 0x01BB
0x19D3  0x1A 0x07       PUSHIB 0x07
0x19D5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19D7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "GetItemAsVariant");                syscalls.hs:36

0x19D9  0x37 0xC9 0x01  PUSHIW 0x01C9
0x19DC  0x1A 0x04       PUSHIB 0x04
0x19DE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19E0  0x37 0xCD 0x01  PUSHIW 0x01CD
0x19E3  0x1A 0x10       PUSHIB 0x10
0x19E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19E7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "SetItem");                         syscalls.hs:37

0x19E9  0x37 0xC9 0x01  PUSHIW 0x01C9
0x19EC  0x1A 0x04       PUSHIB 0x04
0x19EE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19F0  0x37 0xC2 0x01  PUSHIW 0x01C2
0x19F3  0x1A 0x07       PUSHIB 0x07
0x19F5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19F7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "Clear");                           syscalls.hs:38

0x19F9  0x37 0xC9 0x01  PUSHIW 0x01C9
0x19FC  0x1A 0x04       PUSHIB 0x04
0x19FE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A00  0x37 0xDD 0x01  PUSHIW 0x01DD
0x1A03  0x1A 0x05       PUSHIB 0x05
0x1A05  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A07  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "Remove");                          syscalls.hs:39

0x1A09  0x37 0xC9 0x01  PUSHIW 0x01C9
0x1A0C  0x1A 0x04       PUSHIB 0x04
0x1A0E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A10  0x37 0xE2 0x01  PUSHIW 0x01E2
0x1A13  0x1A 0x06       PUSHIB 0x06
0x1A15  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A17  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("List", "Contains");                        syscalls.hs:40

0x1A19  0x37 0xC9 0x01  PUSHIW 0x01C9
0x1A1C  0x1A 0x04       PUSHIB 0x04
0x1A1E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A20  0x37 0xE8 0x01  PUSHIW 0x01E8
0x1A23  0x1A 0x08       PUSHIB 0x08
0x1A25  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A27  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "New");                       syscalls.hs:42

0x1A29  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A2C  0x1A 0x0A       PUSHIB 0x0A
0x1A2E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A30  0x37 0x53 0x01  PUSHIW 0x0153
0x1A33  0x1A 0x03       PUSHIB 0x03
0x1A35  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A37  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "Count_Get");                 syscalls.hs:43

0x1A39  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A3C  0x1A 0x0A       PUSHIB 0x0A
0x1A3E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A40  0x37 0xB2 0x01  PUSHIW 0x01B2
0x1A43  0x1A 0x09       PUSHIB 0x09
0x1A45  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A47  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "Set");                       syscalls.hs:44

0x1A49  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A4C  0x1A 0x0A       PUSHIB 0x0A
0x1A4E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A50  0x37 0xC2 0x01  PUSHIW 0x01C2
0x1A53  0x1A 0x03       PUSHIB 0x03
0x1A55  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A57  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "Contains");                  syscalls.hs:45

0x1A59  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A5C  0x1A 0x0A       PUSHIB 0x0A
0x1A5E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A60  0x37 0xE8 0x01  PUSHIW 0x01E8
0x1A63  0x1A 0x08       PUSHIB 0x08
0x1A65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A67  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "Get");                       syscalls.hs:46

0x1A69  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A6C  0x1A 0x0A       PUSHIB 0x0A
0x1A6E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A70  0x37 0x8B 0x01  PUSHIW 0x018B
0x1A73  0x1A 0x03       PUSHIB 0x03
0x1A75  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A77  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "Next");                      syscalls.hs:47

0x1A79  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A7C  0x1A 0x0A       PUSHIB 0x0A
0x1A7E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A80  0x37 0xFA 0x01  PUSHIW 0x01FA
0x1A83  0x1A 0x04       PUSHIB 0x04
0x1A85  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A87  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "Clear");                     syscalls.hs:48

0x1A89  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A8C  0x1A 0x0A       PUSHIB 0x0A
0x1A8E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A90  0x37 0xDD 0x01  PUSHIW 0x01DD
0x1A93  0x1A 0x05       PUSHIB 0x05
0x1A95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A97  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Pair", "New");                             syscalls.hs:50

0x1A99  0x37 0xFE 0x01  PUSHIW 0x01FE
0x1A9C  0x1A 0x04       PUSHIB 0x04
0x1A9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AA0  0x37 0x53 0x01  PUSHIW 0x0153
0x1AA3  0x1A 0x03       PUSHIB 0x03
0x1AA5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AA7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Pair", "Set");                             syscalls.hs:51

0x1AA9  0x37 0xFE 0x01  PUSHIW 0x01FE
0x1AAC  0x1A 0x04       PUSHIB 0x04
0x1AAE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AB0  0x37 0xC2 0x01  PUSHIW 0x01C2
0x1AB3  0x1A 0x03       PUSHIB 0x03
0x1AB5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AB7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Pair", "Key");                             syscalls.hs:52

0x1AB9  0x37 0xFE 0x01  PUSHIW 0x01FE
0x1ABC  0x1A 0x04       PUSHIB 0x04
0x1ABE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AC0  0x37 0x02 0x02  PUSHIW 0x0202
0x1AC3  0x1A 0x03       PUSHIB 0x03
0x1AC5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AC7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Pair", "KeyType");                         syscalls.hs:53

0x1AC9  0x37 0xFE 0x01  PUSHIW 0x01FE
0x1ACC  0x1A 0x04       PUSHIB 0x04
0x1ACE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AD0  0x37 0x05 0x02  PUSHIW 0x0205
0x1AD3  0x1A 0x07       PUSHIB 0x07
0x1AD5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AD7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Pair", "Value");                           syscalls.hs:54

0x1AD9  0x37 0xFE 0x01  PUSHIW 0x01FE
0x1ADC  0x1A 0x04       PUSHIB 0x04
0x1ADE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AE0  0x37 0x0C 0x02  PUSHIW 0x020C
0x1AE3  0x1A 0x05       PUSHIB 0x05
0x1AE5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AE7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Pair", "ValueType");                       syscalls.hs:55

0x1AE9  0x37 0xFE 0x01  PUSHIW 0x01FE
0x1AEC  0x1A 0x04       PUSHIB 0x04
0x1AEE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AF0  0x37 0x11 0x02  PUSHIW 0x0211
0x1AF3  0x1A 0x09       PUSHIB 0x09
0x1AF5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AF7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Variant", "Type");                         syscalls.hs:57

0x1AF9  0x37 0xD6 0x01  PUSHIW 0x01D6
0x1AFC  0x1A 0x07       PUSHIB 0x07
0x1AFE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B00  0x37 0x08 0x02  PUSHIW 0x0208
0x1B03  0x1A 0x04       PUSHIB 0x04
0x1B05  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B07  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Variant", "Box");                          syscalls.hs:58

0x1B09  0x37 0xD6 0x01  PUSHIW 0x01D6
0x1B0C  0x1A 0x07       PUSHIB 0x07
0x1B0E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B10  0x37 0x1A 0x02  PUSHIW 0x021A
0x1B13  0x1A 0x03       PUSHIB 0x03
0x1B15  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B17  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Variant", "UnBox");                        syscalls.hs:59

0x1B19  0x37 0xD6 0x01  PUSHIW 0x01D6
0x1B1C  0x1A 0x07       PUSHIB 0x07
0x1B1E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B20  0x37 0x1D 0x02  PUSHIW 0x021D
0x1B23  0x1A 0x05       PUSHIB 0x05
0x1B25  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B27  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "Print");                         syscalls.hs:61

0x1B29  0x37 0x22 0x02  PUSHIW 0x0222
0x1B2C  0x1A 0x06       PUSHIB 0x06
0x1B2E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B30  0x37 0x28 0x02  PUSHIW 0x0228
0x1B33  0x1A 0x05       PUSHIB 0x05
0x1B35  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B37  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "PrintLn");                       syscalls.hs:62

0x1B39  0x37 0x22 0x02  PUSHIW 0x0222
0x1B3C  0x1A 0x06       PUSHIB 0x06
0x1B3E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B40  0x37 0x2D 0x02  PUSHIW 0x022D
0x1B43  0x1A 0x07       PUSHIB 0x07
0x1B45  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B47  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "Clear");                         syscalls.hs:63

0x1B49  0x37 0x22 0x02  PUSHIW 0x0222
0x1B4C  0x1A 0x06       PUSHIB 0x06
0x1B4E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B50  0x37 0xDD 0x01  PUSHIW 0x01DD
0x1B53  0x1A 0x05       PUSHIB 0x05
0x1B55  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B57  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "SetCursor");                     syscalls.hs:64

0x1B59  0x37 0x22 0x02  PUSHIW 0x0222
0x1B5C  0x1A 0x06       PUSHIB 0x06
0x1B5E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B60  0x37 0x34 0x02  PUSHIW 0x0234
0x1B63  0x1A 0x09       PUSHIB 0x09
0x1B65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B67  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "Columns_Get");                   syscalls.hs:65

0x1B69  0x37 0x22 0x02  PUSHIW 0x0222
0x1B6C  0x1A 0x06       PUSHIB 0x06
0x1B6E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B70  0x37 0x3D 0x02  PUSHIW 0x023D
0x1B73  0x1A 0x0B       PUSHIB 0x0B
0x1B75  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B77  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "Rows_Get");                      syscalls.hs:66

0x1B79  0x37 0x22 0x02  PUSHIW 0x0222
0x1B7C  0x1A 0x06       PUSHIB 0x06
0x1B7E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B80  0x37 0x48 0x02  PUSHIW 0x0248
0x1B83  0x1A 0x08       PUSHIB 0x08
0x1B85  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B87  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "CursorX_Get");                   syscalls.hs:67

0x1B89  0x37 0x22 0x02  PUSHIW 0x0222
0x1B8C  0x1A 0x06       PUSHIB 0x06
0x1B8E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B90  0x37 0x50 0x02  PUSHIW 0x0250
0x1B93  0x1A 0x0B       PUSHIB 0x0B
0x1B95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B97  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "CursorY_Get");                   syscalls.hs:68

0x1B99  0x37 0x22 0x02  PUSHIW 0x0222
0x1B9C  0x1A 0x06       PUSHIB 0x06
0x1B9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BA0  0x37 0x5B 0x02  PUSHIW 0x025B
0x1BA3  0x1A 0x0B       PUSHIB 0x0B
0x1BA5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BA7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "Suspend");                       syscalls.hs:69

0x1BA9  0x37 0x22 0x02  PUSHIW 0x0222
0x1BAC  0x1A 0x06       PUSHIB 0x06
0x1BAE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BB0  0x37 0x66 0x02  PUSHIW 0x0266
0x1BB3  0x1A 0x07       PUSHIB 0x07
0x1BB5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BB7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "Resume");                        syscalls.hs:70

0x1BB9  0x37 0x22 0x02  PUSHIW 0x0222
0x1BBC  0x1A 0x06       PUSHIB 0x06
0x1BBE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BC0  0x37 0x6D 0x02  PUSHIW 0x026D
0x1BC3  0x1A 0x06       PUSHIB 0x06
0x1BC5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BC7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Screen", "DrawChar");                      syscalls.hs:71

0x1BC9  0x37 0x22 0x02  PUSHIW 0x0222
0x1BCC  0x1A 0x06       PUSHIB 0x06
0x1BCE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BD0  0x37 0x73 0x02  PUSHIW 0x0273
0x1BD3  0x1A 0x08       PUSHIB 0x08
0x1BD5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BD7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Int", "ToFloat");                          syscalls.hs:73

0x1BD9  0x37 0x7B 0x02  PUSHIW 0x027B
0x1BDC  0x1A 0x03       PUSHIB 0x03
0x1BDE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BE0  0x37 0x7E 0x02  PUSHIW 0x027E
0x1BE3  0x1A 0x07       PUSHIB 0x07
0x1BE5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BE7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Int", "ToLong");                           syscalls.hs:74

0x1BE9  0x37 0x7B 0x02  PUSHIW 0x027B
0x1BEC  0x1A 0x03       PUSHIB 0x03
0x1BEE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BF0  0x37 0x85 0x02  PUSHIW 0x0285
0x1BF3  0x1A 0x06       PUSHIB 0x06
0x1BF5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BF7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("UInt", "ToLong");                          syscalls.hs:76

0x1BF9  0x37 0x8B 0x02  PUSHIW 0x028B
0x1BFC  0x1A 0x04       PUSHIB 0x04
0x1BFE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C00  0x37 0x85 0x02  PUSHIW 0x0285
0x1C03  0x1A 0x06       PUSHIB 0x06
0x1C05  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C07  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("UInt", "ToInt");                           syscalls.hs:77

0x1C09  0x37 0x8B 0x02  PUSHIW 0x028B
0x1C0C  0x1A 0x04       PUSHIB 0x04
0x1C0E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C10  0x37 0x8F 0x02  PUSHIW 0x028F
0x1C13  0x1A 0x05       PUSHIB 0x05
0x1C15  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C17  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "ToString");                        syscalls.hs:79

0x1C19  0x37 0x87 0x02  PUSHIW 0x0287
0x1C1C  0x1A 0x04       PUSHIB 0x04
0x1C1E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C20  0x37 0x94 0x02  PUSHIW 0x0294
0x1C23  0x1A 0x08       PUSHIB 0x08
0x1C25  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C27  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "ToBytes");                         syscalls.hs:80

0x1C29  0x37 0x87 0x02  PUSHIW 0x0287
0x1C2C  0x1A 0x04       PUSHIB 0x04
0x1C2E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C30  0x37 0x9C 0x02  PUSHIW 0x029C
0x1C33  0x1A 0x07       PUSHIB 0x07
0x1C35  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C37  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "ToFloat");                         syscalls.hs:81

0x1C39  0x37 0x87 0x02  PUSHIW 0x0287
0x1C3C  0x1A 0x04       PUSHIB 0x04
0x1C3E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C40  0x37 0x7E 0x02  PUSHIW 0x027E
0x1C43  0x1A 0x07       PUSHIB 0x07
0x1C45  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C47  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "ToInt");                           syscalls.hs:82

0x1C49  0x37 0x87 0x02  PUSHIW 0x0287
0x1C4C  0x1A 0x04       PUSHIB 0x04
0x1C4E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C50  0x37 0x8F 0x02  PUSHIW 0x028F
0x1C53  0x1A 0x05       PUSHIB 0x05
0x1C55  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C57  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "ToUInt");                          syscalls.hs:83

0x1C59  0x37 0x87 0x02  PUSHIW 0x0287
0x1C5C  0x1A 0x04       PUSHIB 0x04
0x1C5E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C60  0x37 0xA3 0x02  PUSHIW 0x02A3
0x1C63  0x1A 0x06       PUSHIB 0x06
0x1C65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C67  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "New");                             syscalls.hs:84

0x1C69  0x37 0x87 0x02  PUSHIW 0x0287
0x1C6C  0x1A 0x04       PUSHIB 0x04
0x1C6E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C70  0x37 0x53 0x01  PUSHIW 0x0153
0x1C73  0x1A 0x03       PUSHIB 0x03
0x1C75  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C77  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "NewFromConstant");                 syscalls.hs:85

0x1C79  0x37 0x87 0x02  PUSHIW 0x0287
0x1C7C  0x1A 0x04       PUSHIB 0x04
0x1C7E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C80  0x37 0x53 0x01  PUSHIW 0x0153
0x1C83  0x1A 0x0F       PUSHIB 0x0F
0x1C85  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C87  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "Add");                             syscalls.hs:86

0x1C89  0x37 0x87 0x02  PUSHIW 0x0287
0x1C8C  0x1A 0x04       PUSHIB 0x04
0x1C8E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C90  0x37 0xA9 0x02  PUSHIW 0x02A9
0x1C93  0x1A 0x03       PUSHIB 0x03
0x1C95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C97  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "Sub");                             syscalls.hs:87

0x1C99  0x37 0x87 0x02  PUSHIW 0x0287
0x1C9C  0x1A 0x04       PUSHIB 0x04
0x1C9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CA0  0x37 0x96 0x01  PUSHIW 0x0196
0x1CA3  0x1A 0x03       PUSHIB 0x03
0x1CA5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CA7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "Div");                             syscalls.hs:88

0x1CA9  0x37 0x87 0x02  PUSHIW 0x0287
0x1CAC  0x1A 0x04       PUSHIB 0x04
0x1CAE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CB0  0x37 0xAC 0x02  PUSHIW 0x02AC
0x1CB3  0x1A 0x03       PUSHIB 0x03
0x1CB5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CB7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "Mul");                             syscalls.hs:89

0x1CB9  0x37 0x87 0x02  PUSHIW 0x0287
0x1CBC  0x1A 0x04       PUSHIB 0x04
0x1CBE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CC0  0x37 0xAF 0x02  PUSHIW 0x02AF
0x1CC3  0x1A 0x03       PUSHIB 0x03
0x1CC5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CC7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "Mod");                             syscalls.hs:90

0x1CC9  0x37 0x87 0x02  PUSHIW 0x0287
0x1CCC  0x1A 0x04       PUSHIB 0x04
0x1CCE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CD0  0x37 0xB2 0x02  PUSHIW 0x02B2
0x1CD3  0x1A 0x03       PUSHIB 0x03
0x1CD5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CD7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "EQ");                              syscalls.hs:91

0x1CD9  0x37 0x87 0x02  PUSHIW 0x0287
0x1CDC  0x1A 0x04       PUSHIB 0x04
0x1CDE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CE0  0x37 0x45 0x51  PUSHIW 0x5145
0x1CE3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1CE5  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "LT");                              syscalls.hs:92

0x1CE7  0x37 0x87 0x02  PUSHIW 0x0287
0x1CEA  0x1A 0x04       PUSHIB 0x04
0x1CEC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CEE  0x37 0x4C 0x54  PUSHIW 0x544C
0x1CF1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1CF3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "LE");                              syscalls.hs:93

0x1CF5  0x37 0x87 0x02  PUSHIW 0x0287
0x1CF8  0x1A 0x04       PUSHIB 0x04
0x1CFA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CFC  0x37 0x4C 0x45  PUSHIW 0x454C
0x1CFF  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1D01  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "GT");                              syscalls.hs:94

0x1D03  0x37 0x87 0x02  PUSHIW 0x0287
0x1D06  0x1A 0x04       PUSHIB 0x04
0x1D08  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D0A  0x37 0x47 0x54  PUSHIW 0x5447
0x1D0D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1D0F  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "GE");                              syscalls.hs:95

0x1D11  0x37 0x87 0x02  PUSHIW 0x0287
0x1D14  0x1A 0x04       PUSHIB 0x04
0x1D16  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D18  0x37 0x47 0x45  PUSHIW 0x4547
0x1D1B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1D1D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Long", "Negate");                          syscalls.hs:96

0x1D1F  0x37 0x87 0x02  PUSHIW 0x0287
0x1D22  0x1A 0x04       PUSHIB 0x04
0x1D24  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D26  0x37 0xB5 0x02  PUSHIW 0x02B5
0x1D29  0x1A 0x06       PUSHIB 0x06
0x1D2B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D2D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "ToString");                       syscalls.hs:98

0x1D2F  0x37 0x80 0x02  PUSHIW 0x0280
0x1D32  0x1A 0x05       PUSHIB 0x05
0x1D34  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D36  0x37 0x94 0x02  PUSHIW 0x0294
0x1D39  0x1A 0x08       PUSHIB 0x08
0x1D3B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D3D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "ToBytes");                        syscalls.hs:99

0x1D3F  0x37 0x80 0x02  PUSHIW 0x0280
0x1D42  0x1A 0x05       PUSHIB 0x05
0x1D44  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D46  0x37 0x9C 0x02  PUSHIW 0x029C
0x1D49  0x1A 0x07       PUSHIB 0x07
0x1D4B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D4D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "New");                            syscalls.hs:100

0x1D4F  0x37 0x80 0x02  PUSHIW 0x0280
0x1D52  0x1A 0x05       PUSHIB 0x05
0x1D54  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D56  0x37 0x53 0x01  PUSHIW 0x0153
0x1D59  0x1A 0x03       PUSHIB 0x03
0x1D5B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D5D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "NewFromConstant");                syscalls.hs:101

0x1D5F  0x37 0x80 0x02  PUSHIW 0x0280
0x1D62  0x1A 0x05       PUSHIB 0x05
0x1D64  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D66  0x37 0x53 0x01  PUSHIW 0x0153
0x1D69  0x1A 0x0F       PUSHIB 0x0F
0x1D6B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D6D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "Add");                            syscalls.hs:102

0x1D6F  0x37 0x80 0x02  PUSHIW 0x0280
0x1D72  0x1A 0x05       PUSHIB 0x05
0x1D74  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D76  0x37 0xA9 0x02  PUSHIW 0x02A9
0x1D79  0x1A 0x03       PUSHIB 0x03
0x1D7B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D7D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "Sub");                            syscalls.hs:103

0x1D7F  0x37 0x80 0x02  PUSHIW 0x0280
0x1D82  0x1A 0x05       PUSHIB 0x05
0x1D84  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D86  0x37 0x96 0x01  PUSHIW 0x0196
0x1D89  0x1A 0x03       PUSHIB 0x03
0x1D8B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D8D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "Div");                            syscalls.hs:104

0x1D8F  0x37 0x80 0x02  PUSHIW 0x0280
0x1D92  0x1A 0x05       PUSHIB 0x05
0x1D94  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D96  0x37 0xAC 0x02  PUSHIW 0x02AC
0x1D99  0x1A 0x03       PUSHIB 0x03
0x1D9B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D9D  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "Mul");                            syscalls.hs:105

0x1D9F  0x37 0x80 0x02  PUSHIW 0x0280
0x1DA2  0x1A 0x05       PUSHIB 0x05
0x1DA4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DA6  0x37 0xAF 0x02  PUSHIW 0x02AF
0x1DA9  0x1A 0x03       PUSHIB 0x03
0x1DAB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DAD  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "EQ");                             syscalls.hs:106

0x1DAF  0x37 0x80 0x02  PUSHIW 0x0280
0x1DB2  0x1A 0x05       PUSHIB 0x05
0x1DB4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DB6  0x37 0x45 0x51  PUSHIW 0x5145
0x1DB9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1DBB  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "LT");                             syscalls.hs:107

0x1DBD  0x37 0x80 0x02  PUSHIW 0x0280
0x1DC0  0x1A 0x05       PUSHIB 0x05
0x1DC2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DC4  0x37 0x4C 0x54  PUSHIW 0x544C
0x1DC7  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1DC9  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "LE");                             syscalls.hs:108

0x1DCB  0x37 0x80 0x02  PUSHIW 0x0280
0x1DCE  0x1A 0x05       PUSHIB 0x05
0x1DD0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DD2  0x37 0x4C 0x45  PUSHIW 0x454C
0x1DD5  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1DD7  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "GT");                             syscalls.hs:109

0x1DD9  0x37 0x80 0x02  PUSHIW 0x0280
0x1DDC  0x1A 0x05       PUSHIB 0x05
0x1DDE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DE0  0x37 0x47 0x54  PUSHIW 0x5447
0x1DE3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1DE5  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Float", "GE");                             syscalls.hs:110

0x1DE7  0x37 0x80 0x02  PUSHIW 0x0280
0x1DEA  0x1A 0x05       PUSHIB 0x05
0x1DEC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DEE  0x37 0x47 0x45  PUSHIW 0x4547
0x1DF1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1DF3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Time", "Millis_Get");                      syscalls.hs:112

0x1DF5  0x37 0xBB 0x02  PUSHIW 0x02BB
0x1DF8  0x1A 0x04       PUSHIB 0x04
0x1DFA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1DFC  0x37 0xBF 0x02  PUSHIW 0x02BF
0x1DFF  0x1A 0x0A       PUSHIB 0x0A
0x1E01  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E03  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Time", "Micros_Get");                      syscalls.hs:113

0x1E05  0x37 0xBB 0x02  PUSHIW 0x02BB
0x1E08  0x1A 0x04       PUSHIB 0x04
0x1E0A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E0C  0x37 0xC9 0x02  PUSHIW 0x02C9
0x1E0F  0x1A 0x0A       PUSHIB 0x0A
0x1E11  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E13  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "Arguments_Get");                 syscalls.hs:115

0x1E15  0x37 0xD3 0x02  PUSHIW 0x02D3
0x1E18  0x1A 0x06       PUSHIB 0x06
0x1E1A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E1C  0x37 0xD9 0x02  PUSHIW 0x02D9
0x1E1F  0x1A 0x0D       PUSHIB 0x0D
0x1E21  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E23  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "CurrentDirectory_Get");

0x1E25  0x37 0xD3 0x02  PUSHIW 0x02D3
0x1E28  0x1A 0x06       PUSHIB 0x06
0x1E2A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E2C  0x37 0xE6 0x02  PUSHIW 0x02E6
0x1E2F  0x1A 0x14       PUSHIB 0x14
0x1E31  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E33  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "CurrentDirectory_Set");

0x1E35  0x37 0xD3 0x02  PUSHIW 0x02D3
0x1E38  0x1A 0x06       PUSHIB 0x06
0x1E3A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E3C  0x37 0xFA 0x02  PUSHIW 0x02FA
0x1E3F  0x1A 0x14       PUSHIB 0x14
0x1E41  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E43  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "Beep");                          syscalls.hs:118

0x1E45  0x37 0xD3 0x02  PUSHIW 0x02D3
0x1E48  0x1A 0x06       PUSHIB 0x06
0x1E4A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E4C  0x37 0x0E 0x03  PUSHIW 0x030E
0x1E4F  0x1A 0x04       PUSHIB 0x04
0x1E51  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E53  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "Execute");                       syscalls.hs:119

0x1E55  0x37 0xD3 0x02  PUSHIW 0x02D3
0x1E58  0x1A 0x06       PUSHIB 0x06
0x1E5A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E5C  0x37 0x12 0x03  PUSHIW 0x0312
0x1E5F  0x1A 0x07       PUSHIB 0x07
0x1E61  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E63  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "RegisterObject");                syscalls.hs:120

0x1E65  0x37 0xD3 0x02  PUSHIW 0x02D3
0x1E68  0x1A 0x06       PUSHIB 0x06
0x1E6A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E6C  0x37 0x19 0x03  PUSHIW 0x0319
0x1E6F  0x1A 0x0E       PUSHIB 0x0E
0x1E71  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E73  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "Exists");                          syscalls.hs:122

0x1E75  0x37 0x27 0x03  PUSHIW 0x0327
0x1E78  0x1A 0x04       PUSHIB 0x04
0x1E7A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E7C  0x37 0x2B 0x03  PUSHIW 0x032B
0x1E7F  0x1A 0x06       PUSHIB 0x06
0x1E81  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E83  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "New");                             syscalls.hs:123

0x1E85  0x37 0x27 0x03  PUSHIW 0x0327
0x1E88  0x1A 0x04       PUSHIB 0x04
0x1E8A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E8C  0x37 0x53 0x01  PUSHIW 0x0153
0x1E8F  0x1A 0x03       PUSHIB 0x03
0x1E91  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E93  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "Open");                            syscalls.hs:124

0x1E95  0x37 0x27 0x03  PUSHIW 0x0327
0x1E98  0x1A 0x04       PUSHIB 0x04
0x1E9A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E9C  0x37 0x31 0x03  PUSHIW 0x0331
0x1E9F  0x1A 0x04       PUSHIB 0x04
0x1EA1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EA3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "Create");                          syscalls.hs:125

0x1EA5  0x37 0x27 0x03  PUSHIW 0x0327
0x1EA8  0x1A 0x04       PUSHIB 0x04
0x1EAA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EAC  0x37 0x35 0x03  PUSHIW 0x0335
0x1EAF  0x1A 0x06       PUSHIB 0x06
0x1EB1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EB3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "ReadLine");                        syscalls.hs:126

0x1EB5  0x37 0x27 0x03  PUSHIW 0x0327
0x1EB8  0x1A 0x04       PUSHIB 0x04
0x1EBA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EBC  0x37 0x3B 0x03  PUSHIW 0x033B
0x1EBF  0x1A 0x08       PUSHIB 0x08
0x1EC1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EC3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "Read");                            syscalls.hs:127

0x1EC5  0x37 0x27 0x03  PUSHIW 0x0327
0x1EC8  0x1A 0x04       PUSHIB 0x04
0x1ECA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1ECC  0x37 0x3B 0x03  PUSHIW 0x033B
0x1ECF  0x1A 0x04       PUSHIB 0x04
0x1ED1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1ED3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "IsValid");                         syscalls.hs:128

0x1ED5  0x37 0x27 0x03  PUSHIW 0x0327
0x1ED8  0x1A 0x04       PUSHIB 0x04
0x1EDA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EDC  0x37 0x43 0x03  PUSHIW 0x0343
0x1EDF  0x1A 0x07       PUSHIB 0x07
0x1EE1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EE3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "Append");                          syscalls.hs:129

0x1EE5  0x37 0x27 0x03  PUSHIW 0x0327
0x1EE8  0x1A 0x04       PUSHIB 0x04
0x1EEA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EEC  0x37 0x6D 0x01  PUSHIW 0x016D
0x1EEF  0x1A 0x06       PUSHIB 0x06
0x1EF1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EF3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "Flush");                           syscalls.hs:130

0x1EF5  0x37 0x27 0x03  PUSHIW 0x0327
0x1EF8  0x1A 0x04       PUSHIB 0x04
0x1EFA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EFC  0x37 0x4A 0x03  PUSHIW 0x034A
0x1EFF  0x1A 0x05       PUSHIB 0x05
0x1F01  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F03  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "Delete");                          syscalls.hs:131

0x1F05  0x37 0x27 0x03  PUSHIW 0x0327
0x1F08  0x1A 0x04       PUSHIB 0x04
0x1F0A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F0C  0x37 0x4F 0x03  PUSHIW 0x034F
0x1F0F  0x1A 0x06       PUSHIB 0x06
0x1F11  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F13  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("File", "GetSize");                         syscalls.hs:132

0x1F15  0x37 0x27 0x03  PUSHIW 0x0327
0x1F18  0x1A 0x04       PUSHIB 0x04
0x1F1A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F1C  0x37 0x55 0x03  PUSHIW 0x0355
0x1F1F  0x1A 0x07       PUSHIB 0x07
0x1F21  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F23  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "Exists");                     syscalls.hs:134

0x1F25  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F28  0x1A 0x09       PUSHIB 0x09
0x1F2A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F2C  0x37 0x2B 0x03  PUSHIW 0x032B
0x1F2F  0x1A 0x06       PUSHIB 0x06
0x1F31  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F33  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "New");                        syscalls.hs:135

0x1F35  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F38  0x1A 0x09       PUSHIB 0x09
0x1F3A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F3C  0x37 0x53 0x01  PUSHIW 0x0153
0x1F3F  0x1A 0x03       PUSHIB 0x03
0x1F41  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F43  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "IsValid");                    syscalls.hs:136

0x1F45  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F48  0x1A 0x09       PUSHIB 0x09
0x1F4A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F4C  0x37 0x43 0x03  PUSHIW 0x0343
0x1F4F  0x1A 0x07       PUSHIB 0x07
0x1F51  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F53  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "Open");                       syscalls.hs:137

0x1F55  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F58  0x1A 0x09       PUSHIB 0x09
0x1F5A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F5C  0x37 0x31 0x03  PUSHIW 0x0331
0x1F5F  0x1A 0x04       PUSHIB 0x04
0x1F61  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F63  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "GetDirectoryCount");

0x1F65  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F68  0x1A 0x09       PUSHIB 0x09
0x1F6A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F6C  0x37 0x5C 0x03  PUSHIW 0x035C
0x1F6F  0x1A 0x11       PUSHIB 0x11
0x1F71  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F73  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "GetFileCount");               syscalls.hs:139

0x1F75  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F78  0x1A 0x09       PUSHIB 0x09
0x1F7A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F7C  0x37 0x6D 0x03  PUSHIW 0x036D
0x1F7F  0x1A 0x0C       PUSHIB 0x0C
0x1F81  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F83  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "GetFile");                    syscalls.hs:140

0x1F85  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F88  0x1A 0x09       PUSHIB 0x09
0x1F8A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F8C  0x37 0x6D 0x03  PUSHIW 0x036D
0x1F8F  0x1A 0x07       PUSHIB 0x07
0x1F91  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F93  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Directory", "GetDirectory");               syscalls.hs:141

0x1F95  0x37 0xED 0x02  PUSHIW 0x02ED
0x1F98  0x1A 0x09       PUSHIB 0x09
0x1F9A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F9C  0x37 0x5C 0x03  PUSHIW 0x035C
0x1F9F  0x1A 0x0C       PUSHIB 0x0C
0x1FA1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FA3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "ReadKey");                     syscalls.hs:143

0x1FA5  0x37 0x79 0x03  PUSHIW 0x0379
0x1FA8  0x1A 0x08       PUSHIB 0x08
0x1FAA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FAC  0x37 0x81 0x03  PUSHIW 0x0381
0x1FAF  0x1A 0x07       PUSHIB 0x07
0x1FB1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FB3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "IsAvailable_Get");             syscalls.hs:144

0x1FB5  0x37 0x79 0x03  PUSHIW 0x0379
0x1FB8  0x1A 0x08       PUSHIB 0x08
0x1FBA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FBC  0x37 0x88 0x03  PUSHIW 0x0388
0x1FBF  0x1A 0x0F       PUSHIB 0x0F
0x1FC1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FC3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "ToKey");                       syscalls.hs:145

0x1FC5  0x37 0x79 0x03  PUSHIW 0x0379
0x1FC8  0x1A 0x08       PUSHIB 0x08
0x1FCA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FCC  0x37 0x97 0x03  PUSHIW 0x0397
0x1FCF  0x1A 0x05       PUSHIB 0x05
0x1FD1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FD3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickX_Get");                  syscalls.hs:147

0x1FD5  0x37 0x79 0x03  PUSHIW 0x0379
0x1FD8  0x1A 0x08       PUSHIB 0x08
0x1FDA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FDC  0x37 0x9C 0x03  PUSHIW 0x039C
0x1FDF  0x1A 0x0A       PUSHIB 0x0A
0x1FE1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FE3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickY_Get");                  syscalls.hs:148

0x1FE5  0x37 0x79 0x03  PUSHIW 0x0379
0x1FE8  0x1A 0x08       PUSHIB 0x08
0x1FEA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FEC  0x37 0xA6 0x03  PUSHIW 0x03A6
0x1FEF  0x1A 0x0A       PUSHIB 0x0A
0x1FF1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FF3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickUp_Get");                 syscalls.hs:149

0x1FF5  0x37 0x79 0x03  PUSHIW 0x0379
0x1FF8  0x1A 0x08       PUSHIB 0x08
0x1FFA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FFC  0x37 0xB0 0x03  PUSHIW 0x03B0
0x1FFF  0x1A 0x0B       PUSHIB 0x0B
0x2001  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2003  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickDouble_Get");             syscalls.hs:150

0x2005  0x37 0x79 0x03  PUSHIW 0x0379
0x2008  0x1A 0x08       PUSHIB 0x08
0x200A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x200C  0x37 0xBB 0x03  PUSHIW 0x03BB
0x200F  0x1A 0x0F       PUSHIB 0x0F
0x2011  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2013  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Keyboard", "ScrollDelta_Get");             syscalls.hs:151

0x2015  0x37 0x79 0x03  PUSHIW 0x0379
0x2018  0x1A 0x08       PUSHIB 0x08
0x201A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x201C  0x37 0xCA 0x03  PUSHIW 0x03CA
0x201F  0x1A 0x0F       PUSHIB 0x0F
0x2021  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2023  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Diagnostics", "OutputDebug");              syscalls.hs:153

0x2025  0x37 0xD9 0x03  PUSHIW 0x03D9
0x2028  0x1A 0x0B       PUSHIB 0x0B
0x202A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x202C  0x37 0xE4 0x03  PUSHIW 0x03E4
0x202F  0x1A 0x0B       PUSHIB 0x0B
0x2031  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2033  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Diagnostics", "Assert");                   syscalls.hs:154

0x2035  0x37 0xD9 0x03  PUSHIW 0x03D9
0x2038  0x1A 0x0B       PUSHIB 0x0B
0x203A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x203C  0x37 0xEF 0x03  PUSHIW 0x03EF
0x203F  0x1A 0x06       PUSHIB 0x06
0x2041  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2043  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Diagnostics", "Die");                      syscalls.hs:155

0x2045  0x37 0xD9 0x03  PUSHIW 0x03D9
0x2048  0x1A 0x0B       PUSHIB 0x0B
0x204A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x204C  0x37 0xF5 0x03  PUSHIW 0x03F5
0x204F  0x1A 0x03       PUSHIB 0x03
0x2051  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2053  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Diagnostics", "SetError");                 syscalls.hs:156

0x2055  0x37 0xD9 0x03  PUSHIW 0x03D9
0x2058  0x1A 0x0B       PUSHIB 0x0B
0x205A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x205C  0x37 0xF8 0x03  PUSHIW 0x03F8
0x205F  0x1A 0x08       PUSHIB 0x08
0x2061  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2063  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Types", "TypeOf");      // gives 'true' type (for instance, "variant" and not the boxed contents of a variant)

0x2065  0x37 0x00 0x04  PUSHIW 0x0400
0x2068  0x1A 0x05       PUSHIB 0x05
0x206A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x206C  0x37 0x05 0x04  PUSHIW 0x0405
0x206F  0x1A 0x06       PUSHIB 0x06
0x2071  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2073  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Types", "ValueTypeOf"); // if the type is a list, dictionary, pair or array, then return its value type

0x2075  0x37 0x00 0x04  PUSHIW 0x0400
0x2078  0x1A 0x05       PUSHIB 0x05
0x207A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x207C  0x37 0x0B 0x04  PUSHIW 0x040B
0x207F  0x1A 0x0B       PUSHIB 0x0B
0x2081  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2083  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Types", "KeyTypeOf");   // if the type is a dictionary then return its key type

0x2085  0x37 0x00 0x04  PUSHIW 0x0400
0x2088  0x1A 0x05       PUSHIB 0x05
0x208A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x208C  0x37 0x16 0x04  PUSHIW 0x0416
0x208F  0x1A 0x09       PUSHIB 0x09
0x2091  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2093  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Types", "BoxTypeOf");   // regular "TypeOf" except for boxed variants where the boxed value type is returned (used for "typeof")

0x2095  0x37 0x00 0x04  PUSHIW 0x0400
0x2098  0x1A 0x05       PUSHIB 0x05
0x209A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x209C  0x37 0x1F 0x04  PUSHIW 0x041F
0x209F  0x1A 0x09       PUSHIB 0x09
0x20A1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20A3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Types", "VerifyValueTypes");               syscalls.hs:162

0x20A5  0x37 0x00 0x04  PUSHIW 0x0400
0x20A8  0x1A 0x05       PUSHIB 0x05
0x20AA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20AC  0x37 0x28 0x04  PUSHIW 0x0428
0x20AF  0x1A 0x10       PUSHIB 0x10
0x20B1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20B3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "Build");                         syscalls.hs:164

0x20B5  0x37 0x4D 0x01  PUSHIW 0x014D
0x20B8  0x1A 0x06       PUSHIB 0x06
0x20BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20BC  0x37 0x38 0x04  PUSHIW 0x0438
0x20BF  0x1A 0x05       PUSHIB 0x05
0x20C1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20C3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("WebServer", "Method_Get");                 syscalls.hs:166

0x20C5  0x37 0x3D 0x04  PUSHIW 0x043D
0x20C8  0x1A 0x09       PUSHIB 0x09
0x20CA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20CC  0x37 0x46 0x04  PUSHIW 0x0446
0x20CF  0x1A 0x0A       PUSHIB 0x0A
0x20D1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20D3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("WebServer", "URL_Get");                    syscalls.hs:167

0x20D5  0x37 0x3D 0x04  PUSHIW 0x043D
0x20D8  0x1A 0x09       PUSHIB 0x09
0x20DA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20DC  0x37 0x50 0x04  PUSHIW 0x0450
0x20DF  0x1A 0x07       PUSHIB 0x07
0x20E1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20E3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("WebServer", "Arguments_Get");              syscalls.hs:168

0x20E5  0x37 0x3D 0x04  PUSHIW 0x043D
0x20E8  0x1A 0x09       PUSHIB 0x09
0x20EA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20EC  0x37 0xD9 0x02  PUSHIW 0x02D9
0x20EF  0x1A 0x0D       PUSHIB 0x0D
0x20F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20F3  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("WebServer", "On");                         syscalls.hs:169

0x20F5  0x37 0x3D 0x04  PUSHIW 0x043D
0x20F8  0x1A 0x09       PUSHIB 0x09
0x20FA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20FC  0x37 0x4F 0x6E  PUSHIW 0x6E4F
0x20FF  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2101  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("WebServer", "Send");                       syscalls.hs:170

0x2103  0x37 0x3D 0x04  PUSHIW 0x043D
0x2106  0x1A 0x09       PUSHIB 0x09
0x2108  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x210A  0x37 0x57 0x04  PUSHIW 0x0457
0x210D  0x1A 0x04       PUSHIB 0x04
0x210F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2111  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("WebServer", "ClearHandlers");              syscalls.hs:171

0x2113  0x37 0x3D 0x04  PUSHIW 0x043D
0x2116  0x1A 0x09       PUSHIB 0x09
0x2118  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x211A  0x37 0x5B 0x04  PUSHIW 0x045B
0x211D  0x1A 0x0D       PUSHIB 0x0D
0x211F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2121  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("HttpClient", "GetRequest");                syscalls.hs:173

0x2123  0x37 0x68 0x04  PUSHIW 0x0468
0x2126  0x1A 0x0A       PUSHIB 0x0A
0x2128  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x212A  0x37 0x72 0x04  PUSHIW 0x0472
0x212D  0x1A 0x0A       PUSHIB 0x0A
0x212F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2131  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "Halted_Get");                   syscalls.hs:175

0x2133  0x37 0x7C 0x04  PUSHIW 0x047C
0x2136  0x1A 0x07       PUSHIB 0x07
0x2138  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x213A  0x37 0x83 0x04  PUSHIW 0x0483
0x213D  0x1A 0x0A       PUSHIB 0x0A
0x213F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2141  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "Halted_Set");                   syscalls.hs:176

0x2143  0x37 0x7C 0x04  PUSHIW 0x047C
0x2146  0x1A 0x07       PUSHIB 0x07
0x2148  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x214A  0x37 0x8D 0x04  PUSHIW 0x048D
0x214D  0x1A 0x0A       PUSHIB 0x0A
0x214F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2151  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "Load");             // used by the windows shell debugger

0x2153  0x37 0x7C 0x04  PUSHIW 0x047C
0x2156  0x1A 0x07       PUSHIB 0x07
0x2158  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x215A  0x37 0x97 0x04  PUSHIW 0x0497
0x215D  0x1A 0x04       PUSHIB 0x04
0x215F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2161  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "BytesLoaded_Get");  // used by the windows shell debugger

0x2163  0x37 0x7C 0x04  PUSHIW 0x047C
0x2166  0x1A 0x07       PUSHIB 0x07
0x2168  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x216A  0x37 0x9B 0x04  PUSHIW 0x049B
0x216D  0x1A 0x0F       PUSHIB 0x0F
0x216F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2171  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "Run");              // used by the windows shell debugger

0x2173  0x37 0x7C 0x04  PUSHIW 0x047C
0x2176  0x1A 0x07       PUSHIB 0x07
0x2178  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x217A  0x37 0x7C 0x04  PUSHIW 0x047C
0x217D  0x1A 0x03       PUSHIB 0x03
0x217F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2181  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "SetVisibility");    // Windows shell debugger: debug child window visible?

0x2183  0x37 0x7C 0x04  PUSHIW 0x047C
0x2186  0x1A 0x07       PUSHIB 0x07
0x2188  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x218A  0x37 0xAA 0x04  PUSHIW 0x04AA
0x218D  0x1A 0x0D       PUSHIB 0x0D
0x218F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2191  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "SetStepping");                  syscalls.hs:181

0x2193  0x37 0x7C 0x04  PUSHIW 0x047C
0x2196  0x1A 0x07       PUSHIB 0x07
0x2198  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x219A  0x37 0xB7 0x04  PUSHIW 0x04B7
0x219D  0x1A 0x0B       PUSHIB 0x0B
0x219F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21A1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "StepInto");                     syscalls.hs:182

0x21A3  0x37 0x7C 0x04  PUSHIW 0x047C
0x21A6  0x1A 0x07       PUSHIB 0x07
0x21A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21AA  0x37 0xC2 0x04  PUSHIW 0x04C2
0x21AD  0x1A 0x08       PUSHIB 0x08
0x21AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21B1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "StepOver");                     syscalls.hs:183

0x21B3  0x37 0x7C 0x04  PUSHIW 0x047C
0x21B6  0x1A 0x07       PUSHIB 0x07
0x21B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21BA  0x37 0xCA 0x04  PUSHIW 0x04CA
0x21BD  0x1A 0x08       PUSHIB 0x08
0x21BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21C1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "StepRun");                      syscalls.hs:184

0x21C3  0x37 0x7C 0x04  PUSHIW 0x047C
0x21C6  0x1A 0x07       PUSHIB 0x07
0x21C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21CA  0x37 0xD2 0x04  PUSHIW 0x04D2
0x21CD  0x1A 0x07       PUSHIB 0x07
0x21CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21D1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "PC_Get");                       syscalls.hs:185

0x21D3  0x37 0x7C 0x04  PUSHIW 0x047C
0x21D6  0x1A 0x07       PUSHIB 0x07
0x21D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21DA  0x37 0xD9 0x04  PUSHIW 0x04D9
0x21DD  0x1A 0x06       PUSHIB 0x06
0x21DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21E1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "Waiting_Get");                  syscalls.hs:186

0x21E3  0x37 0x7C 0x04  PUSHIW 0x047C
0x21E6  0x1A 0x07       PUSHIB 0x07
0x21E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21EA  0x37 0xDF 0x04  PUSHIW 0x04DF
0x21ED  0x1A 0x0B       PUSHIB 0x0B
0x21EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21F1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "ClearBreakpoints");             syscalls.hs:187

0x21F3  0x37 0x7C 0x04  PUSHIW 0x047C
0x21F6  0x1A 0x07       PUSHIB 0x07
0x21F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21FA  0x37 0xEA 0x04  PUSHIW 0x04EA
0x21FD  0x1A 0x10       PUSHIB 0x10
0x21FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2201  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "ClearStatements");              syscalls.hs:188

0x2203  0x37 0x7C 0x04  PUSHIW 0x047C
0x2206  0x1A 0x07       PUSHIB 0x07
0x2208  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x220A  0x37 0xFA 0x04  PUSHIW 0x04FA
0x220D  0x1A 0x0F       PUSHIB 0x0F
0x220F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2211  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "SetBreakpoint");                syscalls.hs:189

0x2213  0x37 0x7C 0x04  PUSHIW 0x047C
0x2216  0x1A 0x07       PUSHIB 0x07
0x2218  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x221A  0x37 0x09 0x05  PUSHIW 0x0509
0x221D  0x1A 0x0D       PUSHIB 0x0D
0x221F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2221  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "SetStatement");                 syscalls.hs:190

0x2223  0x37 0x7C 0x04  PUSHIW 0x047C
0x2226  0x1A 0x07       PUSHIB 0x07
0x2228  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x222A  0x37 0x16 0x05  PUSHIW 0x0516
0x222D  0x1A 0x0C       PUSHIB 0x0C
0x222F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2231  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "SP_Get");                       syscalls.hs:191

0x2233  0x37 0x7C 0x04  PUSHIW 0x047C
0x2236  0x1A 0x07       PUSHIB 0x07
0x2238  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x223A  0x37 0x22 0x05  PUSHIW 0x0522
0x223D  0x1A 0x06       PUSHIB 0x06
0x223F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2241  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "BP_Get");                       syscalls.hs:192

0x2243  0x37 0x7C 0x04  PUSHIW 0x047C
0x2246  0x1A 0x07       PUSHIB 0x07
0x2248  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x224A  0x37 0x28 0x05  PUSHIW 0x0528
0x224D  0x1A 0x06       PUSHIB 0x06
0x224F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2251  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "CSP_Get");                      syscalls.hs:193

0x2253  0x37 0x7C 0x04  PUSHIW 0x047C
0x2256  0x1A 0x07       PUSHIB 0x07
0x2258  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x225A  0x37 0x2E 0x05  PUSHIW 0x052E
0x225D  0x1A 0x07       PUSHIB 0x07
0x225F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2261  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "GetStackWord");                 syscalls.hs:194

0x2263  0x37 0x7C 0x04  PUSHIW 0x047C
0x2266  0x1A 0x07       PUSHIB 0x07
0x2268  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x226A  0x37 0x35 0x05  PUSHIW 0x0535
0x226D  0x1A 0x0C       PUSHIB 0x0C
0x226F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2271  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "GetStackVariant");              syscalls.hs:195

0x2273  0x37 0x7C 0x04  PUSHIW 0x047C
0x2276  0x1A 0x07       PUSHIB 0x07
0x2278  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x227A  0x37 0x41 0x05  PUSHIW 0x0541
0x227D  0x1A 0x0F       PUSHIB 0x0F
0x227F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2281  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "GetStackType");                 syscalls.hs:196

0x2283  0x37 0x7C 0x04  PUSHIW 0x047C
0x2286  0x1A 0x07       PUSHIB 0x07
0x2288  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x228A  0x37 0x50 0x05  PUSHIW 0x0550
0x228D  0x1A 0x0C       PUSHIB 0x0C
0x228F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2291  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Runtime", "GetCallStackWord");             syscalls.hs:197

0x2293  0x37 0x7C 0x04  PUSHIW 0x047C
0x2296  0x1A 0x07       PUSHIB 0x07
0x2298  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x229A  0x37 0x5C 0x05  PUSHIW 0x055C
0x229D  0x1A 0x10       PUSHIB 0x10
0x229F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22A1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Serial", "Connect");                       syscalls.hs:199

0x22A3  0x37 0x6C 0x05  PUSHIW 0x056C
0x22A6  0x1A 0x06       PUSHIB 0x06
0x22A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22AA  0x37 0x72 0x05  PUSHIW 0x0572
0x22AD  0x1A 0x07       PUSHIB 0x07
0x22AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22B1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Serial", "Close");                         syscalls.hs:200

0x22B3  0x37 0x6C 0x05  PUSHIW 0x056C
0x22B6  0x1A 0x06       PUSHIB 0x06
0x22B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22BA  0x37 0x79 0x05  PUSHIW 0x0579
0x22BD  0x1A 0x05       PUSHIB 0x05
0x22BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22C1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Serial", "IsValid");                       syscalls.hs:201

0x22C3  0x37 0x6C 0x05  PUSHIW 0x056C
0x22C6  0x1A 0x06       PUSHIB 0x06
0x22C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22CA  0x37 0x43 0x03  PUSHIW 0x0343
0x22CD  0x1A 0x07       PUSHIB 0x07
0x22CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22D1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Serial", "IsAvailable_Get");               syscalls.hs:202

0x22D3  0x37 0x6C 0x05  PUSHIW 0x056C
0x22D6  0x1A 0x06       PUSHIB 0x06
0x22D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22DA  0x37 0x88 0x03  PUSHIW 0x0388
0x22DD  0x1A 0x0F       PUSHIB 0x0F
0x22DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22E1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Serial", "ReadChar");                      syscalls.hs:203

0x22E3  0x37 0x6C 0x05  PUSHIW 0x056C
0x22E6  0x1A 0x06       PUSHIB 0x06
0x22E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22EA  0x37 0x7E 0x05  PUSHIW 0x057E
0x22ED  0x1A 0x08       PUSHIB 0x08
0x22EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22F1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Serial", "WriteChar");                     syscalls.hs:204

0x22F3  0x37 0x6C 0x05  PUSHIW 0x056C
0x22F6  0x1A 0x06       PUSHIB 0x06
0x22F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22FA  0x37 0x86 0x05  PUSHIW 0x0586
0x22FD  0x1A 0x09       PUSHIB 0x09
0x22FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2301  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Hardware", "LED_Set");                     syscalls.hs:206

0x2303  0x37 0x8F 0x05  PUSHIW 0x058F
0x2306  0x1A 0x08       PUSHIB 0x08
0x2308  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x230A  0x37 0x97 0x05  PUSHIW 0x0597
0x230D  0x1A 0x07       PUSHIB 0x07
0x230F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2311  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "ReadByte");                      syscalls.hs:208

0x2313  0x37 0x9E 0x05  PUSHIW 0x059E
0x2316  0x1A 0x06       PUSHIB 0x06
0x2318  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x231A  0x37 0xA4 0x05  PUSHIW 0x05A4
0x231D  0x1A 0x08       PUSHIB 0x08
0x231F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2321  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "WriteByte");                     syscalls.hs:209

0x2323  0x37 0x9E 0x05  PUSHIW 0x059E
0x2326  0x1A 0x06       PUSHIB 0x06
0x2328  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x232A  0x37 0xAC 0x05  PUSHIW 0x05AC
0x232D  0x1A 0x09       PUSHIB 0x09
0x232F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2331  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "Available");                     syscalls.hs:210

0x2333  0x37 0x9E 0x05  PUSHIW 0x059E
0x2336  0x1A 0x06       PUSHIB 0x06
0x2338  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x233A  0x37 0x8A 0x03  PUSHIW 0x038A
0x233D  0x1A 0x09       PUSHIB 0x09
0x233F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2341  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "Maximum");                       syscalls.hs:211

0x2343  0x37 0x9E 0x05  PUSHIW 0x059E
0x2346  0x1A 0x06       PUSHIB 0x06
0x2348  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x234A  0x37 0xB5 0x05  PUSHIW 0x05B5
0x234D  0x1A 0x07       PUSHIB 0x07
0x234F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2351  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "Allocate");                      syscalls.hs:212

0x2353  0x37 0x9E 0x05  PUSHIW 0x059E
0x2356  0x1A 0x06       PUSHIB 0x06
0x2358  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x235A  0x37 0xBC 0x05  PUSHIW 0x05BC
0x235D  0x1A 0x08       PUSHIB 0x08
0x235F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2361  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "Free");                          syscalls.hs:213

0x2363  0x37 0x9E 0x05  PUSHIW 0x059E
0x2366  0x1A 0x06       PUSHIB 0x06
0x2368  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x236A  0x37 0xC4 0x05  PUSHIW 0x05C4
0x236D  0x1A 0x04       PUSHIB 0x04
0x236F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2371  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "Trace_Set");                     syscalls.hs:215

0x2373  0x37 0xD3 0x02  PUSHIW 0x02D3
0x2376  0x1A 0x06       PUSHIB 0x06
0x2378  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x237A  0x37 0xC8 0x05  PUSHIW 0x05C8
0x237D  0x1A 0x09       PUSHIB 0x09
0x237F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2381  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "Trace_Get");                     syscalls.hs:216

0x2383  0x37 0xD3 0x02  PUSHIW 0x02D3
0x2386  0x1A 0x06       PUSHIB 0x06
0x2388  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x238A  0x37 0xD1 0x05  PUSHIW 0x05D1
0x238D  0x1A 0x09       PUSHIB 0x09
0x238F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2391  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Dictionary", "HashKey");                   syscalls.hs:218

0x2393  0x37 0xF0 0x01  PUSHIW 0x01F0
0x2396  0x1A 0x0A       PUSHIB 0x0A
0x2398  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x239A  0x37 0xDA 0x05  PUSHIW 0x05DA
0x239D  0x1A 0x07       PUSHIB 0x07
0x239F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23A1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Clipboard", "HasText_Get");                syscalls.hs:220

0x23A3  0x37 0xE1 0x05  PUSHIW 0x05E1
0x23A6  0x1A 0x09       PUSHIB 0x09
0x23A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23AA  0x37 0xEA 0x05  PUSHIW 0x05EA
0x23AD  0x1A 0x0B       PUSHIB 0x0B
0x23AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23B1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Clipboard", "GetText");                    syscalls.hs:221

0x23B3  0x37 0xE1 0x05  PUSHIW 0x05E1
0x23B6  0x1A 0x09       PUSHIB 0x09
0x23B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23BA  0x37 0xF5 0x05  PUSHIW 0x05F5
0x23BD  0x1A 0x07       PUSHIB 0x07
0x23BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23C1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Clipboard", "SetText");                    syscalls.hs:222

0x23C3  0x37 0xE1 0x05  PUSHIW 0x05E1
0x23C6  0x1A 0x09       PUSHIB 0x09
0x23C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23CA  0x37 0xFC 0x05  PUSHIW 0x05FC
0x23CD  0x1A 0x07       PUSHIB 0x07
0x23CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23D1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "BuildFront");                    syscalls.hs:224

0x23D3  0x37 0x4D 0x01  PUSHIW 0x014D
0x23D6  0x1A 0x06       PUSHIB 0x06
0x23D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23DA  0x37 0x03 0x06  PUSHIW 0x0603
0x23DD  0x1A 0x0A       PUSHIB 0x0A
0x23DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23E1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "ReadBit");                       syscalls.hs:226

0x23E3  0x37 0x9E 0x05  PUSHIW 0x059E
0x23E6  0x1A 0x06       PUSHIB 0x06
0x23E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23EA  0x37 0x0D 0x06  PUSHIW 0x060D
0x23ED  0x1A 0x07       PUSHIB 0x07
0x23EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23F1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Memory", "WriteBit");                      syscalls.hs:227

0x23F3  0x37 0x9E 0x05  PUSHIW 0x059E
0x23F6  0x1A 0x06       PUSHIB 0x06
0x23F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23FA  0x37 0x14 0x06  PUSHIW 0x0614
0x23FD  0x1A 0x08       PUSHIB 0x08
0x23FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2401  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "ToUpper");                         syscalls.hs:229

0x2403  0x37 0x69 0x01  PUSHIW 0x0169
0x2406  0x1A 0x04       PUSHIB 0x04
0x2408  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x240A  0x37 0x1C 0x06  PUSHIW 0x061C
0x240D  0x1A 0x07       PUSHIB 0x07
0x240F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2411  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "IsUpper");                         syscalls.hs:230

0x2413  0x37 0x69 0x01  PUSHIW 0x0169
0x2416  0x1A 0x04       PUSHIB 0x04
0x2418  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x241A  0x37 0x23 0x06  PUSHIW 0x0623
0x241D  0x1A 0x07       PUSHIB 0x07
0x241F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2421  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "IsDigit");                         syscalls.hs:231

0x2423  0x37 0x69 0x01  PUSHIW 0x0169
0x2426  0x1A 0x04       PUSHIB 0x04
0x2428  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x242A  0x37 0x2A 0x06  PUSHIW 0x062A
0x242D  0x1A 0x07       PUSHIB 0x07
0x242F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2431  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "IsLetterOrDigit");                 syscalls.hs:232

0x2433  0x37 0x69 0x01  PUSHIW 0x0169
0x2436  0x1A 0x04       PUSHIB 0x04
0x2438  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x243A  0x37 0x31 0x06  PUSHIW 0x0631
0x243D  0x1A 0x0F       PUSHIB 0x0F
0x243F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2441  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "IsLower");                         syscalls.hs:233

0x2443  0x37 0x69 0x01  PUSHIW 0x0169
0x2446  0x1A 0x04       PUSHIB 0x04
0x2448  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x244A  0x37 0x40 0x06  PUSHIW 0x0640
0x244D  0x1A 0x07       PUSHIB 0x07
0x244F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2451  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "ToDigit");                         syscalls.hs:234

0x2453  0x37 0x69 0x01  PUSHIW 0x0169
0x2456  0x1A 0x04       PUSHIB 0x04
0x2458  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x245A  0x37 0x47 0x06  PUSHIW 0x0647
0x245D  0x1A 0x07       PUSHIB 0x07
0x245F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2461  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "ToHex");                           syscalls.hs:235

0x2463  0x37 0x69 0x01  PUSHIW 0x0169
0x2466  0x1A 0x04       PUSHIB 0x04
0x2468  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x246A  0x37 0x4E 0x06  PUSHIW 0x064E
0x246D  0x1A 0x05       PUSHIB 0x05
0x246F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2471  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "IsHexDigit");                      syscalls.hs:236

0x2473  0x37 0x69 0x01  PUSHIW 0x0169
0x2476  0x1A 0x04       PUSHIB 0x04
0x2478  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x247A  0x37 0x53 0x06  PUSHIW 0x0653
0x247D  0x1A 0x0A       PUSHIB 0x0A
0x247F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2481  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Char", "ToLower");                         syscalls.hs:237

0x2483  0x37 0x69 0x01  PUSHIW 0x0169
0x2486  0x1A 0x04       PUSHIB 0x04
0x2488  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x248A  0x37 0x5D 0x06  PUSHIW 0x065D
0x248D  0x1A 0x07       PUSHIB 0x07
0x248F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2491  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "StartsWith");                    syscalls.hs:239

0x2493  0x37 0x4D 0x01  PUSHIW 0x014D
0x2496  0x1A 0x06       PUSHIB 0x06
0x2498  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x249A  0x37 0x64 0x06  PUSHIW 0x0664
0x249D  0x1A 0x0A       PUSHIB 0x0A
0x249F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24A1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "Contains");                      syscalls.hs:240

0x24A3  0x37 0x4D 0x01  PUSHIW 0x014D
0x24A6  0x1A 0x06       PUSHIB 0x06
0x24A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24AA  0x37 0xE8 0x01  PUSHIW 0x01E8
0x24AD  0x1A 0x08       PUSHIB 0x08
0x24AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24B1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("String", "IndexOf");                       syscalls.hs:241

0x24B3  0x37 0x4D 0x01  PUSHIW 0x014D
0x24B6  0x1A 0x06       PUSHIB 0x06
0x24B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24BA  0x37 0x6E 0x06  PUSHIW 0x066E
0x24BD  0x1A 0x07       PUSHIB 0x07
0x24BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24C1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "Warp_Set");                      syscalls.hs:243

0x24C3  0x37 0xD3 0x02  PUSHIW 0x02D3
0x24C6  0x1A 0x06       PUSHIB 0x06
0x24C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24CA  0x37 0x75 0x06  PUSHIW 0x0675
0x24CD  0x1A 0x08       PUSHIB 0x08
0x24CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24D1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("System", "Warp_Get");                      syscalls.hs:244

0x24D3  0x37 0xD3 0x02  PUSHIW 0x02D3
0x24D6  0x1A 0x06       PUSHIB 0x06
0x24D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24DA  0x37 0x7D 0x06  PUSHIW 0x067D
0x24DD  0x1A 0x08       PUSHIB 0x08
0x24DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24E1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // addEntry("Time", "Delay");                           syscalls.hs:246

0x24E3  0x37 0xBB 0x02  PUSHIW 0x02BB
0x24E6  0x1A 0x04       PUSHIB 0x04
0x24E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24EA  0x37 0x85 0x06  PUSHIW 0x0685
0x24ED  0x1A 0x05       PUSHIB 0x05
0x24EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24F1  0x2C 0x80       CALLB 0x80     // SysCalls.addEntry

                        // }                                                    syscalls.hs:247

0x24F3  0x4A            RET0


// /source/compiler/tokens/syscalls.hs:6
// ####  SysCalls.addEntry(..)  ####                                            0x0080

0x24F4  0x49            ENTER

                        // syscalls[unitName + '.' + methodName] = byte(syscalls.Count);

0x24F5  0x20 0x46       PUSHGLOBALB 0x46
0x24F7  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x24F9  0x1A 0x2E       PUSHIB 0x2E
0x24FB  0x25 0x03       SYSCALL1 0x03  // String.Append
0x24FD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x24FF  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2501  0x20 0x46       PUSHGLOBALB 0x46
0x2503  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2505  0x51 0x03       CAST 0x03
0x2507  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    syscalls.hs:8

0x2509  0x2A 0x04       RETB 0x04


// /source/system/string.hs:489
// ####  String.ToLower(..)  ####                                               0x00DC


                        // uint i;                                              string.hs:490

0x250B  0x5F 0x03       ENTERB 0x03

                        // string result;                                       string.hs:493

0x250D  0x24 0x02       SYSCALL0 0x02  // String.New

                        // length = this.Length;                                string.hs:494

0x250F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2511  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2513  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // for (; i < length; i++)                              string.hs:495

0x2515  0x4E            PUSHLOCALB00
0x2516  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2518  0x08            LT
0x2519  0x2E 0x13       JZB 0x252C (+19)

                        // c = this[i];                                         string.hs:497

0x251B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x251D  0x4E            PUSHLOCALB00
0x251E  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2520  0x4D            POPLOCALB02

                        // Build(ref result, c.ToLower());                      string.hs:498

0x2521  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x2523  0x4F            PUSHLOCALB02
0x2524  0x2C 0xA5       CALLB 0xA5     // Char.ToLower
0x2526  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // }                                                    string.hs:499

0x2528  0x22 0x00       INCLOCALB 0x00 (BP+0)
0x252A  0x30 0xEB       JB 0x2515 (-21)

                        // return result;                                       string.hs:500

0x252C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x252E  0x2B 0x0A       RETRETB 0x0A


// /source/system/string.hs:438
// ####  String.Pad(..)  ####                                                   0x00D9


                        // uint length;                                         string.hs:439

0x2530  0x5F 0x02       ENTERB 0x02

                        // string result;                                       string.hs:441

0x2532  0x24 0x02       SYSCALL0 0x02  // String.New

                        // result = this;                                       string.hs:442

0x2534  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x2536  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // length = this.Length;                                string.hs:443

0x2538  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x253A  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x253C  0x4C            POPLOCALB00

                        // if (width > length)                                  string.hs:444

0x253D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x253F  0x4E            PUSHLOCALB00
0x2540  0x07            GT
0x2541  0x2E 0x16       JZB 0x2557 (+22)

                        // padding = width - length;                            string.hs:446

0x2543  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2545  0x4E            PUSHLOCALB00
0x2546  0x01            SUB
0x2547  0x4D            POPLOCALB02

                        // while (padding > 0)                                  string.hs:447

0x2548  0x4F            PUSHLOCALB02
0x2549  0x44            PUSHI0
0x254A  0x07            GT
0x254B  0x2E 0x0C       JZB 0x2557 (+12)

                        // String.Build(ref result, append);                    string.hs:449

0x254D  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x254F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2551  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // padding--;                                           string.hs:450

0x2553  0x23 0x02       DECLOCALB 0x02 (BP+2)

                        // }                                                    string.hs:451

0x2555  0x30 0xF3       JB 0x2548 (-13)

                        // return result;                                       string.hs:453

0x2557  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2559  0x2B 0x0C       RETRETB 0x0C


// /source/system/string.hs:504
// ####  String.Trim(..)  ####                                                  0x00DD


                        // uint thisLength;                                     string.hs:505

0x255B  0x5F 0x06       ENTERB 0x06

                        // string result;                                       string.hs:511

0x255D  0x24 0x02       SYSCALL0 0x02  // String.New

                        // thisLength = this.Length;                            string.hs:512

0x255F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2561  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2563  0x4C            POPLOCALB00

                        // if (thisLength > 0)                                  string.hs:513

0x2564  0x4E            PUSHLOCALB00
0x2565  0x44            PUSHI0
0x2566  0x07            GT
0x2567  0x2E 0x65       JZB 0x25CC (+101)

                        // for (; i < thisLength; i++)                          string.hs:515

0x2569  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x256B  0x4E            PUSHLOCALB00
0x256C  0x08            LT
0x256D  0x2E 0x18       JZB 0x2585 (+24)

                        // if (this[i] != ' ')                                  string.hs:517

0x256F  0x56 0xFE 0x06  PUSHLOCALBB 0x06FE
0x2572  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2574  0x1A 0x20       PUSHIB 0x20
0x2576  0x06            NE
0x2577  0x2E 0x0A       JZB 0x2581 (+10)

                        // iFirstNonSpace = i;                                  string.hs:519

0x2579  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x257B  0x4D            POPLOCALB02

                        // firstFound = true;                                   string.hs:520

0x257C  0x45            PUSHI1
0x257D  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // break;                                               string.hs:521

0x257F  0x30 0x06       JB 0x2585 (+6)

                        // }                                                    string.hs:523

0x2581  0x22 0x06       INCLOCALB 0x06 (BP+6)
0x2583  0x30 0xE6       JB 0x2569 (-26)

                        // if (firstFound)                                      string.hs:524

0x2585  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2587  0x2E 0x45       JZB 0x25CC (+69)

                        // for ( i=thisLength-1; i > 0; i--)                    string.hs:526

0x2589  0x4E            PUSHLOCALB00
0x258A  0x45            PUSHI1
0x258B  0x01            SUB
0x258C  0x1B 0x06       POPLOCALB 0x06 (BP+6)
0x258E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2590  0x44            PUSHI0
0x2591  0x07            GT
0x2592  0x2E 0x16       JZB 0x25A8 (+22)

                        // if (this[i] != ' ')                                  string.hs:528

0x2594  0x56 0xFE 0x06  PUSHLOCALBB 0x06FE
0x2597  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2599  0x1A 0x20       PUSHIB 0x20
0x259B  0x06            NE
0x259C  0x2E 0x08       JZB 0x25A4 (+8)

                        // iLastNonSpace = i;                                   string.hs:530

0x259E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x25A0  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // break;                                               string.hs:532

0x25A2  0x30 0x06       JB 0x25A8 (+6)

                        // }                                                    string.hs:534

0x25A4  0x23 0x06       DECLOCALB 0x06 (BP+6)
0x25A6  0x30 0xE8       JB 0x258E (-24)

                        // count = iLastNonSpace-iFirstNonSpace+1;              string.hs:535

0x25A8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x25AA  0x4F            PUSHLOCALB02
0x25AB  0x01            SUB
0x25AC  0x45            PUSHI1
0x25AD  0x00            ADD
0x25AE  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // i = iFirstNonSpace;                                  string.hs:536

0x25B0  0x4F            PUSHLOCALB02
0x25B1  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (i == thisLength)                                 string.hs:539

0x25B3  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x25B5  0x4E            PUSHLOCALB00
0x25B6  0x05            EQ
0x25B7  0x2F 0x15       JNZB 0x25CC (+21)

                        // if (count == 0)                                      string.hs:543

0x25B9  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x25BB  0x2E 0x11       JZB 0x25CC (+17)

                        // String.Build(ref result, this[i]);                   string.hs:547

0x25BD  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x25BF  0x56 0xFE 0x06  PUSHLOCALBB 0x06FE
0x25C2  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x25C4  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // i++;                                                 string.hs:548

0x25C6  0x22 0x06       INCLOCALB 0x06 (BP+6)

                        // count--;                                             string.hs:549

0x25C8  0x23 0x08       DECLOCALB 0x08 (BP+8)

                        // }                                                    string.hs:550

0x25CA  0x30 0xE9       JB 0x25B3 (-23)

                        // return result;                                       string.hs:553

0x25CC  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x25CE  0x2B 0x10       RETRETB 0x10


// /source/compiler/tokens/token.hs:320
// ####  Token.TryParseUInt(..)  ####                                           0x0066


                        // bool success;                                        token.hs:321

0x25D0  0x5F 0x01       ENTERB 0x01

                        // long rv;                                             token.hs:322

0x25D2  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (TryParseLong(content, ref rv))                   token.hs:323

0x25D4  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x25D6  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x25D8  0x2C 0x64       CALLB 0x64     // Token.TryParseLong
0x25DA  0x2E 0x1E       JZB 0x25F8 (+30)

                        // if ((rv >= 0) && (rv <= 65535))                      token.hs:325

0x25DC  0x4F            PUSHLOCALB02
0x25DD  0x44            PUSHI0
0x25DE  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x25E0  0x24 0x48       SYSCALL0 0x48  // Long.GE
0x25E2  0x27 0x00       DUP 0x00
0x25E4  0x2E 0x0B       JZB 0x25EF (+11)
0x25E6  0x4F            PUSHLOCALB02
0x25E7  0x37 0xFF 0xFF  PUSHIW 0xFFFF
0x25EA  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x25EC  0x24 0x46       SYSCALL0 0x46  // Long.LE
0x25EE  0x0C            BOOLAND
0x25EF  0x2E 0x09       JZB 0x25F8 (+9)

                        // returnValue = uint(rv);                              token.hs:327

0x25F1  0x4F            PUSHLOCALB02
0x25F2  0x24 0x3C       SYSCALL0 0x3C  // Long.ToUInt
0x25F4  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // success = true;                                      token.hs:328

0x25F6  0x45            PUSHI1
0x25F7  0x4C            POPLOCALB00

                        // return success;                                      token.hs:331

0x25F8  0x4E            PUSHLOCALB00
0x25F9  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/token.hs:273
// ####  Token.TryParseLong(..)  ####                                           0x0064

0x25FB  0x49            ENTER

                        // long result;                                         token.hs:274

0x25FC  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // bool makeNegative;                                   token.hs:275

0x25FE  0x44            PUSHI0

                        // if (content.Length < 1)                              token.hs:276

0x25FF  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2601  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2603  0x45            PUSHI1
0x2604  0x08            LT
0x2605  0x2E 0x05       JZB 0x260A (+5)

                        // return false;                                        token.hs:278

0x2607  0x44            PUSHI0
0x2608  0x2B 0x08       RETRETB 0x08

                        // if (content.StartsWith('+'))                         token.hs:280

0x260A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x260C  0x1A 0x2B       PUSHIB 0x2B
0x260E  0x2C 0xCE       CALLB 0xCE     // String.StartsWith
0x2610  0x2E 0x0B       JZB 0x261B (+11)

                        // content = content.Substring(1);                      token.hs:282

0x2612  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2614  0x45            PUSHI1
0x2615  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2617  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // }                                                    token.hs:283

0x2619  0x30 0x13       JB 0x262C (+19)

                        // else if (content.StartsWith('-'))                    token.hs:284

0x261B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x261D  0x1A 0x2D       PUSHIB 0x2D
0x261F  0x2C 0xCE       CALLB 0xCE     // String.StartsWith
0x2621  0x2E 0x0B       JZB 0x262C (+11)

                        // content = content.Substring(1);                      token.hs:286

0x2623  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2625  0x45            PUSHI1
0x2626  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2628  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // makeNegative = true;                                 token.hs:287

0x262A  0x45            PUSHI1
0x262B  0x4D            POPLOCALB02

                        // foreach (var c in content)                           token.hs:289

0x262C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x262E  0x44            PUSHI0
0x262F  0x44            PUSHI0
0x2630  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2632  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2634  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2636  0x05            EQ
0x2637  0x2F 0x29       JNZB 0x2660 (+41)
0x2639  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x263C  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x263E  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // result = result * 10;                                token.hs:291

0x2640  0x4E            PUSHLOCALB00
0x2641  0x1A 0x0A       PUSHIB 0x0A
0x2643  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x2645  0x24 0x42       SYSCALL0 0x42  // Long.Mul
0x2647  0x5D            POPCOPYLOCALB00

                        // if (!c.IsDigit())                                    token.hs:292

0x2648  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x264A  0x2C 0xA2       CALLB 0xA2     // Char.IsDigit
0x264C  0x2F 0x05       JNZB 0x2651 (+5)

                        // return false;                                        token.hs:294

0x264E  0x44            PUSHI0
0x264F  0x2B 0x0E       RETRETB 0x0E

                        // result = result + (byte(c) - 48); // 48 is ASCII for '0'

0x2651  0x4E            PUSHLOCALB00
0x2652  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2654  0x1A 0x30       PUSHIB 0x30
0x2656  0x01            SUB
0x2657  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x2659  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x265B  0x5D            POPCOPYLOCALB00

                        // }                                                    token.hs:297

0x265C  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x265E  0x30 0xD2       JB 0x2630 (-46)
0x2660  0x28 0x06       DECSP 0x06

                        // if (makeNegative)                                    token.hs:298

0x2662  0x4F            PUSHLOCALB02
0x2663  0x2E 0x06       JZB 0x2669 (+6)

                        // result = -result;                                    token.hs:300

0x2665  0x4E            PUSHLOCALB00
0x2666  0x24 0x49       SYSCALL0 0x49  // Long.Negate
0x2668  0x5D            POPCOPYLOCALB00

                        // returnValue = result;                                token.hs:302

0x2669  0x4E            PUSHLOCALB00
0x266A  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // return true;                                         token.hs:303

0x266C  0x45            PUSHI1
0x266D  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/parser.hs:27
// ####  Parser.SetInteractive(..)  ####                                        0x0085

0x266F  0x49            ENTER

                        // tickColumn = column;                                 parser.hs:28

0x2670  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2672  0x1F 0x58       POPGLOBALB 0x58

                        // tickRow = row;                                       parser.hs:29

0x2674  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2676  0x1F 0x56       POPGLOBALB 0x56

                        // interactive = true;                                  parser.hs:30

0x2678  0x45            PUSHI1
0x2679  0x1F 0x4E       POPGLOBALB 0x4E

                        // File.Delete(errorPath);                              parser.hs:31

0x267B  0x37 0x8A 0x06  PUSHIW 0x068A
0x267E  0x1A 0x10       PUSHIB 0x10
0x2680  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2682  0x24 0x68       SYSCALL0 0x68  // File.Delete

                        // errorFile = File.Create(errorPath);                  parser.hs:32

0x2684  0x37 0x8A 0x06  PUSHIW 0x068A
0x2687  0x1A 0x10       PUSHIB 0x10
0x2689  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x268B  0x24 0x62       SYSCALL0 0x62  // File.Create
0x268D  0x59 0x52       POPCOPYGLOBALB 0x52

                        // currentTick = 0;                                     parser.hs:33

0x268F  0x44            PUSHI0
0x2690  0x1F 0x54       POPGLOBALB 0x54

                        // Diagnostics.SetError(0x00);                          parser.hs:34

0x2692  0x44            PUSHI0
0x2693  0x24 0x7D       SYSCALL0 0x7D  // Diagnostics.SetError

                        // }                                                    parser.hs:35

0x2695  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:57
// ####  Parser.ProgressTick(..)  ####                                          0x0088

0x2697  0x49            ENTER

                        // if (IsInteractive())                                 parser.hs:58

0x2698  0x2C 0x86       CALLB 0x86     // Parser.IsInteractive
0x269A  0x2E 0x26       JZB 0x26C0 (+38)

                        // char c = progressTicks[currentTick];                 parser.hs:60

0x269C  0x44            PUSHI0
0x269D  0x52 0x50 0x54  PUSHGLOBALBB 0x5450
0x26A0  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x26A2  0x4C            POPLOCALB00

                        // DrawChar(tickColumn, tickRow, c, Color.StatusText, Color.StatusFace);

0x26A3  0x52 0x58 0x56  PUSHGLOBALBB 0x5658
0x26A6  0x4E            PUSHLOCALB00
0x26A7  0x34 0x3F 0x01  CALLW 0x013F   // Color.StatusText_Get
0x26AA  0x34 0x3E 0x01  CALLW 0x013E   // Color.StatusFace_Get
0x26AD  0x24 0x33       SYSCALL0 0x33  // Screen.DrawChar

                        // currentTick++;                                       parser.hs:62

0x26AF  0x53 0x54       INCGLOBALB 0x54

                        // if (currentTick == progressTicks.Length)             parser.hs:63

0x26B1  0x52 0x54 0x50  PUSHGLOBALBB 0x5054
0x26B4  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x26B6  0x05            EQ
0x26B7  0x2E 0x05       JZB 0x26BC (+5)

                        // currentTick = 0;                                     parser.hs:65

0x26B9  0x44            PUSHI0
0x26BA  0x1F 0x54       POPGLOBALB 0x54

                        // }                                                    parser.hs:67

0x26BC  0x28 0x02       DECSP 0x02
0x26BE  0x2A 0x02       RETB 0x02

                        // Print(str, Color.ProgressTick, Color.ProgressBackground);

0x26C0  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x26C2  0x34 0x2B 0x01  CALLW 0x012B   // Color.ProgressTick_Get
0x26C5  0x34 0x2C 0x01  CALLW 0x012C   // Color.ProgressBackground_Get
0x26C8  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // }                                                    parser.hs:72

0x26CA  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:37
// ####  Parser.IsInteractive(..)  ####                                         0x0086

0x26CC  0x49            ENTER

                        // return interactive;                                  parser.hs:38

0x26CD  0x20 0x4E       PUSHGLOBALB 0x4E
0x26CF  0x4A            RET0


// /source/compiler/tokens/parser.hs:74
// ####  Parser.ProgressDone(..)  ####                                          0x0089

0x26D0  0x49            ENTER

                        // if (IsInteractive())                                 parser.hs:75

0x26D1  0x2C 0x86       CALLB 0x86     // Parser.IsInteractive
0x26D3  0x2E 0x0F       JZB 0x26E2 (+15)

                        // DrawChar(tickColumn, tickRow, ' ', Color.ProgressText, Color.ProgressFace);

0x26D5  0x52 0x58 0x56  PUSHGLOBALBB 0x5658
0x26D8  0x1A 0x20       PUSHIB 0x20
0x26DA  0x34 0x2D 0x01  CALLW 0x012D   // Color.ProgressText_Get
0x26DD  0x34 0x2E 0x01  CALLW 0x012E   // Color.ProgressFace_Get
0x26E0  0x24 0x33       SYSCALL0 0x33  // Screen.DrawChar

                        // }                                                    parser.hs:79

0x26E2  0x4A            RET0


// /source/system/file.hs:18
// ####  File.Exists(..)  ####                                                  0x0100

0x26E3  0x49            ENTER

                        // if (!File.Exists(filePath))                          file.hs:19

0x26E4  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x26E6  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x26E8  0x2F 0x4C       JNZB 0x2734 (+76)

                        // string rawPath = filePath;                           file.hs:21

0x26EA  0x24 0x02       SYSCALL0 0x02  // String.New
0x26EC  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x26EE  0x5D            POPCOPYLOCALB00

                        // string ext = Path.GetExtension(rawPath);             file.hs:22

0x26EF  0x24 0x02       SYSCALL0 0x02  // String.New
0x26F1  0x4E            PUSHLOCALB00
0x26F2  0x34 0x05 0x01  CALLW 0x0105   // Path.GetExtension
0x26F5  0x5E            POPCOPYLOCALB02

                        // if (ext == ".")                                      file.hs:23

0x26F6  0x4F            PUSHLOCALB02
0x26F7  0x1A 0x2E       PUSHIB 0x2E
0x26F9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x26FB  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x26FD  0x2F 0x24       JNZB 0x2721 (+36)

                        // filePath = rawPath + extension;                      file.hs:26

0x26FF  0x4E            PUSHLOCALB00
0x2700  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x2702  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2704  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (!File.Exists(filePath))                          file.hs:27

0x2706  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2708  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x270A  0x2F 0x28       JNZB 0x2732 (+40)

                        // filePath = Path.Combine(searchFolder, rawPath + extension);

0x270C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x270E  0x4E            PUSHLOCALB00
0x270F  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x2711  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2713  0x34 0x04 0x01  CALLW 0x0104   // Path.Combine
0x2716  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (!File.Exists(filePath))                          file.hs:31

0x2718  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x271A  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x271C  0x2F 0x16       JNZB 0x2732 (+22)

                        // return false;                                        file.hs:33

0x271E  0x44            PUSHI0
0x271F  0x2B 0x0A       RETRETB 0x0A

                        // filePath = Path.Combine(searchFolder, rawPath);

0x2721  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2723  0x4E            PUSHLOCALB00
0x2724  0x34 0x04 0x01  CALLW 0x0104   // Path.Combine
0x2727  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (!File.Exists(filePath))                          file.hs:41

0x2729  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x272B  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x272D  0x2F 0x05       JNZB 0x2732 (+5)

                        // return false;                                        file.hs:43

0x272F  0x44            PUSHI0
0x2730  0x2B 0x0A       RETRETB 0x0A

                        // }                                                    file.hs:46

0x2732  0x28 0x04       DECSP 0x04

                        // extension = Path.GetExtension(filePath);             file.hs:47

0x2734  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2736  0x34 0x05 0x01  CALLW 0x0105   // Path.GetExtension
0x2739  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // return true;                                         file.hs:48

0x273B  0x45            PUSHI1
0x273C  0x2B 0x06       RETRETB 0x06


// /source/system/path.hs:94
// ####  Path.GetExtension(..)  ####                                            0x0105


                        // uint iDot;                                           path.hs:95

0x273E  0x5F 0x02       ENTERB 0x02

                        // string extension;                                    path.hs:98

0x2740  0x24 0x02       SYSCALL0 0x02  // String.New

                        // extension = "."; // empty "."                        path.hs:101

0x2742  0x1A 0x2E       PUSHIB 0x2E
0x2744  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2746  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (path.LastIndexOf('.', ref iDot))                 path.hs:102

0x2748  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x274A  0x1A 0x2E       PUSHIB 0x2E
0x274C  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x274E  0x2C 0xD7       CALLB 0xD7     // String.LastIndexOf
0x2750  0x2E 0x18       JZB 0x2768 (+24)

                        // if (path.LastIndexOf('/', ref iSlash))               path.hs:104

0x2752  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2754  0x1A 0x2F       PUSHIB 0x2F
0x2756  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x2758  0x2C 0xD7       CALLB 0xD7     // String.LastIndexOf
0x275A  0x2E 0x07       JZB 0x2761 (+7)

                        // if (iSlash > iDot)                                   path.hs:106

0x275C  0x4F            PUSHLOCALB02
0x275D  0x4E            PUSHLOCALB00
0x275E  0x07            GT
0x275F  0x2F 0x09       JNZB 0x2768 (+9)

                        // extension = path.Substring(iDot);                    path.hs:111

0x2761  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2763  0x4E            PUSHLOCALB00
0x2764  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2766  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // return extension;                                    path.hs:115

0x2768  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x276A  0x2B 0x08       RETRETB 0x08


// /source/system/path.hs:24
// ####  Path.GetFileName(..)  ####                                             0x0102


                        // uint iSlash;                                         path.hs:25

0x276C  0x5F 0x01       ENTERB 0x01

                        // if (path.LastIndexOf('/', ref iSlash))               path.hs:26

0x276E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2770  0x1A 0x2F       PUSHIB 0x2F
0x2772  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x2774  0x2C 0xD7       CALLB 0xD7     // String.LastIndexOf
0x2776  0x2E 0x0B       JZB 0x2781 (+11)

                        // path = path.Substring(iSlash+1);                     path.hs:28

0x2778  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x277A  0x4E            PUSHLOCALB00
0x277B  0x45            PUSHI1
0x277C  0x00            ADD
0x277D  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x277F  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // return path;                                         path.hs:30

0x2781  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2783  0x2B 0x04       RETRETB 0x04


// /source/system/path.hs:66
// ####  Path.Combine(..)  ####                                                 0x0104


                        // uint length;                                         path.hs:67

0x2785  0x5F 0x01       ENTERB 0x01

                        // string resultPath;                                   path.hs:68

0x2787  0x24 0x02       SYSCALL0 0x02  // String.New

                        // resultPath = partOne;                                path.hs:69

0x2789  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x278B  0x5E            POPCOPYLOCALB02

                        // length = resultPath.Length;                          path.hs:70

0x278C  0x4F            PUSHLOCALB02
0x278D  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x278F  0x4C            POPLOCALB00

                        // if ((length > 0) && (resultPath[length - 1] == '/'))

0x2790  0x4E            PUSHLOCALB00
0x2791  0x44            PUSHI0
0x2792  0x07            GT
0x2793  0x27 0x00       DUP 0x00
0x2795  0x2E 0x0C       JZB 0x27A1 (+12)
0x2797  0x4F            PUSHLOCALB02
0x2798  0x4E            PUSHLOCALB00
0x2799  0x45            PUSHI1
0x279A  0x01            SUB
0x279B  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x279D  0x1A 0x2F       PUSHIB 0x2F
0x279F  0x05            EQ
0x27A0  0x0C            BOOLAND
0x27A1  0x2F 0x08       JNZB 0x27A9 (+8)

                        // resultPath = resultPath + '/'; // append trailing slash

0x27A3  0x4F            PUSHLOCALB02
0x27A4  0x1A 0x2F       PUSHIB 0x2F
0x27A6  0x25 0x03       SYSCALL1 0x03  // String.Append
0x27A8  0x5E            POPCOPYLOCALB02

                        // if ((0 != partTwo.Length) && (partTwo[0] == '/'))

0x27A9  0x44            PUSHI0
0x27AA  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x27AC  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x27AE  0x06            NE
0x27AF  0x27 0x00       DUP 0x00
0x27B1  0x2E 0x0B       JZB 0x27BC (+11)
0x27B3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x27B5  0x44            PUSHI0
0x27B6  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x27B8  0x1A 0x2F       PUSHIB 0x2F
0x27BA  0x05            EQ
0x27BB  0x0C            BOOLAND
0x27BC  0x2E 0x15       JZB 0x27D1 (+21)

                        // if (partTwo.Length > 1)                              path.hs:82

0x27BE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x27C0  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x27C2  0x45            PUSHI1
0x27C3  0x07            GT
0x27C4  0x2E 0x13       JZB 0x27D7 (+19)

                        // resultPath = resultPath + partTwo.Substring(1);

0x27C6  0x4F            PUSHLOCALB02
0x27C7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x27C9  0x45            PUSHI1
0x27CA  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x27CC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x27CE  0x5E            POPCOPYLOCALB02

                        // }                                                    path.hs:86

0x27CF  0x30 0x08       JB 0x27D7 (+8)

                        // resultPath = resultPath + partTwo;                   path.hs:89

0x27D1  0x4F            PUSHLOCALB02
0x27D2  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x27D4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x27D6  0x5E            POPCOPYLOCALB02

                        // return resultPath;                                   path.hs:91

0x27D7  0x4F            PUSHLOCALB02
0x27D8  0x2B 0x08       RETRETB 0x08


// /source/system/screen.hs:60
// ####  Screen.PrintLn(..)  ####                                               0x0020

0x27DA  0x49            ENTER

                        // Print(s, Color.MatrixGreen, Color.Black);            screen.hs:61

0x27DB  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x27DD  0x34 0x27 0x01  CALLW 0x0127   // Color.MatrixGreen_Get
0x27E0  0x34 0x0F 0x01  CALLW 0x010F   // Color.Black_Get
0x27E3  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // PrintLn();                                           screen.hs:62

0x27E5  0x24 0x2A       SYSCALL0 0x2A  // Screen.PrintLn

                        // }                                                    screen.hs:63

0x27E7  0x2A 0x02       RETB 0x02


// /source/system/screen.hs:39
// ####  Screen.PrintLn(..)  ####                                               0x001C

0x27E9  0x49            ENTER

                        // Print(s, foreColour, backColour);                    screen.hs:40

0x27EA  0x56 0xFA 0xFC  PUSHLOCALBB 0xFCFA
0x27ED  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x27EF  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // PrintLn();                                           screen.hs:41

0x27F1  0x24 0x2A       SYSCALL0 0x2A  // Screen.PrintLn

                        // }                                                    screen.hs:42

0x27F3  0x2A 0x06       RETB 0x06


// /source/compiler/json/code.hs:943
// ####  Code.ParseCode(..)  ####                                               0x0051


                        // bool success;                                        code.hs:944

0x27F5  0x5F 0x01       ENTERB 0x01

                        // long pos;                                            code.hs:945

0x27F7  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // bool first;                                          code.hs:946

0x27F9  0x44            PUSHI0

                        // Scanner.New();                                       code.hs:949

0x27FA  0x2C 0x6D       CALLB 0x6D     // Scanner.New

                        // Parser.Reset();                                      code.hs:950

0x27FC  0x2C 0x8F       CALLB 0x8F     // Parser.Reset

                        // Scanner.Load(codePath);                              code.hs:951

0x27FE  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x2800  0x2C 0x6E       CALLB 0x6E     // Scanner.Load

                        // Scanner.Reset(pos, 1, codePath);                     code.hs:952

0x2802  0x4F            PUSHLOCALB02
0x2803  0x45            PUSHI1
0x2804  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x2806  0x2C 0x6F       CALLB 0x6F     // Scanner.Reset

                        // Parser.Advance(); // load up first token             code.hs:954

0x2808  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:955

0x280A  0x1A 0x12       PUSHIB 0x12
0x280C  0x1A 0x7B       PUSHIB 0x7B
0x280E  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // first = true;                                        code.hs:956

0x2810  0x45            PUSHI1
0x2811  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (Parser.HadError)                                 code.hs:959

0x2813  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2815  0x32 0x3C 0x02  JNZW 0x2A51 (+572)

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:963

0x2818  0x1A 0x13       PUSHIB 0x13
0x281A  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x281C  0x32 0x35 0x02  JNZW 0x2A51 (+565)

                        // if (!first)                                          code.hs:967

0x281F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2821  0x2F 0x08       JNZB 0x2829 (+8)

                        // Parser.Consume(HopperToken.Comma, ',');              code.hs:969

0x2823  0x1A 0x0D       PUSHIB 0x0D
0x2825  0x1A 0x2C       PUSHIB 0x2C
0x2827  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // first = false;                                       code.hs:971

0x2829  0x44            PUSHI0
0x282A  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // Parser.Consume(HopperToken.StringConstant, "method index expected");

0x282C  0x1A 0x0B       PUSHIB 0x0B
0x282E  0x37 0x9A 0x06  PUSHIW 0x069A
0x2831  0x1A 0x15       PUSHIB 0x15
0x2833  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2835  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:973

0x2837  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2839  0x32 0x18 0x02  JNZW 0x2A51 (+536)

                        // <string,string> previousToken = PreviousToken;

0x283C  0x1A 0x0F       PUSHIB 0x0F
0x283E  0x1A 0x0F       PUSHIB 0x0F
0x2840  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x2842  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2844  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string methodIndex = previousToken["lexeme"];

0x2846  0x24 0x02       SYSCALL0 0x02  // String.New
0x2848  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x284A  0x37 0xAF 0x06  PUSHIW 0x06AF
0x284D  0x1A 0x06       PUSHIB 0x06
0x284F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2851  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2853  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:979

0x2855  0x1A 0x0E       PUSHIB 0x0E
0x2857  0x1A 0x3A       PUSHIB 0x3A
0x2859  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:980

0x285B  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x285D  0x2E 0x07       JZB 0x2864 (+7)

                        // break;                                               code.hs:982

0x285F  0x28 0x04       DECSP 0x04
0x2861  0x33 0xF0 0x01  JW 0x2A51 (+496)

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:984

0x2864  0x1A 0x12       PUSHIB 0x12
0x2866  0x1A 0x7B       PUSHIB 0x7B
0x2868  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:985

0x286A  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x286C  0x2E 0x07       JZB 0x2873 (+7)

                        // break;                                               code.hs:987

0x286E  0x28 0x04       DECSP 0x04
0x2870  0x33 0xE1 0x01  JW 0x2A51 (+481)

                        // if (methodIndex == "globals")                        code.hs:990

0x2873  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2875  0x37 0xB5 0x06  PUSHIW 0x06B5
0x2878  0x1A 0x07       PUSHIB 0x07
0x287A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x287C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x287E  0x32 0x52 0x01  JNZW 0x29D0 (+338)

                        // <string, variant > globalLists;                      code.hs:992

0x2881  0x1A 0x0F       PUSHIB 0x0F
0x2883  0x1A 0x14       PUSHIB 0x14
0x2885  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // bool fc = true;                                      code.hs:993

0x2887  0x44            PUSHI0
0x2888  0x45            PUSHI1
0x2889  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // if (Parser.HadError)                                 code.hs:996

0x288B  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x288D  0x32 0x2D 0x01  JNZW 0x29BA (+301)

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:1000

0x2890  0x1A 0x13       PUSHIB 0x13
0x2892  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x2894  0x2E 0x07       JZB 0x289B (+7)

                        // Parser.Advance(); // }                               code.hs:1002

0x2896  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:1003

0x2898  0x33 0x22 0x01  JW 0x29BA (+290)

                        // if (!fc)                                             code.hs:1005

0x289B  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x289D  0x2F 0x12       JNZB 0x28AF (+18)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x289F  0x1A 0x0D       PUSHIB 0x0D
0x28A1  0x37 0xBC 0x06  PUSHIW 0x06BC
0x28A4  0x1A 0x12       PUSHIB 0x12
0x28A6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x28A8  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1008

0x28AA  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x28AC  0x32 0x0E 0x01  JNZW 0x29BA (+270)

                        // Parser.Consume(HopperToken.StringConstant, "global offset expected");

0x28AF  0x1A 0x0B       PUSHIB 0x0B
0x28B1  0x37 0xCE 0x06  PUSHIW 0x06CE
0x28B4  0x1A 0x16       PUSHIB 0x16
0x28B6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x28B8  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1015

0x28BA  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x28BC  0x32 0xFE 0x00  JNZW 0x29BA (+254)

                        // previousToken = PreviousToken;                       code.hs:1019

0x28BF  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x28C1  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string offset = previousToken["lexeme"];             code.hs:1020

0x28C3  0x24 0x02       SYSCALL0 0x02  // String.New
0x28C5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x28C7  0x37 0xAF 0x06  PUSHIW 0x06AF
0x28CA  0x1A 0x06       PUSHIB 0x06
0x28CC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x28CE  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x28D0  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:1022

0x28D2  0x1A 0x0E       PUSHIB 0x0E
0x28D4  0x1A 0x3A       PUSHIB 0x3A
0x28D6  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1023

0x28D8  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x28DA  0x2E 0x07       JZB 0x28E1 (+7)

                        // break;                                               code.hs:1025

0x28DC  0x28 0x02       DECSP 0x02
0x28DE  0x33 0xDC 0x00  JW 0x29BA (+220)

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:1028

0x28E1  0x1A 0x12       PUSHIB 0x12
0x28E3  0x1A 0x7B       PUSHIB 0x7B
0x28E5  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1029

0x28E7  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x28E9  0x2E 0x07       JZB 0x28F0 (+7)

                        // break;                                               code.hs:1031

0x28EB  0x28 0x02       DECSP 0x02
0x28ED  0x33 0xCD 0x00  JW 0x29BA (+205)

                        // bool fg = true;                                      code.hs:1033

0x28F0  0x44            PUSHI0
0x28F1  0x45            PUSHI1
0x28F2  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // string globalName;                                   code.hs:1034

0x28F4  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string globalType;                                   code.hs:1035

0x28F6  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:1038

0x28F8  0x1A 0x13       PUSHIB 0x13
0x28FA  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x28FC  0x2E 0x07       JZB 0x2903 (+7)

                        // Parser.Advance(); // }                               code.hs:1040

0x28FE  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:1041

0x2900  0x33 0x9D 0x00  JW 0x299D (+157)

                        // if (!fg)                                             code.hs:1043

0x2903  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2905  0x2F 0x12       JNZB 0x2917 (+18)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x2907  0x1A 0x0D       PUSHIB 0x0D
0x2909  0x37 0xBC 0x06  PUSHIW 0x06BC
0x290C  0x1A 0x12       PUSHIB 0x12
0x290E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2910  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1046

0x2912  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2914  0x32 0x89 0x00  JNZW 0x299D (+137)

                        // Parser.Consume(HopperToken.StringConstant, "global member name expected");

0x2917  0x1A 0x0B       PUSHIB 0x0B
0x2919  0x37 0xE4 0x06  PUSHIW 0x06E4
0x291C  0x1A 0x1B       PUSHIB 0x1B
0x291E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2920  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1052

0x2922  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2924  0x2F 0x79       JNZB 0x299D (+121)

                        // previousToken = PreviousToken;                       code.hs:1056

0x2926  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2928  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string membername = previousToken["lexeme"];

0x292A  0x24 0x02       SYSCALL0 0x02  // String.New
0x292C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x292E  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2931  0x1A 0x06       PUSHIB 0x06
0x2933  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2935  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2937  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:1059

0x2939  0x1A 0x0E       PUSHIB 0x0E
0x293B  0x1A 0x3A       PUSHIB 0x3A
0x293D  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1060

0x293F  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2941  0x2E 0x06       JZB 0x2947 (+6)

                        // break;                                               code.hs:1062

0x2943  0x28 0x02       DECSP 0x02
0x2945  0x30 0x58       JB 0x299D (+88)

                        // Parser.Consume(HopperToken.StringConstant, "global member value expected");

0x2947  0x1A 0x0B       PUSHIB 0x0B
0x2949  0x37 0xFF 0x06  PUSHIW 0x06FF
0x294C  0x1A 0x1C       PUSHIB 0x1C
0x294E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2950  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // previousToken = PreviousToken;                       code.hs:1065

0x2952  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2954  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string membervalue = previousToken["lexeme"];

0x2956  0x24 0x02       SYSCALL0 0x02  // String.New
0x2958  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x295A  0x37 0xAF 0x06  PUSHIW 0x06AF
0x295D  0x1A 0x06       PUSHIB 0x06
0x295F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2961  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2963  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // if (Parser.HadError)                                 code.hs:1067

0x2965  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2967  0x2E 0x06       JZB 0x296D (+6)

                        // break;                                               code.hs:1069

0x2969  0x28 0x04       DECSP 0x04
0x296B  0x30 0x32       JB 0x299D (+50)

                        // switch (membername)                                  code.hs:1071

0x296D  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)

                        // case "name":                                         code.hs:1073

0x296F  0x37 0x31 0x01  PUSHIW 0x0131
0x2972  0x1A 0x04       PUSHIB 0x04
0x2974  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2976  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2978  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x297A  0x2F 0x08       JNZB 0x2982 (+8)

                        // globalName = membervalue;                            code.hs:1075

0x297C  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x297E  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // }                                                    code.hs:1076

0x2980  0x30 0x13       JB 0x2993 (+19)

                        // case "type":                                         code.hs:1077

0x2982  0x37 0x1B 0x07  PUSHIW 0x071B
0x2985  0x1A 0x04       PUSHIB 0x04
0x2987  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2989  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x298B  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x298D  0x2F 0x06       JNZB 0x2993 (+6)

                        // globalType = membervalue;                            code.hs:1079

0x298F  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x2991  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // }                                                    code.hs:1081

0x2993  0x28 0x02       DECSP 0x02

                        // fg = false;                                          code.hs:1082

0x2995  0x44            PUSHI0
0x2996  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // }                                                    code.hs:1083

0x2998  0x28 0x04       DECSP 0x04
0x299A  0x33 0x5E 0xFF  JW 0x28F8 (-162)

                        // <string> globalList;                                 code.hs:1084

0x299D  0x1A 0x0F       PUSHIB 0x0F
0x299F  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // globalList.Append(globalType);                       code.hs:1085

0x29A1  0x56 0x16 0x14  PUSHLOCALBB 0x1416
0x29A4  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // globalList.Append(globalName);                       code.hs:1086

0x29A6  0x56 0x16 0x12  PUSHLOCALBB 0x1216
0x29A9  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // globalLists[offset] = globalList;                    code.hs:1087

0x29AB  0x56 0x0A 0x0E  PUSHLOCALBB 0x0E0A
0x29AE  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x29B0  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fc = false;                                          code.hs:1089

0x29B2  0x44            PUSHI0
0x29B3  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // } // loop                                            code.hs:1090

0x29B5  0x28 0x0A       DECSP 0x0A
0x29B7  0x33 0xD4 0xFE  JW 0x288B (-300)

                        // if (keepSymbols)                                     code.hs:1091

0x29BA  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x29BC  0x2E 0x0F       JZB 0x29CB (+15)

                        // debugSymbols["globals"] = globalLists;               code.hs:1093

0x29BE  0x20 0x14       PUSHGLOBALB 0x14
0x29C0  0x37 0xB5 0x06  PUSHIW 0x06B5
0x29C3  0x1A 0x07       PUSHIB 0x07
0x29C5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x29C7  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x29C9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:1095

0x29CB  0x28 0x04       DECSP 0x04
0x29CD  0x33 0x79 0x00  JW 0x2A46 (+121)

                        // string name;                                         code.hs:1098

0x29D0  0x24 0x02       SYSCALL0 0x02  // String.New

                        // <byte> code;                                         code.hs:1099

0x29D2  0x1A 0x03       PUSHIB 0x03
0x29D4  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // uint codeLength;                                     code.hs:1100

0x29D6  0x44            PUSHI0

                        // if (!ParseMethod(methodIndex, keepCode, keepSymbols, experimental, ref name, ref code, ref codeLength))

0x29D7  0x56 0x08 0xFA  PUSHLOCALBB 0xFA08
0x29DA  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
0x29DD  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x29DF  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x29E1  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
0x29E3  0x2C 0x50       CALLB 0x50     // Code.ParseMethod
0x29E5  0x2F 0x06       JNZB 0x29EB (+6)

                        // break;                                               code.hs:1103

0x29E7  0x28 0x0A       DECSP 0x0A
0x29E9  0x30 0x68       JB 0x2A51 (+104)

                        // if (methodIndex == "const")                          code.hs:1105

0x29EB  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x29ED  0x1A 0x69       PUSHIB 0x69
0x29EF  0x1A 0x05       PUSHIB 0x05
0x29F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x29F3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x29F5  0x2F 0x0C       JNZB 0x2A01 (+12)

                        // if (keepCode)                                        code.hs:1107

0x29F7  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x29F9  0x2E 0x3D       JZB 0x2A36 (+61)

                        // constantData = code;                                 code.hs:1109

0x29FB  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x29FD  0x59 0x12       POPCOPYGLOBALB 0x12

                        // }                                                    code.hs:1111

0x29FF  0x30 0x37       JB 0x2A36 (+55)

                        // uint index;                                          code.hs:1114

0x2A01  0x44            PUSHI0

                        // if (Token.TryParseUInt(methodIndex, ref index))

0x2A02  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2A04  0x21 0x10       PUSHSTACKADDRB 0x10 (BP+16)
0x2A06  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x2A08  0x2E 0x02       JZB 0x2A0A (+2)

                        // if (name.EndsWith(".main"))                          code.hs:1118

0x2A0A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2A0C  0x37 0x1F 0x07  PUSHIW 0x071F
0x2A0F  0x1A 0x05       PUSHIB 0x05
0x2A11  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2A13  0x25 0x07       SYSCALL1 0x07  // String.EndsWith
0x2A15  0x2E 0x06       JZB 0x2A1B (+6)

                        // entryIndex = index;                                  code.hs:1120

0x2A17  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2A19  0x1F 0x08       POPGLOBALB 0x08

                        // if (keepCode)                                        code.hs:1122

0x2A1B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x2A1D  0x2E 0x09       JZB 0x2A26 (+9)

                        // methodCode[index] = code;                            code.hs:1124

0x2A1F  0x20 0x0A       PUSHGLOBALB 0x0A
0x2A21  0x56 0x10 0x0C  PUSHLOCALBB 0x0C10
0x2A24  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // methodSize[index] = codeLength;                      code.hs:1126

0x2A26  0x20 0x0C       PUSHGLOBALB 0x0C
0x2A28  0x56 0x10 0x0E  PUSHLOCALBB 0x0E10
0x2A2B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // methodName[index] = name;                            code.hs:1127

0x2A2D  0x20 0x10       PUSHGLOBALB 0x10
0x2A2F  0x56 0x10 0x0A  PUSHLOCALBB 0x0A10
0x2A32  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:1128

0x2A34  0x28 0x02       DECSP 0x02

                        // Parser.Consume(HopperToken.RBrace, '}');             code.hs:1129

0x2A36  0x1A 0x13       PUSHIB 0x13
0x2A38  0x1A 0x7D       PUSHIB 0x7D
0x2A3A  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:1130

0x2A3C  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2A3E  0x2E 0x06       JZB 0x2A44 (+6)

                        // break;                                               code.hs:1132

0x2A40  0x28 0x0A       DECSP 0x0A
0x2A42  0x30 0x0F       JB 0x2A51 (+15)

                        // }                                                    code.hs:1134

0x2A44  0x28 0x06       DECSP 0x06

                        // Parser.ProgressTick(".");                            code.hs:1135

0x2A46  0x1A 0x2E       PUSHIB 0x2E
0x2A48  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2A4A  0x2C 0x88       CALLB 0x88     // Parser.ProgressTick

                        // } // loop                                            code.hs:1136

0x2A4C  0x28 0x04       DECSP 0x04
0x2A4E  0x33 0xC5 0xFD  JW 0x2813 (-571)

                        // if (Parser.HadError)                                 code.hs:1137

0x2A51  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2A53  0x2F 0x04       JNZB 0x2A57 (+4)

                        // success = true;                                      code.hs:1141

0x2A55  0x45            PUSHI1
0x2A56  0x4C            POPLOCALB00

                        // if (keepSymbols && (methodStart.Count > 0))

0x2A57  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2A59  0x27 0x00       DUP 0x00
0x2A5B  0x2E 0x09       JZB 0x2A64 (+9)
0x2A5D  0x20 0x0E       PUSHGLOBALB 0x0E
0x2A5F  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2A61  0x44            PUSHI0
0x2A62  0x07            GT
0x2A63  0x0C            BOOLAND
0x2A64  0x2E 0x04       JZB 0x2A68 (+4)

                        // MapSource();                                         code.hs:1146

0x2A66  0x2C 0x40       CALLB 0x40     // Code.MapSource

                        // return success;                                      code.hs:1148

0x2A68  0x4E            PUSHLOCALB00
0x2A69  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/json/code.hs:472
// ####  Code.GetMethodSymbols(..)  ####                                        0x004F

0x2A6B  0x49            ENTER

                        // <string,variant> methodSymbols;                      code.hs:473

0x2A6C  0x1A 0x0F       PUSHIB 0x0F
0x2A6E  0x1A 0x14       PUSHIB 0x14
0x2A70  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // if (debugSymbols.Contains(methodIndex))              code.hs:474

0x2A72  0x20 0x14       PUSHGLOBALB 0x14
0x2A74  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2A76  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2A78  0x2E 0x09       JZB 0x2A81 (+9)

                        // methodSymbols = debugSymbols[methodIndex];           code.hs:476

0x2A7A  0x20 0x14       PUSHGLOBALB 0x14
0x2A7C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2A7E  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2A80  0x5D            POPCOPYLOCALB00

                        // return methodSymbols;                                code.hs:478

0x2A81  0x4E            PUSHLOCALB00
0x2A82  0x2B 0x04       RETRETB 0x04


// /source/compiler/json/code.hs:482
// ####  Code.ParseMethod(..)  ####                                             0x0050

0x2A84  0x49            ENTER

                        // <string,variant> methodDictionary;                   code.hs:483

0x2A85  0x1A 0x0F       PUSHIB 0x0F
0x2A87  0x1A 0x14       PUSHIB 0x14
0x2A89  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // bool first = true;                                   code.hs:485

0x2A8B  0x44            PUSHI0
0x2A8C  0x45            PUSHI1
0x2A8D  0x4D            POPLOCALB02

                        // bool isData;                                         code.hs:486

0x2A8E  0x44            PUSHI0

                        // if (Parser.HadError)                                 code.hs:489

0x2A8F  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2A91  0x32 0x0E 0x06  JNZW 0x309F (+1550)

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:493

0x2A94  0x1A 0x13       PUSHIB 0x13
0x2A96  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x2A98  0x32 0x07 0x06  JNZW 0x309F (+1543)

                        // if (!first)                                          code.hs:497

0x2A9B  0x4F            PUSHLOCALB02
0x2A9C  0x2F 0x12       JNZB 0x2AAE (+18)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x2A9E  0x1A 0x0D       PUSHIB 0x0D
0x2AA0  0x37 0xBC 0x06  PUSHIW 0x06BC
0x2AA3  0x1A 0x12       PUSHIB 0x12
0x2AA5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2AA7  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:500

0x2AA9  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2AAB  0x32 0xF4 0x05  JNZW 0x309F (+1524)

                        // Parser.Consume(HopperToken.StringConstant, "key name expected");

0x2AAE  0x1A 0x0B       PUSHIB 0x0B
0x2AB0  0x37 0x24 0x07  PUSHIW 0x0724
0x2AB3  0x1A 0x11       PUSHIB 0x11
0x2AB5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2AB7  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:506

0x2AB9  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2ABB  0x32 0xE4 0x05  JNZW 0x309F (+1508)

                        // <string,string> previousToken = PreviousToken;

0x2ABE  0x1A 0x0F       PUSHIB 0x0F
0x2AC0  0x1A 0x0F       PUSHIB 0x0F
0x2AC2  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x2AC4  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2AC6  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string keyName = previousToken["lexeme"];            code.hs:511

0x2AC8  0x24 0x02       SYSCALL0 0x02  // String.New
0x2ACA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2ACC  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2ACF  0x1A 0x06       PUSHIB 0x06
0x2AD1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2AD3  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2AD5  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:512

0x2AD7  0x1A 0x0E       PUSHIB 0x0E
0x2AD9  0x1A 0x3A       PUSHIB 0x3A
0x2ADB  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:513

0x2ADD  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2ADF  0x2E 0x07       JZB 0x2AE6 (+7)

                        // break;                                               code.hs:515

0x2AE1  0x28 0x04       DECSP 0x04
0x2AE3  0x33 0xBC 0x05  JW 0x309F (+1468)

                        // if (keyName == "data")                               code.hs:517

0x2AE6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2AE8  0x1A 0x72       PUSHIB 0x72
0x2AEA  0x1A 0x04       PUSHIB 0x04
0x2AEC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2AEE  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2AF0  0x2F 0x15       JNZB 0x2B05 (+21)

                        // isData = true;                                       code.hs:519

0x2AF2  0x45            PUSHI1
0x2AF3  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // keyName = "code";                                    code.hs:520

0x2AF5  0x1A 0x31       PUSHIB 0x31
0x2AF7  0x1A 0x04       PUSHIB 0x04
0x2AF9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2AFB  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // methodName = "const";                                code.hs:521

0x2AFD  0x1A 0x69       PUSHIB 0x69
0x2AFF  0x1A 0x05       PUSHIB 0x05
0x2B01  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B03  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // switch (keyName)                                     code.hs:523

0x2B05  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)

                        // case "name":                                         code.hs:525

0x2B07  0x37 0x31 0x01  PUSHIW 0x0131
0x2B0A  0x1A 0x04       PUSHIB 0x04
0x2B0C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B0E  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2B10  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2B12  0x2F 0x3F       JNZB 0x2B51 (+63)

                        // Parser.Consume(HopperToken.StringConstant, "method name expected");

0x2B14  0x1A 0x0B       PUSHIB 0x0B
0x2B16  0x37 0x35 0x07  PUSHIW 0x0735
0x2B19  0x1A 0x14       PUSHIB 0x14
0x2B1B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B1D  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:528

0x2B1F  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2B21  0x2E 0x07       JZB 0x2B28 (+7)

                        // break;                                               code.hs:530

0x2B23  0x28 0x06       DECSP 0x06
0x2B25  0x33 0x7A 0x05  JW 0x309F (+1402)

                        // previousToken = PreviousToken;                       code.hs:532

0x2B28  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2B2A  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // methodName = previousToken["lexeme"];                code.hs:533

0x2B2C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2B2E  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2B31  0x1A 0x06       PUSHIB 0x06
0x2B33  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B35  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2B37  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // methodDictionary["name"] = previousToken["lexeme"];

0x2B39  0x4E            PUSHLOCALB00
0x2B3A  0x37 0x31 0x01  PUSHIW 0x0131
0x2B3D  0x1A 0x04       PUSHIB 0x04
0x2B3F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B41  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2B43  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2B46  0x1A 0x06       PUSHIB 0x06
0x2B48  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B4A  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2B4C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:535

0x2B4E  0x33 0x48 0x05  JW 0x3096 (+1352)

                        // case "source":                                       code.hs:536

0x2B51  0x37 0x27 0x01  PUSHIW 0x0127
0x2B54  0x1A 0x06       PUSHIB 0x06
0x2B56  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B58  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2B5A  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2B5C  0x2F 0x32       JNZB 0x2B8E (+50)

                        // Parser.Consume(HopperToken.StringConstant, "source path expected");

0x2B5E  0x1A 0x0B       PUSHIB 0x0B
0x2B60  0x37 0x49 0x07  PUSHIW 0x0749
0x2B63  0x1A 0x14       PUSHIB 0x14
0x2B65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B67  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:539

0x2B69  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2B6B  0x2E 0x07       JZB 0x2B72 (+7)

                        // break;                                               code.hs:541

0x2B6D  0x28 0x06       DECSP 0x06
0x2B6F  0x33 0x30 0x05  JW 0x309F (+1328)

                        // previousToken = PreviousToken;                       code.hs:543

0x2B72  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2B74  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // methodDictionary["source"] = previousToken["lexeme"];

0x2B76  0x4E            PUSHLOCALB00
0x2B77  0x37 0x27 0x01  PUSHIW 0x0127
0x2B7A  0x1A 0x06       PUSHIB 0x06
0x2B7C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B7E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2B80  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2B83  0x1A 0x06       PUSHIB 0x06
0x2B85  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B87  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2B89  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:545

0x2B8B  0x33 0x0B 0x05  JW 0x3096 (+1291)

                        // case "line":                                         code.hs:546

0x2B8E  0x37 0x2D 0x01  PUSHIW 0x012D
0x2B91  0x1A 0x04       PUSHIB 0x04
0x2B93  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2B95  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2B97  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2B99  0x2F 0x32       JNZB 0x2BCB (+50)

                        // Parser.Consume(HopperToken.Integer, "line number expected");

0x2B9B  0x1A 0x09       PUSHIB 0x09
0x2B9D  0x37 0x5D 0x07  PUSHIW 0x075D
0x2BA0  0x1A 0x14       PUSHIB 0x14
0x2BA2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BA4  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:549

0x2BA6  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2BA8  0x2E 0x07       JZB 0x2BAF (+7)

                        // break;                                               code.hs:551

0x2BAA  0x28 0x06       DECSP 0x06
0x2BAC  0x33 0xF3 0x04  JW 0x309F (+1267)

                        // previousToken = PreviousToken;                       code.hs:553

0x2BAF  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2BB1  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // methodDictionary["line"] = previousToken["lexeme"];

0x2BB3  0x4E            PUSHLOCALB00
0x2BB4  0x37 0x2D 0x01  PUSHIW 0x012D
0x2BB7  0x1A 0x04       PUSHIB 0x04
0x2BB9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BBB  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2BBD  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2BC0  0x1A 0x06       PUSHIB 0x06
0x2BC2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BC4  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2BC6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:555

0x2BC8  0x33 0xCE 0x04  JW 0x3096 (+1230)

                        // case "hits":                                         code.hs:556

0x2BCB  0x37 0x71 0x07  PUSHIW 0x0771
0x2BCE  0x1A 0x04       PUSHIB 0x04
0x2BD0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BD2  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2BD4  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2BD6  0x2F 0x41       JNZB 0x2C17 (+65)

                        // Parser.Consume(HopperToken.Integer, "hits expected");

0x2BD8  0x1A 0x09       PUSHIB 0x09
0x2BDA  0x37 0x75 0x07  PUSHIW 0x0775
0x2BDD  0x1A 0x0D       PUSHIB 0x0D
0x2BDF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BE1  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:559

0x2BE3  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2BE5  0x2E 0x07       JZB 0x2BEC (+7)

                        // break;                                               code.hs:561

0x2BE7  0x28 0x06       DECSP 0x06
0x2BE9  0x33 0xB6 0x04  JW 0x309F (+1206)

                        // previousToken = PreviousToken;                       code.hs:563

0x2BEC  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2BEE  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // uint hits;                                           code.hs:564

0x2BF0  0x44            PUSHI0

                        // if (TryParseUInt(previousToken["lexeme"], ref hits))

0x2BF1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2BF3  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2BF6  0x1A 0x06       PUSHIB 0x06
0x2BF8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BFA  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2BFC  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x2BFE  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x2C00  0x2E 0x02       JZB 0x2C02 (+2)

                        // methodDictionary["hits"] = hits;                     code.hs:568

0x2C02  0x4E            PUSHLOCALB00
0x2C03  0x37 0x71 0x07  PUSHIW 0x0771
0x2C06  0x1A 0x04       PUSHIB 0x04
0x2C08  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C0A  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x2C0C  0x1A 0x04       PUSHIB 0x04
0x2C0E  0x24 0x27       SYSCALL0 0x27  // Variant.Box
0x2C10  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:569

0x2C12  0x28 0x02       DECSP 0x02
0x2C14  0x33 0x82 0x04  JW 0x3096 (+1154)

                        // case "locals":                                       code.hs:570

0x2C17  0x37 0x82 0x07  PUSHIW 0x0782
0x2C1A  0x1A 0x06       PUSHIB 0x06
0x2C1C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C1E  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2C20  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2C22  0x32 0x83 0x01  JNZW 0x2DA5 (+387)

                        // <string, <string> > localLists;                      code.hs:572

0x2C25  0x1A 0x0F       PUSHIB 0x0F
0x2C27  0x1A 0x19       PUSHIB 0x19
0x2C29  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:573

0x2C2B  0x1A 0x12       PUSHIB 0x12
0x2C2D  0x1A 0x7B       PUSHIB 0x7B
0x2C2F  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:574

0x2C31  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2C33  0x2E 0x07       JZB 0x2C3A (+7)

                        // break;                                               code.hs:576

0x2C35  0x28 0x08       DECSP 0x08
0x2C37  0x33 0x68 0x04  JW 0x309F (+1128)

                        // bool fc = true;                                      code.hs:578

0x2C3A  0x44            PUSHI0
0x2C3B  0x45            PUSHI1
0x2C3C  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // if (Parser.HadError)                                 code.hs:581

0x2C3E  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2C40  0x32 0x50 0x01  JNZW 0x2D90 (+336)

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:585

0x2C43  0x1A 0x13       PUSHIB 0x13
0x2C45  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x2C47  0x2E 0x07       JZB 0x2C4E (+7)

                        // Parser.Advance(); // }                               code.hs:587

0x2C49  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:588

0x2C4B  0x33 0x45 0x01  JW 0x2D90 (+325)

                        // if (!fc)                                             code.hs:590

0x2C4E  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2C50  0x2F 0x12       JNZB 0x2C62 (+18)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x2C52  0x1A 0x0D       PUSHIB 0x0D
0x2C54  0x37 0xBC 0x06  PUSHIW 0x06BC
0x2C57  0x1A 0x12       PUSHIB 0x12
0x2C59  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C5B  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:593

0x2C5D  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2C5F  0x32 0x31 0x01  JNZW 0x2D90 (+305)

                        // Parser.Consume(HopperToken.StringConstant, "active range expected");

0x2C62  0x1A 0x0B       PUSHIB 0x0B
0x2C64  0x37 0x88 0x07  PUSHIW 0x0788
0x2C67  0x1A 0x15       PUSHIB 0x15
0x2C69  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C6B  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:600

0x2C6D  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2C6F  0x32 0x21 0x01  JNZW 0x2D90 (+289)

                        // previousToken = PreviousToken;                       code.hs:604

0x2C72  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2C74  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string range = previousToken["lexeme"];              code.hs:605

0x2C76  0x24 0x02       SYSCALL0 0x02  // String.New
0x2C78  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2C7A  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2C7D  0x1A 0x06       PUSHIB 0x06
0x2C7F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C81  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2C83  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:607

0x2C85  0x1A 0x0E       PUSHIB 0x0E
0x2C87  0x1A 0x3A       PUSHIB 0x3A
0x2C89  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:608

0x2C8B  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2C8D  0x2E 0x07       JZB 0x2C94 (+7)

                        // break;                                               code.hs:610

0x2C8F  0x28 0x02       DECSP 0x02
0x2C91  0x33 0xFF 0x00  JW 0x2D90 (+255)

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:613

0x2C94  0x1A 0x12       PUSHIB 0x12
0x2C96  0x1A 0x7B       PUSHIB 0x7B
0x2C98  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:614

0x2C9A  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2C9C  0x2E 0x07       JZB 0x2CA3 (+7)

                        // break;                                               code.hs:616

0x2C9E  0x28 0x02       DECSP 0x02
0x2CA0  0x33 0xF0 0x00  JW 0x2D90 (+240)

                        // bool fa = true;                                      code.hs:618

0x2CA3  0x44            PUSHI0
0x2CA4  0x45            PUSHI1
0x2CA5  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // string localName;                                    code.hs:619

0x2CA7  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string localType;                                    code.hs:620

0x2CA9  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string localOffset;                                  code.hs:621

0x2CAB  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:625

0x2CAD  0x1A 0x13       PUSHIB 0x13
0x2CAF  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x2CB1  0x2E 0x07       JZB 0x2CB8 (+7)

                        // Parser.Advance(); // }                               code.hs:627

0x2CB3  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:628

0x2CB5  0x33 0xB1 0x00  JW 0x2D66 (+177)

                        // if (!fa)                                             code.hs:630

0x2CB8  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2CBA  0x2F 0x12       JNZB 0x2CCC (+18)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x2CBC  0x1A 0x0D       PUSHIB 0x0D
0x2CBE  0x37 0xBC 0x06  PUSHIW 0x06BC
0x2CC1  0x1A 0x12       PUSHIB 0x12
0x2CC3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2CC5  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:633

0x2CC7  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2CC9  0x32 0x9D 0x00  JNZW 0x2D66 (+157)

                        // Parser.Consume(HopperToken.StringConstant, "local member name expected");

0x2CCC  0x1A 0x0B       PUSHIB 0x0B
0x2CCE  0x37 0x9D 0x07  PUSHIW 0x079D
0x2CD1  0x1A 0x1A       PUSHIB 0x1A
0x2CD3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2CD5  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:639

0x2CD7  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2CD9  0x32 0x8D 0x00  JNZW 0x2D66 (+141)

                        // previousToken = PreviousToken;                       code.hs:643

0x2CDC  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2CDE  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string membername = previousToken["lexeme"];

0x2CE0  0x24 0x02       SYSCALL0 0x02  // String.New
0x2CE2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2CE4  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2CE7  0x1A 0x06       PUSHIB 0x06
0x2CE9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2CEB  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2CED  0x57 0x1A       POPCOPYLOCALB 0x1A (BP+26)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:646

0x2CEF  0x1A 0x0E       PUSHIB 0x0E
0x2CF1  0x1A 0x3A       PUSHIB 0x3A
0x2CF3  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:647

0x2CF5  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2CF7  0x2E 0x07       JZB 0x2CFE (+7)

                        // break;                                               code.hs:649

0x2CF9  0x28 0x02       DECSP 0x02
0x2CFB  0x33 0x6B 0x00  JW 0x2D66 (+107)

                        // Parser.Consume(HopperToken.StringConstant, "local member value expected");

0x2CFE  0x1A 0x0B       PUSHIB 0x0B
0x2D00  0x37 0xB7 0x07  PUSHIW 0x07B7
0x2D03  0x1A 0x1B       PUSHIB 0x1B
0x2D05  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D07  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:652

0x2D09  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2D0B  0x2E 0x06       JZB 0x2D11 (+6)

                        // break;                                               code.hs:654

0x2D0D  0x28 0x02       DECSP 0x02
0x2D0F  0x30 0x57       JB 0x2D66 (+87)

                        // previousToken = PreviousToken;                       code.hs:656

0x2D11  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2D13  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string membervalue = previousToken["lexeme"];

0x2D15  0x24 0x02       SYSCALL0 0x02  // String.New
0x2D17  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2D19  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2D1C  0x1A 0x06       PUSHIB 0x06
0x2D1E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D20  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2D22  0x57 0x1C       POPCOPYLOCALB 0x1C (BP+28)

                        // switch (membername)                                  code.hs:658

0x2D24  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)

                        // case "name":                                         code.hs:660

0x2D26  0x37 0x31 0x01  PUSHIW 0x0131
0x2D29  0x1A 0x04       PUSHIB 0x04
0x2D2B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D2D  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2D2F  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2D31  0x2F 0x08       JNZB 0x2D39 (+8)

                        // localName = membervalue;                             code.hs:662

0x2D33  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2D35  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // }                                                    code.hs:663

0x2D37  0x30 0x25       JB 0x2D5C (+37)

                        // case "type":                                         code.hs:664

0x2D39  0x37 0x1B 0x07  PUSHIW 0x071B
0x2D3C  0x1A 0x04       PUSHIB 0x04
0x2D3E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D40  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2D42  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2D44  0x2F 0x08       JNZB 0x2D4C (+8)

                        // localType = membervalue;                             code.hs:666

0x2D46  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2D48  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // }                                                    code.hs:667

0x2D4A  0x30 0x12       JB 0x2D5C (+18)

                        // case "offset":                                       code.hs:668

0x2D4C  0x1A 0x5F       PUSHIB 0x5F
0x2D4E  0x1A 0x06       PUSHIB 0x06
0x2D50  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D52  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2D54  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2D56  0x2F 0x06       JNZB 0x2D5C (+6)

                        // localOffset = membervalue;                           code.hs:670

0x2D58  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2D5A  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // }                                                    code.hs:672

0x2D5C  0x28 0x02       DECSP 0x02

                        // fa = false;                                          code.hs:673

0x2D5E  0x44            PUSHI0
0x2D5F  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // }                                                    code.hs:674

0x2D61  0x28 0x04       DECSP 0x04
0x2D63  0x33 0x4A 0xFF  JW 0x2CAD (-182)

                        // if (Parser.HadError)                                 code.hs:675

0x2D66  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2D68  0x2E 0x06       JZB 0x2D6E (+6)

                        // break;                                               code.hs:677

0x2D6A  0x28 0x0A       DECSP 0x0A
0x2D6C  0x30 0x24       JB 0x2D90 (+36)

                        // <string> localList;                                  code.hs:679

0x2D6E  0x1A 0x0F       PUSHIB 0x0F
0x2D70  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // localList.Append(localName);                         code.hs:680

0x2D72  0x56 0x1A 0x14  PUSHLOCALBB 0x141A
0x2D75  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // localList.Append(localType);                         code.hs:681

0x2D77  0x56 0x1A 0x16  PUSHLOCALBB 0x161A
0x2D7A  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // localList.Append(localOffset);                       code.hs:682

0x2D7C  0x56 0x1A 0x18  PUSHLOCALBB 0x181A
0x2D7F  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // localLists[range] = localList;                       code.hs:683

0x2D81  0x56 0x0C 0x10  PUSHLOCALBB 0x100C
0x2D84  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2D86  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fc = false;                                          code.hs:684

0x2D88  0x44            PUSHI0
0x2D89  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // } // loop                                            code.hs:685

0x2D8B  0x28 0x0C       DECSP 0x0C
0x2D8D  0x33 0xB1 0xFE  JW 0x2C3E (-335)

                        // if (keepSymbols)                                     code.hs:686

0x2D90  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
0x2D92  0x2E 0x0E       JZB 0x2DA0 (+14)

                        // methodDictionary["locals"] = localLists;             code.hs:688

0x2D94  0x4E            PUSHLOCALB00
0x2D95  0x37 0x82 0x07  PUSHIW 0x0782
0x2D98  0x1A 0x06       PUSHIB 0x06
0x2D9A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D9C  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x2D9E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:690

0x2DA0  0x28 0x04       DECSP 0x04
0x2DA2  0x33 0xF4 0x02  JW 0x3096 (+756)

                        // case "arguments":                                    code.hs:691

0x2DA5  0x1A 0xD5       PUSHIB 0xD5
0x2DA7  0x1A 0x09       PUSHIB 0x09
0x2DA9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2DAB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2DAD  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2DAF  0x32 0x83 0x01  JNZW 0x2F32 (+387)

                        // <string, <string> > argumentLists;                   code.hs:693

0x2DB2  0x1A 0x0F       PUSHIB 0x0F
0x2DB4  0x1A 0x19       PUSHIB 0x19
0x2DB6  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:695

0x2DB8  0x1A 0x12       PUSHIB 0x12
0x2DBA  0x1A 0x7B       PUSHIB 0x7B
0x2DBC  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:696

0x2DBE  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2DC0  0x2E 0x07       JZB 0x2DC7 (+7)

                        // break;                                               code.hs:698

0x2DC2  0x28 0x08       DECSP 0x08
0x2DC4  0x33 0xDB 0x02  JW 0x309F (+731)

                        // bool fc = true;                                      code.hs:700

0x2DC7  0x44            PUSHI0
0x2DC8  0x45            PUSHI1
0x2DC9  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // if (Parser.HadError)                                 code.hs:703

0x2DCB  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2DCD  0x32 0x51 0x01  JNZW 0x2F1E (+337)

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:707

0x2DD0  0x1A 0x13       PUSHIB 0x13
0x2DD2  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x2DD4  0x2E 0x07       JZB 0x2DDB (+7)

                        // Parser.Advance(); // }                               code.hs:709

0x2DD6  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:710

0x2DD8  0x33 0x46 0x01  JW 0x2F1E (+326)

                        // if (!fc)                                             code.hs:712

0x2DDB  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2DDD  0x2F 0x12       JNZB 0x2DEF (+18)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x2DDF  0x1A 0x0D       PUSHIB 0x0D
0x2DE1  0x37 0xBC 0x06  PUSHIW 0x06BC
0x2DE4  0x1A 0x12       PUSHIB 0x12
0x2DE6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2DE8  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:715

0x2DEA  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2DEC  0x32 0x32 0x01  JNZW 0x2F1E (+306)

                        // Parser.Consume(HopperToken.StringConstant, "BP offset expected");

0x2DEF  0x1A 0x0B       PUSHIB 0x0B
0x2DF1  0x37 0xD2 0x07  PUSHIW 0x07D2
0x2DF4  0x1A 0x12       PUSHIB 0x12
0x2DF6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2DF8  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:722

0x2DFA  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2DFC  0x32 0x22 0x01  JNZW 0x2F1E (+290)

                        // previousToken = PreviousToken;                       code.hs:726

0x2DFF  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2E01  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string offset = previousToken["lexeme"];             code.hs:727

0x2E03  0x24 0x02       SYSCALL0 0x02  // String.New
0x2E05  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2E07  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2E0A  0x1A 0x06       PUSHIB 0x06
0x2E0C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2E0E  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2E10  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:729

0x2E12  0x1A 0x0E       PUSHIB 0x0E
0x2E14  0x1A 0x3A       PUSHIB 0x3A
0x2E16  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:730

0x2E18  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2E1A  0x2E 0x07       JZB 0x2E21 (+7)

                        // break;                                               code.hs:732

0x2E1C  0x28 0x02       DECSP 0x02
0x2E1E  0x33 0x00 0x01  JW 0x2F1E (+256)

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:735

0x2E21  0x1A 0x12       PUSHIB 0x12
0x2E23  0x1A 0x7B       PUSHIB 0x7B
0x2E25  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:736

0x2E27  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2E29  0x2E 0x07       JZB 0x2E30 (+7)

                        // break;                                               code.hs:738

0x2E2B  0x28 0x02       DECSP 0x02
0x2E2D  0x33 0xF1 0x00  JW 0x2F1E (+241)

                        // bool fa = true;                                      code.hs:740

0x2E30  0x44            PUSHI0
0x2E31  0x45            PUSHI1
0x2E32  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // string argumentName;                                 code.hs:741

0x2E34  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string argumentRef;                                  code.hs:742

0x2E36  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string argumentType;                                 code.hs:743

0x2E38  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:747

0x2E3A  0x1A 0x13       PUSHIB 0x13
0x2E3C  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x2E3E  0x2E 0x07       JZB 0x2E45 (+7)

                        // Parser.Advance(); // }                               code.hs:749

0x2E40  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:750

0x2E42  0x33 0xB2 0x00  JW 0x2EF4 (+178)

                        // if (!fa)                                             code.hs:752

0x2E45  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2E47  0x2F 0x12       JNZB 0x2E59 (+18)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x2E49  0x1A 0x0D       PUSHIB 0x0D
0x2E4B  0x37 0xBC 0x06  PUSHIW 0x06BC
0x2E4E  0x1A 0x12       PUSHIB 0x12
0x2E50  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2E52  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:755

0x2E54  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2E56  0x32 0x9E 0x00  JNZW 0x2EF4 (+158)

                        // Parser.Consume(HopperToken.StringConstant, "argument member name expected");

0x2E59  0x1A 0x0B       PUSHIB 0x0B
0x2E5B  0x37 0xE4 0x07  PUSHIW 0x07E4
0x2E5E  0x1A 0x1D       PUSHIB 0x1D
0x2E60  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2E62  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:761

0x2E64  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2E66  0x32 0x8E 0x00  JNZW 0x2EF4 (+142)

                        // previousToken = PreviousToken;                       code.hs:765

0x2E69  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2E6B  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string membername = previousToken["lexeme"];

0x2E6D  0x24 0x02       SYSCALL0 0x02  // String.New
0x2E6F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2E71  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2E74  0x1A 0x06       PUSHIB 0x06
0x2E76  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2E78  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2E7A  0x57 0x1A       POPCOPYLOCALB 0x1A (BP+26)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:768

0x2E7C  0x1A 0x0E       PUSHIB 0x0E
0x2E7E  0x1A 0x3A       PUSHIB 0x3A
0x2E80  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:769

0x2E82  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2E84  0x2E 0x07       JZB 0x2E8B (+7)

                        // break;                                               code.hs:771

0x2E86  0x28 0x02       DECSP 0x02
0x2E88  0x33 0x6C 0x00  JW 0x2EF4 (+108)

                        // Parser.Consume(HopperToken.StringConstant, "argument member value expected");

0x2E8B  0x1A 0x0B       PUSHIB 0x0B
0x2E8D  0x37 0x01 0x08  PUSHIW 0x0801
0x2E90  0x1A 0x1E       PUSHIB 0x1E
0x2E92  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2E94  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:774

0x2E96  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2E98  0x2E 0x06       JZB 0x2E9E (+6)

                        // break;                                               code.hs:776

0x2E9A  0x28 0x02       DECSP 0x02
0x2E9C  0x30 0x58       JB 0x2EF4 (+88)

                        // previousToken = PreviousToken;                       code.hs:778

0x2E9E  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2EA0  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string membervalue = previousToken["lexeme"];

0x2EA2  0x24 0x02       SYSCALL0 0x02  // String.New
0x2EA4  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2EA6  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2EA9  0x1A 0x06       PUSHIB 0x06
0x2EAB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2EAD  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2EAF  0x57 0x1C       POPCOPYLOCALB 0x1C (BP+28)

                        // switch (membername)                                  code.hs:780

0x2EB1  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)

                        // case "name":                                         code.hs:782

0x2EB3  0x37 0x31 0x01  PUSHIW 0x0131
0x2EB6  0x1A 0x04       PUSHIB 0x04
0x2EB8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2EBA  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2EBC  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2EBE  0x2F 0x08       JNZB 0x2EC6 (+8)

                        // argumentName = membervalue;                          code.hs:784

0x2EC0  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2EC2  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // }                                                    code.hs:785

0x2EC4  0x30 0x26       JB 0x2EEA (+38)

                        // case "type":                                         code.hs:786

0x2EC6  0x37 0x1B 0x07  PUSHIW 0x071B
0x2EC9  0x1A 0x04       PUSHIB 0x04
0x2ECB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2ECD  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2ECF  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2ED1  0x2F 0x08       JNZB 0x2ED9 (+8)

                        // argumentType = membervalue;                          code.hs:788

0x2ED3  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2ED5  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // }                                                    code.hs:789

0x2ED7  0x30 0x13       JB 0x2EEA (+19)

                        // case "ref":                                          code.hs:790

0x2ED9  0x37 0x1F 0x08  PUSHIW 0x081F
0x2EDC  0x1A 0x03       PUSHIB 0x03
0x2EDE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2EE0  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2EE2  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2EE4  0x2F 0x06       JNZB 0x2EEA (+6)

                        // argumentRef = membervalue;                           code.hs:792

0x2EE6  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2EE8  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // }                                                    code.hs:794

0x2EEA  0x28 0x02       DECSP 0x02

                        // fa = false;                                          code.hs:795

0x2EEC  0x44            PUSHI0
0x2EED  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // }                                                    code.hs:796

0x2EEF  0x28 0x04       DECSP 0x04
0x2EF1  0x33 0x49 0xFF  JW 0x2E3A (-183)

                        // if (Parser.HadError)                                 code.hs:797

0x2EF4  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2EF6  0x2E 0x06       JZB 0x2EFC (+6)

                        // break;                                               code.hs:799

0x2EF8  0x28 0x0A       DECSP 0x0A
0x2EFA  0x30 0x24       JB 0x2F1E (+36)

                        // <string> argumentList;                               code.hs:801

0x2EFC  0x1A 0x0F       PUSHIB 0x0F
0x2EFE  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // argumentList.Append(argumentRef);                    code.hs:802

0x2F00  0x56 0x1A 0x16  PUSHLOCALBB 0x161A
0x2F03  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // argumentList.Append(argumentType);                   code.hs:803

0x2F05  0x56 0x1A 0x18  PUSHLOCALBB 0x181A
0x2F08  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // argumentList.Append(argumentName);                   code.hs:804

0x2F0A  0x56 0x1A 0x14  PUSHLOCALBB 0x141A
0x2F0D  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // argumentLists[offset] = argumentList;                code.hs:805

0x2F0F  0x56 0x0C 0x10  PUSHLOCALBB 0x100C
0x2F12  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2F14  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fc = false;                                          code.hs:808

0x2F16  0x44            PUSHI0
0x2F17  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // } // loop                                            code.hs:809

0x2F19  0x28 0x0C       DECSP 0x0C
0x2F1B  0x33 0xB0 0xFE  JW 0x2DCB (-336)

                        // if (keepSymbols)                                     code.hs:810

0x2F1E  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
0x2F20  0x2E 0x0D       JZB 0x2F2D (+13)

                        // methodDictionary["arguments"] = argumentLists;

0x2F22  0x4E            PUSHLOCALB00
0x2F23  0x1A 0xD5       PUSHIB 0xD5
0x2F25  0x1A 0x09       PUSHIB 0x09
0x2F27  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2F29  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x2F2B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:814

0x2F2D  0x28 0x04       DECSP 0x04
0x2F2F  0x33 0x67 0x01  JW 0x3096 (+359)

                        // case "debug":                                        code.hs:815

0x2F32  0x37 0x35 0x01  PUSHIW 0x0135
0x2F35  0x1A 0x05       PUSHIB 0x05
0x2F37  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2F39  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2F3B  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2F3D  0x32 0xB9 0x00  JNZW 0x2FF6 (+185)

                        // <string,string> debugInfo;                           code.hs:817

0x2F40  0x1A 0x0F       PUSHIB 0x0F
0x2F42  0x1A 0x0F       PUSHIB 0x0F
0x2F44  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // Parser.Consume(HopperToken.LBrace, '{');             code.hs:818

0x2F46  0x1A 0x12       PUSHIB 0x12
0x2F48  0x1A 0x7B       PUSHIB 0x7B
0x2F4A  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:819

0x2F4C  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2F4E  0x2E 0x07       JZB 0x2F55 (+7)

                        // break;                                               code.hs:821

0x2F50  0x28 0x08       DECSP 0x08
0x2F52  0x33 0x4D 0x01  JW 0x309F (+333)

                        // bool fc = true;                                      code.hs:823

0x2F55  0x44            PUSHI0
0x2F56  0x45            PUSHI1
0x2F57  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // if (Parser.HadError)                                 code.hs:826

0x2F59  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2F5B  0x32 0x86 0x00  JNZW 0x2FE1 (+134)

                        // if (Parser.Check(HopperToken.RBrace))                code.hs:830

0x2F5E  0x1A 0x13       PUSHIB 0x13
0x2F60  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x2F62  0x2E 0x07       JZB 0x2F69 (+7)

                        // Parser.Advance(); // }                               code.hs:832

0x2F64  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:833

0x2F66  0x33 0x7B 0x00  JW 0x2FE1 (+123)

                        // if (!fc)                                             code.hs:835

0x2F69  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2F6B  0x2F 0x11       JNZB 0x2F7C (+17)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x2F6D  0x1A 0x0D       PUSHIB 0x0D
0x2F6F  0x37 0xBC 0x06  PUSHIW 0x06BC
0x2F72  0x1A 0x12       PUSHIB 0x12
0x2F74  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2F76  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:838

0x2F78  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2F7A  0x2F 0x67       JNZB 0x2FE1 (+103)

                        // Parser.Consume(HopperToken.StringConstant, "offset key expected");

0x2F7C  0x1A 0x0B       PUSHIB 0x0B
0x2F7E  0x37 0x22 0x08  PUSHIW 0x0822
0x2F81  0x1A 0x13       PUSHIB 0x13
0x2F83  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2F85  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:845

0x2F87  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2F89  0x2F 0x58       JNZB 0x2FE1 (+88)

                        // previousToken = PreviousToken;                       code.hs:849

0x2F8B  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2F8D  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string offset = previousToken["lexeme"];             code.hs:850

0x2F8F  0x24 0x02       SYSCALL0 0x02  // String.New
0x2F91  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2F93  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2F96  0x1A 0x06       PUSHIB 0x06
0x2F98  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2F9A  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2F9C  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // Parser.Consume(HopperToken.Colon, ':');              code.hs:852

0x2F9E  0x1A 0x0E       PUSHIB 0x0E
0x2FA0  0x1A 0x3A       PUSHIB 0x3A
0x2FA2  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:853

0x2FA4  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2FA6  0x2E 0x06       JZB 0x2FAC (+6)

                        // break;                                               code.hs:855

0x2FA8  0x28 0x02       DECSP 0x02
0x2FAA  0x30 0x37       JB 0x2FE1 (+55)

                        // Parser.Consume(HopperToken.StringConstant, "line value expected");

0x2FAC  0x1A 0x0B       PUSHIB 0x0B
0x2FAE  0x37 0x35 0x08  PUSHIW 0x0835
0x2FB1  0x1A 0x13       PUSHIB 0x13
0x2FB3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FB5  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:859

0x2FB7  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x2FB9  0x2E 0x06       JZB 0x2FBF (+6)

                        // break;                                               code.hs:861

0x2FBB  0x28 0x02       DECSP 0x02
0x2FBD  0x30 0x24       JB 0x2FE1 (+36)

                        // previousToken = PreviousToken;                       code.hs:863

0x2FBF  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x2FC1  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string ln = previousToken["lexeme"];                 code.hs:864

0x2FC3  0x24 0x02       SYSCALL0 0x02  // String.New
0x2FC5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2FC7  0x37 0xAF 0x06  PUSHIW 0x06AF
0x2FCA  0x1A 0x06       PUSHIB 0x06
0x2FCC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FCE  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2FD0  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // debugInfo[offset] = ln;                              code.hs:866

0x2FD2  0x56 0x0C 0x10  PUSHLOCALBB 0x100C
0x2FD5  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2FD7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fc = false;                                          code.hs:868

0x2FD9  0x44            PUSHI0
0x2FDA  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // } // loop                                            code.hs:869

0x2FDC  0x28 0x04       DECSP 0x04
0x2FDE  0x33 0x7B 0xFF  JW 0x2F59 (-133)

                        // if (keepSymbols)                                     code.hs:870

0x2FE1  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
0x2FE3  0x2E 0x0E       JZB 0x2FF1 (+14)

                        // methodDictionary["debug"] = debugInfo;               code.hs:872

0x2FE5  0x4E            PUSHLOCALB00
0x2FE6  0x37 0x35 0x01  PUSHIW 0x0135
0x2FE9  0x1A 0x05       PUSHIB 0x05
0x2FEB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FED  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x2FEF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:874

0x2FF1  0x28 0x04       DECSP 0x04
0x2FF3  0x33 0xA3 0x00  JW 0x3096 (+163)

                        // case "code":                                         code.hs:875

0x2FF6  0x1A 0x31       PUSHIB 0x31
0x2FF8  0x1A 0x04       PUSHIB 0x04
0x2FFA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FFC  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2FFE  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3000  0x32 0x7F 0x00  JNZW 0x307F (+127)

                        // Parser.Consume(HopperToken.LBracket, '[');           code.hs:877

0x3003  0x1A 0x14       PUSHIB 0x14
0x3005  0x1A 0x5B       PUSHIB 0x5B
0x3007  0x2C 0x97       CALLB 0x97     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:878

0x3009  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x300B  0x2E 0x07       JZB 0x3012 (+7)

                        // break;                                               code.hs:880

0x300D  0x28 0x06       DECSP 0x06
0x300F  0x33 0x90 0x00  JW 0x309F (+144)

                        // bool fc = true;                                      code.hs:882

0x3012  0x44            PUSHI0
0x3013  0x45            PUSHI1
0x3014  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // if (Parser.HadError)                                 code.hs:885

0x3016  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x3018  0x2F 0x63       JNZB 0x307B (+99)

                        // if (Parser.Check(HopperToken.RBracket))              code.hs:889

0x301A  0x1A 0x15       PUSHIB 0x15
0x301C  0x2C 0x9A       CALLB 0x9A     // Parser.Check
0x301E  0x2E 0x06       JZB 0x3024 (+6)

                        // Parser.Advance(); // ]                               code.hs:891

0x3020  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               code.hs:892

0x3022  0x30 0x59       JB 0x307B (+89)

                        // if (!fc)                                             code.hs:894

0x3024  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3026  0x2F 0x11       JNZB 0x3037 (+17)

                        // Parser.Consume(HopperToken.Comma, "',' comma expected");

0x3028  0x1A 0x0D       PUSHIB 0x0D
0x302A  0x37 0xBC 0x06  PUSHIW 0x06BC
0x302D  0x1A 0x12       PUSHIB 0x12
0x302F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3031  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:897

0x3033  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x3035  0x2F 0x46       JNZB 0x307B (+70)

                        // Parser.Consume(HopperToken.Integer, "code expected");

0x3037  0x1A 0x09       PUSHIB 0x09
0x3039  0x37 0x48 0x08  PUSHIW 0x0848
0x303C  0x1A 0x0D       PUSHIB 0x0D
0x303E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3040  0x2C 0x98       CALLB 0x98     // Parser.Consume

                        // if (Parser.HadError)                                 code.hs:903

0x3042  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x3044  0x2F 0x37       JNZB 0x307B (+55)

                        // if (keepCode)                                        code.hs:907

0x3046  0x1C 0xF4       PUSHLOCALB 0xF4 (BP-12)
0x3048  0x2E 0x28       JZB 0x3070 (+40)

                        // uint hc;                                             code.hs:909

0x304A  0x44            PUSHI0

                        // previousToken = PreviousToken;                       code.hs:910

0x304B  0x2C 0x8C       CALLB 0x8C     // Parser.PreviousToken_Get
0x304D  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string hexcode = previousToken["lexeme"];            code.hs:911

0x304F  0x24 0x02       SYSCALL0 0x02  // String.New
0x3051  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3053  0x37 0xAF 0x06  PUSHIW 0x06AF
0x3056  0x1A 0x06       PUSHIB 0x06
0x3058  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x305A  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x305C  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // if (Token.TryParseUInt(hexcode, ref hc))             code.hs:912

0x305E  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x3060  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
0x3062  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x3064  0x2E 0x02       JZB 0x3066 (+2)

                        // code.Append(byte(hc));                               code.hs:915

0x3066  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x3068  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x306A  0x51 0x03       CAST 0x03
0x306C  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    code.hs:916

0x306E  0x28 0x04       DECSP 0x04

                        // codeLength++;                                        code.hs:917

0x3070  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x3072  0x45            PUSHI1
0x3073  0x00            ADD
0x3074  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // fc = false;                                          code.hs:918

0x3076  0x44            PUSHI0
0x3077  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // } // loop                                            code.hs:919

0x3079  0x30 0x9D       JB 0x3016 (-99)

                        // }                                                    code.hs:920

0x307B  0x28 0x02       DECSP 0x02
0x307D  0x30 0x19       JB 0x3096 (+25)

                        // Parser.Error("unexpected key '" + keyName + "'");

0x307F  0x37 0x55 0x08  PUSHIW 0x0855
0x3082  0x1A 0x10       PUSHIB 0x10
0x3084  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3086  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x3088  0x24 0x03       SYSCALL0 0x03  // String.Append
0x308A  0x1A 0x27       PUSHIB 0x27
0x308C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x308E  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3090  0x2C 0x93       CALLB 0x93     // Parser.Error

                        // break;                                               code.hs:924

0x3092  0x28 0x06       DECSP 0x06
0x3094  0x30 0x0B       JB 0x309F (+11)

                        // }                                                    code.hs:926

0x3096  0x28 0x02       DECSP 0x02

                        // first = false;                                       code.hs:927

0x3098  0x44            PUSHI0
0x3099  0x4D            POPLOCALB02

                        // } // loop                                            code.hs:928

0x309A  0x28 0x04       DECSP 0x04
0x309C  0x33 0xF3 0xF9  JW 0x2A8F (-1549)

                        // if (!isData && keepSymbols)                          code.hs:930

0x309F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x30A1  0x41            BOOLNOT
0x30A2  0x27 0x00       DUP 0x00
0x30A4  0x2E 0x05       JZB 0x30A9 (+5)
0x30A6  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
0x30A8  0x0C            BOOLAND
0x30A9  0x2E 0x25       JZB 0x30CE (+37)

                        // uint iMethod;                                        code.hs:932

0x30AB  0x44            PUSHI0

                        // if (Token.TryParseUInt(methodIndex, ref iMethod))

0x30AC  0x1C 0xF2       PUSHLOCALB 0xF2 (BP-14)
0x30AE  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x30B0  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x30B2  0x2E 0x02       JZB 0x30B4 (+2)

                        // string name = "0x" + iMethod.ToHexString(4);

0x30B4  0x24 0x02       SYSCALL0 0x02  // String.New
0x30B6  0x37 0x30 0x78  PUSHIW 0x7830
0x30B9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x30BB  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x30BD  0x1A 0x04       PUSHIB 0x04
0x30BF  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x30C1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x30C3  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // debugSymbols[name] = methodDictionary;               code.hs:937

0x30C5  0x20 0x14       PUSHGLOBALB 0x14
0x30C7  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x30C9  0x4E            PUSHLOCALB00
0x30CA  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:938

0x30CC  0x28 0x04       DECSP 0x04

                        // return !Parser.HadError;                             code.hs:939

0x30CE  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x30D0  0x41            BOOLNOT
0x30D1  0x2B 0x14       RETRETB 0x14


// /source/compiler/json/code.hs:344
// ####  Code.MapSource(..)  ####                                               0x0040

0x30D3  0x49            ENTER

                        // foreach (var kv in debugSymbols)                     code.hs:345

0x30D4  0x20 0x14       PUSHGLOBALB 0x14
0x30D6  0x1A 0x0F       PUSHIB 0x0F
0x30D8  0x1A 0x0F       PUSHIB 0x0F
0x30DA  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x30DC  0x44            PUSHI0
0x30DD  0x4E            PUSHLOCALB00
0x30DE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x30E0  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x30E2  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x30E4  0x4D            POPLOCALB02
0x30E5  0x31 0xD6 0x00  JZW 0x31BB (+214)

                        // if (kv.key == "globals")                             code.hs:347

0x30E8  0x4F            PUSHLOCALB02
0x30E9  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x30EB  0x37 0xB5 0x06  PUSHIW 0x06B5
0x30EE  0x1A 0x07       PUSHIB 0x07
0x30F0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x30F2  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x30F4  0x2E 0xE9       JZB 0x30DD (-23)

                        // string hex = kv.key;                                 code.hs:352

0x30F6  0x24 0x02       SYSCALL0 0x02  // String.New
0x30F8  0x4F            PUSHLOCALB02
0x30F9  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x30FB  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // uint index;                                          code.hs:353

0x30FD  0x44            PUSHI0

                        // if (!TryParseHex(hex, ref index))                    code.hs:354

0x30FE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3100  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x3102  0x2C 0x67       CALLB 0x67     // Token.TryParseHex
0x3104  0x2F 0x06       JNZB 0x310A (+6)

                        // Diagnostics.Die(0x03);                               code.hs:356

0x3106  0x1A 0x03       PUSHIB 0x03
0x3108  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // uint start = methodStart[index];                     code.hs:358

0x310A  0x44            PUSHI0
0x310B  0x20 0x0E       PUSHGLOBALB 0x0E
0x310D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x310F  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x3111  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // <string,variant> methodSymbols = kv.value;           code.hs:359

0x3113  0x1A 0x0F       PUSHIB 0x0F
0x3115  0x1A 0x14       PUSHIB 0x14
0x3117  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x3119  0x4F            PUSHLOCALB02
0x311A  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x311C  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // string path = methodSymbols["source"];               code.hs:360

0x311E  0x24 0x02       SYSCALL0 0x02  // String.New
0x3120  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3122  0x37 0x27 0x01  PUSHIW 0x0127
0x3125  0x1A 0x06       PUSHIB 0x06
0x3127  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3129  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x312B  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // string lpath = path.ToLower();                       code.hs:361

0x312D  0x24 0x02       SYSCALL0 0x02  // String.New
0x312F  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x3131  0x2C 0xDC       CALLB 0xDC     // String.ToLower
0x3133  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // <uint,uint> map;                                     code.hs:362

0x3135  0x1A 0x04       PUSHIB 0x04
0x3137  0x1A 0x04       PUSHIB 0x04
0x3139  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // if (lineMap.Contains(lpath))                         code.hs:363

0x313B  0x20 0x16       PUSHGLOBALB 0x16
0x313D  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x313F  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3141  0x2E 0x0A       JZB 0x314B (+10)

                        // map = lineMap[lpath];                                code.hs:365

0x3143  0x20 0x16       PUSHGLOBALB 0x16
0x3145  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x3147  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x3149  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // <string,string> smap = methodSymbols["debug"];

0x314B  0x1A 0x0F       PUSHIB 0x0F
0x314D  0x1A 0x0F       PUSHIB 0x0F
0x314F  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x3151  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3153  0x37 0x35 0x01  PUSHIW 0x0135
0x3156  0x1A 0x05       PUSHIB 0x05
0x3158  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x315A  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x315C  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // foreach (var kv2 in smap)                            code.hs:368

0x315E  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x3160  0x1A 0x0F       PUSHIB 0x0F
0x3162  0x1A 0x0F       PUSHIB 0x0F
0x3164  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x3166  0x44            PUSHI0
0x3167  0x56 0x16 0x1A  PUSHLOCALBB 0x1A16
0x316A  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x316C  0x1B 0x1A       POPLOCALB 0x1A (BP+26)
0x316E  0x1B 0x18       POPLOCALB 0x18 (BP+24)
0x3170  0x2E 0x3D       JZB 0x31AD (+61)

                        // uint offset;                                         code.hs:370

0x3172  0x44            PUSHI0

                        // uint ln;                                             code.hs:371

0x3173  0x44            PUSHI0

                        // if (Token.TryParseUInt(kv2.key, ref offset))

0x3174  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x3176  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x3178  0x21 0x1C       PUSHSTACKADDRB 0x1C (BP+28)
0x317A  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x317C  0x2E 0x02       JZB 0x317E (+2)

                        // if (Token.TryParseUInt(kv2.value, ref ln))           code.hs:375

0x317E  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x3180  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x3182  0x21 0x1E       PUSHSTACKADDRB 0x1E (BP+30)
0x3184  0x2C 0x66       CALLB 0x66     // Token.TryParseUInt
0x3186  0x2E 0x02       JZB 0x3188 (+2)

                        // uint address = start + offset;                       code.hs:378

0x3188  0x44            PUSHI0
0x3189  0x56 0x0A 0x1C  PUSHLOCALBB 0x1C0A
0x318C  0x00            ADD
0x318D  0x1B 0x20       POPLOCALB 0x20 (BP+32)

                        // map[ln] = address;                                   code.hs:379

0x318F  0x56 0x12 0x1E  PUSHLOCALBB 0x1E12
0x3192  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x3194  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // codeMap[address] = path + ":" + kv2.value;           code.hs:380

0x3196  0x20 0x18       PUSHGLOBALB 0x18
0x3198  0x56 0x20 0x0E  PUSHLOCALBB 0x0E20
0x319B  0x1A 0x3A       PUSHIB 0x3A
0x319D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x319F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x31A1  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x31A3  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x31A5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x31A7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:381

0x31A9  0x28 0x06       DECSP 0x06
0x31AB  0x30 0xBC       JB 0x3167 (-68)
0x31AD  0x28 0x06       DECSP 0x06

                        // lineMap[lpath] = map;                                code.hs:382

0x31AF  0x20 0x16       PUSHGLOBALB 0x16
0x31B1  0x56 0x10 0x12  PUSHLOCALBB 0x1210
0x31B4  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    code.hs:383

0x31B6  0x28 0x10       DECSP 0x10
0x31B8  0x33 0x25 0xFF  JW 0x30DD (-219)
0x31BB  0x28 0x06       DECSP 0x06

                        // }                                                    code.hs:384

0x31BD  0x4A            RET0


// /source/system/uint.hs:43
// ####  UInt.ToHexString(..)  ####                                             0x00B3


                        // uint digit;                                          uint.hs:44

0x31BE  0x5F 0x03       ENTERB 0x03

                        // string result;                                       uint.hs:47

0x31C0  0x24 0x02       SYSCALL0 0x02  // String.New

                        // for (i = digits; i > 0; i--)                         uint.hs:48

0x31C2  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x31C4  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x31C6  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x31C8  0x44            PUSHI0
0x31C9  0x07            GT
0x31CA  0x2E 0x1E       JZB 0x31E8 (+30)

                        // digit = this % 16;                                   uint.hs:50

0x31CC  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x31CE  0x1A 0x10       PUSHIB 0x10
0x31D0  0x04            MOD
0x31D1  0x4C            POPLOCALB00

                        // c = Char.ToHex(byte(digit));                         uint.hs:51

0x31D2  0x4E            PUSHLOCALB00
0x31D3  0x51 0x03       CAST 0x03
0x31D5  0x2C 0xA4       CALLB 0xA4     // Char.ToHex
0x31D7  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    uint.hs:52

0x31D8  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x31DA  0x4F            PUSHLOCALB02
0x31DB  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 16;                                    uint.hs:53

0x31DD  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x31DF  0x1A 0x10       PUSHIB 0x10
0x31E1  0x02            DIV
0x31E2  0x1B 0xFC       POPLOCALB 0xFC (BP-4)

                        // }                                                    uint.hs:54

0x31E4  0x23 0x04       DECLOCALB 0x04 (BP+4)
0x31E6  0x30 0xE0       JB 0x31C6 (-32)

                        // return result;                                       uint.hs:55

0x31E8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x31EA  0x2B 0x0C       RETRETB 0x0C


// /source/system/uint.hs:4
// ####  UInt.ToString(..)  ####                                                0x00B0


                        // uint digit;                                          uint.hs:5

0x31EC  0x5F 0x02       ENTERB 0x02

                        // string result;                                       uint.hs:7

0x31EE  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (this == 0)                                       uint.hs:8

0x31F0  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x31F2  0x2F 0x08       JNZB 0x31FA (+8)

                        // String.Build(ref result, '0');                       uint.hs:10

0x31F4  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x31F6  0x1A 0x30       PUSHIB 0x30
0x31F8  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // while (this != 0)                                    uint.hs:12

0x31FA  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x31FC  0x2E 0x1F       JZB 0x321B (+31)

                        // digit = this % 10;                                   uint.hs:14

0x31FE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3200  0x1A 0x0A       PUSHIB 0x0A
0x3202  0x04            MOD
0x3203  0x4C            POPLOCALB00

                        // digit = digit + 48;                                  uint.hs:15

0x3204  0x4E            PUSHLOCALB00
0x3205  0x1A 0x30       PUSHIB 0x30
0x3207  0x00            ADD
0x3208  0x4C            POPLOCALB00

                        // c = char(digit);                                     uint.hs:16

0x3209  0x4E            PUSHLOCALB00
0x320A  0x51 0x03       CAST 0x03
0x320C  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    uint.hs:17

0x320D  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x320F  0x4F            PUSHLOCALB02
0x3210  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 10;                                    uint.hs:18

0x3212  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3214  0x1A 0x0A       PUSHIB 0x0A
0x3216  0x02            DIV
0x3217  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    uint.hs:19

0x3219  0x30 0xE1       JB 0x31FA (-31)

                        // return result;                                       uint.hs:20

0x321B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x321D  0x2B 0x08       RETRETB 0x08


// /source/system/color.hs:42
// ####  Color.ProgressText_Get(..)  ####                                       0x012D

0x321F  0x49            ENTER

                        // uint ProgressText        { get { return 0x006; } }

0x3220  0x1A 0x06       PUSHIB 0x06
0x3222  0x4A            RET0


// /source/system/color.hs:43
// ####  Color.ProgressFace_Get(..)  ####                                       0x012E

0x3223  0x49            ENTER

                        // uint ProgressFace        { get { return 0xDCB; } }

0x3224  0x37 0xCB 0x0D  PUSHIW 0x0DCB
0x3227  0x4A            RET0


// /source/system/color.hs:44
// ####  Color.ProgressHighlight_Get(..)  ####                                  0x012F

0x3228  0x49            ENTER

                        // uint ProgressHighlight   { get { return 0x3A8; }}

0x3229  0x37 0xA8 0x03  PUSHIW 0x03A8
0x322C  0x4A            RET0


// /source/system/color.hs:66
// ####  Color.StatusText_Get(..)  ####                                         0x013F

0x322D  0x49            ENTER

                        // uint StatusText   { get { return 0x006; } }

0x322E  0x1A 0x06       PUSHIB 0x06
0x3230  0x4A            RET0


// /source/system/color.hs:65
// ####  Color.StatusFace_Get(..)  ####                                         0x013E

0x3231  0x49            ENTER

                        // uint StatusFace   { get { return 0xDCB; } }

0x3232  0x37 0xCB 0x0D  PUSHIW 0x0DCB
0x3235  0x4A            RET0


// /source/system/color.hs:40
// ####  Color.ProgressTick_Get(..)  ####                                       0x012B

0x3236  0x49            ENTER

                        // uint ProgressTick        { get { return 0x258; } }

0x3237  0x37 0x58 0x02  PUSHIW 0x0258
0x323A  0x4A            RET0


// /source/system/color.hs:41
// ####  Color.ProgressBackground_Get(..)  ####                                 0x012C

0x323B  0x49            ENTER

                        // uint ProgressBackground  { get { return 0x68A; } }

0x323C  0x37 0x8A 0x06  PUSHIW 0x068A
0x323F  0x4A            RET0


// /source/system/color.hs:34
// ####  Color.MatrixGreen_Get(..)  ####                                        0x0127

0x3240  0x49            ENTER

                        // uint MatrixGreen         { get { return 0x7F7; } }

0x3241  0x37 0xF7 0x07  PUSHIW 0x07F7
0x3244  0x4A            RET0


// /source/system/color.hs:4
// ####  Color.Black_Get(..)  ####                                              0x010F


                        // uint Black        { get { return 0x000; } }

0x3245  0x5F 0x01       ENTERB 0x01

                        // uint Black        { get { return 0x000; } }

0x3247  0x4A            RET0


// /source/system/byte.hs:10
// ####  Byte.ToHexString(..)  ####                                             0x00AB


                        // int digit;                                           byte.hs:11

0x3248  0x5F 0x03       ENTERB 0x03

                        // string result;                                       byte.hs:14

0x324A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // for (i = digits; i > 0; i--)                         byte.hs:15

0x324C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x324E  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3250  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3252  0x44            PUSHI0
0x3253  0x16            GTI
0x3254  0x2E 0x1E       JZB 0x3272 (+30)

                        // digit = this % 16;                                   byte.hs:17

0x3256  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3258  0x1A 0x10       PUSHIB 0x10
0x325A  0x04            MOD
0x325B  0x4C            POPLOCALB00

                        // c = Char.ToHex(byte(digit));                         byte.hs:18

0x325C  0x4E            PUSHLOCALB00
0x325D  0x51 0x03       CAST 0x03
0x325F  0x2C 0xA4       CALLB 0xA4     // Char.ToHex
0x3261  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    byte.hs:19

0x3262  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x3264  0x4F            PUSHLOCALB02
0x3265  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 16;                                    byte.hs:20

0x3267  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3269  0x1A 0x10       PUSHIB 0x10
0x326B  0x02            DIV
0x326C  0x1B 0xFC       POPLOCALB 0xFC (BP-4)

                        // }                                                    byte.hs:21

0x326E  0x23 0x04       DECLOCALB 0x04 (BP+4)
0x3270  0x30 0xE0       JB 0x3250 (-32)

                        // return result;                                       byte.hs:22

0x3272  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3274  0x2B 0x0C       RETRETB 0x0C


// /source/compiler/codegen/instructions.hs:728
// ####  Instructions.Disassemble(..)  ####                                     0x0059


                        // uint actualAddress = entryPointAddress + address;

0x3276  0x5F 0x01       ENTERB 0x01

                        // uint actualAddress = entryPointAddress + address;

0x3278  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x327A  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x327C  0x00            ADD
0x327D  0x4C            POPLOCALB00

                        // string addressContent = "0x" + actualAddress.ToHexString(4) + "  ";

0x327E  0x24 0x02       SYSCALL0 0x02  // String.New
0x3280  0x37 0x30 0x78  PUSHIW 0x7830
0x3283  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3285  0x4E            PUSHLOCALB00
0x3286  0x1A 0x04       PUSHIB 0x04
0x3288  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x328A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x328C  0x37 0x20 0x20  PUSHIW 0x2020
0x328F  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3291  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3293  0x5E            POPCOPYLOCALB02

                        // byte cd = code[address];                             instructions.hs:732

0x3294  0x44            PUSHI0
0x3295  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x3297  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x3299  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x329B  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // Instruction instruction = Instruction(cd);           instructions.hs:733

0x329D  0x44            PUSHI0
0x329E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x32A0  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // string opcode = Instructions.ToString(instruction);

0x32A2  0x24 0x02       SYSCALL0 0x02  // String.New
0x32A4  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x32A6  0x2C 0x57       CALLB 0x57     // Instructions.ToString
0x32A8  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // string content = opcode;                             instructions.hs:735

0x32AA  0x24 0x02       SYSCALL0 0x02  // String.New
0x32AC  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x32AE  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // addressContent = addressContent + "0x" + cd.ToHexString(2) + " ";

0x32B0  0x4F            PUSHLOCALB02
0x32B1  0x37 0x30 0x78  PUSHIW 0x7830
0x32B4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x32B6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x32B8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x32BA  0x1A 0x02       PUSHIB 0x02
0x32BC  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x32BE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x32C0  0x1A 0x20       PUSHIB 0x20
0x32C2  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x32C4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x32C6  0x5E            POPCOPYLOCALB02

                        // byte operandWidth = Instructions.OperandWidth(instruction);

0x32C7  0x44            PUSHI0
0x32C8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x32CA  0x2C 0x56       CALLB 0x56     // Instructions.OperandWidth
0x32CC  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // byte iSysCall;                                       instructions.hs:740

0x32CE  0x44            PUSHI0

                        // string methodKey;                                    instructions.hs:742

0x32CF  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool isStackOffset = Instructions.OperandIsStackOffset(instruction);

0x32D1  0x44            PUSHI0
0x32D2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x32D4  0x2C 0x54       CALLB 0x54     // Instructions.OperandIsStackOffset
0x32D6  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // bool isJumpOffset  = Instructions.OperandIsAddressOffset(instruction);

0x32D8  0x44            PUSHI0
0x32D9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x32DB  0x2C 0x55       CALLB 0x55     // Instructions.OperandIsAddressOffset
0x32DD  0x1B 0x14       POPLOCALB 0x14 (BP+20)

                        // switch (operandWidth)                                instructions.hs:746

0x32DF  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)

                        // case 0:                                              instructions.hs:748

0x32E1  0x44            PUSHI0
0x32E2  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x32E4  0x05            EQ
0x32E5  0x2E 0x10       JZB 0x32F5 (+16)

                        // addressContent = addressContent + "           ";

0x32E7  0x4F            PUSHLOCALB02
0x32E8  0x37 0x65 0x08  PUSHIW 0x0865
0x32EB  0x1A 0x0B       PUSHIB 0x0B
0x32ED  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x32EF  0x24 0x03       SYSCALL0 0x03  // String.Append
0x32F1  0x5E            POPCOPYLOCALB02

                        // }                                                    instructions.hs:751

0x32F2  0x33 0x4A 0x02  JW 0x353C (+586)

                        // case 1:                                              instructions.hs:752

0x32F5  0x45            PUSHI1
0x32F6  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x32F8  0x05            EQ
0x32F9  0x31 0x09 0x01  JZW 0x3402 (+265)

                        // long jumpTarget = address;                           instructions.hs:754

0x32FC  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x32FE  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x3300  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3302  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // address++;                                           instructions.hs:755

0x3304  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x3306  0x45            PUSHI1
0x3307  0x00            ADD
0x3308  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // byte op = code[address];                             instructions.hs:756

0x330A  0x44            PUSHI0
0x330B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x330D  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x330F  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x3311  0x1B 0x1A       POPLOCALB 0x1A (BP+26)

                        // addressContent = addressContent + "0x" + op.ToHexString(2) + "       ";

0x3313  0x4F            PUSHLOCALB02
0x3314  0x37 0x30 0x78  PUSHIW 0x7830
0x3317  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3319  0x24 0x03       SYSCALL0 0x03  // String.Append
0x331B  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x331D  0x1A 0x02       PUSHIB 0x02
0x331F  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x3321  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3323  0x37 0x65 0x08  PUSHIW 0x0865
0x3326  0x1A 0x07       PUSHIB 0x07
0x3328  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x332A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x332C  0x5E            POPCOPYLOCALB02

                        // iSysCall = op;                                       instructions.hs:760

0x332D  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x332F  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // string offsetString;                                 instructions.hs:761

0x3331  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (isStackOffset || isJumpOffset)                   instructions.hs:762

0x3333  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x3335  0x27 0x00       DUP 0x00
0x3337  0x2F 0x05       JNZB 0x333C (+5)
0x3339  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x333B  0x0B            BOOLOR
0x333C  0x2E 0x3E       JZB 0x337A (+62)

                        // int offset = op;                                     instructions.hs:764

0x333E  0x44            PUSHI0
0x333F  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x3341  0x1B 0x1E       POPLOCALB 0x1E (BP+30)

                        // if (offset > 127)                                    instructions.hs:765

0x3343  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x3345  0x1A 0x7F       PUSHIB 0x7F
0x3347  0x16            GTI
0x3348  0x2E 0x0A       JZB 0x3352 (+10)

                        // offset = offset - 256; // 255 -> -1                  instructions.hs:767

0x334A  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x334C  0x37 0x00 0x01  PUSHIW 0x0100
0x334F  0x12            SUBI
0x3350  0x1B 0x1E       POPLOCALB 0x1E (BP+30)

                        // string sign;                                         instructions.hs:769

0x3352  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (offset >= 0)                                     instructions.hs:770

0x3354  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x3356  0x44            PUSHI0
0x3357  0x18            GEI
0x3358  0x2E 0x08       JZB 0x3360 (+8)

                        // offsetString = "+";                                  instructions.hs:772

0x335A  0x1A 0x2B       PUSHIB 0x2B
0x335C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x335E  0x57 0x1C       POPCOPYLOCALB 0x1C (BP+28)

                        // offsetString = offsetString + offset.ToString();

0x3360  0x56 0x1C 0x1E  PUSHLOCALBB 0x1E1C
0x3363  0x2C 0xAC       CALLB 0xAC     // Int.ToString
0x3365  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3367  0x57 0x1C       POPCOPYLOCALB 0x1C (BP+28)

                        // jumpTarget = jumpTarget + offset + long(entryPointAddress);

0x3369  0x56 0x18 0x1E  PUSHLOCALBB 0x1E18
0x336C  0x24 0x35       SYSCALL0 0x35  // Int.ToLong
0x336E  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3370  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3372  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3374  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3376  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // }                                                    instructions.hs:776

0x3378  0x28 0x04       DECSP 0x04

                        // if (isJumpOffset)                                    instructions.hs:777

0x337A  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x337C  0x2E 0x2D       JZB 0x33A9 (+45)

                        // content = content + " 0x" + jumpTarget.ToHexString(4);

0x337E  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3380  0x1A 0x3F       PUSHIB 0x3F
0x3382  0x1A 0x03       PUSHIB 0x03
0x3384  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3386  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3388  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x338A  0x1A 0x04       PUSHIB 0x04
0x338C  0x2C 0xB7       CALLB 0xB7     // Long.ToHexString
0x338E  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3390  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // content = content + " (" + offsetString + ")";

0x3392  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3394  0x37 0x20 0x28  PUSHIW 0x2820
0x3397  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3399  0x24 0x03       SYSCALL0 0x03  // String.Append
0x339B  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x339D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x339F  0x1A 0x29       PUSHIB 0x29
0x33A1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x33A3  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33A5  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:781

0x33A7  0x30 0x56       JB 0x33FD (+86)

                        // else if (isStackOffset)                              instructions.hs:782

0x33A9  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x33AB  0x2E 0x2F       JZB 0x33DA (+47)

                        // content = content + " 0x" + op.ToHexString(2);

0x33AD  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x33AF  0x1A 0x3F       PUSHIB 0x3F
0x33B1  0x1A 0x03       PUSHIB 0x03
0x33B3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x33B5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33B7  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x33B9  0x1A 0x02       PUSHIB 0x02
0x33BB  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x33BD  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33BF  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // content = content + " (BP" + offsetString + ")";

0x33C1  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x33C3  0x37 0x70 0x08  PUSHIW 0x0870
0x33C6  0x1A 0x04       PUSHIB 0x04
0x33C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x33CA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33CC  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x33CE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33D0  0x1A 0x29       PUSHIB 0x29
0x33D2  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x33D4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33D6  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:786

0x33D8  0x30 0x25       JB 0x33FD (+37)

                        // methodKey = "0x" + op.ToHexString(4);                instructions.hs:789

0x33DA  0x37 0x30 0x78  PUSHIW 0x7830
0x33DD  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x33DF  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x33E1  0x1A 0x04       PUSHIB 0x04
0x33E3  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x33E5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33E7  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // content = content + " 0x" + op.ToHexString(2);

0x33E9  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x33EB  0x1A 0x3F       PUSHIB 0x3F
0x33ED  0x1A 0x03       PUSHIB 0x03
0x33EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x33F1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33F3  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x33F5  0x1A 0x02       PUSHIB 0x02
0x33F7  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x33F9  0x24 0x03       SYSCALL0 0x03  // String.Append
0x33FB  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:792

0x33FD  0x28 0x06       DECSP 0x06
0x33FF  0x33 0x3D 0x01  JW 0x353C (+317)

                        // case 2:                                              instructions.hs:793

0x3402  0x1A 0x02       PUSHIB 0x02
0x3404  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x3406  0x05            EQ
0x3407  0x31 0x35 0x01  JZW 0x353C (+309)

                        // long jumpTarget = address;                           instructions.hs:795

0x340A  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x340C  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x340E  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3410  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // address++;                                           instructions.hs:796

0x3412  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x3414  0x45            PUSHI1
0x3415  0x00            ADD
0x3416  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // byte lsb = code[address];                            instructions.hs:797

0x3418  0x44            PUSHI0
0x3419  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x341B  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x341D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x341F  0x1B 0x1A       POPLOCALB 0x1A (BP+26)

                        // addressContent = addressContent + "0x" + lsb.ToHexString(2) + " ";

0x3421  0x4F            PUSHLOCALB02
0x3422  0x37 0x30 0x78  PUSHIW 0x7830
0x3425  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3427  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3429  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x342B  0x1A 0x02       PUSHIB 0x02
0x342D  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x342F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3431  0x1A 0x20       PUSHIB 0x20
0x3433  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3435  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3437  0x5E            POPCOPYLOCALB02

                        // address++;                                           instructions.hs:799

0x3438  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x343A  0x45            PUSHI1
0x343B  0x00            ADD
0x343C  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // byte msb = code[address];                            instructions.hs:800

0x343E  0x44            PUSHI0
0x343F  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x3441  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x3443  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x3445  0x1B 0x1C       POPLOCALB 0x1C (BP+28)

                        // addressContent = addressContent + "0x" + msb.ToHexString(2) + "  ";

0x3447  0x4F            PUSHLOCALB02
0x3448  0x37 0x30 0x78  PUSHIW 0x7830
0x344B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x344D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x344F  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x3451  0x1A 0x02       PUSHIB 0x02
0x3453  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x3455  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3457  0x37 0x20 0x20  PUSHIW 0x2020
0x345A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x345C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x345E  0x5E            POPCOPYLOCALB02

                        // uint op = lsb + (msb << 8);                          instructions.hs:802

0x345F  0x44            PUSHI0
0x3460  0x56 0x1A 0x1C  PUSHLOCALBB 0x1C1A
0x3463  0x1A 0x08       PUSHIB 0x08
0x3465  0x0F            BITSHL
0x3466  0x00            ADD
0x3467  0x1B 0x1E       POPLOCALB 0x1E (BP+30)

                        // string offsetString;                                 instructions.hs:803

0x3469  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (isStackOffset || isJumpOffset)                   instructions.hs:804

0x346B  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x346D  0x27 0x00       DUP 0x00
0x346F  0x2F 0x05       JNZB 0x3474 (+5)
0x3471  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x3473  0x0B            BOOLOR
0x3474  0x2E 0x49       JZB 0x34BD (+73)

                        // long offset = op;                                    instructions.hs:806

0x3476  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x3478  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x347A  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x347C  0x57 0x22       POPCOPYLOCALB 0x22 (BP+34)

                        // if (offset > 32767)                                  instructions.hs:807

0x347E  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x3480  0x37 0xFF 0x7F  PUSHIW 0x7FFF
0x3483  0x24 0x35       SYSCALL0 0x35  // Int.ToLong
0x3485  0x24 0x47       SYSCALL0 0x47  // Long.GT
0x3487  0x2E 0x0D       JZB 0x3494 (+13)

                        // offset = offset - 65536; // 0x10000 -> -1            instructions.hs:809

0x3489  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x348B  0x37 0x74 0x08  PUSHIW 0x0874
0x348E  0x24 0x3E       SYSCALL0 0x3E  // Long.NewFromConstant
0x3490  0x24 0x40       SYSCALL0 0x40  // Long.Sub
0x3492  0x57 0x22       POPCOPYLOCALB 0x22 (BP+34)

                        // string sign;                                         instructions.hs:811

0x3494  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (offset >= 0)                                     instructions.hs:812

0x3496  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x3498  0x44            PUSHI0
0x3499  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x349B  0x24 0x48       SYSCALL0 0x48  // Long.GE
0x349D  0x2E 0x08       JZB 0x34A5 (+8)

                        // offsetString = "+";                                  instructions.hs:814

0x349F  0x1A 0x2B       PUSHIB 0x2B
0x34A1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x34A3  0x57 0x20       POPCOPYLOCALB 0x20 (BP+32)

                        // offsetString = offsetString + offset.ToString();

0x34A5  0x56 0x20 0x22  PUSHLOCALBB 0x2220
0x34A8  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x34AA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x34AC  0x57 0x20       POPCOPYLOCALB 0x20 (BP+32)

                        // jumpTarget = jumpTarget + offset + long(entryPointAddress);

0x34AE  0x56 0x18 0x22  PUSHLOCALBB 0x2218
0x34B1  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x34B3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x34B5  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x34B7  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x34B9  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // }                                                    instructions.hs:818

0x34BB  0x28 0x04       DECSP 0x04

                        // if (isJumpOffset)                                    instructions.hs:819

0x34BD  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x34BF  0x2E 0x2D       JZB 0x34EC (+45)

                        // content = content + " 0x" + jumpTarget.ToHexString(4);

0x34C1  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x34C3  0x1A 0x3F       PUSHIB 0x3F
0x34C5  0x1A 0x03       PUSHIB 0x03
0x34C7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x34C9  0x24 0x03       SYSCALL0 0x03  // String.Append
0x34CB  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x34CD  0x1A 0x04       PUSHIB 0x04
0x34CF  0x2C 0xB7       CALLB 0xB7     // Long.ToHexString
0x34D1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x34D3  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // content = content + " (" + offsetString + ")";

0x34D5  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x34D7  0x37 0x20 0x28  PUSHIW 0x2820
0x34DA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x34DC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x34DE  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x34E0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x34E2  0x1A 0x29       PUSHIB 0x29
0x34E4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x34E6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x34E8  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:823

0x34EA  0x30 0x50       JB 0x353A (+80)

                        // else if (isStackOffset)                              instructions.hs:824

0x34EC  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x34EE  0x2E 0x2F       JZB 0x351D (+47)

                        // content = content + " 0x" + op.ToHexString(4);

0x34F0  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x34F2  0x1A 0x3F       PUSHIB 0x3F
0x34F4  0x1A 0x03       PUSHIB 0x03
0x34F6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x34F8  0x24 0x03       SYSCALL0 0x03  // String.Append
0x34FA  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x34FC  0x1A 0x04       PUSHIB 0x04
0x34FE  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x3500  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3502  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // content = content + " (BP" + offsetString  + ")";

0x3504  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3506  0x37 0x70 0x08  PUSHIW 0x0870
0x3509  0x1A 0x04       PUSHIB 0x04
0x350B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x350D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x350F  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x3511  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3513  0x1A 0x29       PUSHIB 0x29
0x3515  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3517  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3519  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:828

0x351B  0x30 0x1F       JB 0x353A (+31)

                        // methodKey = "0x" + op.ToHexString(4);                instructions.hs:831

0x351D  0x37 0x30 0x78  PUSHIW 0x7830
0x3520  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3522  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x3524  0x1A 0x04       PUSHIB 0x04
0x3526  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x3528  0x24 0x03       SYSCALL0 0x03  // String.Append
0x352A  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // content = content + " " + methodKey;                 instructions.hs:832

0x352C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x352E  0x1A 0x20       PUSHIB 0x20
0x3530  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3532  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3534  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x3536  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3538  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:834

0x353A  0x28 0x0A       DECSP 0x0A

                        // }                                                    instructions.hs:835

0x353C  0x28 0x02       DECSP 0x02

                        // if ((instruction == Instruction.SYSCALL)             instructions.hs:837

0x353E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3540  0x1A 0x26       PUSHIB 0x26
0x3542  0x05            EQ
0x3543  0x27 0x00       DUP 0x00
0x3545  0x2F 0x12       JNZB 0x3557 (+18)
0x3547  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3549  0x1A 0x24       PUSHIB 0x24
0x354B  0x05            EQ
0x354C  0x0B            BOOLOR
0x354D  0x27 0x00       DUP 0x00
0x354F  0x2F 0x08       JNZB 0x3557 (+8)
0x3551  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3553  0x1A 0x25       PUSHIB 0x25
0x3555  0x05            EQ
0x3556  0x0B            BOOLOR
0x3557  0x2E 0x1D       JZB 0x3574 (+29)

                        // string syscallName = SysCalls.GetSysCallName(iSysCall);

0x3559  0x24 0x02       SYSCALL0 0x02  // String.New
0x355B  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x355D  0x2C 0x83       CALLB 0x83     // SysCalls.GetSysCallName
0x355F  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // content = content + "  // " + syscallName;           instructions.hs:843

0x3561  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3563  0x37 0x78 0x08  PUSHIW 0x0878
0x3566  0x1A 0x05       PUSHIB 0x05
0x3568  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x356A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x356C  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x356E  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3570  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:844

0x3572  0x28 0x02       DECSP 0x02

                        // if ((instruction == Instruction.CALLB)               instructions.hs:845

0x3574  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3576  0x1A 0x2C       PUSHIB 0x2C
0x3578  0x05            EQ
0x3579  0x27 0x00       DUP 0x00
0x357B  0x2F 0x08       JNZB 0x3583 (+8)
0x357D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x357F  0x1A 0x34       PUSHIB 0x34
0x3581  0x05            EQ
0x3582  0x0B            BOOLOR
0x3583  0x31 0x7E 0x00  JZW 0x3601 (+126)

                        // <string,variant> methodSymbols =  Code.GetMethodSymbols(methodKey);

0x3586  0x1A 0x0F       PUSHIB 0x0F
0x3588  0x1A 0x14       PUSHIB 0x14
0x358A  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x358C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x358E  0x2C 0x4F       CALLB 0x4F     // Code.GetMethodSymbols
0x3590  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // if ((methodSymbols.Count == 0) && methodKey.StartsWith("0xC"))

0x3592  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x3594  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x3596  0x44            PUSHI0
0x3597  0x05            EQ
0x3598  0x27 0x00       DUP 0x00
0x359A  0x2E 0x0E       JZB 0x35A8 (+14)
0x359C  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x359E  0x37 0x7D 0x08  PUSHIW 0x087D
0x35A1  0x1A 0x03       PUSHIB 0x03
0x35A3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x35A5  0x2C 0xCF       CALLB 0xCF     // String.StartsWith
0x35A7  0x0C            BOOLAND
0x35A8  0x2E 0x1B       JZB 0x35C3 (+27)

                        // methodKey = methodKey.Replace("0xC", "0x0");

0x35AA  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x35AC  0x37 0x7D 0x08  PUSHIW 0x087D
0x35AF  0x1A 0x03       PUSHIB 0x03
0x35B1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x35B3  0x1A 0x93       PUSHIB 0x93
0x35B5  0x1A 0x03       PUSHIB 0x03
0x35B7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x35B9  0x24 0x09       SYSCALL0 0x09  // String.Replace
0x35BB  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // methodSymbols =  Code.GetMethodSymbols(methodKey);

0x35BD  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x35BF  0x2C 0x4F       CALLB 0x4F     // Code.GetMethodSymbols
0x35C1  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // if (methodSymbols.Count > 0)                         instructions.hs:856

0x35C3  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x35C5  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x35C7  0x44            PUSHI0
0x35C8  0x07            GT
0x35C9  0x2E 0x36       JZB 0x35FF (+54)

                        // string name = methodSymbols["name"];                 instructions.hs:858

0x35CB  0x24 0x02       SYSCALL0 0x02  // String.New
0x35CD  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x35CF  0x37 0x31 0x01  PUSHIW 0x0131
0x35D2  0x1A 0x04       PUSHIB 0x04
0x35D4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x35D6  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x35D8  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // if (instruction == Instruction.CALLB)                instructions.hs:859

0x35DA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x35DC  0x1A 0x2C       PUSHIB 0x2C
0x35DE  0x05            EQ
0x35DF  0x2E 0x0D       JZB 0x35EC (+13)

                        // content = content + "  ";                            instructions.hs:861

0x35E1  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x35E3  0x37 0x20 0x20  PUSHIW 0x2020
0x35E6  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x35E8  0x24 0x03       SYSCALL0 0x03  // String.Append
0x35EA  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // content = content + "   // " + name;                 instructions.hs:863

0x35EC  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x35EE  0x37 0x80 0x08  PUSHIW 0x0880
0x35F1  0x1A 0x06       PUSHIB 0x06
0x35F3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x35F5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x35F7  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x35F9  0x24 0x03       SYSCALL0 0x03  // String.Append
0x35FB  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // }                                                    instructions.hs:864

0x35FD  0x28 0x02       DECSP 0x02

                        // }                                                    instructions.hs:865

0x35FF  0x28 0x02       DECSP 0x02

                        // content = addressContent + content;                  instructions.hs:866

0x3601  0x4F            PUSHLOCALB02
0x3602  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3604  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3606  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // return content;                                      instructions.hs:867

0x3608  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x360A  0x2B 0x1C       RETRETB 0x1C


// /source/compiler/codegen/instructions.hs:290
// ####  Instructions.ToString(..)  ####                                        0x0057

0x360C  0x49            ENTER

                        // string result;                                       instructions.hs:291

0x360D  0x24 0x02       SYSCALL0 0x02  // String.New

                        // switch (instruction)                                 instructions.hs:292

0x360F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case Instruction.CAST:                               instructions.hs:294

0x3611  0x1A 0x51       PUSHIB 0x51
0x3613  0x4F            PUSHLOCALB02
0x3614  0x05            EQ
0x3615  0x2E 0x0D       JZB 0x3622 (+13)

                        // result = "CAST";                                     instructions.hs:296

0x3617  0x37 0x86 0x08  PUSHIW 0x0886
0x361A  0x1A 0x04       PUSHIB 0x04
0x361C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x361E  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:297

0x361F  0x33 0x64 0x06  JW 0x3C83 (+1636)

                        // case Instruction.ENTER:                              instructions.hs:298

0x3622  0x1A 0x49       PUSHIB 0x49
0x3624  0x4F            PUSHLOCALB02
0x3625  0x05            EQ
0x3626  0x2E 0x0D       JZB 0x3633 (+13)

                        // result = "ENTER";                                    instructions.hs:300

0x3628  0x37 0x8A 0x08  PUSHIW 0x088A
0x362B  0x1A 0x05       PUSHIB 0x05
0x362D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x362F  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:301

0x3630  0x33 0x53 0x06  JW 0x3C83 (+1619)

                        // case Instruction.ENTERB:                             instructions.hs:302

0x3633  0x1A 0x5F       PUSHIB 0x5F
0x3635  0x4F            PUSHLOCALB02
0x3636  0x05            EQ
0x3637  0x2E 0x0D       JZB 0x3644 (+13)

                        // result = "ENTERB";                                   instructions.hs:304

0x3639  0x37 0x8F 0x08  PUSHIW 0x088F
0x363C  0x1A 0x06       PUSHIB 0x06
0x363E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3640  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:305

0x3641  0x33 0x42 0x06  JW 0x3C83 (+1602)

                        // case Instruction.NOP:                                instructions.hs:306

0x3644  0x1A 0x50       PUSHIB 0x50
0x3646  0x4F            PUSHLOCALB02
0x3647  0x05            EQ
0x3648  0x2E 0x0D       JZB 0x3655 (+13)

                        // result = "NOP";                                      instructions.hs:308

0x364A  0x37 0x95 0x08  PUSHIW 0x0895
0x364D  0x1A 0x03       PUSHIB 0x03
0x364F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3651  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:309

0x3652  0x33 0x31 0x06  JW 0x3C83 (+1585)

                        // case Instruction.CALLB:                              instructions.hs:310

0x3655  0x1A 0x2C       PUSHIB 0x2C
0x3657  0x4F            PUSHLOCALB02
0x3658  0x05            EQ
0x3659  0x2E 0x0D       JZB 0x3666 (+13)

                        // result = "CALLB";                                    instructions.hs:312

0x365B  0x37 0x98 0x08  PUSHIW 0x0898
0x365E  0x1A 0x05       PUSHIB 0x05
0x3660  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3662  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:313

0x3663  0x33 0x20 0x06  JW 0x3C83 (+1568)

                        // case Instruction.TESTBPB:                            instructions.hs:314

0x3666  0x1A 0x2D       PUSHIB 0x2D
0x3668  0x4F            PUSHLOCALB02
0x3669  0x05            EQ
0x366A  0x2E 0x0D       JZB 0x3677 (+13)

                        // result = "TESTBPB";                                  instructions.hs:316

0x366C  0x37 0x9D 0x08  PUSHIW 0x089D
0x366F  0x1A 0x07       PUSHIB 0x07
0x3671  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3673  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:317

0x3674  0x33 0x0F 0x06  JW 0x3C83 (+1551)

                        // case Instruction.CALLW:                              instructions.hs:318

0x3677  0x1A 0x34       PUSHIB 0x34
0x3679  0x4F            PUSHLOCALB02
0x367A  0x05            EQ
0x367B  0x2E 0x0D       JZB 0x3688 (+13)

                        // result = "CALLW";                                    instructions.hs:320

0x367D  0x37 0xA4 0x08  PUSHIW 0x08A4
0x3680  0x1A 0x05       PUSHIB 0x05
0x3682  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3684  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:321

0x3685  0x33 0xFE 0x05  JW 0x3C83 (+1534)

                        // case Instruction.CALLREL:                            instructions.hs:322

0x3688  0x1A 0x4B       PUSHIB 0x4B
0x368A  0x4F            PUSHLOCALB02
0x368B  0x05            EQ
0x368C  0x2E 0x0D       JZB 0x3699 (+13)

                        // result = "CALLREL";                                  instructions.hs:324

0x368E  0x37 0xA9 0x08  PUSHIW 0x08A9
0x3691  0x1A 0x07       PUSHIB 0x07
0x3693  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3695  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:325

0x3696  0x33 0xED 0x05  JW 0x3C83 (+1517)

                        // case Instruction.RET0:                               instructions.hs:326

0x3699  0x1A 0x4A       PUSHIB 0x4A
0x369B  0x4F            PUSHLOCALB02
0x369C  0x05            EQ
0x369D  0x2E 0x0D       JZB 0x36AA (+13)

                        // result = "RET0";                                     instructions.hs:328

0x369F  0x37 0xB0 0x08  PUSHIW 0x08B0
0x36A2  0x1A 0x04       PUSHIB 0x04
0x36A4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x36A6  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:329

0x36A7  0x33 0xDC 0x05  JW 0x3C83 (+1500)

                        // case Instruction.RETB:                               instructions.hs:330

0x36AA  0x1A 0x2A       PUSHIB 0x2A
0x36AC  0x4F            PUSHLOCALB02
0x36AD  0x05            EQ
0x36AE  0x2E 0x0D       JZB 0x36BB (+13)

                        // result = "RETB";                                     instructions.hs:332

0x36B0  0x37 0xB4 0x08  PUSHIW 0x08B4
0x36B3  0x1A 0x04       PUSHIB 0x04
0x36B5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x36B7  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:333

0x36B8  0x33 0xCB 0x05  JW 0x3C83 (+1483)

                        // case Instruction.RETW:                               instructions.hs:334

0x36BB  0x1A 0x35       PUSHIB 0x35
0x36BD  0x4F            PUSHLOCALB02
0x36BE  0x05            EQ
0x36BF  0x2E 0x0D       JZB 0x36CC (+13)

                        // result = "RETW";                                     instructions.hs:336

0x36C1  0x37 0xB8 0x08  PUSHIW 0x08B8
0x36C4  0x1A 0x04       PUSHIB 0x04
0x36C6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x36C8  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:337

0x36C9  0x33 0xBA 0x05  JW 0x3C83 (+1466)

                        // case Instruction.RETRETB:                            instructions.hs:338

0x36CC  0x1A 0x2B       PUSHIB 0x2B
0x36CE  0x4F            PUSHLOCALB02
0x36CF  0x05            EQ
0x36D0  0x2E 0x0D       JZB 0x36DD (+13)

                        // result = "RETRETB";                                  instructions.hs:340

0x36D2  0x37 0xBC 0x08  PUSHIW 0x08BC
0x36D5  0x1A 0x07       PUSHIB 0x07
0x36D7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x36D9  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:341

0x36DA  0x33 0xA9 0x05  JW 0x3C83 (+1449)

                        // case Instruction.RETRETW:                            instructions.hs:342

0x36DD  0x1A 0x36       PUSHIB 0x36
0x36DF  0x4F            PUSHLOCALB02
0x36E0  0x05            EQ
0x36E1  0x2E 0x0D       JZB 0x36EE (+13)

                        // result = "RETRETW";                                  instructions.hs:344

0x36E3  0x37 0xC3 0x08  PUSHIW 0x08C3
0x36E6  0x1A 0x07       PUSHIB 0x07
0x36E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x36EA  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:345

0x36EB  0x33 0x98 0x05  JW 0x3C83 (+1432)

                        // case Instruction.SYSCALL:                            instructions.hs:346

0x36EE  0x1A 0x26       PUSHIB 0x26
0x36F0  0x4F            PUSHLOCALB02
0x36F1  0x05            EQ
0x36F2  0x2E 0x0D       JZB 0x36FF (+13)

                        // result = "SYSCALL";                                  instructions.hs:348

0x36F4  0x37 0xCA 0x08  PUSHIW 0x08CA
0x36F7  0x1A 0x07       PUSHIB 0x07
0x36F9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x36FB  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:349

0x36FC  0x33 0x87 0x05  JW 0x3C83 (+1415)

                        // case Instruction.SYSCALL0:                           instructions.hs:350

0x36FF  0x1A 0x24       PUSHIB 0x24
0x3701  0x4F            PUSHLOCALB02
0x3702  0x05            EQ
0x3703  0x2E 0x0D       JZB 0x3710 (+13)

                        // result = "SYSCALL0";                                 instructions.hs:352

0x3705  0x37 0xD1 0x08  PUSHIW 0x08D1
0x3708  0x1A 0x08       PUSHIB 0x08
0x370A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x370C  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:353

0x370D  0x33 0x76 0x05  JW 0x3C83 (+1398)

                        // case Instruction.SYSCALL1:                           instructions.hs:354

0x3710  0x1A 0x25       PUSHIB 0x25
0x3712  0x4F            PUSHLOCALB02
0x3713  0x05            EQ
0x3714  0x2E 0x0D       JZB 0x3721 (+13)

                        // result = "SYSCALL1";                                 instructions.hs:356

0x3716  0x37 0xD9 0x08  PUSHIW 0x08D9
0x3719  0x1A 0x08       PUSHIB 0x08
0x371B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x371D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:357

0x371E  0x33 0x65 0x05  JW 0x3C83 (+1381)

                        // case Instruction.PUSHI0:                             instructions.hs:358

0x3721  0x1A 0x44       PUSHIB 0x44
0x3723  0x4F            PUSHLOCALB02
0x3724  0x05            EQ
0x3725  0x2E 0x0D       JZB 0x3732 (+13)

                        // result = "PUSHI0";                                   instructions.hs:360

0x3727  0x37 0xE1 0x08  PUSHIW 0x08E1
0x372A  0x1A 0x06       PUSHIB 0x06
0x372C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x372E  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:361

0x372F  0x33 0x54 0x05  JW 0x3C83 (+1364)

                        // case Instruction.PUSHI1:                             instructions.hs:362

0x3732  0x1A 0x45       PUSHIB 0x45
0x3734  0x4F            PUSHLOCALB02
0x3735  0x05            EQ
0x3736  0x2E 0x0D       JZB 0x3743 (+13)

                        // result = "PUSHI1";                                   instructions.hs:364

0x3738  0x37 0xE7 0x08  PUSHIW 0x08E7
0x373B  0x1A 0x06       PUSHIB 0x06
0x373D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x373F  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:365

0x3740  0x33 0x43 0x05  JW 0x3C83 (+1347)

                        // case Instruction.PUSHIM1:                            instructions.hs:366

0x3743  0x1A 0x46       PUSHIB 0x46
0x3745  0x4F            PUSHLOCALB02
0x3746  0x05            EQ
0x3747  0x2E 0x0D       JZB 0x3754 (+13)

                        // result = "PUSHIM1";                                  instructions.hs:368

0x3749  0x37 0xED 0x08  PUSHIW 0x08ED
0x374C  0x1A 0x07       PUSHIB 0x07
0x374E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3750  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:369

0x3751  0x33 0x32 0x05  JW 0x3C83 (+1330)

                        // case Instruction.PUSHGP:                             instructions.hs:370

0x3754  0x1A 0x47       PUSHIB 0x47
0x3756  0x4F            PUSHLOCALB02
0x3757  0x05            EQ
0x3758  0x2E 0x0D       JZB 0x3765 (+13)

                        // result = "PUSHGP";                                   instructions.hs:372

0x375A  0x37 0xF4 0x08  PUSHIW 0x08F4
0x375D  0x1A 0x06       PUSHIB 0x06
0x375F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3761  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:373

0x3762  0x33 0x21 0x05  JW 0x3C83 (+1313)

                        // case Instruction.PUSHIB:                             instructions.hs:374

0x3765  0x1A 0x1A       PUSHIB 0x1A
0x3767  0x4F            PUSHLOCALB02
0x3768  0x05            EQ
0x3769  0x2E 0x0D       JZB 0x3776 (+13)

                        // result = "PUSHIB";                                   instructions.hs:376

0x376B  0x37 0xFA 0x08  PUSHIW 0x08FA
0x376E  0x1A 0x06       PUSHIB 0x06
0x3770  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3772  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:377

0x3773  0x33 0x10 0x05  JW 0x3C83 (+1296)

                        // case Instruction.PUSHIW:                             instructions.hs:378

0x3776  0x1A 0x37       PUSHIB 0x37
0x3778  0x4F            PUSHLOCALB02
0x3779  0x05            EQ
0x377A  0x2E 0x0D       JZB 0x3787 (+13)

                        // result = "PUSHIW";                                   instructions.hs:380

0x377C  0x37 0x00 0x09  PUSHIW 0x0900
0x377F  0x1A 0x06       PUSHIB 0x06
0x3781  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3783  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:381

0x3784  0x33 0xFF 0x04  JW 0x3C83 (+1279)

                        // case Instruction.PUSHIWLE:                           instructions.hs:382

0x3787  0x1A 0x40       PUSHIB 0x40
0x3789  0x4F            PUSHLOCALB02
0x378A  0x05            EQ
0x378B  0x2E 0x0D       JZB 0x3798 (+13)

                        // result = "PUSHIWLE";                                 instructions.hs:384

0x378D  0x37 0x06 0x09  PUSHIW 0x0906
0x3790  0x1A 0x08       PUSHIB 0x08
0x3792  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3794  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:385

0x3795  0x33 0xEE 0x04  JW 0x3C83 (+1262)

                        // case Instruction.PUSHIWLT:                           instructions.hs:386

0x3798  0x1A 0x55       PUSHIB 0x55
0x379A  0x4F            PUSHLOCALB02
0x379B  0x05            EQ
0x379C  0x2E 0x0D       JZB 0x37A9 (+13)

                        // result = "PUSHIWLT";                                 instructions.hs:388

0x379E  0x37 0x0E 0x09  PUSHIW 0x090E
0x37A1  0x1A 0x08       PUSHIB 0x08
0x37A3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x37A5  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:389

0x37A6  0x33 0xDD 0x04  JW 0x3C83 (+1245)

                        // case Instruction.INCGLOBALB:                         instructions.hs:391

0x37A9  0x1A 0x53       PUSHIB 0x53
0x37AB  0x4F            PUSHLOCALB02
0x37AC  0x05            EQ
0x37AD  0x2E 0x0D       JZB 0x37BA (+13)

                        // result = "INCGLOBALB";                               instructions.hs:393

0x37AF  0x37 0x16 0x09  PUSHIW 0x0916
0x37B2  0x1A 0x0A       PUSHIB 0x0A
0x37B4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x37B6  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:394

0x37B7  0x33 0xCC 0x04  JW 0x3C83 (+1228)

                        // case Instruction.DECGLOBALB:                         instructions.hs:395

0x37BA  0x1A 0x54       PUSHIB 0x54
0x37BC  0x4F            PUSHLOCALB02
0x37BD  0x05            EQ
0x37BE  0x2E 0x0D       JZB 0x37CB (+13)

                        // result = "DECGLOBALB";                               instructions.hs:397

0x37C0  0x37 0x20 0x09  PUSHIW 0x0920
0x37C3  0x1A 0x0A       PUSHIB 0x0A
0x37C5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x37C7  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:398

0x37C8  0x33 0xBB 0x04  JW 0x3C83 (+1211)

                        // case Instruction.INCLOCALB:                          instructions.hs:399

0x37CB  0x1A 0x22       PUSHIB 0x22
0x37CD  0x4F            PUSHLOCALB02
0x37CE  0x05            EQ
0x37CF  0x2E 0x0D       JZB 0x37DC (+13)

                        // result = "INCLOCALB";                                instructions.hs:401

0x37D1  0x37 0x2A 0x09  PUSHIW 0x092A
0x37D4  0x1A 0x09       PUSHIB 0x09
0x37D6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x37D8  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:402

0x37D9  0x33 0xAA 0x04  JW 0x3C83 (+1194)

                        // case Instruction.INCLOCALBB:                         instructions.hs:403

0x37DC  0x1A 0x3F       PUSHIB 0x3F
0x37DE  0x4F            PUSHLOCALB02
0x37DF  0x05            EQ
0x37E0  0x2E 0x0D       JZB 0x37ED (+13)

                        // result = "INCLOCALBB";                               instructions.hs:405

0x37E2  0x37 0x33 0x09  PUSHIW 0x0933
0x37E5  0x1A 0x0A       PUSHIB 0x0A
0x37E7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x37E9  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:406

0x37EA  0x33 0x99 0x04  JW 0x3C83 (+1177)

                        // case Instruction.DECLOCALB:                          instructions.hs:407

0x37ED  0x1A 0x23       PUSHIB 0x23
0x37EF  0x4F            PUSHLOCALB02
0x37F0  0x05            EQ
0x37F1  0x2E 0x0D       JZB 0x37FE (+13)

                        // result = "DECLOCALB";                                instructions.hs:409

0x37F3  0x37 0x3D 0x09  PUSHIW 0x093D
0x37F6  0x1A 0x09       PUSHIB 0x09
0x37F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x37FA  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:410

0x37FB  0x33 0x88 0x04  JW 0x3C83 (+1160)

                        // case Instruction.POPGLOBALB:                         instructions.hs:412

0x37FE  0x1A 0x1F       PUSHIB 0x1F
0x3800  0x4F            PUSHLOCALB02
0x3801  0x05            EQ
0x3802  0x2E 0x0D       JZB 0x380F (+13)

                        // result = "POPGLOBALB";                               instructions.hs:414

0x3804  0x37 0x46 0x09  PUSHIW 0x0946
0x3807  0x1A 0x0A       PUSHIB 0x0A
0x3809  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x380B  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:415

0x380C  0x33 0x77 0x04  JW 0x3C83 (+1143)

                        // case Instruction.POPGLOBALW:                         instructions.hs:416

0x380F  0x1A 0x3C       PUSHIB 0x3C
0x3811  0x4F            PUSHLOCALB02
0x3812  0x05            EQ
0x3813  0x2E 0x0D       JZB 0x3820 (+13)

                        // result = "POPGLOBALW";                               instructions.hs:418

0x3815  0x37 0x50 0x09  PUSHIW 0x0950
0x3818  0x1A 0x0A       PUSHIB 0x0A
0x381A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x381C  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:419

0x381D  0x33 0x66 0x04  JW 0x3C83 (+1126)

                        // case Instruction.POPLOCALB:                          instructions.hs:420

0x3820  0x1A 0x1B       PUSHIB 0x1B
0x3822  0x4F            PUSHLOCALB02
0x3823  0x05            EQ
0x3824  0x2E 0x0D       JZB 0x3831 (+13)

                        // result = "POPLOCALB";                                instructions.hs:422

0x3826  0x37 0x5A 0x09  PUSHIW 0x095A
0x3829  0x1A 0x09       PUSHIB 0x09
0x382B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x382D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:423

0x382E  0x33 0x55 0x04  JW 0x3C83 (+1109)

                        // case Instruction.POPLOCALW:                          instructions.hs:424

0x3831  0x1A 0x38       PUSHIB 0x38
0x3833  0x4F            PUSHLOCALB02
0x3834  0x05            EQ
0x3835  0x2E 0x0D       JZB 0x3842 (+13)

                        // result = "POPLOCALW";                                instructions.hs:426

0x3837  0x37 0x63 0x09  PUSHIW 0x0963
0x383A  0x1A 0x09       PUSHIB 0x09
0x383C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x383E  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:427

0x383F  0x33 0x44 0x04  JW 0x3C83 (+1092)

                        // case Instruction.POPRELB:                            instructions.hs:428

0x3842  0x1A 0x1D       PUSHIB 0x1D
0x3844  0x4F            PUSHLOCALB02
0x3845  0x05            EQ
0x3846  0x2E 0x0D       JZB 0x3853 (+13)

                        // result = "POPRELB";                                  instructions.hs:430

0x3848  0x37 0x6C 0x09  PUSHIW 0x096C
0x384B  0x1A 0x07       PUSHIB 0x07
0x384D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x384F  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:431

0x3850  0x33 0x33 0x04  JW 0x3C83 (+1075)

                        // case Instruction.POPRELW:                            instructions.hs:432

0x3853  0x1A 0x3A       PUSHIB 0x3A
0x3855  0x4F            PUSHLOCALB02
0x3856  0x05            EQ
0x3857  0x2E 0x0D       JZB 0x3864 (+13)

                        // result = "POPRELW";                                  instructions.hs:434

0x3859  0x37 0x73 0x09  PUSHIW 0x0973
0x385C  0x1A 0x07       PUSHIB 0x07
0x385E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3860  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:435

0x3861  0x33 0x22 0x04  JW 0x3C83 (+1058)

                        // case Instruction.POPCOPYGLOBALB:                     instructions.hs:437

0x3864  0x1A 0x59       PUSHIB 0x59
0x3866  0x4F            PUSHLOCALB02
0x3867  0x05            EQ
0x3868  0x2E 0x0D       JZB 0x3875 (+13)

                        // result = "POPCOPYGLOBALB";                           instructions.hs:439

0x386A  0x37 0x7A 0x09  PUSHIW 0x097A
0x386D  0x1A 0x0E       PUSHIB 0x0E
0x386F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3871  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:440

0x3872  0x33 0x11 0x04  JW 0x3C83 (+1041)

                        // case Instruction.POPCOPYGLOBALW:                     instructions.hs:441

0x3875  0x1A 0x5C       PUSHIB 0x5C
0x3877  0x4F            PUSHLOCALB02
0x3878  0x05            EQ
0x3879  0x2E 0x0D       JZB 0x3886 (+13)

                        // result = "POPCOPYGLOBALW";                           instructions.hs:443

0x387B  0x37 0x88 0x09  PUSHIW 0x0988
0x387E  0x1A 0x0E       PUSHIB 0x0E
0x3880  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3882  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:444

0x3883  0x33 0x00 0x04  JW 0x3C83 (+1024)

                        // case Instruction.POPCOPYLOCALB:                      instructions.hs:445

0x3886  0x1A 0x57       PUSHIB 0x57
0x3888  0x4F            PUSHLOCALB02
0x3889  0x05            EQ
0x388A  0x2E 0x0D       JZB 0x3897 (+13)

                        // result = "POPCOPYLOCALB";                            instructions.hs:447

0x388C  0x37 0x96 0x09  PUSHIW 0x0996
0x388F  0x1A 0x0D       PUSHIB 0x0D
0x3891  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3893  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:448

0x3894  0x33 0xEF 0x03  JW 0x3C83 (+1007)

                        // case Instruction.POPCOPYLOCALW:                      instructions.hs:449

0x3897  0x1A 0x5A       PUSHIB 0x5A
0x3899  0x4F            PUSHLOCALB02
0x389A  0x05            EQ
0x389B  0x2E 0x0D       JZB 0x38A8 (+13)

                        // result = "POPCOPYLOCALW";                            instructions.hs:451

0x389D  0x37 0xA3 0x09  PUSHIW 0x09A3
0x38A0  0x1A 0x0D       PUSHIB 0x0D
0x38A2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x38A4  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:452

0x38A5  0x33 0xDE 0x03  JW 0x3C83 (+990)

                        // case Instruction.POPCOPYRELB:                        instructions.hs:453

0x38A8  0x1A 0x58       PUSHIB 0x58
0x38AA  0x4F            PUSHLOCALB02
0x38AB  0x05            EQ
0x38AC  0x2E 0x0D       JZB 0x38B9 (+13)

                        // result = "POPCOPYRELB";                              instructions.hs:455

0x38AE  0x37 0xB0 0x09  PUSHIW 0x09B0
0x38B1  0x1A 0x0B       PUSHIB 0x0B
0x38B3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x38B5  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:456

0x38B6  0x33 0xCD 0x03  JW 0x3C83 (+973)

                        // case Instruction.POPCOPYRELW:                        instructions.hs:457

0x38B9  0x1A 0x5B       PUSHIB 0x5B
0x38BB  0x4F            PUSHLOCALB02
0x38BC  0x05            EQ
0x38BD  0x2E 0x0D       JZB 0x38CA (+13)

                        // result = "POPCOPYRELW";                              instructions.hs:459

0x38BF  0x37 0xBB 0x09  PUSHIW 0x09BB
0x38C2  0x1A 0x0B       PUSHIB 0x0B
0x38C4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x38C6  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:460

0x38C7  0x33 0xBC 0x03  JW 0x3C83 (+956)

                        // case Instruction.POPLOCALB02:                        instructions.hs:463

0x38CA  0x1A 0x4D       PUSHIB 0x4D
0x38CC  0x4F            PUSHLOCALB02
0x38CD  0x05            EQ
0x38CE  0x2E 0x0D       JZB 0x38DB (+13)

                        // result = "POPLOCALB02";                              instructions.hs:465

0x38D0  0x37 0xC6 0x09  PUSHIW 0x09C6
0x38D3  0x1A 0x0B       PUSHIB 0x0B
0x38D5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x38D7  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:466

0x38D8  0x33 0xAB 0x03  JW 0x3C83 (+939)

                        // case Instruction.POPLOCALB00:                        instructions.hs:467

0x38DB  0x1A 0x4C       PUSHIB 0x4C
0x38DD  0x4F            PUSHLOCALB02
0x38DE  0x05            EQ
0x38DF  0x2E 0x0D       JZB 0x38EC (+13)

                        // result = "POPLOCALB00";                              instructions.hs:469

0x38E1  0x37 0xD1 0x09  PUSHIW 0x09D1
0x38E4  0x1A 0x0B       PUSHIB 0x0B
0x38E6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x38E8  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:470

0x38E9  0x33 0x9A 0x03  JW 0x3C83 (+922)

                        // case Instruction.POPCOPYLOCALB02:                    instructions.hs:471

0x38EC  0x1A 0x5E       PUSHIB 0x5E
0x38EE  0x4F            PUSHLOCALB02
0x38EF  0x05            EQ
0x38F0  0x2E 0x0D       JZB 0x38FD (+13)

                        // result = "POPCOPYLOCALB02";                          instructions.hs:473

0x38F2  0x37 0xDC 0x09  PUSHIW 0x09DC
0x38F5  0x1A 0x0F       PUSHIB 0x0F
0x38F7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x38F9  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:474

0x38FA  0x33 0x89 0x03  JW 0x3C83 (+905)

                        // case Instruction.POPCOPYLOCALB00:                    instructions.hs:475

0x38FD  0x1A 0x5D       PUSHIB 0x5D
0x38FF  0x4F            PUSHLOCALB02
0x3900  0x05            EQ
0x3901  0x2E 0x0D       JZB 0x390E (+13)

                        // result = "POPCOPYLOCALB00";                          instructions.hs:477

0x3903  0x37 0xEB 0x09  PUSHIW 0x09EB
0x3906  0x1A 0x0F       PUSHIB 0x0F
0x3908  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x390A  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:478

0x390B  0x33 0x78 0x03  JW 0x3C83 (+888)

                        // case Instruction.PUSHGLOBALB:                        instructions.hs:481

0x390E  0x1A 0x20       PUSHIB 0x20
0x3910  0x4F            PUSHLOCALB02
0x3911  0x05            EQ
0x3912  0x2E 0x0D       JZB 0x391F (+13)

                        // result = "PUSHGLOBALB";                              instructions.hs:483

0x3914  0x37 0xFA 0x09  PUSHIW 0x09FA
0x3917  0x1A 0x0B       PUSHIB 0x0B
0x3919  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x391B  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:484

0x391C  0x33 0x67 0x03  JW 0x3C83 (+871)

                        // case Instruction.PUSHGLOBALBB:                       instructions.hs:485

0x391F  0x1A 0x52       PUSHIB 0x52
0x3921  0x4F            PUSHLOCALB02
0x3922  0x05            EQ
0x3923  0x2E 0x0D       JZB 0x3930 (+13)

                        // result = "PUSHGLOBALBB";                             instructions.hs:487

0x3925  0x37 0x05 0x0A  PUSHIW 0x0A05
0x3928  0x1A 0x0C       PUSHIB 0x0C
0x392A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x392C  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:488

0x392D  0x33 0x56 0x03  JW 0x3C83 (+854)

                        // case Instruction.PUSHLOCALBB:                        instructions.hs:489

0x3930  0x1A 0x56       PUSHIB 0x56
0x3932  0x4F            PUSHLOCALB02
0x3933  0x05            EQ
0x3934  0x2E 0x0D       JZB 0x3941 (+13)

                        // result = "PUSHLOCALBB";                              instructions.hs:491

0x3936  0x37 0x11 0x0A  PUSHIW 0x0A11
0x3939  0x1A 0x0B       PUSHIB 0x0B
0x393B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x393D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:492

0x393E  0x33 0x45 0x03  JW 0x3C83 (+837)

                        // case Instruction.PUSHGLOBALW:                        instructions.hs:493

0x3941  0x1A 0x3D       PUSHIB 0x3D
0x3943  0x4F            PUSHLOCALB02
0x3944  0x05            EQ
0x3945  0x2E 0x0D       JZB 0x3952 (+13)

                        // result = "PUSHGLOBALW";                              instructions.hs:495

0x3947  0x37 0x1C 0x0A  PUSHIW 0x0A1C
0x394A  0x1A 0x0B       PUSHIB 0x0B
0x394C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x394E  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:496

0x394F  0x33 0x34 0x03  JW 0x3C83 (+820)

                        // case Instruction.PUSHSTACKADDRB:                     instructions.hs:497

0x3952  0x1A 0x21       PUSHIB 0x21
0x3954  0x4F            PUSHLOCALB02
0x3955  0x05            EQ
0x3956  0x2E 0x0D       JZB 0x3963 (+13)

                        // result = "PUSHSTACKADDRB";                           instructions.hs:499

0x3958  0x37 0x27 0x0A  PUSHIW 0x0A27
0x395B  0x1A 0x0E       PUSHIB 0x0E
0x395D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x395F  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:500

0x3960  0x33 0x23 0x03  JW 0x3C83 (+803)

                        // case Instruction.PUSHSTACKADDRW:                     instructions.hs:501

0x3963  0x1A 0x3E       PUSHIB 0x3E
0x3965  0x4F            PUSHLOCALB02
0x3966  0x05            EQ
0x3967  0x2E 0x0D       JZB 0x3974 (+13)

                        // result = "PUSHSTACKADDRW";                           instructions.hs:503

0x3969  0x37 0x35 0x0A  PUSHIW 0x0A35
0x396C  0x1A 0x0E       PUSHIB 0x0E
0x396E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3970  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:504

0x3971  0x33 0x12 0x03  JW 0x3C83 (+786)

                        // case Instruction.PUSHLOCALB:                         instructions.hs:507

0x3974  0x1A 0x1C       PUSHIB 0x1C
0x3976  0x4F            PUSHLOCALB02
0x3977  0x05            EQ
0x3978  0x2E 0x0D       JZB 0x3985 (+13)

                        // result = "PUSHLOCALB";                               instructions.hs:509

0x397A  0x37 0x11 0x0A  PUSHIW 0x0A11
0x397D  0x1A 0x0A       PUSHIB 0x0A
0x397F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3981  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:510

0x3982  0x33 0x01 0x03  JW 0x3C83 (+769)

                        // case Instruction.PUSHLOCALB00:                       instructions.hs:511

0x3985  0x1A 0x4E       PUSHIB 0x4E
0x3987  0x4F            PUSHLOCALB02
0x3988  0x05            EQ
0x3989  0x2E 0x0D       JZB 0x3996 (+13)

                        // result = "PUSHLOCALB00";                             instructions.hs:513

0x398B  0x37 0x43 0x0A  PUSHIW 0x0A43
0x398E  0x1A 0x0C       PUSHIB 0x0C
0x3990  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3992  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:514

0x3993  0x33 0xF0 0x02  JW 0x3C83 (+752)

                        // case Instruction.PUSHLOCALB02:                       instructions.hs:515

0x3996  0x1A 0x4F       PUSHIB 0x4F
0x3998  0x4F            PUSHLOCALB02
0x3999  0x05            EQ
0x399A  0x2E 0x0D       JZB 0x39A7 (+13)

                        // result = "PUSHLOCALB02";                             instructions.hs:517

0x399C  0x37 0x4F 0x0A  PUSHIW 0x0A4F
0x399F  0x1A 0x0C       PUSHIB 0x0C
0x39A1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x39A3  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:518

0x39A4  0x33 0xDF 0x02  JW 0x3C83 (+735)

                        // case Instruction.PUSHLOCALW:                         instructions.hs:519

0x39A7  0x1A 0x39       PUSHIB 0x39
0x39A9  0x4F            PUSHLOCALB02
0x39AA  0x05            EQ
0x39AB  0x2E 0x0D       JZB 0x39B8 (+13)

                        // result = "PUSHLOCALW";                               instructions.hs:521

0x39AD  0x37 0x5B 0x0A  PUSHIW 0x0A5B
0x39B0  0x1A 0x0A       PUSHIB 0x0A
0x39B2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x39B4  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:522

0x39B5  0x33 0xCE 0x02  JW 0x3C83 (+718)

                        // case Instruction.PUSHRELB:                           instructions.hs:524

0x39B8  0x1A 0x1E       PUSHIB 0x1E
0x39BA  0x4F            PUSHLOCALB02
0x39BB  0x05            EQ
0x39BC  0x2E 0x0D       JZB 0x39C9 (+13)

                        // result = "PUSHRELB";                                 instructions.hs:526

0x39BE  0x37 0x65 0x0A  PUSHIW 0x0A65
0x39C1  0x1A 0x08       PUSHIB 0x08
0x39C3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x39C5  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:527

0x39C6  0x33 0xBD 0x02  JW 0x3C83 (+701)

                        // case Instruction.PUSHRELW:                           instructions.hs:528

0x39C9  0x1A 0x3B       PUSHIB 0x3B
0x39CB  0x4F            PUSHLOCALB02
0x39CC  0x05            EQ
0x39CD  0x2E 0x0D       JZB 0x39DA (+13)

                        // result = "PUSHRELW";                                 instructions.hs:530

0x39CF  0x37 0x6D 0x0A  PUSHIW 0x0A6D
0x39D2  0x1A 0x08       PUSHIB 0x08
0x39D4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x39D6  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:531

0x39D7  0x33 0xAC 0x02  JW 0x3C83 (+684)

                        // case Instruction.BOOLNOT:                            instructions.hs:533

0x39DA  0x1A 0x41       PUSHIB 0x41
0x39DC  0x4F            PUSHLOCALB02
0x39DD  0x05            EQ
0x39DE  0x2E 0x0D       JZB 0x39EB (+13)

                        // result = "BOOLNOT";                                  instructions.hs:535

0x39E0  0x37 0x75 0x0A  PUSHIW 0x0A75
0x39E3  0x1A 0x07       PUSHIB 0x07
0x39E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x39E7  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:536

0x39E8  0x33 0x9B 0x02  JW 0x3C83 (+667)

                        // case Instruction.BOOLAND:                            instructions.hs:537

0x39EB  0x1A 0x0C       PUSHIB 0x0C
0x39ED  0x4F            PUSHLOCALB02
0x39EE  0x05            EQ
0x39EF  0x2E 0x0D       JZB 0x39FC (+13)

                        // result = "BOOLAND";                                  instructions.hs:539

0x39F1  0x37 0x7C 0x0A  PUSHIW 0x0A7C
0x39F4  0x1A 0x07       PUSHIB 0x07
0x39F6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x39F8  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:540

0x39F9  0x33 0x8A 0x02  JW 0x3C83 (+650)

                        // case Instruction.BOOLOR:                             instructions.hs:541

0x39FC  0x1A 0x0B       PUSHIB 0x0B
0x39FE  0x4F            PUSHLOCALB02
0x39FF  0x05            EQ
0x3A00  0x2E 0x0D       JZB 0x3A0D (+13)

                        // result = "BOOLOR";                                   instructions.hs:543

0x3A02  0x37 0x83 0x0A  PUSHIW 0x0A83
0x3A05  0x1A 0x06       PUSHIB 0x06
0x3A07  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A09  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:544

0x3A0A  0x33 0x79 0x02  JW 0x3C83 (+633)

                        // case Instruction.BITAND:                             instructions.hs:545

0x3A0D  0x1A 0x0E       PUSHIB 0x0E
0x3A0F  0x4F            PUSHLOCALB02
0x3A10  0x05            EQ
0x3A11  0x2E 0x0D       JZB 0x3A1E (+13)

                        // result = "BITAND";                                   instructions.hs:547

0x3A13  0x37 0x89 0x0A  PUSHIW 0x0A89
0x3A16  0x1A 0x06       PUSHIB 0x06
0x3A18  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A1A  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:548

0x3A1B  0x33 0x68 0x02  JW 0x3C83 (+616)

                        // case Instruction.BITOR:                              instructions.hs:549

0x3A1E  0x1A 0x0D       PUSHIB 0x0D
0x3A20  0x4F            PUSHLOCALB02
0x3A21  0x05            EQ
0x3A22  0x2E 0x0D       JZB 0x3A2F (+13)

                        // result = "BITOR";                                    instructions.hs:551

0x3A24  0x37 0x8F 0x0A  PUSHIW 0x0A8F
0x3A27  0x1A 0x05       PUSHIB 0x05
0x3A29  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A2B  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:552

0x3A2C  0x33 0x57 0x02  JW 0x3C83 (+599)

                        // case Instruction.BITNOT:                             instructions.hs:553

0x3A2F  0x1A 0x42       PUSHIB 0x42
0x3A31  0x4F            PUSHLOCALB02
0x3A32  0x05            EQ
0x3A33  0x2E 0x0D       JZB 0x3A40 (+13)

                        // result = "BITNOT";                                   instructions.hs:555

0x3A35  0x37 0x94 0x0A  PUSHIW 0x0A94
0x3A38  0x1A 0x06       PUSHIB 0x06
0x3A3A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A3C  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:556

0x3A3D  0x33 0x46 0x02  JW 0x3C83 (+582)

                        // case Instruction.JB:                                 instructions.hs:558

0x3A40  0x1A 0x30       PUSHIB 0x30
0x3A42  0x4F            PUSHLOCALB02
0x3A43  0x05            EQ
0x3A44  0x2E 0x0B       JZB 0x3A4F (+11)

                        // result = "JB";                                       instructions.hs:560

0x3A46  0x37 0x4A 0x42  PUSHIW 0x424A
0x3A49  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3A4B  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:561

0x3A4C  0x33 0x37 0x02  JW 0x3C83 (+567)

                        // case Instruction.JZB:                                instructions.hs:562

0x3A4F  0x1A 0x2E       PUSHIB 0x2E
0x3A51  0x4F            PUSHLOCALB02
0x3A52  0x05            EQ
0x3A53  0x2E 0x0D       JZB 0x3A60 (+13)

                        // result = "JZB";                                      instructions.hs:564

0x3A55  0x37 0x9A 0x0A  PUSHIW 0x0A9A
0x3A58  0x1A 0x03       PUSHIB 0x03
0x3A5A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A5C  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:565

0x3A5D  0x33 0x26 0x02  JW 0x3C83 (+550)

                        // case Instruction.JNZB:                               instructions.hs:566

0x3A60  0x1A 0x2F       PUSHIB 0x2F
0x3A62  0x4F            PUSHLOCALB02
0x3A63  0x05            EQ
0x3A64  0x2E 0x0D       JZB 0x3A71 (+13)

                        // result = "JNZB";                                     instructions.hs:568

0x3A66  0x37 0x9D 0x0A  PUSHIW 0x0A9D
0x3A69  0x1A 0x04       PUSHIB 0x04
0x3A6B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A6D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:569

0x3A6E  0x33 0x15 0x02  JW 0x3C83 (+533)

                        // case Instruction.JW:                                 instructions.hs:570

0x3A71  0x1A 0x33       PUSHIB 0x33
0x3A73  0x4F            PUSHLOCALB02
0x3A74  0x05            EQ
0x3A75  0x2E 0x0B       JZB 0x3A80 (+11)

                        // result = "JW";                                       instructions.hs:572

0x3A77  0x37 0x4A 0x57  PUSHIW 0x574A
0x3A7A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3A7C  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:573

0x3A7D  0x33 0x06 0x02  JW 0x3C83 (+518)

                        // case Instruction.JZW:                                instructions.hs:574

0x3A80  0x1A 0x31       PUSHIB 0x31
0x3A82  0x4F            PUSHLOCALB02
0x3A83  0x05            EQ
0x3A84  0x2E 0x0D       JZB 0x3A91 (+13)

                        // result = "JZW";                                      instructions.hs:576

0x3A86  0x37 0xA1 0x0A  PUSHIW 0x0AA1
0x3A89  0x1A 0x03       PUSHIB 0x03
0x3A8B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A8D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:577

0x3A8E  0x33 0xF5 0x01  JW 0x3C83 (+501)

                        // case Instruction.JNZW:                               instructions.hs:578

0x3A91  0x1A 0x32       PUSHIB 0x32
0x3A93  0x4F            PUSHLOCALB02
0x3A94  0x05            EQ
0x3A95  0x2E 0x0D       JZB 0x3AA2 (+13)

                        // result = "JNZW";                                     instructions.hs:580

0x3A97  0x37 0xA4 0x0A  PUSHIW 0x0AA4
0x3A9A  0x1A 0x04       PUSHIB 0x04
0x3A9C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3A9E  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:581

0x3A9F  0x33 0xE4 0x01  JW 0x3C83 (+484)

                        // case Instruction.COPYNEXTPOP:                        instructions.hs:582

0x3AA2  0x1A 0x48       PUSHIB 0x48
0x3AA4  0x4F            PUSHLOCALB02
0x3AA5  0x05            EQ
0x3AA6  0x2E 0x0D       JZB 0x3AB3 (+13)

                        // result = "COPYNEXTPOP";                              instructions.hs:584

0x3AA8  0x37 0xA8 0x0A  PUSHIW 0x0AA8
0x3AAB  0x1A 0x0B       PUSHIB 0x0B
0x3AAD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3AAF  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:585

0x3AB0  0x33 0xD3 0x01  JW 0x3C83 (+467)

                        // case Instruction.EQ:                                 instructions.hs:587

0x3AB3  0x1A 0x05       PUSHIB 0x05
0x3AB5  0x4F            PUSHLOCALB02
0x3AB6  0x05            EQ
0x3AB7  0x2E 0x0B       JZB 0x3AC2 (+11)

                        // result = "EQ";                                       instructions.hs:589

0x3AB9  0x37 0x45 0x51  PUSHIW 0x5145
0x3ABC  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3ABE  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:590

0x3ABF  0x33 0xC4 0x01  JW 0x3C83 (+452)

                        // case Instruction.NE:                                 instructions.hs:591

0x3AC2  0x1A 0x06       PUSHIB 0x06
0x3AC4  0x4F            PUSHLOCALB02
0x3AC5  0x05            EQ
0x3AC6  0x2E 0x0B       JZB 0x3AD1 (+11)

                        // result = "NE";                                       instructions.hs:593

0x3AC8  0x37 0x4E 0x45  PUSHIW 0x454E
0x3ACB  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3ACD  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:594

0x3ACE  0x33 0xB5 0x01  JW 0x3C83 (+437)

                        // case Instruction.GT:                                 instructions.hs:595

0x3AD1  0x1A 0x07       PUSHIB 0x07
0x3AD3  0x4F            PUSHLOCALB02
0x3AD4  0x05            EQ
0x3AD5  0x2E 0x0B       JZB 0x3AE0 (+11)

                        // result = "GT";                                       instructions.hs:597

0x3AD7  0x37 0x47 0x54  PUSHIW 0x5447
0x3ADA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3ADC  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:598

0x3ADD  0x33 0xA6 0x01  JW 0x3C83 (+422)

                        // case Instruction.LT:                                 instructions.hs:599

0x3AE0  0x1A 0x08       PUSHIB 0x08
0x3AE2  0x4F            PUSHLOCALB02
0x3AE3  0x05            EQ
0x3AE4  0x2E 0x0B       JZB 0x3AEF (+11)

                        // result = "LT";                                       instructions.hs:601

0x3AE6  0x37 0x4C 0x54  PUSHIW 0x544C
0x3AE9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3AEB  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:602

0x3AEC  0x33 0x97 0x01  JW 0x3C83 (+407)

                        // case Instruction.GE:                                 instructions.hs:603

0x3AEF  0x1A 0x09       PUSHIB 0x09
0x3AF1  0x4F            PUSHLOCALB02
0x3AF2  0x05            EQ
0x3AF3  0x2E 0x0B       JZB 0x3AFE (+11)

                        // result = "GE";                                       instructions.hs:605

0x3AF5  0x37 0x47 0x45  PUSHIW 0x4547
0x3AF8  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3AFA  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:606

0x3AFB  0x33 0x88 0x01  JW 0x3C83 (+392)

                        // case Instruction.LE:                                 instructions.hs:607

0x3AFE  0x1A 0x0A       PUSHIB 0x0A
0x3B00  0x4F            PUSHLOCALB02
0x3B01  0x05            EQ
0x3B02  0x2E 0x0B       JZB 0x3B0D (+11)

                        // result = "LE";                                       instructions.hs:609

0x3B04  0x37 0x4C 0x45  PUSHIW 0x454C
0x3B07  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3B09  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:610

0x3B0A  0x33 0x79 0x01  JW 0x3C83 (+377)

                        // case Instruction.GTI:                                instructions.hs:611

0x3B0D  0x1A 0x16       PUSHIB 0x16
0x3B0F  0x4F            PUSHLOCALB02
0x3B10  0x05            EQ
0x3B11  0x2E 0x0D       JZB 0x3B1E (+13)

                        // result = "GTI";                                      instructions.hs:613

0x3B13  0x37 0xB3 0x0A  PUSHIW 0x0AB3
0x3B16  0x1A 0x03       PUSHIB 0x03
0x3B18  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B1A  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:614

0x3B1B  0x33 0x68 0x01  JW 0x3C83 (+360)

                        // case Instruction.LTI:                                instructions.hs:615

0x3B1E  0x1A 0x17       PUSHIB 0x17
0x3B20  0x4F            PUSHLOCALB02
0x3B21  0x05            EQ
0x3B22  0x2E 0x0D       JZB 0x3B2F (+13)

                        // result = "LTI";                                      instructions.hs:617

0x3B24  0x37 0x14 0x09  PUSHIW 0x0914
0x3B27  0x1A 0x03       PUSHIB 0x03
0x3B29  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B2B  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:618

0x3B2C  0x33 0x57 0x01  JW 0x3C83 (+343)

                        // case Instruction.GEI:                                instructions.hs:619

0x3B2F  0x1A 0x18       PUSHIB 0x18
0x3B31  0x4F            PUSHLOCALB02
0x3B32  0x05            EQ
0x3B33  0x2E 0x0D       JZB 0x3B40 (+13)

                        // result = "GEI";                                      instructions.hs:621

0x3B35  0x37 0xB6 0x0A  PUSHIW 0x0AB6
0x3B38  0x1A 0x03       PUSHIB 0x03
0x3B3A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B3C  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:622

0x3B3D  0x33 0x46 0x01  JW 0x3C83 (+326)

                        // case Instruction.LEI:                                instructions.hs:623

0x3B40  0x1A 0x19       PUSHIB 0x19
0x3B42  0x4F            PUSHLOCALB02
0x3B43  0x05            EQ
0x3B44  0x2E 0x0D       JZB 0x3B51 (+13)

                        // result = "LEI";                                      instructions.hs:625

0x3B46  0x37 0xB9 0x0A  PUSHIW 0x0AB9
0x3B49  0x1A 0x03       PUSHIB 0x03
0x3B4B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B4D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:626

0x3B4E  0x33 0x35 0x01  JW 0x3C83 (+309)

                        // case Instruction.ADD:                                instructions.hs:628

0x3B51  0x44            PUSHI0
0x3B52  0x4F            PUSHLOCALB02
0x3B53  0x05            EQ
0x3B54  0x2E 0x0D       JZB 0x3B61 (+13)

                        // result = "ADD";                                      instructions.hs:630

0x3B56  0x37 0x30 0x0A  PUSHIW 0x0A30
0x3B59  0x1A 0x03       PUSHIB 0x03
0x3B5B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B5D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:631

0x3B5E  0x33 0x25 0x01  JW 0x3C83 (+293)

                        // case Instruction.SUB:                                instructions.hs:632

0x3B61  0x45            PUSHI1
0x3B62  0x4F            PUSHLOCALB02
0x3B63  0x05            EQ
0x3B64  0x2E 0x0D       JZB 0x3B71 (+13)

                        // result = "SUB";                                      instructions.hs:634

0x3B66  0x37 0xBC 0x0A  PUSHIW 0x0ABC
0x3B69  0x1A 0x03       PUSHIB 0x03
0x3B6B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B6D  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:635

0x3B6E  0x33 0x15 0x01  JW 0x3C83 (+277)

                        // case Instruction.DIV:                                instructions.hs:636

0x3B71  0x1A 0x02       PUSHIB 0x02
0x3B73  0x4F            PUSHLOCALB02
0x3B74  0x05            EQ
0x3B75  0x2E 0x0D       JZB 0x3B82 (+13)

                        // result = "DIV";                                      instructions.hs:638

0x3B77  0x37 0xBF 0x0A  PUSHIW 0x0ABF
0x3B7A  0x1A 0x03       PUSHIB 0x03
0x3B7C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B7E  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:639

0x3B7F  0x33 0x04 0x01  JW 0x3C83 (+260)

                        // case Instruction.MUL:                                instructions.hs:640

0x3B82  0x1A 0x03       PUSHIB 0x03
0x3B84  0x4F            PUSHLOCALB02
0x3B85  0x05            EQ
0x3B86  0x2E 0x0D       JZB 0x3B93 (+13)

                        // result = "MUL";                                      instructions.hs:642

0x3B88  0x37 0xC2 0x0A  PUSHIW 0x0AC2
0x3B8B  0x1A 0x03       PUSHIB 0x03
0x3B8D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B8F  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:643

0x3B90  0x33 0xF3 0x00  JW 0x3C83 (+243)

                        // case Instruction.MOD:                                instructions.hs:644

0x3B93  0x1A 0x04       PUSHIB 0x04
0x3B95  0x4F            PUSHLOCALB02
0x3B96  0x05            EQ
0x3B97  0x2E 0x0D       JZB 0x3BA4 (+13)

                        // result = "MOD";                                      instructions.hs:646

0x3B99  0x37 0xC5 0x0A  PUSHIW 0x0AC5
0x3B9C  0x1A 0x03       PUSHIB 0x03
0x3B9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BA0  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:647

0x3BA1  0x33 0xE2 0x00  JW 0x3C83 (+226)

                        // case Instruction.ADDI:                               instructions.hs:648

0x3BA4  0x1A 0x11       PUSHIB 0x11
0x3BA6  0x4F            PUSHLOCALB02
0x3BA7  0x05            EQ
0x3BA8  0x2E 0x0D       JZB 0x3BB5 (+13)

                        // result = "ADDI";                                     instructions.hs:650

0x3BAA  0x37 0xC8 0x0A  PUSHIW 0x0AC8
0x3BAD  0x1A 0x04       PUSHIB 0x04
0x3BAF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BB1  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:651

0x3BB2  0x33 0xD1 0x00  JW 0x3C83 (+209)

                        // case Instruction.SUBI:                               instructions.hs:652

0x3BB5  0x1A 0x12       PUSHIB 0x12
0x3BB7  0x4F            PUSHLOCALB02
0x3BB8  0x05            EQ
0x3BB9  0x2E 0x0D       JZB 0x3BC6 (+13)

                        // result = "SUBI";                                     instructions.hs:654

0x3BBB  0x37 0xCC 0x0A  PUSHIW 0x0ACC
0x3BBE  0x1A 0x04       PUSHIB 0x04
0x3BC0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BC2  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:655

0x3BC3  0x33 0xC0 0x00  JW 0x3C83 (+192)

                        // case Instruction.DIVI:                               instructions.hs:656

0x3BC6  0x1A 0x13       PUSHIB 0x13
0x3BC8  0x4F            PUSHLOCALB02
0x3BC9  0x05            EQ
0x3BCA  0x2E 0x0D       JZB 0x3BD7 (+13)

                        // result = "DIVI";                                     instructions.hs:658

0x3BCC  0x37 0xD0 0x0A  PUSHIW 0x0AD0
0x3BCF  0x1A 0x04       PUSHIB 0x04
0x3BD1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BD3  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:659

0x3BD4  0x33 0xAF 0x00  JW 0x3C83 (+175)

                        // case Instruction.MULI:                               instructions.hs:660

0x3BD7  0x1A 0x14       PUSHIB 0x14
0x3BD9  0x4F            PUSHLOCALB02
0x3BDA  0x05            EQ
0x3BDB  0x2E 0x0D       JZB 0x3BE8 (+13)

                        // result = "MULI";                                     instructions.hs:662

0x3BDD  0x37 0xD4 0x0A  PUSHIW 0x0AD4
0x3BE0  0x1A 0x04       PUSHIB 0x04
0x3BE2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BE4  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:663

0x3BE5  0x33 0x9E 0x00  JW 0x3C83 (+158)

                        // case Instruction.MODI:                               instructions.hs:664

0x3BE8  0x1A 0x15       PUSHIB 0x15
0x3BEA  0x4F            PUSHLOCALB02
0x3BEB  0x05            EQ
0x3BEC  0x2E 0x0D       JZB 0x3BF9 (+13)

                        // result = "MODI";                                     instructions.hs:666

0x3BEE  0x37 0xD8 0x0A  PUSHIW 0x0AD8
0x3BF1  0x1A 0x04       PUSHIB 0x04
0x3BF3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BF5  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:667

0x3BF6  0x33 0x8D 0x00  JW 0x3C83 (+141)

                        // case Instruction.DUP:                                instructions.hs:669

0x3BF9  0x1A 0x27       PUSHIB 0x27
0x3BFB  0x4F            PUSHLOCALB02
0x3BFC  0x05            EQ
0x3BFD  0x2E 0x0D       JZB 0x3C0A (+13)

                        // result = "DUP";                                      instructions.hs:671

0x3BFF  0x37 0xDC 0x0A  PUSHIW 0x0ADC
0x3C02  0x1A 0x03       PUSHIB 0x03
0x3C04  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C06  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:672

0x3C07  0x33 0x7C 0x00  JW 0x3C83 (+124)

                        // case Instruction.SWAP:                               instructions.hs:673

0x3C0A  0x1A 0x43       PUSHIB 0x43
0x3C0C  0x4F            PUSHLOCALB02
0x3C0D  0x05            EQ
0x3C0E  0x2E 0x0C       JZB 0x3C1A (+12)

                        // result = "SWAP";                                     instructions.hs:675

0x3C10  0x37 0xDF 0x0A  PUSHIW 0x0ADF
0x3C13  0x1A 0x04       PUSHIB 0x04
0x3C15  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C17  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:676

0x3C18  0x30 0x6B       JB 0x3C83 (+107)

                        // case Instruction.DECSP:                              instructions.hs:677

0x3C1A  0x1A 0x28       PUSHIB 0x28
0x3C1C  0x4F            PUSHLOCALB02
0x3C1D  0x05            EQ
0x3C1E  0x2E 0x0C       JZB 0x3C2A (+12)

                        // result = "DECSP";                                    instructions.hs:679

0x3C20  0x37 0xE3 0x0A  PUSHIW 0x0AE3
0x3C23  0x1A 0x05       PUSHIB 0x05
0x3C25  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C27  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:680

0x3C28  0x30 0x5B       JB 0x3C83 (+91)

                        // case Instruction.DIE:                                instructions.hs:681

0x3C2A  0x1A 0x29       PUSHIB 0x29
0x3C2C  0x4F            PUSHLOCALB02
0x3C2D  0x05            EQ
0x3C2E  0x2E 0x0C       JZB 0x3C3A (+12)

                        // result = "DIE";                                      instructions.hs:683

0x3C30  0x37 0xE8 0x0A  PUSHIW 0x0AE8
0x3C33  0x1A 0x03       PUSHIB 0x03
0x3C35  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C37  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:684

0x3C38  0x30 0x4B       JB 0x3C83 (+75)

                        // case Instruction.BITSHR:                             instructions.hs:686

0x3C3A  0x1A 0x10       PUSHIB 0x10
0x3C3C  0x4F            PUSHLOCALB02
0x3C3D  0x05            EQ
0x3C3E  0x2E 0x0C       JZB 0x3C4A (+12)

                        // result = "BITSHR";                                   instructions.hs:688

0x3C40  0x37 0xEB 0x0A  PUSHIW 0x0AEB
0x3C43  0x1A 0x06       PUSHIB 0x06
0x3C45  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C47  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:689

0x3C48  0x30 0x3B       JB 0x3C83 (+59)

                        // case Instruction.BITSHL:                             instructions.hs:690

0x3C4A  0x1A 0x0F       PUSHIB 0x0F
0x3C4C  0x4F            PUSHLOCALB02
0x3C4D  0x05            EQ
0x3C4E  0x2E 0x0C       JZB 0x3C5A (+12)

                        // result = "BITSHL";                                   instructions.hs:692

0x3C50  0x37 0xF1 0x0A  PUSHIW 0x0AF1
0x3C53  0x1A 0x06       PUSHIB 0x06
0x3C55  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C57  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:693

0x3C58  0x30 0x2B       JB 0x3C83 (+43)

                        // case Instruction.NOP:                                instructions.hs:694

0x3C5A  0x1A 0x50       PUSHIB 0x50
0x3C5C  0x4F            PUSHLOCALB02
0x3C5D  0x05            EQ
0x3C5E  0x2E 0x0C       JZB 0x3C6A (+12)

                        // result = "NOP";                                      instructions.hs:696

0x3C60  0x37 0x95 0x08  PUSHIW 0x0895
0x3C63  0x1A 0x03       PUSHIB 0x03
0x3C65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C67  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:697

0x3C68  0x30 0x1B       JB 0x3C83 (+27)

                        // byte op = byte(instruction);                         instructions.hs:700

0x3C6A  0x44            PUSHI0
0x3C6B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3C6D  0x51 0x03       CAST 0x03
0x3C6F  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // result = "Undefined: 0x" + op.ToHexString(2);

0x3C71  0x37 0xF7 0x0A  PUSHIW 0x0AF7
0x3C74  0x1A 0x0D       PUSHIB 0x0D
0x3C76  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C78  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3C7A  0x1A 0x02       PUSHIB 0x02
0x3C7C  0x2C 0xAB       CALLB 0xAB     // Byte.ToHexString
0x3C7E  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3C80  0x5D            POPCOPYLOCALB00

                        // }                                                    instructions.hs:702

0x3C81  0x28 0x02       DECSP 0x02

                        // }                                                    instructions.hs:703

0x3C83  0x28 0x02       DECSP 0x02

                        // return result;                                       instructions.hs:704

0x3C85  0x4E            PUSHLOCALB00
0x3C86  0x2B 0x04       RETRETB 0x04


// /source/compiler/codegen/instructions.hs:221
// ####  Instructions.OperandWidth(..)  ####                                    0x0056


                        // byte result;                                         instructions.hs:222

0x3C88  0x5F 0x01       ENTERB 0x01

                        // switch (instruction)                                 instructions.hs:223

0x3C8A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case Instruction.CAST:                               instructions.hs:225

0x3C8C  0x1A 0x51       PUSHIB 0x51
0x3C8E  0x4F            PUSHLOCALB02
0x3C8F  0x05            EQ
0x3C90  0x32 0xBE 0x00  JNZW 0x3D4E (+190)

                        // case Instruction.CALLB:                              instructions.hs:226

0x3C93  0x1A 0x2C       PUSHIB 0x2C
0x3C95  0x4F            PUSHLOCALB02
0x3C96  0x05            EQ
0x3C97  0x32 0xB7 0x00  JNZW 0x3D4E (+183)

                        // case Instruction.TESTBPB:                            instructions.hs:227

0x3C9A  0x1A 0x2D       PUSHIB 0x2D
0x3C9C  0x4F            PUSHLOCALB02
0x3C9D  0x05            EQ
0x3C9E  0x32 0xB0 0x00  JNZW 0x3D4E (+176)

                        // case Instruction.RETB:                               instructions.hs:228

0x3CA1  0x1A 0x2A       PUSHIB 0x2A
0x3CA3  0x4F            PUSHLOCALB02
0x3CA4  0x05            EQ
0x3CA5  0x32 0xA9 0x00  JNZW 0x3D4E (+169)

                        // case Instruction.RETRETB:                            instructions.hs:229

0x3CA8  0x1A 0x2B       PUSHIB 0x2B
0x3CAA  0x4F            PUSHLOCALB02
0x3CAB  0x05            EQ
0x3CAC  0x32 0xA2 0x00  JNZW 0x3D4E (+162)

                        // case Instruction.PUSHIB:                             instructions.hs:230

0x3CAF  0x1A 0x1A       PUSHIB 0x1A
0x3CB1  0x4F            PUSHLOCALB02
0x3CB2  0x05            EQ
0x3CB3  0x32 0x9B 0x00  JNZW 0x3D4E (+155)

                        // case Instruction.POPGLOBALB:                         instructions.hs:231

0x3CB6  0x1A 0x1F       PUSHIB 0x1F
0x3CB8  0x4F            PUSHLOCALB02
0x3CB9  0x05            EQ
0x3CBA  0x32 0x94 0x00  JNZW 0x3D4E (+148)

                        // case Instruction.POPLOCALB:                          instructions.hs:232

0x3CBD  0x1A 0x1B       PUSHIB 0x1B
0x3CBF  0x4F            PUSHLOCALB02
0x3CC0  0x05            EQ
0x3CC1  0x32 0x8D 0x00  JNZW 0x3D4E (+141)

                        // case Instruction.POPRELB:                            instructions.hs:233

0x3CC4  0x1A 0x1D       PUSHIB 0x1D
0x3CC6  0x4F            PUSHLOCALB02
0x3CC7  0x05            EQ
0x3CC8  0x32 0x86 0x00  JNZW 0x3D4E (+134)

                        // case Instruction.POPCOPYGLOBALB:                     instructions.hs:234

0x3CCB  0x1A 0x59       PUSHIB 0x59
0x3CCD  0x4F            PUSHLOCALB02
0x3CCE  0x05            EQ
0x3CCF  0x32 0x7F 0x00  JNZW 0x3D4E (+127)

                        // case Instruction.POPCOPYLOCALB:                      instructions.hs:235

0x3CD2  0x1A 0x57       PUSHIB 0x57
0x3CD4  0x4F            PUSHLOCALB02
0x3CD5  0x05            EQ
0x3CD6  0x32 0x78 0x00  JNZW 0x3D4E (+120)

                        // case Instruction.POPCOPYRELB:                        instructions.hs:236

0x3CD9  0x1A 0x58       PUSHIB 0x58
0x3CDB  0x4F            PUSHLOCALB02
0x3CDC  0x05            EQ
0x3CDD  0x32 0x71 0x00  JNZW 0x3D4E (+113)

                        // case Instruction.PUSHGLOBALB:                        instructions.hs:237

0x3CE0  0x1A 0x20       PUSHIB 0x20
0x3CE2  0x4F            PUSHLOCALB02
0x3CE3  0x05            EQ
0x3CE4  0x32 0x6A 0x00  JNZW 0x3D4E (+106)

                        // case Instruction.PUSHLOCALB:                         instructions.hs:238

0x3CE7  0x1A 0x1C       PUSHIB 0x1C
0x3CE9  0x4F            PUSHLOCALB02
0x3CEA  0x05            EQ
0x3CEB  0x32 0x63 0x00  JNZW 0x3D4E (+99)

                        // case Instruction.PUSHRELB:                           instructions.hs:239

0x3CEE  0x1A 0x1E       PUSHIB 0x1E
0x3CF0  0x4F            PUSHLOCALB02
0x3CF1  0x05            EQ
0x3CF2  0x2F 0x5C       JNZB 0x3D4E (+92)

                        // case Instruction.PUSHSTACKADDRB:                     instructions.hs:240

0x3CF4  0x1A 0x21       PUSHIB 0x21
0x3CF6  0x4F            PUSHLOCALB02
0x3CF7  0x05            EQ
0x3CF8  0x2F 0x56       JNZB 0x3D4E (+86)

                        // case Instruction.SYSCALL:                            instructions.hs:241

0x3CFA  0x1A 0x26       PUSHIB 0x26
0x3CFC  0x4F            PUSHLOCALB02
0x3CFD  0x05            EQ
0x3CFE  0x2F 0x50       JNZB 0x3D4E (+80)

                        // case Instruction.SYSCALL0:                           instructions.hs:242

0x3D00  0x1A 0x24       PUSHIB 0x24
0x3D02  0x4F            PUSHLOCALB02
0x3D03  0x05            EQ
0x3D04  0x2F 0x4A       JNZB 0x3D4E (+74)

                        // case Instruction.SYSCALL1:                           instructions.hs:243

0x3D06  0x1A 0x25       PUSHIB 0x25
0x3D08  0x4F            PUSHLOCALB02
0x3D09  0x05            EQ
0x3D0A  0x2F 0x44       JNZB 0x3D4E (+68)

                        // case Instruction.JB:                                 instructions.hs:244

0x3D0C  0x1A 0x30       PUSHIB 0x30
0x3D0E  0x4F            PUSHLOCALB02
0x3D0F  0x05            EQ
0x3D10  0x2F 0x3E       JNZB 0x3D4E (+62)

                        // case Instruction.JZB:                                instructions.hs:245

0x3D12  0x1A 0x2E       PUSHIB 0x2E
0x3D14  0x4F            PUSHLOCALB02
0x3D15  0x05            EQ
0x3D16  0x2F 0x38       JNZB 0x3D4E (+56)

                        // case Instruction.JNZB:                               instructions.hs:246

0x3D18  0x1A 0x2F       PUSHIB 0x2F
0x3D1A  0x4F            PUSHLOCALB02
0x3D1B  0x05            EQ
0x3D1C  0x2F 0x32       JNZB 0x3D4E (+50)

                        // case Instruction.INCGLOBALB:                         instructions.hs:247

0x3D1E  0x1A 0x53       PUSHIB 0x53
0x3D20  0x4F            PUSHLOCALB02
0x3D21  0x05            EQ
0x3D22  0x2F 0x2C       JNZB 0x3D4E (+44)

                        // case Instruction.DECGLOBALB:                         instructions.hs:248

0x3D24  0x1A 0x54       PUSHIB 0x54
0x3D26  0x4F            PUSHLOCALB02
0x3D27  0x05            EQ
0x3D28  0x2F 0x26       JNZB 0x3D4E (+38)

                        // case Instruction.INCLOCALB:                          instructions.hs:249

0x3D2A  0x1A 0x22       PUSHIB 0x22
0x3D2C  0x4F            PUSHLOCALB02
0x3D2D  0x05            EQ
0x3D2E  0x2F 0x20       JNZB 0x3D4E (+32)

                        // case Instruction.DECLOCALB:                          instructions.hs:250

0x3D30  0x1A 0x23       PUSHIB 0x23
0x3D32  0x4F            PUSHLOCALB02
0x3D33  0x05            EQ
0x3D34  0x2F 0x1A       JNZB 0x3D4E (+26)

                        // case Instruction.DUP:                                instructions.hs:251

0x3D36  0x1A 0x27       PUSHIB 0x27
0x3D38  0x4F            PUSHLOCALB02
0x3D39  0x05            EQ
0x3D3A  0x2F 0x14       JNZB 0x3D4E (+20)

                        // case Instruction.DECSP:                              instructions.hs:252

0x3D3C  0x1A 0x28       PUSHIB 0x28
0x3D3E  0x4F            PUSHLOCALB02
0x3D3F  0x05            EQ
0x3D40  0x2F 0x0E       JNZB 0x3D4E (+14)

                        // case Instruction.DIE:                                instructions.hs:253

0x3D42  0x1A 0x29       PUSHIB 0x29
0x3D44  0x4F            PUSHLOCALB02
0x3D45  0x05            EQ
0x3D46  0x2F 0x08       JNZB 0x3D4E (+8)

                        // case Instruction.ENTERB:                             instructions.hs:254

0x3D48  0x1A 0x5F       PUSHIB 0x5F
0x3D4A  0x4F            PUSHLOCALB02
0x3D4B  0x05            EQ
0x3D4C  0x2E 0x07       JZB 0x3D53 (+7)

                        // result = 1;                                          instructions.hs:256

0x3D4E  0x45            PUSHI1
0x3D4F  0x4C            POPLOCALB00

                        // }                                                    instructions.hs:257

0x3D50  0x33 0x90 0x00  JW 0x3DE0 (+144)

                        // case Instruction.CALLW:                              instructions.hs:259

0x3D53  0x1A 0x34       PUSHIB 0x34
0x3D55  0x4F            PUSHLOCALB02
0x3D56  0x05            EQ
0x3D57  0x32 0x86 0x00  JNZW 0x3DDD (+134)

                        // case Instruction.RETW:                               instructions.hs:260

0x3D5A  0x1A 0x35       PUSHIB 0x35
0x3D5C  0x4F            PUSHLOCALB02
0x3D5D  0x05            EQ
0x3D5E  0x32 0x7F 0x00  JNZW 0x3DDD (+127)

                        // case Instruction.RETRETW:                            instructions.hs:261

0x3D61  0x1A 0x36       PUSHIB 0x36
0x3D63  0x4F            PUSHLOCALB02
0x3D64  0x05            EQ
0x3D65  0x32 0x78 0x00  JNZW 0x3DDD (+120)

                        // case Instruction.PUSHIW:                             instructions.hs:262

0x3D68  0x1A 0x37       PUSHIB 0x37
0x3D6A  0x4F            PUSHLOCALB02
0x3D6B  0x05            EQ
0x3D6C  0x32 0x71 0x00  JNZW 0x3DDD (+113)

                        // case Instruction.PUSHIWLE:                           instructions.hs:263

0x3D6F  0x1A 0x40       PUSHIB 0x40
0x3D71  0x4F            PUSHLOCALB02
0x3D72  0x05            EQ
0x3D73  0x32 0x6A 0x00  JNZW 0x3DDD (+106)

                        // case Instruction.PUSHIWLT:                           instructions.hs:264

0x3D76  0x1A 0x55       PUSHIB 0x55
0x3D78  0x4F            PUSHLOCALB02
0x3D79  0x05            EQ
0x3D7A  0x32 0x63 0x00  JNZW 0x3DDD (+99)

                        // case Instruction.POPGLOBALW:                         instructions.hs:265

0x3D7D  0x1A 0x3C       PUSHIB 0x3C
0x3D7F  0x4F            PUSHLOCALB02
0x3D80  0x05            EQ
0x3D81  0x2F 0x5C       JNZB 0x3DDD (+92)

                        // case Instruction.POPLOCALW:                          instructions.hs:266

0x3D83  0x1A 0x38       PUSHIB 0x38
0x3D85  0x4F            PUSHLOCALB02
0x3D86  0x05            EQ
0x3D87  0x2F 0x56       JNZB 0x3DDD (+86)

                        // case Instruction.POPRELW:                            instructions.hs:267

0x3D89  0x1A 0x3A       PUSHIB 0x3A
0x3D8B  0x4F            PUSHLOCALB02
0x3D8C  0x05            EQ
0x3D8D  0x2F 0x50       JNZB 0x3DDD (+80)

                        // case Instruction.POPCOPYGLOBALW:                     instructions.hs:268

0x3D8F  0x1A 0x5C       PUSHIB 0x5C
0x3D91  0x4F            PUSHLOCALB02
0x3D92  0x05            EQ
0x3D93  0x2F 0x4A       JNZB 0x3DDD (+74)

                        // case Instruction.POPCOPYLOCALW:                      instructions.hs:269

0x3D95  0x1A 0x5A       PUSHIB 0x5A
0x3D97  0x4F            PUSHLOCALB02
0x3D98  0x05            EQ
0x3D99  0x2F 0x44       JNZB 0x3DDD (+68)

                        // case Instruction.POPCOPYRELW:                        instructions.hs:270

0x3D9B  0x1A 0x5B       PUSHIB 0x5B
0x3D9D  0x4F            PUSHLOCALB02
0x3D9E  0x05            EQ
0x3D9F  0x2F 0x3E       JNZB 0x3DDD (+62)

                        // case Instruction.PUSHGLOBALBB:                       instructions.hs:271

0x3DA1  0x1A 0x52       PUSHIB 0x52
0x3DA3  0x4F            PUSHLOCALB02
0x3DA4  0x05            EQ
0x3DA5  0x2F 0x38       JNZB 0x3DDD (+56)

                        // case Instruction.PUSHLOCALBB:                        instructions.hs:272

0x3DA7  0x1A 0x56       PUSHIB 0x56
0x3DA9  0x4F            PUSHLOCALB02
0x3DAA  0x05            EQ
0x3DAB  0x2F 0x32       JNZB 0x3DDD (+50)

                        // case Instruction.PUSHGLOBALW:                        instructions.hs:273

0x3DAD  0x1A 0x3D       PUSHIB 0x3D
0x3DAF  0x4F            PUSHLOCALB02
0x3DB0  0x05            EQ
0x3DB1  0x2F 0x2C       JNZB 0x3DDD (+44)

                        // case Instruction.PUSHLOCALW:                         instructions.hs:274

0x3DB3  0x1A 0x39       PUSHIB 0x39
0x3DB5  0x4F            PUSHLOCALB02
0x3DB6  0x05            EQ
0x3DB7  0x2F 0x26       JNZB 0x3DDD (+38)

                        // case Instruction.PUSHRELW:                           instructions.hs:275

0x3DB9  0x1A 0x3B       PUSHIB 0x3B
0x3DBB  0x4F            PUSHLOCALB02
0x3DBC  0x05            EQ
0x3DBD  0x2F 0x20       JNZB 0x3DDD (+32)

                        // case Instruction.PUSHSTACKADDRW:                     instructions.hs:276

0x3DBF  0x1A 0x3E       PUSHIB 0x3E
0x3DC1  0x4F            PUSHLOCALB02
0x3DC2  0x05            EQ
0x3DC3  0x2F 0x1A       JNZB 0x3DDD (+26)

                        // case Instruction.JW:                                 instructions.hs:277

0x3DC5  0x1A 0x33       PUSHIB 0x33
0x3DC7  0x4F            PUSHLOCALB02
0x3DC8  0x05            EQ
0x3DC9  0x2F 0x14       JNZB 0x3DDD (+20)

                        // case Instruction.JZW:                                instructions.hs:278

0x3DCB  0x1A 0x31       PUSHIB 0x31
0x3DCD  0x4F            PUSHLOCALB02
0x3DCE  0x05            EQ
0x3DCF  0x2F 0x0E       JNZB 0x3DDD (+14)

                        // case Instruction.JNZW:                               instructions.hs:279

0x3DD1  0x1A 0x32       PUSHIB 0x32
0x3DD3  0x4F            PUSHLOCALB02
0x3DD4  0x05            EQ
0x3DD5  0x2F 0x08       JNZB 0x3DDD (+8)

                        // case Instruction.INCLOCALBB:                         instructions.hs:280

0x3DD7  0x1A 0x3F       PUSHIB 0x3F
0x3DD9  0x4F            PUSHLOCALB02
0x3DDA  0x05            EQ
0x3DDB  0x2E 0x05       JZB 0x3DE0 (+5)

                        // result = 2;                                          instructions.hs:282

0x3DDD  0x1A 0x02       PUSHIB 0x02
0x3DDF  0x4C            POPLOCALB00

                        // }                                                    instructions.hs:284

0x3DE0  0x28 0x02       DECSP 0x02

                        // return result;                                       instructions.hs:285

0x3DE2  0x4E            PUSHLOCALB00
0x3DE3  0x2B 0x04       RETRETB 0x04


// /source/compiler/codegen/instructions.hs:177
// ####  Instructions.OperandIsStackOffset(..)  ####                            0x0054


                        // bool isOffset;                                       instructions.hs:178

0x3DE5  0x5F 0x01       ENTERB 0x01

                        // switch (instruction)                                 instructions.hs:179

0x3DE7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case Instruction.INCLOCALB:                          instructions.hs:181

0x3DE9  0x1A 0x22       PUSHIB 0x22
0x3DEB  0x4F            PUSHLOCALB02
0x3DEC  0x05            EQ
0x3DED  0x2F 0x5C       JNZB 0x3E49 (+92)

                        // case Instruction.DECLOCALB:                          instructions.hs:182

0x3DEF  0x1A 0x23       PUSHIB 0x23
0x3DF1  0x4F            PUSHLOCALB02
0x3DF2  0x05            EQ
0x3DF3  0x2F 0x56       JNZB 0x3E49 (+86)

                        // case Instruction.POPLOCALB:                          instructions.hs:183

0x3DF5  0x1A 0x1B       PUSHIB 0x1B
0x3DF7  0x4F            PUSHLOCALB02
0x3DF8  0x05            EQ
0x3DF9  0x2F 0x50       JNZB 0x3E49 (+80)

                        // case Instruction.POPLOCALW:                          instructions.hs:184

0x3DFB  0x1A 0x38       PUSHIB 0x38
0x3DFD  0x4F            PUSHLOCALB02
0x3DFE  0x05            EQ
0x3DFF  0x2F 0x4A       JNZB 0x3E49 (+74)

                        // case Instruction.POPRELB:                            instructions.hs:185

0x3E01  0x1A 0x1D       PUSHIB 0x1D
0x3E03  0x4F            PUSHLOCALB02
0x3E04  0x05            EQ
0x3E05  0x2F 0x44       JNZB 0x3E49 (+68)

                        // case Instruction.POPRELW:                            instructions.hs:186

0x3E07  0x1A 0x3A       PUSHIB 0x3A
0x3E09  0x4F            PUSHLOCALB02
0x3E0A  0x05            EQ
0x3E0B  0x2F 0x3E       JNZB 0x3E49 (+62)

                        // case Instruction.POPCOPYLOCALB:                      instructions.hs:187

0x3E0D  0x1A 0x57       PUSHIB 0x57
0x3E0F  0x4F            PUSHLOCALB02
0x3E10  0x05            EQ
0x3E11  0x2F 0x38       JNZB 0x3E49 (+56)

                        // case Instruction.POPCOPYLOCALW:                      instructions.hs:188

0x3E13  0x1A 0x5A       PUSHIB 0x5A
0x3E15  0x4F            PUSHLOCALB02
0x3E16  0x05            EQ
0x3E17  0x2F 0x32       JNZB 0x3E49 (+50)

                        // case Instruction.POPCOPYRELB:                        instructions.hs:189

0x3E19  0x1A 0x58       PUSHIB 0x58
0x3E1B  0x4F            PUSHLOCALB02
0x3E1C  0x05            EQ
0x3E1D  0x2F 0x2C       JNZB 0x3E49 (+44)

                        // case Instruction.POPCOPYRELW:                        instructions.hs:190

0x3E1F  0x1A 0x5B       PUSHIB 0x5B
0x3E21  0x4F            PUSHLOCALB02
0x3E22  0x05            EQ
0x3E23  0x2F 0x26       JNZB 0x3E49 (+38)

                        // case Instruction.PUSHLOCALB:                         instructions.hs:191

0x3E25  0x1A 0x1C       PUSHIB 0x1C
0x3E27  0x4F            PUSHLOCALB02
0x3E28  0x05            EQ
0x3E29  0x2F 0x20       JNZB 0x3E49 (+32)

                        // case Instruction.PUSHLOCALW:                         instructions.hs:192

0x3E2B  0x1A 0x39       PUSHIB 0x39
0x3E2D  0x4F            PUSHLOCALB02
0x3E2E  0x05            EQ
0x3E2F  0x2F 0x1A       JNZB 0x3E49 (+26)

                        // case Instruction.PUSHSTACKADDRW:                     instructions.hs:193

0x3E31  0x1A 0x3E       PUSHIB 0x3E
0x3E33  0x4F            PUSHLOCALB02
0x3E34  0x05            EQ
0x3E35  0x2F 0x14       JNZB 0x3E49 (+20)

                        // case Instruction.PUSHRELB:                           instructions.hs:194

0x3E37  0x1A 0x1E       PUSHIB 0x1E
0x3E39  0x4F            PUSHLOCALB02
0x3E3A  0x05            EQ
0x3E3B  0x2F 0x0E       JNZB 0x3E49 (+14)

                        // case Instruction.PUSHRELW:                           instructions.hs:195

0x3E3D  0x1A 0x3B       PUSHIB 0x3B
0x3E3F  0x4F            PUSHLOCALB02
0x3E40  0x05            EQ
0x3E41  0x2F 0x08       JNZB 0x3E49 (+8)

                        // case Instruction.PUSHSTACKADDRB:                     instructions.hs:196

0x3E43  0x1A 0x21       PUSHIB 0x21
0x3E45  0x4F            PUSHLOCALB02
0x3E46  0x05            EQ
0x3E47  0x2E 0x04       JZB 0x3E4B (+4)

                        // isOffset = true;                                     instructions.hs:198

0x3E49  0x45            PUSHI1
0x3E4A  0x4C            POPLOCALB00

                        // }                                                    instructions.hs:200

0x3E4B  0x28 0x02       DECSP 0x02

                        // return isOffset;                                     instructions.hs:201

0x3E4D  0x4E            PUSHLOCALB00
0x3E4E  0x2B 0x04       RETRETB 0x04


// /source/compiler/codegen/instructions.hs:204
// ####  Instructions.OperandIsAddressOffset(..)  ####                          0x0055


                        // bool isOffset;                                       instructions.hs:205

0x3E50  0x5F 0x01       ENTERB 0x01

                        // switch (instruction)                                 instructions.hs:206

0x3E52  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case Instruction.JB:                                 instructions.hs:208

0x3E54  0x1A 0x30       PUSHIB 0x30
0x3E56  0x4F            PUSHLOCALB02
0x3E57  0x05            EQ
0x3E58  0x2F 0x20       JNZB 0x3E78 (+32)

                        // case Instruction.JZB:                                instructions.hs:209

0x3E5A  0x1A 0x2E       PUSHIB 0x2E
0x3E5C  0x4F            PUSHLOCALB02
0x3E5D  0x05            EQ
0x3E5E  0x2F 0x1A       JNZB 0x3E78 (+26)

                        // case Instruction.JNZB:                               instructions.hs:210

0x3E60  0x1A 0x2F       PUSHIB 0x2F
0x3E62  0x4F            PUSHLOCALB02
0x3E63  0x05            EQ
0x3E64  0x2F 0x14       JNZB 0x3E78 (+20)

                        // case Instruction.JW:                                 instructions.hs:211

0x3E66  0x1A 0x33       PUSHIB 0x33
0x3E68  0x4F            PUSHLOCALB02
0x3E69  0x05            EQ
0x3E6A  0x2F 0x0E       JNZB 0x3E78 (+14)

                        // case Instruction.JZW:                                instructions.hs:212

0x3E6C  0x1A 0x31       PUSHIB 0x31
0x3E6E  0x4F            PUSHLOCALB02
0x3E6F  0x05            EQ
0x3E70  0x2F 0x08       JNZB 0x3E78 (+8)

                        // case Instruction.JNZW:                               instructions.hs:213

0x3E72  0x1A 0x32       PUSHIB 0x32
0x3E74  0x4F            PUSHLOCALB02
0x3E75  0x05            EQ
0x3E76  0x2E 0x04       JZB 0x3E7A (+4)

                        // isOffset = true;                                     instructions.hs:215

0x3E78  0x45            PUSHI1
0x3E79  0x4C            POPLOCALB00

                        // }                                                    instructions.hs:217

0x3E7A  0x28 0x02       DECSP 0x02

                        // return isOffset;                                     instructions.hs:218

0x3E7C  0x4E            PUSHLOCALB00
0x3E7D  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:68
// ####  Char.ToLower(..)  ####                                                 0x00A5


                        // byte b;                                              char.hs:69

0x3E7F  0x5F 0x01       ENTERB 0x01

                        // if (IsUpper(this))                                   char.hs:70

0x3E81  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3E83  0x2C 0x9E       CALLB 0x9E     // Char.IsUpper
0x3E85  0x2E 0x0E       JZB 0x3E93 (+14)

                        // b = byte(this) - 65 + 97; // -A + a;                 char.hs:72

0x3E87  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3E89  0x1A 0x41       PUSHIB 0x41
0x3E8B  0x01            SUB
0x3E8C  0x1A 0x61       PUSHIB 0x61
0x3E8E  0x00            ADD
0x3E8F  0x4C            POPLOCALB00

                        // this = char(b);                                      char.hs:73

0x3E90  0x4E            PUSHLOCALB00
0x3E91  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // return this;                                         char.hs:75

0x3E93  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3E95  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:42
// ####  Char.IsDigit(..)  ####                                                 0x00A2


                        // byte b;                                              char.hs:43

0x3E97  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:44

0x3E99  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3E9B  0x4C            POPLOCALB00

                        // return ((b >= 48) && (b <= 57)); // 0..9             char.hs:45

0x3E9C  0x4E            PUSHLOCALB00
0x3E9D  0x1A 0x30       PUSHIB 0x30
0x3E9F  0x09            GE
0x3EA0  0x27 0x00       DUP 0x00
0x3EA2  0x2E 0x07       JZB 0x3EA9 (+7)
0x3EA4  0x4E            PUSHLOCALB00
0x3EA5  0x1A 0x39       PUSHIB 0x39
0x3EA7  0x0A            LE
0x3EA8  0x0C            BOOLAND
0x3EA9  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:56
// ####  Char.ToHex(..)  ####                                                   0x00A4

0x3EAB  0x49            ENTER

                        // if (h < 10)                                          char.hs:57

0x3EAC  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3EAE  0x1A 0x0A       PUSHIB 0x0A
0x3EB0  0x08            LT
0x3EB1  0x2E 0x0B       JZB 0x3EBC (+11)

                        // h = h + 48; // +0                                    char.hs:59

0x3EB3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3EB5  0x1A 0x30       PUSHIB 0x30
0x3EB7  0x00            ADD
0x3EB8  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    char.hs:60

0x3EBA  0x30 0x09       JB 0x3EC3 (+9)

                        // h = h + 55; // +A - 10                               char.hs:63

0x3EBC  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3EBE  0x1A 0x37       PUSHIB 0x37
0x3EC0  0x00            ADD
0x3EC1  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // return char(h);                                      char.hs:65

0x3EC3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3EC5  0x2B 0x02       RETRETB 0x02


// /source/system/char.hs:15
// ####  Char.IsUpper(..)  ####                                                 0x009E


                        // byte b;                                              char.hs:16

0x3EC7  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:17

0x3EC9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3ECB  0x4C            POPLOCALB00

                        // return ((b >= 65) && (b <= 90));  // A..Z            char.hs:18

0x3ECC  0x4E            PUSHLOCALB00
0x3ECD  0x1A 0x41       PUSHIB 0x41
0x3ECF  0x09            GE
0x3ED0  0x27 0x00       DUP 0x00
0x3ED2  0x2E 0x07       JZB 0x3ED9 (+7)
0x3ED4  0x4E            PUSHLOCALB00
0x3ED5  0x1A 0x5A       PUSHIB 0x5A
0x3ED7  0x0A            LE
0x3ED8  0x0C            BOOLAND
0x3ED9  0x2B 0x04       RETRETB 0x04


// /source/system/string.hs:259
// ####  String.StartsWith(..)  ####                                            0x00CE

0x3EDB  0x49            ENTER

                        // return (this.Length > 0) && (this[0] == pattern);

0x3EDC  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3EDE  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3EE0  0x44            PUSHI0
0x3EE1  0x07            GT
0x3EE2  0x27 0x00       DUP 0x00
0x3EE4  0x2E 0x0B       JZB 0x3EEF (+11)
0x3EE6  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3EE8  0x44            PUSHI0
0x3EE9  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x3EEB  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3EED  0x05            EQ
0x3EEE  0x0C            BOOLAND
0x3EEF  0x2B 0x04       RETRETB 0x04


// /source/system/string.hs:383
// ####  String.LastIndexOf(..)  ####                                           0x00D7


                        // uint length;                                         string.hs:384

0x3EF1  0x5F 0x02       ENTERB 0x02

                        // length = this.Length;                                string.hs:388

0x3EF3  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x3EF5  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3EF7  0x4C            POPLOCALB00

                        // if (length == 0)                                     string.hs:389

0x3EF8  0x4E            PUSHLOCALB00
0x3EF9  0x2E 0x1D       JZB 0x3F16 (+29)

                        // i = length-1;                                        string.hs:393

0x3EFB  0x4E            PUSHLOCALB00
0x3EFC  0x45            PUSHI1
0x3EFD  0x01            SUB
0x3EFE  0x4D            POPLOCALB02

                        // if (this[i] == pattern)                              string.hs:396

0x3EFF  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x3F01  0x4F            PUSHLOCALB02
0x3F02  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x3F04  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3F06  0x05            EQ
0x3F07  0x2E 0x08       JZB 0x3F0F (+8)

                        // index = i;                                           string.hs:398

0x3F09  0x4F            PUSHLOCALB02
0x3F0A  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         string.hs:399

0x3F0C  0x45            PUSHI1
0x3F0D  0x2B 0x0A       RETRETB 0x0A

                        // if (i == 0)                                          string.hs:401

0x3F0F  0x4F            PUSHLOCALB02
0x3F10  0x2E 0x06       JZB 0x3F16 (+6)

                        // i--;                                                 string.hs:405

0x3F12  0x23 0x02       DECLOCALB 0x02 (BP+2)

                        // }                                                    string.hs:406

0x3F14  0x30 0xEB       JB 0x3EFF (-21)

                        // return false;                                        string.hs:409

0x3F16  0x44            PUSHI0
0x3F17  0x2B 0x0A       RETRETB 0x0A


// /source/system/string.hs:263
// ####  String.StartsWith(..)  ####                                            0x00CF


                        // uint i;                                              string.hs:264

0x3F19  0x5F 0x02       ENTERB 0x02

                        // length = pattern.Length;                             string.hs:266

0x3F1B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3F1D  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3F1F  0x4D            POPLOCALB02

                        // if (length <= this.Length)                           string.hs:267

0x3F20  0x4F            PUSHLOCALB02
0x3F21  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3F23  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3F25  0x0A            LE
0x3F26  0x2E 0x1E       JZB 0x3F44 (+30)

                        // for ( ; i < length; i++)                             string.hs:269

0x3F28  0x4E            PUSHLOCALB00
0x3F29  0x4F            PUSHLOCALB02
0x3F2A  0x08            LT
0x3F2B  0x2E 0x16       JZB 0x3F41 (+22)

                        // if (pattern[i] != this[i])                           string.hs:271

0x3F2D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3F2F  0x4E            PUSHLOCALB00
0x3F30  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x3F32  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3F34  0x4E            PUSHLOCALB00
0x3F35  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x3F37  0x06            NE
0x3F38  0x2E 0x05       JZB 0x3F3D (+5)

                        // return false;                                        string.hs:273

0x3F3A  0x44            PUSHI0
0x3F3B  0x2B 0x08       RETRETB 0x08

                        // }                                                    string.hs:275

0x3F3D  0x22 0x00       INCLOCALB 0x00 (BP+0)
0x3F3F  0x30 0xE9       JB 0x3F28 (-23)

                        // return true;                                         string.hs:276

0x3F41  0x45            PUSHI1
0x3F42  0x2B 0x08       RETRETB 0x08

                        // return false;                                        string.hs:278

0x3F44  0x44            PUSHI0
0x3F45  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/scanner.hs:32
// ####  Scanner.New(..)  ####                                                  0x006D

0x3F47  0x49            ENTER

                        // sourceLines.Clear();                                 scanner.hs:33

0x3F48  0x20 0x2C       PUSHGLOBALB 0x2C
0x3F4A  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // Token.Initialize();                                  scanner.hs:34

0x3F4C  0x2C 0x5C       CALLB 0x5C     // Token.Initialize

                        // }                                                    scanner.hs:35

0x3F4E  0x4A            RET0


// /source/compiler/tokens/scanner.hs:38
// ####  Scanner.Load(..)  ####                                                 0x006E


                        // byte b;                                              scanner.hs:39

0x3F4F  0x5F 0x01       ENTERB 0x01

                        // string ln;                                           scanner.hs:40

0x3F51  0x24 0x02       SYSCALL0 0x02  // String.New

                        // sourceLines.Clear();                                 scanner.hs:42

0x3F53  0x20 0x2C       PUSHGLOBALB 0x2C
0x3F55  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // sourceLength = 0;                                    scanner.hs:43

0x3F57  0x44            PUSHI0
0x3F58  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3F5A  0x59 0x32       POPCOPYGLOBALB 0x32

                        // file sourceFile = File.Open(sourcePath);             scanner.hs:44

0x3F5C  0x24 0x60       SYSCALL0 0x60  // File.New
0x3F5E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3F60  0x24 0x61       SYSCALL0 0x61  // File.Open
0x3F62  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // uint progress = 0;                                   scanner.hs:45

0x3F64  0x44            PUSHI0

                        // if (sourceFile.IsValid())                            scanner.hs:46

0x3F65  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3F67  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x3F69  0x2E 0x65       JZB 0x3FCE (+101)

                        // String.Build(ref ln); // clear                       scanner.hs:50

0x3F6B  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x3F6D  0x1A 0x02       PUSHIB 0x02
0x3F6F  0x26 0x83       SYSCALL 0x83  // String.Build

                        // b = sourceFile.Read();                               scanner.hs:53

0x3F71  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3F73  0x24 0x64       SYSCALL0 0x64  // File.Read
0x3F75  0x4C            POPLOCALB00

                        // if (b == 0)                                          scanner.hs:54

0x3F76  0x4E            PUSHLOCALB00
0x3F77  0x2E 0x0D       JZB 0x3F84 (+13)

                        // Build(ref ln, char(b));                              scanner.hs:58

0x3F79  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x3F7B  0x4E            PUSHLOCALB00
0x3F7C  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // if (b == 0x0A)                                       scanner.hs:59

0x3F7E  0x4E            PUSHLOCALB00
0x3F7F  0x1A 0x0A       PUSHIB 0x0A
0x3F81  0x05            EQ
0x3F82  0x2E 0xEF       JZB 0x3F71 (-17)

                        // if ((ln.Length == 0) && !sourceFile.IsValid())

0x3F84  0x4F            PUSHLOCALB02
0x3F85  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3F87  0x44            PUSHI0
0x3F88  0x05            EQ
0x3F89  0x27 0x00       DUP 0x00
0x3F8B  0x2E 0x08       JZB 0x3F93 (+8)
0x3F8D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3F8F  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x3F91  0x41            BOOLNOT
0x3F92  0x0C            BOOLAND
0x3F93  0x2F 0x2D       JNZB 0x3FC0 (+45)

                        // sourceLength = sourceLength + ln.Length;             scanner.hs:68

0x3F95  0x20 0x32       PUSHGLOBALB 0x32
0x3F97  0x4F            PUSHLOCALB02
0x3F98  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3F9A  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3F9C  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3F9E  0x59 0x32       POPCOPYGLOBALB 0x32

                        // sourceLines.Append(ln);                              scanner.hs:69

0x3FA0  0x20 0x2C       PUSHGLOBALB 0x2C
0x3FA2  0x4F            PUSHLOCALB02
0x3FA3  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // progress = progress + ln.Length;                     scanner.hs:71

0x3FA5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3FA7  0x4F            PUSHLOCALB02
0x3FA8  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3FAA  0x00            ADD
0x3FAB  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (progress > 10240)                                scanner.hs:72

0x3FAD  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3FAF  0x37 0x00 0x28  PUSHIW 0x2800
0x3FB2  0x07            GT
0x3FB3  0x2E 0xB8       JZB 0x3F6B (-72)

                        // Parser.ProgressTick("+");                            scanner.hs:74

0x3FB5  0x1A 0x2B       PUSHIB 0x2B
0x3FB7  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3FB9  0x2C 0x88       CALLB 0x88     // Parser.ProgressTick

                        // progress = 0;                                        scanner.hs:75

0x3FBB  0x44            PUSHI0
0x3FBC  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // } // loop                                            scanner.hs:77

0x3FBE  0x30 0xAD       JB 0x3F6B (-83)

                        // if (progress > 2560)                                 scanner.hs:78

0x3FC0  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3FC2  0x37 0x00 0x0A  PUSHIW 0x0A00
0x3FC5  0x07            GT
0x3FC6  0x2E 0x08       JZB 0x3FCE (+8)

                        // Parser.ProgressTick("+");                            scanner.hs:80

0x3FC8  0x1A 0x2B       PUSHIB 0x2B
0x3FCA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3FCC  0x2C 0x88       CALLB 0x88     // Parser.ProgressTick

                        // currentSourcePath = sourcePath;                      scanner.hs:83

0x3FCE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3FD0  0x59 0x38       POPCOPYGLOBALB 0x38

                        // }                                                    scanner.hs:84

0x3FD2  0x2A 0x0A       RETB 0x0A


// /source/compiler/tokens/scanner.hs:86
// ####  Scanner.Reset(..)  ####                                                0x006F

0x3FD4  0x49            ENTER

                        // if (sourcePath != currentSourcePath)                 scanner.hs:87

0x3FD5  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3FD7  0x20 0x38       PUSHGLOBALB 0x38
0x3FD9  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3FDB  0x2E 0x06       JZB 0x3FE1 (+6)

                        // Load(sourcePath);                                    scanner.hs:89

0x3FDD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3FDF  0x2C 0x6E       CALLB 0x6E     // Scanner.Load

                        // currentPos = pos;                                    scanner.hs:91

0x3FE1  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x3FE3  0x59 0x2E       POPCOPYGLOBALB 0x2E

                        // currentLine = ln;                                    scanner.hs:92

0x3FE5  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3FE7  0x1F 0x30       POPGLOBALB 0x30

                        // <string,string> empty;                               scanner.hs:93

0x3FE9  0x1A 0x0F       PUSHIB 0x0F
0x3FEB  0x1A 0x0F       PUSHIB 0x0F
0x3FED  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // peekedToken = empty;                                 scanner.hs:94

0x3FEF  0x4E            PUSHLOCALB00
0x3FF0  0x59 0x42       POPCOPYGLOBALB 0x42

                        // isPeekedToken = false;                               scanner.hs:95

0x3FF2  0x44            PUSHI0
0x3FF3  0x1F 0x44       POPGLOBALB 0x44

                        // iCurrentSourceLine = 0;                              scanner.hs:98

0x3FF5  0x44            PUSHI0
0x3FF6  0x1F 0x34       POPGLOBALB 0x34

                        // currentStartPos = 0;                                 scanner.hs:99

0x3FF8  0x44            PUSHI0
0x3FF9  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3FFB  0x59 0x36       POPCOPYGLOBALB 0x36

                        // lastPos = 0;                                         scanner.hs:100

0x3FFD  0x44            PUSHI0
0x3FFE  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4000  0x59 0x3C       POPCOPYGLOBALB 0x3C

                        // lastPosSet = false;                                  scanner.hs:101

0x4002  0x44            PUSHI0
0x4003  0x1F 0x3E       POPGLOBALB 0x3E

                        // }                                                    scanner.hs:102

0x4005  0x2A 0x08       RETB 0x08


// /source/compiler/tokens/parser.hs:103
// ####  Parser.Reset(..)  ####                                                 0x008F

0x4007  0x49            ENTER

                        // <string, string> empty;                              parser.hs:104

0x4008  0x1A 0x0F       PUSHIB 0x0F
0x400A  0x1A 0x0F       PUSHIB 0x0F
0x400C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // previousToken = empty;                               parser.hs:105

0x400E  0x4E            PUSHLOCALB00
0x400F  0x59 0x48       POPCOPYGLOBALB 0x48

                        // currentToken = empty;                                parser.hs:106

0x4011  0x4E            PUSHLOCALB00
0x4012  0x59 0x4A       POPCOPYGLOBALB 0x4A

                        // hadError = false;                                    parser.hs:107

0x4014  0x44            PUSHI0
0x4015  0x1F 0x4C       POPGLOBALB 0x4C

                        // }                                                    parser.hs:108

0x4017  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:162
// ####  Parser.Advance(..)  ####                                               0x0096

0x4019  0x49            ENTER

                        // previousToken = currentToken;                        parser.hs:163

0x401A  0x20 0x4A       PUSHGLOBALB 0x4A
0x401C  0x59 0x48       POPCOPYGLOBALB 0x48

                        // nextToken();                                         parser.hs:166

0x401E  0x2C 0x90       CALLB 0x90     // Parser.nextToken

                        // HopperToken ttype = Token.GetType(currentToken);

0x4020  0x44            PUSHI0
0x4021  0x20 0x4A       PUSHGLOBALB 0x4A
0x4023  0x2C 0x5B       CALLB 0x5B     // Token.GetType
0x4025  0x4C            POPLOCALB00

                        // if (ttype != HopperToken.Error)                      parser.hs:168

0x4026  0x4E            PUSHLOCALB00
0x4027  0x45            PUSHI1
0x4028  0x06            NE
0x4029  0x2E 0x05       JZB 0x402E (+5)

                        // break;                                               parser.hs:170

0x402B  0x28 0x02       DECSP 0x02
0x402D  0x4A            RET0

                        // ErrorAtCurrent(currentToken["lexeme"]);              parser.hs:172

0x402E  0x20 0x4A       PUSHGLOBALB 0x4A
0x4030  0x37 0xAF 0x06  PUSHIW 0x06AF
0x4033  0x1A 0x06       PUSHIB 0x06
0x4035  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4037  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4039  0x2C 0x95       CALLB 0x95     // Parser.ErrorAtCurrent

                        // break;                                               parser.hs:173

0x403B  0x28 0x02       DECSP 0x02
0x403D  0x4A            RET0


// /source/compiler/tokens/parser.hs:177
// ####  Parser.Consume(..)  ####                                               0x0097

0x403E  0x49            ENTER

                        // Consume(consumeType, "", "'" + ch + "' expected");

0x403F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4041  0x24 0x02       SYSCALL0 0x02  // String.New
0x4043  0x1A 0x27       PUSHIB 0x27
0x4045  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4047  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4049  0x25 0x03       SYSCALL1 0x03  // String.Append
0x404B  0x37 0x04 0x0B  PUSHIW 0x0B04
0x404E  0x1A 0x0A       PUSHIB 0x0A
0x4050  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4052  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4054  0x2C 0x99       CALLB 0x99     // Parser.Consume

                        // }                                                    parser.hs:179

0x4056  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:81
// ####  Parser.HadError_Get(..)  ####                                          0x008A

0x4058  0x49            ENTER

                        // bool HadError { get { return hadError; } }           parser.hs:81

0x4059  0x20 0x4C       PUSHGLOBALB 0x4C
0x405B  0x4A            RET0


// /source/compiler/tokens/parser.hs:216
// ####  Parser.Check(..)  ####                                                 0x009A

0x405C  0x49            ENTER

                        // return Check(checkType, "");                         parser.hs:217

0x405D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x405F  0x24 0x02       SYSCALL0 0x02  // String.New
0x4061  0x2C 0x9B       CALLB 0x9B     // Parser.Check
0x4063  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/parser.hs:181
// ####  Parser.Consume(..)  ####                                               0x0098

0x4065  0x49            ENTER

                        // Consume(consumeType, "", message);                   parser.hs:182

0x4066  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4068  0x24 0x02       SYSCALL0 0x02  // String.New
0x406A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x406C  0x2C 0x99       CALLB 0x99     // Parser.Consume

                        // }                                                    parser.hs:183

0x406E  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:84
// ####  Parser.PreviousToken_Get(..)  ####                                     0x008C

0x4070  0x49            ENTER

                        // <string, string> PreviousToken { get { return previousToken; }}

0x4071  0x20 0x48       PUSHGLOBALB 0x48
0x4073  0x4A            RET0


// /source/compiler/tokens/parser.hs:149
// ####  Parser.Error(..)  ####                                                 0x0093

0x4074  0x49            ENTER

                        // ErrorAt(previousToken, message);                     parser.hs:150

0x4075  0x20 0x48       PUSHGLOBALB 0x48
0x4077  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4079  0x2C 0x91       CALLB 0x91     // Parser.ErrorAt

                        // }                                                    parser.hs:151

0x407B  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:111
// ####  Parser.nextToken(..)  ####                                             0x0090

0x407D  0x49            ENTER

                        // currentToken = Scanner.Next();                       parser.hs:112

0x407E  0x2C 0x7E       CALLB 0x7E     // Scanner.Next
0x4080  0x59 0x4A       POPCOPYGLOBALB 0x4A

                        // }                                                    parser.hs:113

0x4082  0x4A            RET0


// /source/compiler/tokens/parser.hs:157
// ####  Parser.ErrorAtCurrent(..)  ####                                        0x0095

0x4083  0x49            ENTER

                        // ErrorAt(currentToken, message);                      parser.hs:158

0x4084  0x20 0x4A       PUSHGLOBALB 0x4A
0x4086  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4088  0x2C 0x91       CALLB 0x91     // Parser.ErrorAt

                        // }                                                    parser.hs:159

0x408A  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:185
// ####  Parser.Consume(..)  ####                                               0x0099

0x408C  0x49            ENTER

                        // if (HadError)                                        parser.hs:188

0x408D  0x2C 0x8A       CALLB 0x8A     // Parser.HadError_Get
0x408F  0x2E 0x04       JZB 0x4093 (+4)

                        // break;                                               parser.hs:190

0x4091  0x2A 0x06       RETB 0x06

                        // HopperToken ttype = Token.GetType(currentToken);

0x4093  0x44            PUSHI0
0x4094  0x20 0x4A       PUSHGLOBALB 0x4A
0x4096  0x2C 0x5B       CALLB 0x5B     // Token.GetType
0x4098  0x4C            POPLOCALB00

                        // if (ttype == consumeType)                            parser.hs:193

0x4099  0x4E            PUSHLOCALB00
0x409A  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x409C  0x05            EQ
0x409D  0x2E 0x49       JZB 0x40E6 (+73)

                        // if (ttype == HopperToken.Keyword)                    parser.hs:195

0x409F  0x4E            PUSHLOCALB00
0x40A0  0x1A 0x05       PUSHIB 0x05
0x40A2  0x05            EQ
0x40A3  0x2E 0x3D       JZB 0x40E0 (+61)

                        // keyword = "|" + keyword + "|";                       parser.hs:197

0x40A5  0x1A 0x7C       PUSHIB 0x7C
0x40A7  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x40A9  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x40AB  0x24 0x03       SYSCALL0 0x03  // String.Append
0x40AD  0x1A 0x7C       PUSHIB 0x7C
0x40AF  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x40B1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x40B3  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // string search = "|" + currentToken["lexeme"] + "|";

0x40B5  0x24 0x02       SYSCALL0 0x02  // String.New
0x40B7  0x1A 0x7C       PUSHIB 0x7C
0x40B9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x40BB  0x20 0x4A       PUSHGLOBALB 0x4A
0x40BD  0x37 0xAF 0x06  PUSHIW 0x06AF
0x40C0  0x1A 0x06       PUSHIB 0x06
0x40C2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40C4  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x40C6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x40C8  0x1A 0x7C       PUSHIB 0x7C
0x40CA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x40CC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x40CE  0x5E            POPCOPYLOCALB02

                        // if (keyword.Contains(search))                        parser.hs:199

0x40CF  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x40D1  0x4F            PUSHLOCALB02
0x40D2  0x2C 0xCD       CALLB 0xCD     // String.Contains
0x40D4  0x2E 0x08       JZB 0x40DC (+8)

                        // Advance();                                           parser.hs:201

0x40D6  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               parser.hs:202

0x40D8  0x28 0x04       DECSP 0x04
0x40DA  0x2A 0x06       RETB 0x06

                        // }                                                    parser.hs:204

0x40DC  0x28 0x02       DECSP 0x02
0x40DE  0x30 0x08       JB 0x40E6 (+8)

                        // Advance();                                           parser.hs:207

0x40E0  0x2C 0x96       CALLB 0x96     // Parser.Advance

                        // break;                                               parser.hs:208

0x40E2  0x28 0x02       DECSP 0x02
0x40E4  0x2A 0x06       RETB 0x06

                        // ErrorAtCurrent(message);                             parser.hs:211

0x40E6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x40E8  0x2C 0x95       CALLB 0x95     // Parser.ErrorAtCurrent

                        // break;                                               parser.hs:212

0x40EA  0x28 0x02       DECSP 0x02
0x40EC  0x2A 0x06       RETB 0x06


// /source/compiler/tokens/parser.hs:220
// ####  Parser.Check(..)  ####                                                 0x009B


                        // bool result = false;                                 parser.hs:221

0x40EE  0x5F 0x02       ENTERB 0x02

                        // HopperToken ttype = Token.GetType(currentToken);

0x40F0  0x20 0x4A       PUSHGLOBALB 0x4A
0x40F2  0x2C 0x5B       CALLB 0x5B     // Token.GetType
0x40F4  0x4D            POPLOCALB02

                        // result = (checkType == ttype);                       parser.hs:225

0x40F5  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x40F7  0x4F            PUSHLOCALB02
0x40F8  0x05            EQ
0x40F9  0x4C            POPLOCALB00

                        // if (!result)                                         parser.hs:226

0x40FA  0x4E            PUSHLOCALB00
0x40FB  0x2F 0x07       JNZB 0x4102 (+7)

                        // break;                                               parser.hs:228

0x40FD  0x28 0x02       DECSP 0x02
0x40FF  0x33 0x8B 0x00  JW 0x418A (+139)

                        // if (checkType == HopperToken.Keyword)                parser.hs:230

0x4102  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4104  0x1A 0x05       PUSHIB 0x05
0x4106  0x05            EQ
0x4107  0x2E 0x37       JZB 0x413E (+55)

                        // keyword = "|" + keyword + "|";                       parser.hs:232

0x4109  0x1A 0x7C       PUSHIB 0x7C
0x410B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x410D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x410F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4111  0x1A 0x7C       PUSHIB 0x7C
0x4113  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4115  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4117  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // string search = "|" + currentToken["lexeme"] + "|";

0x4119  0x24 0x02       SYSCALL0 0x02  // String.New
0x411B  0x1A 0x7C       PUSHIB 0x7C
0x411D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x411F  0x20 0x4A       PUSHGLOBALB 0x4A
0x4121  0x37 0xAF 0x06  PUSHIW 0x06AF
0x4124  0x1A 0x06       PUSHIB 0x06
0x4126  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4128  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x412A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x412C  0x1A 0x7C       PUSHIB 0x7C
0x412E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4130  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4132  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // result = keyword.Contains(search);                   parser.hs:234

0x4134  0x56 0xFE 0x04  PUSHLOCALBB 0x04FE
0x4137  0x2C 0xCD       CALLB 0xCD     // String.Contains
0x4139  0x4C            POPLOCALB00

                        // }                                                    parser.hs:235

0x413A  0x28 0x02       DECSP 0x02
0x413C  0x30 0x4C       JB 0x4188 (+76)

                        // else if ((checkType == HopperToken.Identifier) && (keyword.Length != 0))

0x413E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4140  0x1A 0x03       PUSHIB 0x03
0x4142  0x05            EQ
0x4143  0x27 0x00       DUP 0x00
0x4145  0x2E 0x09       JZB 0x414E (+9)
0x4147  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4149  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x414B  0x44            PUSHI0
0x414C  0x06            NE
0x414D  0x0C            BOOLAND
0x414E  0x2E 0x16       JZB 0x4164 (+22)

                        // result = keyword == currentToken["lexeme"];

0x4150  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4152  0x20 0x4A       PUSHGLOBALB 0x4A
0x4154  0x37 0xAF 0x06  PUSHIW 0x06AF
0x4157  0x1A 0x06       PUSHIB 0x06
0x4159  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x415B  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x415D  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x415F  0x44            PUSHI0
0x4160  0x05            EQ
0x4161  0x4C            POPLOCALB00

                        // }                                                    parser.hs:239

0x4162  0x30 0x26       JB 0x4188 (+38)

                        // else if ((checkType == HopperToken.Directive) && (keyword.Length != 0))

0x4164  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4166  0x1A 0x06       PUSHIB 0x06
0x4168  0x05            EQ
0x4169  0x27 0x00       DUP 0x00
0x416B  0x2E 0x09       JZB 0x4174 (+9)
0x416D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x416F  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x4171  0x44            PUSHI0
0x4172  0x06            NE
0x4173  0x0C            BOOLAND
0x4174  0x2E 0x14       JZB 0x4188 (+20)

                        // result = keyword == currentToken["lexeme"];

0x4176  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4178  0x20 0x4A       PUSHGLOBALB 0x4A
0x417A  0x37 0xAF 0x06  PUSHIW 0x06AF
0x417D  0x1A 0x06       PUSHIB 0x06
0x417F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4181  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4183  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4185  0x44            PUSHI0
0x4186  0x05            EQ
0x4187  0x4C            POPLOCALB00

                        // break;                                               parser.hs:244

0x4188  0x28 0x02       DECSP 0x02

                        // return result;                                       parser.hs:246

0x418A  0x4E            PUSHLOCALB00
0x418B  0x2B 0x06       RETRETB 0x06


// /source/compiler/tokens/parser.hs:115
// ####  Parser.ErrorAt(..)  ####                                               0x0091

0x418D  0x49            ENTER

                        // if (!hadError)                                       parser.hs:116

0x418E  0x20 0x4C       PUSHGLOBALB 0x4C
0x4190  0x32 0xA7 0x00  JNZW 0x4237 (+167)

                        // string errorMessage;                                 parser.hs:118

0x4193  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string lexeme = token["lexeme"];                     parser.hs:119

0x4195  0x24 0x02       SYSCALL0 0x02  // String.New
0x4197  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4199  0x37 0xAF 0x06  PUSHIW 0x06AF
0x419C  0x1A 0x06       PUSHIB 0x06
0x419E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41A0  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x41A2  0x5E            POPCOPYLOCALB02

                        // if (token.Contains("line"))                          parser.hs:120

0x41A3  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x41A5  0x37 0x2D 0x01  PUSHIW 0x012D
0x41A8  0x1A 0x04       PUSHIB 0x04
0x41AA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41AC  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x41AE  0x2E 0x3B       JZB 0x41E9 (+59)

                        // string ln = token["line"];                           parser.hs:122

0x41B0  0x24 0x02       SYSCALL0 0x02  // String.New
0x41B2  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x41B4  0x37 0x2D 0x01  PUSHIW 0x012D
0x41B7  0x1A 0x04       PUSHIB 0x04
0x41B9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41BB  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x41BD  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // string path = token["source"];                       parser.hs:123

0x41BF  0x24 0x02       SYSCALL0 0x02  // String.New
0x41C1  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x41C3  0x37 0x27 0x01  PUSHIW 0x0127
0x41C6  0x1A 0x06       PUSHIB 0x06
0x41C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41CA  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x41CC  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // errorMessage = "[" + path + ":" + ln + "]";

0x41CE  0x1A 0x5B       PUSHIB 0x5B
0x41D0  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x41D2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x41D4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x41D6  0x1A 0x3A       PUSHIB 0x3A
0x41D8  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x41DA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x41DC  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x41DE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x41E0  0x1A 0x5D       PUSHIB 0x5D
0x41E2  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x41E4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x41E6  0x5D            POPCOPYLOCALB00

                        // }                                                    parser.hs:125

0x41E7  0x28 0x04       DECSP 0x04

                        // HopperToken ttype = Token.GetType(token);            parser.hs:126

0x41E9  0x44            PUSHI0
0x41EA  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x41EC  0x2C 0x5B       CALLB 0x5B     // Token.GetType
0x41EE  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (ttype == HopperToken.EOF)                        parser.hs:127

0x41F0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x41F2  0x1A 0x2D       PUSHIB 0x2D
0x41F4  0x05            EQ
0x41F5  0x2E 0x0F       JZB 0x4204 (+15)

                        // errorMessage = errorMessage + " Error at end";

0x41F7  0x4E            PUSHLOCALB00
0x41F8  0x37 0x0E 0x0B  PUSHIW 0x0B0E
0x41FB  0x1A 0x0D       PUSHIB 0x0D
0x41FD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41FF  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4201  0x5D            POPCOPYLOCALB00

                        // }                                                    parser.hs:130

0x4202  0x30 0x23       JB 0x4225 (+35)

                        // else if (ttype == HopperToken.Error)                 parser.hs:131

0x4204  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4206  0x45            PUSHI1
0x4207  0x05            EQ
0x4208  0x2F 0x1D       JNZB 0x4225 (+29)

                        // else if (lexeme.Length > 0)                          parser.hs:135

0x420A  0x4F            PUSHLOCALB02
0x420B  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x420D  0x44            PUSHI0
0x420E  0x07            GT
0x420F  0x2E 0x16       JZB 0x4225 (+22)

                        // errorMessage = errorMessage + " Error at '" + lexeme + "'";

0x4211  0x4E            PUSHLOCALB00
0x4212  0x37 0x1B 0x0B  PUSHIW 0x0B1B
0x4215  0x1A 0x0B       PUSHIB 0x0B
0x4217  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4219  0x24 0x03       SYSCALL0 0x03  // String.Append
0x421B  0x4F            PUSHLOCALB02
0x421C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x421E  0x1A 0x27       PUSHIB 0x27
0x4220  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4222  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4224  0x5D            POPCOPYLOCALB00

                        // errorMessage = errorMessage + ": " + message;

0x4225  0x4E            PUSHLOCALB00
0x4226  0x37 0x3A 0x20  PUSHIW 0x203A
0x4229  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x422B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x422D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x422F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4231  0x5D            POPCOPYLOCALB00

                        // EmitError(errorMessage);                             parser.hs:140

0x4232  0x4E            PUSHLOCALB00
0x4233  0x2C 0x87       CALLB 0x87     // Parser.EmitError

                        // }                                                    parser.hs:141

0x4235  0x28 0x06       DECSP 0x06

                        // hadError = true;                                     parser.hs:142

0x4237  0x45            PUSHI1
0x4238  0x1F 0x4C       POPGLOBALB 0x4C

                        // }                                                    parser.hs:143

0x423A  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:42
// ####  Parser.EmitError(..)  ####                                             0x0087

0x423C  0x49            ENTER

                        // if (IsInteractive())                                 parser.hs:43

0x423D  0x2C 0x86       CALLB 0x86     // Parser.IsInteractive
0x423F  0x2E 0x22       JZB 0x4261 (+34)

                        // ProgressDone();                                      parser.hs:45

0x4241  0x2C 0x89       CALLB 0x89     // Parser.ProgressDone

                        // string eol = "" + char(0x0A);                        parser.hs:46

0x4243  0x24 0x02       SYSCALL0 0x02  // String.New
0x4245  0x24 0x02       SYSCALL0 0x02  // String.New
0x4247  0x1A 0x0A       PUSHIB 0x0A
0x4249  0x25 0x03       SYSCALL1 0x03  // String.Append
0x424B  0x5D            POPCOPYLOCALB00

                        // errorFile.Append(errorMessage + eol);                parser.hs:47

0x424C  0x20 0x52       PUSHGLOBALB 0x52
0x424E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4250  0x4E            PUSHLOCALB00
0x4251  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4253  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // errorFile.Flush();                                   parser.hs:48

0x4255  0x20 0x52       PUSHGLOBALB 0x52
0x4257  0x24 0x67       SYSCALL0 0x67  // File.Flush

                        // Diagnostics.SetError(0x0E);                          parser.hs:49

0x4259  0x1A 0x0E       PUSHIB 0x0E
0x425B  0x24 0x7D       SYSCALL0 0x7D  // Diagnostics.SetError

                        // }                                                    parser.hs:50

0x425D  0x28 0x02       DECSP 0x02
0x425F  0x2A 0x02       RETB 0x02

                        // PrintLn(errorMessage);                               parser.hs:53

0x4261  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4263  0x2C 0x20       CALLB 0x20     // Screen.PrintLn

                        // }                                                    parser.hs:55

0x4265  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/token.hs:334
// ####  Token.TryParseHex(..)  ####                                            0x0067


                        // bool success;                                        token.hs:335

0x4267  0x5F 0x03       ENTERB 0x03

                        // returnValue = 0;                                     token.hs:339

0x4269  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // if (!content.StartsWith("0x"))                       token.hs:340

0x426B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x426D  0x37 0x30 0x78  PUSHIW 0x7830
0x4270  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4272  0x2C 0xCF       CALLB 0xCF     // String.StartsWith
0x4274  0x2E 0x5F       JZB 0x42D3 (+95)

                        // length = content.Length;                             token.hs:344

0x4276  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4278  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x427A  0x4D            POPLOCALB02

                        // if (length < 3)                                      token.hs:345

0x427B  0x4F            PUSHLOCALB02
0x427C  0x1A 0x03       PUSHIB 0x03
0x427E  0x08            LT
0x427F  0x2F 0x54       JNZB 0x42D3 (+84)

                        // success = true;                                      token.hs:349

0x4281  0x45            PUSHI1
0x4282  0x4C            POPLOCALB00

                        // for (uint i=0; i < length-2; i++)                    token.hs:350

0x4283  0x44            PUSHI0
0x4284  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4286  0x4F            PUSHLOCALB02
0x4287  0x1A 0x02       PUSHIB 0x02
0x4289  0x01            SUB
0x428A  0x08            LT
0x428B  0x2E 0x46       JZB 0x42D1 (+70)

                        // returnValue = returnValue * 16;                      token.hs:352

0x428D  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x428F  0x1A 0x10       PUSHIB 0x10
0x4291  0x03            MUL
0x4292  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // char c = content.GetChar(i+2);                       token.hs:353

0x4294  0x44            PUSHI0
0x4295  0x56 0xFC 0x04  PUSHLOCALBB 0x04FC
0x4298  0x1A 0x02       PUSHIB 0x02
0x429A  0x00            ADD
0x429B  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x429D  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (c.IsDigit())                                     token.hs:354

0x429F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x42A1  0x2C 0xA2       CALLB 0xA2     // Char.IsDigit
0x42A3  0x2E 0x0E       JZB 0x42B1 (+14)

                        // returnValue = returnValue + (byte(c) - 48); // 48 is ASCII for '0'

0x42A5  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x42A7  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x42A9  0x1A 0x30       PUSHIB 0x30
0x42AB  0x01            SUB
0x42AC  0x00            ADD
0x42AD  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // }                                                    token.hs:357

0x42AF  0x30 0x1C       JB 0x42CB (+28)

                        // else if (c.IsHexDigit())                             token.hs:358

0x42B1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x42B3  0x2C 0xA6       CALLB 0xA6     // Char.IsHexDigit
0x42B5  0x2E 0x10       JZB 0x42C5 (+16)

                        // returnValue = returnValue + (byte(c.ToLower()) - 87); // 97 is ASCII for 'a', -97+10 = -87

0x42B7  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x42B9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x42BB  0x2C 0xA5       CALLB 0xA5     // Char.ToLower
0x42BD  0x1A 0x57       PUSHIB 0x57
0x42BF  0x01            SUB
0x42C0  0x00            ADD
0x42C1  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // }                                                    token.hs:361

0x42C3  0x30 0x08       JB 0x42CB (+8)

                        // success = false;                                     token.hs:364

0x42C5  0x44            PUSHI0
0x42C6  0x4C            POPLOCALB00

                        // break;                                               token.hs:365

0x42C7  0x28 0x04       DECSP 0x04
0x42C9  0x30 0x0A       JB 0x42D3 (+10)

                        // }                                                    token.hs:367

0x42CB  0x28 0x02       DECSP 0x02
0x42CD  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x42CF  0x30 0xB5       JB 0x4284 (-75)
0x42D1  0x28 0x02       DECSP 0x02

                        // return success;                                      token.hs:370

0x42D3  0x4E            PUSHLOCALB00
0x42D4  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/token.hs:113
// ####  Token.Initialize(..)  ####                                             0x005C

0x42D6  0x49            ENTER

                        // reservedIdentifiers.Clear();                         token.hs:114

0x42D7  0x20 0x1E       PUSHGLOBALB 0x1E
0x42D9  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // reservedZopperIdentifiers.Clear();                   token.hs:115

0x42DB  0x20 0x20       PUSHGLOBALB 0x20
0x42DD  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // typeKeywords.Clear();                                token.hs:116

0x42DF  0x20 0x22       PUSHGLOBALB 0x22
0x42E1  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // statementKeywords.Clear();                           token.hs:117

0x42E3  0x20 0x24       PUSHGLOBALB 0x24
0x42E5  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // hopperTokenTypes.Clear();                            token.hs:119

0x42E7  0x20 0x28       PUSHGLOBALB 0x28
0x42E9  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // hopperTokenTypes["EOF"] = HopperToken.EOF;           token.hs:121

0x42EB  0x20 0x28       PUSHGLOBALB 0x28
0x42ED  0x37 0x26 0x0B  PUSHIW 0x0B26
0x42F0  0x1A 0x03       PUSHIB 0x03
0x42F2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42F4  0x1A 0x2D       PUSHIB 0x2D
0x42F6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Undefined"] = HopperToken.Undefined;

0x42F8  0x20 0x28       PUSHGLOBALB 0x28
0x42FA  0x37 0xF7 0x0A  PUSHIW 0x0AF7
0x42FD  0x1A 0x09       PUSHIB 0x09
0x42FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4301  0x44            PUSHI0
0x4302  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Error"] = HopperToken.Error;

0x4304  0x20 0x28       PUSHGLOBALB 0x28
0x4306  0x37 0xFB 0x03  PUSHIW 0x03FB
0x4309  0x1A 0x05       PUSHIB 0x05
0x430B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x430D  0x45            PUSHI1
0x430E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Char"] = HopperToken.Char;

0x4310  0x20 0x28       PUSHGLOBALB 0x28
0x4312  0x37 0x69 0x01  PUSHIW 0x0169
0x4315  0x1A 0x04       PUSHIB 0x04
0x4317  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4319  0x1A 0x08       PUSHIB 0x08
0x431B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Bool"] = HopperToken.Bool;

0x431D  0x20 0x28       PUSHGLOBALB 0x28
0x431F  0x37 0x29 0x0B  PUSHIW 0x0B29
0x4322  0x1A 0x04       PUSHIB 0x04
0x4324  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4326  0x1A 0x07       PUSHIB 0x07
0x4328  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Keyword"] = HopperToken.Keyword;

0x432A  0x20 0x28       PUSHGLOBALB 0x28
0x432C  0x37 0x2D 0x0B  PUSHIW 0x0B2D
0x432F  0x1A 0x07       PUSHIB 0x07
0x4331  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4333  0x1A 0x05       PUSHIB 0x05
0x4335  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Directive"] = HopperToken.Directive;

0x4337  0x20 0x28       PUSHGLOBALB 0x28
0x4339  0x37 0x34 0x0B  PUSHIW 0x0B34
0x433C  0x1A 0x09       PUSHIB 0x09
0x433E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4340  0x1A 0x06       PUSHIB 0x06
0x4342  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Identifier"] = HopperToken.Identifier;

0x4344  0x20 0x28       PUSHGLOBALB 0x28
0x4346  0x37 0x3D 0x0B  PUSHIW 0x0B3D
0x4349  0x1A 0x0A       PUSHIB 0x0A
0x434B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x434D  0x1A 0x03       PUSHIB 0x03
0x434F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["DottedIdentifier"] = HopperToken.DottedIdentifier;

0x4351  0x20 0x28       PUSHGLOBALB 0x28
0x4353  0x37 0x47 0x0B  PUSHIW 0x0B47
0x4356  0x1A 0x10       PUSHIB 0x10
0x4358  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x435A  0x1A 0x02       PUSHIB 0x02
0x435C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Integer"] = HopperToken.Integer;

0x435E  0x20 0x28       PUSHGLOBALB 0x28
0x4360  0x37 0x57 0x0B  PUSHIW 0x0B57
0x4363  0x1A 0x07       PUSHIB 0x07
0x4365  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4367  0x1A 0x09       PUSHIB 0x09
0x4369  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Float"] = HopperToken.Float;

0x436B  0x20 0x28       PUSHGLOBALB 0x28
0x436D  0x37 0x80 0x02  PUSHIW 0x0280
0x4370  0x1A 0x05       PUSHIB 0x05
0x4372  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4374  0x1A 0x0A       PUSHIB 0x0A
0x4376  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["StringConstant"] = HopperToken.StringConstant;

0x4378  0x20 0x28       PUSHGLOBALB 0x28
0x437A  0x37 0x5E 0x0B  PUSHIW 0x0B5E
0x437D  0x1A 0x0E       PUSHIB 0x0E
0x437F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4381  0x1A 0x0B       PUSHIB 0x0B
0x4383  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Assign"] = HopperToken.Assign;

0x4385  0x20 0x28       PUSHGLOBALB 0x28
0x4387  0x37 0x6C 0x0B  PUSHIW 0x0B6C
0x438A  0x1A 0x06       PUSHIB 0x06
0x438C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x438E  0x1A 0x2C       PUSHIB 0x2C
0x4390  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitAnd"] = HopperToken.BitAnd;

0x4392  0x20 0x28       PUSHGLOBALB 0x28
0x4394  0x37 0x72 0x0B  PUSHIW 0x0B72
0x4397  0x1A 0x06       PUSHIB 0x06
0x4399  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x439B  0x1A 0x21       PUSHIB 0x21
0x439D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitOr"] = HopperToken.BitOr;

0x439F  0x20 0x28       PUSHGLOBALB 0x28
0x43A1  0x37 0x78 0x0B  PUSHIW 0x0B78
0x43A4  0x1A 0x05       PUSHIB 0x05
0x43A6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43A8  0x1A 0x22       PUSHIB 0x22
0x43AA  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LParen"] = HopperToken.LParen;

0x43AC  0x20 0x28       PUSHGLOBALB 0x28
0x43AE  0x37 0x7D 0x0B  PUSHIW 0x0B7D
0x43B1  0x1A 0x06       PUSHIB 0x06
0x43B3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43B5  0x1A 0x10       PUSHIB 0x10
0x43B7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["RParen"] = HopperToken.RParen;

0x43B9  0x20 0x28       PUSHGLOBALB 0x28
0x43BB  0x37 0x83 0x0B  PUSHIW 0x0B83
0x43BE  0x1A 0x06       PUSHIB 0x06
0x43C0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43C2  0x1A 0x11       PUSHIB 0x11
0x43C4  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LBrace"] = HopperToken.LBrace;

0x43C6  0x20 0x28       PUSHGLOBALB 0x28
0x43C8  0x37 0x89 0x0B  PUSHIW 0x0B89
0x43CB  0x1A 0x06       PUSHIB 0x06
0x43CD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43CF  0x1A 0x12       PUSHIB 0x12
0x43D1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["RBrace"] = HopperToken.RBrace;

0x43D3  0x20 0x28       PUSHGLOBALB 0x28
0x43D5  0x37 0x8F 0x0B  PUSHIW 0x0B8F
0x43D8  0x1A 0x06       PUSHIB 0x06
0x43DA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43DC  0x1A 0x13       PUSHIB 0x13
0x43DE  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LBracket"] = HopperToken.LBracket;

0x43E0  0x20 0x28       PUSHGLOBALB 0x28
0x43E2  0x37 0x95 0x0B  PUSHIW 0x0B95
0x43E5  0x1A 0x08       PUSHIB 0x08
0x43E7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43E9  0x1A 0x14       PUSHIB 0x14
0x43EB  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["RBracket"] = HopperToken.RBracket;

0x43ED  0x20 0x28       PUSHGLOBALB 0x28
0x43EF  0x37 0x9D 0x0B  PUSHIW 0x0B9D
0x43F2  0x1A 0x08       PUSHIB 0x08
0x43F4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43F6  0x1A 0x15       PUSHIB 0x15
0x43F8  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["SemiColon"] = HopperToken.SemiColon;

0x43FA  0x20 0x28       PUSHGLOBALB 0x28
0x43FC  0x37 0xA5 0x0B  PUSHIW 0x0BA5
0x43FF  0x1A 0x09       PUSHIB 0x09
0x4401  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4403  0x1A 0x0C       PUSHIB 0x0C
0x4405  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Colon"] = HopperToken.Colon;

0x4407  0x20 0x28       PUSHGLOBALB 0x28
0x4409  0x37 0xA9 0x0B  PUSHIW 0x0BA9
0x440C  0x1A 0x05       PUSHIB 0x05
0x440E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4410  0x1A 0x0E       PUSHIB 0x0E
0x4412  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Comma"] = HopperToken.Comma;

0x4414  0x20 0x28       PUSHGLOBALB 0x28
0x4416  0x37 0xAE 0x0B  PUSHIW 0x0BAE
0x4419  0x1A 0x05       PUSHIB 0x05
0x441B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x441D  0x1A 0x0D       PUSHIB 0x0D
0x441F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Dot"] = HopperToken.Dot;           token.hs:145

0x4421  0x20 0x28       PUSHGLOBALB 0x28
0x4423  0x37 0x47 0x0B  PUSHIW 0x0B47
0x4426  0x1A 0x03       PUSHIB 0x03
0x4428  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x442A  0x1A 0x04       PUSHIB 0x04
0x442C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Add"] = HopperToken.Add;           token.hs:146

0x442E  0x20 0x28       PUSHGLOBALB 0x28
0x4430  0x37 0xA9 0x02  PUSHIW 0x02A9
0x4433  0x1A 0x03       PUSHIB 0x03
0x4435  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4437  0x1A 0x25       PUSHIB 0x25
0x4439  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Subtract"] = HopperToken.Subtract;

0x443B  0x20 0x28       PUSHGLOBALB 0x28
0x443D  0x37 0xB3 0x0B  PUSHIW 0x0BB3
0x4440  0x1A 0x08       PUSHIB 0x08
0x4442  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4444  0x1A 0x26       PUSHIB 0x26
0x4446  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Multiply"] = HopperToken.Multiply;

0x4448  0x20 0x28       PUSHGLOBALB 0x28
0x444A  0x37 0xBB 0x0B  PUSHIW 0x0BBB
0x444D  0x1A 0x08       PUSHIB 0x08
0x444F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4451  0x1A 0x27       PUSHIB 0x27
0x4453  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Divide"] = HopperToken.Divide;

0x4455  0x20 0x28       PUSHGLOBALB 0x28
0x4457  0x37 0xC3 0x0B  PUSHIW 0x0BC3
0x445A  0x1A 0x06       PUSHIB 0x06
0x445C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x445E  0x1A 0x28       PUSHIB 0x28
0x4460  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Modulus"] = HopperToken.Modulus;

0x4462  0x20 0x28       PUSHGLOBALB 0x28
0x4464  0x37 0xC9 0x0B  PUSHIW 0x0BC9
0x4467  0x1A 0x07       PUSHIB 0x07
0x4469  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x446B  0x1A 0x29       PUSHIB 0x29
0x446D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Increment"] = HopperToken.Increment;

0x446F  0x20 0x28       PUSHGLOBALB 0x28
0x4471  0x37 0xD0 0x0B  PUSHIW 0x0BD0
0x4474  0x1A 0x09       PUSHIB 0x09
0x4476  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4478  0x1A 0x2A       PUSHIB 0x2A
0x447A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Decrement"] = HopperToken.Decrement;

0x447C  0x20 0x28       PUSHGLOBALB 0x28
0x447E  0x37 0xD9 0x0B  PUSHIW 0x0BD9
0x4481  0x1A 0x09       PUSHIB 0x09
0x4483  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4485  0x1A 0x2B       PUSHIB 0x2B
0x4487  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["NE"] = HopperToken.NE;             token.hs:153

0x4489  0x20 0x28       PUSHGLOBALB 0x28
0x448B  0x37 0x4E 0x45  PUSHIW 0x454E
0x448E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4490  0x1A 0x1B       PUSHIB 0x1B
0x4492  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["EQ"] = HopperToken.EQ;             token.hs:154

0x4494  0x20 0x28       PUSHGLOBALB 0x28
0x4496  0x37 0x45 0x51  PUSHIW 0x5145
0x4499  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x449B  0x1A 0x18       PUSHIB 0x18
0x449D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["GT"] = HopperToken.GT;             token.hs:155

0x449F  0x20 0x28       PUSHGLOBALB 0x28
0x44A1  0x37 0x47 0x54  PUSHIW 0x5447
0x44A4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x44A6  0x1A 0x17       PUSHIB 0x17
0x44A8  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LT"] = HopperToken.LT;             token.hs:156

0x44AA  0x20 0x28       PUSHGLOBALB 0x28
0x44AC  0x37 0x4C 0x54  PUSHIW 0x544C
0x44AF  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x44B1  0x1A 0x16       PUSHIB 0x16
0x44B3  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LE"] = HopperToken.LE;             token.hs:157

0x44B5  0x20 0x28       PUSHGLOBALB 0x28
0x44B7  0x37 0x4C 0x45  PUSHIW 0x454C
0x44BA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x44BC  0x1A 0x19       PUSHIB 0x19
0x44BE  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["GE"] = HopperToken.GE;             token.hs:158

0x44C0  0x20 0x28       PUSHGLOBALB 0x28
0x44C2  0x37 0x47 0x45  PUSHIW 0x4547
0x44C5  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x44C7  0x1A 0x1A       PUSHIB 0x1A
0x44C9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["ShiftLeft"] = HopperToken.ShiftLeft;

0x44CB  0x20 0x28       PUSHGLOBALB 0x28
0x44CD  0x37 0xE2 0x0B  PUSHIW 0x0BE2
0x44D0  0x1A 0x09       PUSHIB 0x09
0x44D2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44D4  0x1A 0x1C       PUSHIB 0x1C
0x44D6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["ShiftRight"] = HopperToken.ShiftRight;

0x44D8  0x20 0x28       PUSHGLOBALB 0x28
0x44DA  0x37 0xEB 0x0B  PUSHIW 0x0BEB
0x44DD  0x1A 0x0A       PUSHIB 0x0A
0x44DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44E1  0x1A 0x1D       PUSHIB 0x1D
0x44E3  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BooleanNot"] = HopperToken.BooleanNot;

0x44E5  0x20 0x28       PUSHGLOBALB 0x28
0x44E7  0x37 0xF5 0x0B  PUSHIW 0x0BF5
0x44EA  0x1A 0x0A       PUSHIB 0x0A
0x44EC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44EE  0x1A 0x20       PUSHIB 0x20
0x44F0  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BooleanOr"] = HopperToken.BooleanOr;

0x44F2  0x20 0x28       PUSHGLOBALB 0x28
0x44F4  0x37 0xFF 0x0B  PUSHIW 0x0BFF
0x44F7  0x1A 0x09       PUSHIB 0x09
0x44F9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44FB  0x1A 0x1F       PUSHIB 0x1F
0x44FD  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BooleanAnd"] = HopperToken.BooleanAnd;

0x44FF  0x20 0x28       PUSHGLOBALB 0x28
0x4501  0x37 0x08 0x0C  PUSHIW 0x0C08
0x4504  0x1A 0x0A       PUSHIB 0x0A
0x4506  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4508  0x1A 0x1E       PUSHIB 0x1E
0x450A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitAnd"] = HopperToken.BitAnd;

0x450C  0x20 0x28       PUSHGLOBALB 0x28
0x450E  0x37 0x72 0x0B  PUSHIW 0x0B72
0x4511  0x1A 0x06       PUSHIB 0x06
0x4513  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4515  0x1A 0x21       PUSHIB 0x21
0x4517  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitOr"] = HopperToken.BitOr;

0x4519  0x20 0x28       PUSHGLOBALB 0x28
0x451B  0x37 0x78 0x0B  PUSHIW 0x0B78
0x451E  0x1A 0x05       PUSHIB 0x05
0x4520  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4522  0x1A 0x22       PUSHIB 0x22
0x4524  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitNot"] = HopperToken.BitNot;

0x4526  0x20 0x28       PUSHGLOBALB 0x28
0x4528  0x37 0x12 0x0C  PUSHIW 0x0C12
0x452B  0x1A 0x06       PUSHIB 0x06
0x452D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x452F  0x1A 0x23       PUSHIB 0x23
0x4531  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitXor"] = HopperToken.BitXor;

0x4533  0x20 0x28       PUSHGLOBALB 0x28
0x4535  0x37 0x18 0x0C  PUSHIW 0x0C18
0x4538  0x1A 0x06       PUSHIB 0x06
0x453A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x453C  0x1A 0x24       PUSHIB 0x24
0x453E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // foreach (var kv in hopperTokenTypes)                 token.hs:170

0x4540  0x20 0x28       PUSHGLOBALB 0x28
0x4542  0x1A 0x0F       PUSHIB 0x0F
0x4544  0x1A 0x0F       PUSHIB 0x0F
0x4546  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x4548  0x44            PUSHI0
0x4549  0x4E            PUSHLOCALB00
0x454A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x454C  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x454E  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4550  0x4D            POPLOCALB02
0x4551  0x2E 0x0E       JZB 0x455F (+14)

                        // hopperTokenNames[kv.value] = kv.key;                 token.hs:172

0x4553  0x20 0x2A       PUSHGLOBALB 0x2A
0x4555  0x4F            PUSHLOCALB02
0x4556  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x4558  0x4F            PUSHLOCALB02
0x4559  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x455B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    token.hs:173

0x455D  0x30 0xEC       JB 0x4549 (-20)
0x455F  0x28 0x06       DECSP 0x06

                        // reservedIdentifiers["line"] = true;                  token.hs:175

0x4561  0x20 0x1E       PUSHGLOBALB 0x1E
0x4563  0x37 0x2D 0x01  PUSHIW 0x012D
0x4566  0x1A 0x04       PUSHIB 0x04
0x4568  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x456A  0x45            PUSHI1
0x456B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedIdentifiers["source"] = true;                token.hs:176

0x456D  0x20 0x1E       PUSHGLOBALB 0x1E
0x456F  0x37 0x27 0x01  PUSHIW 0x0127
0x4572  0x1A 0x06       PUSHIB 0x06
0x4574  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4576  0x45            PUSHI1
0x4577  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["port"] = true;            token.hs:178

0x4579  0x20 0x20       PUSHGLOBALB 0x20
0x457B  0x37 0x1E 0x0C  PUSHIW 0x0C1E
0x457E  0x1A 0x04       PUSHIB 0x04
0x4580  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4582  0x45            PUSHI1
0x4583  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["memory"] = true;

0x4585  0x20 0x20       PUSHGLOBALB 0x20
0x4587  0x37 0x22 0x0C  PUSHIW 0x0C22
0x458A  0x1A 0x06       PUSHIB 0x06
0x458C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x458E  0x45            PUSHI1
0x458F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["memoryword"] = true;

0x4591  0x20 0x20       PUSHGLOBALB 0x20
0x4593  0x37 0x28 0x0C  PUSHIW 0x0C28
0x4596  0x1A 0x0A       PUSHIB 0x0A
0x4598  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x459A  0x45            PUSHI1
0x459B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["sp"] = true;              token.hs:181

0x459D  0x20 0x20       PUSHGLOBALB 0x20
0x459F  0x37 0x73 0x70  PUSHIW 0x7073
0x45A2  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x45A4  0x45            PUSHI1
0x45A5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["pc"] = true;              token.hs:182

0x45A7  0x20 0x20       PUSHGLOBALB 0x20
0x45A9  0x37 0x70 0x63  PUSHIW 0x6370
0x45AC  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x45AE  0x45            PUSHI1
0x45AF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["iy"] = true;              token.hs:183

0x45B1  0x20 0x20       PUSHGLOBALB 0x20
0x45B3  0x37 0x69 0x79  PUSHIW 0x7969
0x45B6  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x45B8  0x45            PUSHI1
0x45B9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["array"] = true;                        token.hs:186

0x45BB  0x20 0x22       PUSHGLOBALB 0x22
0x45BD  0x37 0x32 0x0C  PUSHIW 0x0C32
0x45C0  0x1A 0x05       PUSHIB 0x05
0x45C2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45C4  0x45            PUSHI1
0x45C5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["bool"] = true;                         token.hs:187

0x45C7  0x20 0x22       PUSHGLOBALB 0x22
0x45C9  0x37 0x37 0x0C  PUSHIW 0x0C37
0x45CC  0x1A 0x04       PUSHIB 0x04
0x45CE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45D0  0x45            PUSHI1
0x45D1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["byte"] = true;                         token.hs:188

0x45D3  0x20 0x22       PUSHGLOBALB 0x22
0x45D5  0x1A 0xA6       PUSHIB 0xA6
0x45D7  0x1A 0x04       PUSHIB 0x04
0x45D9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45DB  0x45            PUSHI1
0x45DC  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["char"] = true;                         token.hs:189

0x45DE  0x20 0x22       PUSHGLOBALB 0x22
0x45E0  0x37 0x3B 0x0C  PUSHIW 0x0C3B
0x45E3  0x1A 0x04       PUSHIB 0x04
0x45E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45E7  0x45            PUSHI1
0x45E8  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["delegate"] = true;                     token.hs:190

0x45EA  0x20 0x22       PUSHGLOBALB 0x22
0x45EC  0x37 0x3F 0x0C  PUSHIW 0x0C3F
0x45EF  0x1A 0x08       PUSHIB 0x08
0x45F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45F3  0x45            PUSHI1
0x45F4  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["dictionary"] = true;                   token.hs:191

0x45F6  0x20 0x22       PUSHGLOBALB 0x22
0x45F8  0x37 0x47 0x0C  PUSHIW 0x0C47
0x45FB  0x1A 0x0A       PUSHIB 0x0A
0x45FD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45FF  0x45            PUSHI1
0x4600  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["directory"] = true;                    token.hs:192

0x4602  0x20 0x22       PUSHGLOBALB 0x22
0x4604  0x37 0x51 0x0C  PUSHIW 0x0C51
0x4607  0x1A 0x09       PUSHIB 0x09
0x4609  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x460B  0x45            PUSHI1
0x460C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["enum"] = true;                         token.hs:193

0x460E  0x20 0x22       PUSHGLOBALB 0x22
0x4610  0x37 0x5A 0x0C  PUSHIW 0x0C5A
0x4613  0x1A 0x04       PUSHIB 0x04
0x4615  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4617  0x45            PUSHI1
0x4618  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["file"] = true;                         token.hs:194

0x461A  0x20 0x22       PUSHGLOBALB 0x22
0x461C  0x1A 0xF5       PUSHIB 0xF5
0x461E  0x1A 0x04       PUSHIB 0x04
0x4620  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4622  0x45            PUSHI1
0x4623  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["flags"] = true;                        token.hs:195

0x4625  0x20 0x22       PUSHGLOBALB 0x22
0x4627  0x37 0x5E 0x0C  PUSHIW 0x0C5E
0x462A  0x1A 0x05       PUSHIB 0x05
0x462C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x462E  0x45            PUSHI1
0x462F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["float"] = true;                        token.hs:196

0x4631  0x20 0x22       PUSHGLOBALB 0x22
0x4633  0x37 0x63 0x0C  PUSHIW 0x0C63
0x4636  0x1A 0x05       PUSHIB 0x05
0x4638  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x463A  0x45            PUSHI1
0x463B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["int"] = true;                          token.hs:197

0x463D  0x20 0x22       PUSHGLOBALB 0x22
0x463F  0x1A 0x89       PUSHIB 0x89
0x4641  0x1A 0x03       PUSHIB 0x03
0x4643  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4645  0x45            PUSHI1
0x4646  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["uint"] = true;                         token.hs:198

0x4648  0x20 0x22       PUSHGLOBALB 0x22
0x464A  0x37 0x68 0x0C  PUSHIW 0x0C68
0x464D  0x1A 0x04       PUSHIB 0x04
0x464F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4651  0x45            PUSHI1
0x4652  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["list"] = true;                         token.hs:199

0x4654  0x20 0x22       PUSHGLOBALB 0x22
0x4656  0x37 0x6C 0x0C  PUSHIW 0x0C6C
0x4659  0x1A 0x04       PUSHIB 0x04
0x465B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x465D  0x45            PUSHI1
0x465E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["long"] = true;                         token.hs:200

0x4660  0x20 0x22       PUSHGLOBALB 0x22
0x4662  0x37 0x70 0x0C  PUSHIW 0x0C70
0x4665  0x1A 0x04       PUSHIB 0x04
0x4667  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4669  0x45            PUSHI1
0x466A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["pair"] = true;                         token.hs:201

0x466C  0x20 0x22       PUSHGLOBALB 0x22
0x466E  0x37 0x74 0x0C  PUSHIW 0x0C74
0x4671  0x1A 0x04       PUSHIB 0x04
0x4673  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4675  0x45            PUSHI1
0x4676  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["string"] = true;                       token.hs:202

0x4678  0x20 0x22       PUSHGLOBALB 0x22
0x467A  0x37 0x99 0x01  PUSHIW 0x0199
0x467D  0x1A 0x06       PUSHIB 0x06
0x467F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4681  0x45            PUSHI1
0x4682  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["type"] = true;                         token.hs:203

0x4684  0x20 0x22       PUSHGLOBALB 0x22
0x4686  0x37 0x1B 0x07  PUSHIW 0x071B
0x4689  0x1A 0x04       PUSHIB 0x04
0x468B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x468D  0x45            PUSHI1
0x468E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["variant"] = true;                      token.hs:204

0x4690  0x20 0x22       PUSHGLOBALB 0x22
0x4692  0x37 0x78 0x0C  PUSHIW 0x0C78
0x4695  0x1A 0x07       PUSHIB 0x07
0x4697  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4699  0x45            PUSHI1
0x469A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["const"] = true;                        token.hs:206

0x469C  0x20 0x22       PUSHGLOBALB 0x22
0x469E  0x1A 0x69       PUSHIB 0x69
0x46A0  0x1A 0x05       PUSHIB 0x05
0x46A2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46A4  0x45            PUSHI1
0x46A5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["false"] = true;                        token.hs:207

0x46A7  0x20 0x22       PUSHGLOBALB 0x22
0x46A9  0x37 0x7F 0x0C  PUSHIW 0x0C7F
0x46AC  0x1A 0x05       PUSHIB 0x05
0x46AE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46B0  0x45            PUSHI1
0x46B1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["ref"] = true;                          token.hs:208

0x46B3  0x20 0x22       PUSHGLOBALB 0x22
0x46B5  0x37 0x1F 0x08  PUSHIW 0x081F
0x46B8  0x1A 0x03       PUSHIB 0x03
0x46BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46BC  0x45            PUSHI1
0x46BD  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["true"] = true;                         token.hs:209

0x46BF  0x20 0x22       PUSHGLOBALB 0x22
0x46C1  0x37 0x84 0x0C  PUSHIW 0x0C84
0x46C4  0x1A 0x04       PUSHIB 0x04
0x46C6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46C8  0x45            PUSHI1
0x46C9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["var"] = true;                          token.hs:210

0x46CB  0x20 0x22       PUSHGLOBALB 0x22
0x46CD  0x37 0x78 0x0C  PUSHIW 0x0C78
0x46D0  0x1A 0x03       PUSHIB 0x03
0x46D2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46D4  0x45            PUSHI1
0x46D5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#if"] = true;                     token.hs:212

0x46D7  0x20 0x26       PUSHGLOBALB 0x26
0x46D9  0x37 0x88 0x0C  PUSHIW 0x0C88
0x46DC  0x1A 0x03       PUSHIB 0x03
0x46DE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46E0  0x45            PUSHI1
0x46E1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#ifdef"] = true;                  token.hs:213

0x46E3  0x20 0x26       PUSHGLOBALB 0x26
0x46E5  0x37 0x8B 0x0C  PUSHIW 0x0C8B
0x46E8  0x1A 0x06       PUSHIB 0x06
0x46EA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46EC  0x45            PUSHI1
0x46ED  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#ifndef"] = true;                 token.hs:214

0x46EF  0x20 0x26       PUSHGLOBALB 0x26
0x46F1  0x37 0x91 0x0C  PUSHIW 0x0C91
0x46F4  0x1A 0x07       PUSHIB 0x07
0x46F6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46F8  0x45            PUSHI1
0x46F9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#else"] = true;                   token.hs:215

0x46FB  0x20 0x26       PUSHGLOBALB 0x26
0x46FD  0x37 0x98 0x0C  PUSHIW 0x0C98
0x4700  0x1A 0x05       PUSHIB 0x05
0x4702  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4704  0x45            PUSHI1
0x4705  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#endif"] = true;                  token.hs:216

0x4707  0x20 0x26       PUSHGLOBALB 0x26
0x4709  0x37 0x9D 0x0C  PUSHIW 0x0C9D
0x470C  0x1A 0x06       PUSHIB 0x06
0x470E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4710  0x45            PUSHI1
0x4711  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#define"] = true;                 token.hs:217

0x4713  0x20 0x26       PUSHGLOBALB 0x26
0x4715  0x37 0xA3 0x0C  PUSHIW 0x0CA3
0x4718  0x1A 0x07       PUSHIB 0x07
0x471A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x471C  0x45            PUSHI1
0x471D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["break"] = true;                   token.hs:219

0x471F  0x20 0x24       PUSHGLOBALB 0x24
0x4721  0x37 0xAA 0x0C  PUSHIW 0x0CAA
0x4724  0x1A 0x05       PUSHIB 0x05
0x4726  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4728  0x45            PUSHI1
0x4729  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["case"] = true;                    token.hs:220

0x472B  0x20 0x24       PUSHGLOBALB 0x24
0x472D  0x37 0xAF 0x0C  PUSHIW 0x0CAF
0x4730  0x1A 0x04       PUSHIB 0x04
0x4732  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4734  0x45            PUSHI1
0x4735  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["continue"] = true;                token.hs:221

0x4737  0x20 0x24       PUSHGLOBALB 0x24
0x4739  0x37 0xB3 0x0C  PUSHIW 0x0CB3
0x473C  0x1A 0x08       PUSHIB 0x08
0x473E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4740  0x45            PUSHI1
0x4741  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["default"] = true;                 token.hs:222

0x4743  0x20 0x24       PUSHGLOBALB 0x24
0x4745  0x37 0xBB 0x0C  PUSHIW 0x0CBB
0x4748  0x1A 0x07       PUSHIB 0x07
0x474A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x474C  0x45            PUSHI1
0x474D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["embed"] = true;                   token.hs:223

0x474F  0x20 0x24       PUSHGLOBALB 0x24
0x4751  0x37 0xC2 0x0C  PUSHIW 0x0CC2
0x4754  0x1A 0x05       PUSHIB 0x05
0x4756  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4758  0x45            PUSHI1
0x4759  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["else"] = true;                    token.hs:224

0x475B  0x20 0x24       PUSHGLOBALB 0x24
0x475D  0x37 0x99 0x0C  PUSHIW 0x0C99
0x4760  0x1A 0x04       PUSHIB 0x04
0x4762  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4764  0x45            PUSHI1
0x4765  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["for"] = true;                     token.hs:225

0x4767  0x20 0x24       PUSHGLOBALB 0x24
0x4769  0x1A 0xDF       PUSHIB 0xDF
0x476B  0x1A 0x03       PUSHIB 0x03
0x476D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x476F  0x45            PUSHI1
0x4770  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["foreach"] = true;                 token.hs:226

0x4772  0x20 0x24       PUSHGLOBALB 0x24
0x4774  0x37 0xC7 0x0C  PUSHIW 0x0CC7
0x4777  0x1A 0x07       PUSHIB 0x07
0x4779  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x477B  0x45            PUSHI1
0x477C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["get"] = true;                     token.hs:227

0x477E  0x20 0x24       PUSHGLOBALB 0x24
0x4780  0x37 0xCE 0x0C  PUSHIW 0x0CCE
0x4783  0x1A 0x03       PUSHIB 0x03
0x4785  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4787  0x45            PUSHI1
0x4788  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["if"] = true;                      token.hs:228

0x478A  0x20 0x24       PUSHGLOBALB 0x24
0x478C  0x37 0x69 0x66  PUSHIW 0x6669
0x478F  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4791  0x45            PUSHI1
0x4792  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["in"] = true;                      token.hs:229

0x4794  0x20 0x24       PUSHGLOBALB 0x24
0x4796  0x37 0x69 0x6E  PUSHIW 0x6E69
0x4799  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x479B  0x45            PUSHI1
0x479C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["loop"] = true;                    token.hs:230

0x479E  0x20 0x24       PUSHGLOBALB 0x24
0x47A0  0x37 0xD1 0x0C  PUSHIW 0x0CD1
0x47A3  0x1A 0x04       PUSHIB 0x04
0x47A5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47A7  0x45            PUSHI1
0x47A8  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["program"] = true;                 token.hs:231

0x47AA  0x20 0x24       PUSHGLOBALB 0x24
0x47AC  0x37 0xD5 0x0C  PUSHIW 0x0CD5
0x47AF  0x1A 0x07       PUSHIB 0x07
0x47B1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47B3  0x45            PUSHI1
0x47B4  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["return"] = true;                  token.hs:232

0x47B6  0x20 0x24       PUSHGLOBALB 0x24
0x47B8  0x37 0xDC 0x0C  PUSHIW 0x0CDC
0x47BB  0x1A 0x06       PUSHIB 0x06
0x47BD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47BF  0x45            PUSHI1
0x47C0  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["set"] = true;                     token.hs:233

0x47C2  0x20 0x24       PUSHGLOBALB 0x24
0x47C4  0x1A 0x62       PUSHIB 0x62
0x47C6  0x1A 0x03       PUSHIB 0x03
0x47C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47CA  0x45            PUSHI1
0x47CB  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["switch"] = true;                  token.hs:234

0x47CD  0x20 0x24       PUSHGLOBALB 0x24
0x47CF  0x37 0xE2 0x0C  PUSHIW 0x0CE2
0x47D2  0x1A 0x06       PUSHIB 0x06
0x47D4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47D6  0x45            PUSHI1
0x47D7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["system"] = true;                  token.hs:235

0x47D9  0x20 0x24       PUSHGLOBALB 0x24
0x47DB  0x37 0xE8 0x0C  PUSHIW 0x0CE8
0x47DE  0x1A 0x06       PUSHIB 0x06
0x47E0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47E2  0x45            PUSHI1
0x47E3  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["typeof"] = true;                  token.hs:236

0x47E5  0x20 0x24       PUSHGLOBALB 0x24
0x47E7  0x37 0xEE 0x0C  PUSHIW 0x0CEE
0x47EA  0x1A 0x06       PUSHIB 0x06
0x47EC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47EE  0x45            PUSHI1
0x47EF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["unit"] = true;                    token.hs:237

0x47F1  0x20 0x24       PUSHGLOBALB 0x24
0x47F3  0x37 0xF4 0x0C  PUSHIW 0x0CF4
0x47F6  0x1A 0x04       PUSHIB 0x04
0x47F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47FA  0x45            PUSHI1
0x47FB  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["uses"] = true;                    token.hs:238

0x47FD  0x20 0x24       PUSHGLOBALB 0x24
0x47FF  0x37 0xF8 0x0C  PUSHIW 0x0CF8
0x4802  0x1A 0x04       PUSHIB 0x04
0x4804  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4806  0x45            PUSHI1
0x4807  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["while"] = true;                   token.hs:239

0x4809  0x20 0x24       PUSHGLOBALB 0x24
0x480B  0x37 0xFC 0x0C  PUSHIW 0x0CFC
0x480E  0x1A 0x05       PUSHIB 0x05
0x4810  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4812  0x45            PUSHI1
0x4813  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    token.hs:240

0x4815  0x4A            RET0


// /source/compiler/tokens/token.hs:87
// ####  Token.GetType(..)  ####                                                0x005B

0x4816  0x49            ENTER

                        // string name = token["type"];                         token.hs:89

0x4817  0x24 0x02       SYSCALL0 0x02  // String.New
0x4819  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x481B  0x37 0x1B 0x07  PUSHIW 0x071B
0x481E  0x1A 0x04       PUSHIB 0x04
0x4820  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4822  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4824  0x5D            POPCOPYLOCALB00

                        // HopperToken tokenType = HopperToken.Undefined;

0x4825  0x44            PUSHI0
0x4826  0x44            PUSHI0
0x4827  0x4D            POPLOCALB02

                        // if (hopperTokenTypes.Contains(name))                 token.hs:91

0x4828  0x20 0x28       PUSHGLOBALB 0x28
0x482A  0x4E            PUSHLOCALB00
0x482B  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x482D  0x2E 0x0A       JZB 0x4837 (+10)

                        // tokenType = hopperTokenTypes[name];                  token.hs:93

0x482F  0x20 0x28       PUSHGLOBALB 0x28
0x4831  0x4E            PUSHLOCALB00
0x4832  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4834  0x4D            POPLOCALB02

                        // }                                                    token.hs:94

0x4835  0x30 0x0B       JB 0x4840 (+11)

                        // PrintLn("TODO : token not implemented in Token.GetType");

0x4837  0x37 0x01 0x0D  PUSHIW 0x0D01
0x483A  0x1A 0x2D       PUSHIB 0x2D
0x483C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x483E  0x2C 0x20       CALLB 0x20     // Screen.PrintLn

                        // return tokenType;                                    token.hs:99

0x4840  0x4F            PUSHLOCALB02
0x4841  0x2B 0x06       RETRETB 0x06


// /source/system/int.hs:4
// ####  Int.ToString(..)  ####                                                 0x00AC


                        // int digit;                                           int.hs:5

0x4843  0x5F 0x03       ENTERB 0x03

                        // string result;                                       int.hs:8

0x4845  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (this < 0)                                        int.hs:9

0x4847  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4849  0x44            PUSHI0
0x484A  0x17            LTI
0x484B  0x2E 0x0D       JZB 0x4858 (+13)

                        // negative = true;                                     int.hs:11

0x484D  0x45            PUSHI1
0x484E  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // this = 0 - this;                                     int.hs:12

0x4850  0x44            PUSHI0
0x4851  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4853  0x12            SUBI
0x4854  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    int.hs:13

0x4856  0x30 0x0C       JB 0x4862 (+12)

                        // else if (this == 0)                                  int.hs:14

0x4858  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x485A  0x2F 0x08       JNZB 0x4862 (+8)

                        // String.Build(ref result, '0');                       int.hs:16

0x485C  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x485E  0x1A 0x30       PUSHIB 0x30
0x4860  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // while (this != 0)                                    int.hs:18

0x4862  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4864  0x2E 0x1C       JZB 0x4880 (+28)

                        // digit = this % 10;                                   int.hs:20

0x4866  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4868  0x1A 0x0A       PUSHIB 0x0A
0x486A  0x15            MODI
0x486B  0x4C            POPLOCALB00

                        // c = Char.ToDigit(byte(digit));                       int.hs:21

0x486C  0x4E            PUSHLOCALB00
0x486D  0x51 0x03       CAST 0x03
0x486F  0x2C 0xA1       CALLB 0xA1     // Char.ToDigit
0x4871  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    int.hs:22

0x4872  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x4874  0x4F            PUSHLOCALB02
0x4875  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 10;                                    int.hs:23

0x4877  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4879  0x1A 0x0A       PUSHIB 0x0A
0x487B  0x13            DIVI
0x487C  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    int.hs:24

0x487E  0x30 0xE4       JB 0x4862 (-28)

                        // if (negative)                                        int.hs:25

0x4880  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4882  0x2E 0x08       JZB 0x488A (+8)

                        // String.BuildFront(ref result, '-');                  int.hs:27

0x4884  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x4886  0x1A 0x2D       PUSHIB 0x2D
0x4888  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // return result;                                       int.hs:29

0x488A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x488C  0x2B 0x0A       RETRETB 0x0A


// /source/system/long.hs:44
// ####  Long.ToHexString(..)  ####                                             0x00B7


                        // int idigit;                                          long.hs:45

0x488E  0x5F 0x03       ENTERB 0x03

                        // long digit;                                          long.hs:48

0x4890  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // string result;                                       long.hs:49

0x4892  0x24 0x02       SYSCALL0 0x02  // String.New

                        // for (i = digits; i > 0; i--)                         long.hs:50

0x4894  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4896  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4898  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x489A  0x44            PUSHI0
0x489B  0x16            GTI
0x489C  0x2E 0x2A       JZB 0x48C6 (+42)

                        // digit = this % 16;                                   long.hs:52

0x489E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x48A0  0x1A 0x10       PUSHIB 0x10
0x48A2  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x48A4  0x24 0x43       SYSCALL0 0x43  // Long.Mod
0x48A6  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // idigit = int(digit);                                 long.hs:53

0x48A8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x48AA  0x24 0x3B       SYSCALL0 0x3B  // Long.ToInt
0x48AC  0x4C            POPLOCALB00

                        // c = Char.ToHex(byte(idigit));                        long.hs:54

0x48AD  0x4E            PUSHLOCALB00
0x48AE  0x51 0x03       CAST 0x03
0x48B0  0x2C 0xA4       CALLB 0xA4     // Char.ToHex
0x48B2  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    long.hs:55

0x48B3  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x48B5  0x4F            PUSHLOCALB02
0x48B6  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 16;                                    long.hs:56

0x48B8  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x48BA  0x1A 0x10       PUSHIB 0x10
0x48BC  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x48BE  0x24 0x41       SYSCALL0 0x41  // Long.Div
0x48C0  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // }                                                    long.hs:57

0x48C2  0x23 0x04       DECLOCALB 0x04 (BP+4)
0x48C4  0x30 0xD4       JB 0x4898 (-44)

                        // return result;                                       long.hs:58

0x48C6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x48C8  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/tokens/syscalls.hs:261
// ####  SysCalls.GetSysCallName(..)  ####                                      0x0083

0x48CA  0x49            ENTER

                        // string name;                                         syscalls.hs:262

0x48CB  0x24 0x02       SYSCALL0 0x02  // String.New

                        // foreach (var kv in syscalls)                         syscalls.hs:263

0x48CD  0x20 0x46       PUSHGLOBALB 0x46
0x48CF  0x1A 0x0F       PUSHIB 0x0F
0x48D1  0x1A 0x0F       PUSHIB 0x0F
0x48D3  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x48D5  0x44            PUSHI0
0x48D6  0x4F            PUSHLOCALB02
0x48D7  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x48D9  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x48DB  0x1B 0x06       POPLOCALB 0x06 (BP+6)
0x48DD  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x48DF  0x2E 0x14       JZB 0x48F3 (+20)

                        // if (kv.value == iSysCall)                            syscalls.hs:265

0x48E1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x48E3  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x48E5  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x48E7  0x05            EQ
0x48E8  0x2E 0xEE       JZB 0x48D6 (-18)

                        // name = kv.key;                                       syscalls.hs:267

0x48EA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x48EC  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x48EE  0x5D            POPCOPYLOCALB00

                        // break;                                               syscalls.hs:268

0x48EF  0x28 0x06       DECSP 0x06
0x48F1  0x30 0x04       JB 0x48F5 (+4)

                        // }                                                    syscalls.hs:270

0x48F3  0x28 0x06       DECSP 0x06

                        // return name;                                         syscalls.hs:271

0x48F5  0x4E            PUSHLOCALB00
0x48F6  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/scanner.hs:505
// ####  Scanner.Next(..)  ####                                                 0x007E

0x48F8  0x49            ENTER

                        // <string,string> token = Token.New(HopperToken.Undefined, "", currentLine, currentPos, currentSourcePath);

0x48F9  0x1A 0x0F       PUSHIB 0x0F
0x48FB  0x1A 0x0F       PUSHIB 0x0F
0x48FD  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x48FF  0x44            PUSHI0
0x4900  0x24 0x02       SYSCALL0 0x02  // String.New
0x4902  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4905  0x20 0x38       PUSHGLOBALB 0x38
0x4907  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4909  0x5D            POPCOPYLOCALB00

                        // if (isPeekedToken)                                   scanner.hs:509

0x490A  0x20 0x44       PUSHGLOBALB 0x44
0x490C  0x2E 0x0B       JZB 0x4917 (+11)

                        // token = peekedToken;                                 scanner.hs:511

0x490E  0x20 0x42       PUSHGLOBALB 0x42
0x4910  0x5D            POPCOPYLOCALB00

                        // isPeekedToken = false;                               scanner.hs:512

0x4911  0x44            PUSHI0
0x4912  0x1F 0x44       POPGLOBALB 0x44

                        // break;                                               scanner.hs:513

0x4914  0x33 0x46 0x02  JW 0x4B5A (+582)

                        // if (isAtEnd())                                       scanner.hs:515

0x4917  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4919  0x2E 0x11       JZB 0x492A (+17)

                        // token = Token.New(HopperToken.EOF, "", currentLine, currentPos, currentSourcePath);

0x491B  0x1A 0x2D       PUSHIB 0x2D
0x491D  0x24 0x02       SYSCALL0 0x02  // String.New
0x491F  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4922  0x20 0x38       PUSHGLOBALB 0x38
0x4924  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4926  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:518

0x4927  0x33 0x33 0x02  JW 0x4B5A (+563)

                        // skipWhitespace();                                    scanner.hs:522

0x492A  0x2C 0x79       CALLB 0x79     // Scanner.skipWhitespace

                        // char c = advance();                                  scanner.hs:523

0x492C  0x44            PUSHI0
0x492D  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x492F  0x4D            POPLOCALB02

                        // if (c.IsDigit())                                     scanner.hs:524

0x4930  0x4F            PUSHLOCALB02
0x4931  0x2C 0xA2       CALLB 0xA2     // Char.IsDigit
0x4933  0x2E 0x0B       JZB 0x493E (+11)

                        // token = scanNumber(c);                               scanner.hs:526

0x4935  0x4F            PUSHLOCALB02
0x4936  0x2C 0x7C       CALLB 0x7C     // Scanner.scanNumber
0x4938  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:527

0x4939  0x28 0x02       DECSP 0x02
0x493B  0x33 0x1F 0x02  JW 0x4B5A (+543)

                        // if (c.IsLetter() || (c == '#'))                      scanner.hs:529

0x493E  0x4F            PUSHLOCALB02
0x493F  0x2C 0xA7       CALLB 0xA7     // Char.IsLetter
0x4941  0x27 0x00       DUP 0x00
0x4943  0x2F 0x07       JNZB 0x494A (+7)
0x4945  0x4F            PUSHLOCALB02
0x4946  0x1A 0x23       PUSHIB 0x23
0x4948  0x05            EQ
0x4949  0x0B            BOOLOR
0x494A  0x2E 0x0B       JZB 0x4955 (+11)

                        // token = scanIdentifier(c);                           scanner.hs:531

0x494C  0x4F            PUSHLOCALB02
0x494D  0x2C 0x7D       CALLB 0x7D     // Scanner.scanIdentifier
0x494F  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:532

0x4950  0x28 0x02       DECSP 0x02
0x4952  0x33 0x08 0x02  JW 0x4B5A (+520)

                        // HopperToken htoken = HopperToken.Undefined;

0x4955  0x44            PUSHI0
0x4956  0x44            PUSHI0
0x4957  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // switch (c)                                           scanner.hs:535

0x4959  0x4F            PUSHLOCALB02

                        // case '(': { htoken = HopperToken.LParen; }           scanner.hs:537

0x495A  0x1A 0x28       PUSHIB 0x28
0x495C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x495E  0x05            EQ
0x495F  0x2E 0x09       JZB 0x4968 (+9)
0x4961  0x1A 0x10       PUSHIB 0x10
0x4963  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4965  0x33 0xE1 0x01  JW 0x4B46 (+481)

                        // case ')': { htoken = HopperToken.RParen; }           scanner.hs:538

0x4968  0x1A 0x29       PUSHIB 0x29
0x496A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x496C  0x05            EQ
0x496D  0x2E 0x09       JZB 0x4976 (+9)
0x496F  0x1A 0x11       PUSHIB 0x11
0x4971  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4973  0x33 0xD3 0x01  JW 0x4B46 (+467)

                        // case '{': { htoken = HopperToken.LBrace; }           scanner.hs:539

0x4976  0x1A 0x7B       PUSHIB 0x7B
0x4978  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x497A  0x05            EQ
0x497B  0x2E 0x09       JZB 0x4984 (+9)
0x497D  0x1A 0x12       PUSHIB 0x12
0x497F  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4981  0x33 0xC5 0x01  JW 0x4B46 (+453)

                        // case '}': { htoken = HopperToken.RBrace; }           scanner.hs:540

0x4984  0x1A 0x7D       PUSHIB 0x7D
0x4986  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4988  0x05            EQ
0x4989  0x2E 0x09       JZB 0x4992 (+9)
0x498B  0x1A 0x13       PUSHIB 0x13
0x498D  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x498F  0x33 0xB7 0x01  JW 0x4B46 (+439)

                        // case '[': { htoken = HopperToken.LBracket; }

0x4992  0x1A 0x5B       PUSHIB 0x5B
0x4994  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4996  0x05            EQ
0x4997  0x2E 0x09       JZB 0x49A0 (+9)
0x4999  0x1A 0x14       PUSHIB 0x14
0x499B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x499D  0x33 0xA9 0x01  JW 0x4B46 (+425)

                        // case ']': { htoken = HopperToken.RBracket; }

0x49A0  0x1A 0x5D       PUSHIB 0x5D
0x49A2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x49A4  0x05            EQ
0x49A5  0x2E 0x09       JZB 0x49AE (+9)
0x49A7  0x1A 0x15       PUSHIB 0x15
0x49A9  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x49AB  0x33 0x9B 0x01  JW 0x4B46 (+411)

                        // case ';': { htoken = HopperToken.SemiColon; }

0x49AE  0x1A 0x3B       PUSHIB 0x3B
0x49B0  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x49B2  0x05            EQ
0x49B3  0x2E 0x09       JZB 0x49BC (+9)
0x49B5  0x1A 0x0C       PUSHIB 0x0C
0x49B7  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x49B9  0x33 0x8D 0x01  JW 0x4B46 (+397)

                        // case ':': { htoken = HopperToken.Colon; }            scanner.hs:544

0x49BC  0x1A 0x3A       PUSHIB 0x3A
0x49BE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x49C0  0x05            EQ
0x49C1  0x2E 0x09       JZB 0x49CA (+9)
0x49C3  0x1A 0x0E       PUSHIB 0x0E
0x49C5  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x49C7  0x33 0x7F 0x01  JW 0x4B46 (+383)

                        // case ',': { htoken = HopperToken.Comma; }            scanner.hs:545

0x49CA  0x1A 0x2C       PUSHIB 0x2C
0x49CC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x49CE  0x05            EQ
0x49CF  0x2E 0x09       JZB 0x49D8 (+9)
0x49D1  0x1A 0x0D       PUSHIB 0x0D
0x49D3  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x49D5  0x33 0x71 0x01  JW 0x4B46 (+369)

                        // case '.': { htoken = HopperToken.Dot; }              scanner.hs:546

0x49D8  0x1A 0x2E       PUSHIB 0x2E
0x49DA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x49DC  0x05            EQ
0x49DD  0x2E 0x09       JZB 0x49E6 (+9)
0x49DF  0x1A 0x04       PUSHIB 0x04
0x49E1  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x49E3  0x33 0x63 0x01  JW 0x4B46 (+355)

                        // case '*': { htoken = HopperToken.Multiply; }

0x49E6  0x1A 0x2A       PUSHIB 0x2A
0x49E8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x49EA  0x05            EQ
0x49EB  0x2E 0x09       JZB 0x49F4 (+9)
0x49ED  0x1A 0x27       PUSHIB 0x27
0x49EF  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x49F1  0x33 0x55 0x01  JW 0x4B46 (+341)

                        // case '/': { htoken = HopperToken.Divide; }           scanner.hs:548

0x49F4  0x1A 0x2F       PUSHIB 0x2F
0x49F6  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x49F8  0x05            EQ
0x49F9  0x2E 0x09       JZB 0x4A02 (+9)
0x49FB  0x1A 0x28       PUSHIB 0x28
0x49FD  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x49FF  0x33 0x47 0x01  JW 0x4B46 (+327)

                        // case '%': { htoken = HopperToken.Modulus; }

0x4A02  0x1A 0x25       PUSHIB 0x25
0x4A04  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4A06  0x05            EQ
0x4A07  0x2E 0x09       JZB 0x4A10 (+9)
0x4A09  0x1A 0x29       PUSHIB 0x29
0x4A0B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4A0D  0x33 0x39 0x01  JW 0x4B46 (+313)

                        // case '~': { htoken = HopperToken.BitNot; }           scanner.hs:550

0x4A10  0x1A 0x7E       PUSHIB 0x7E
0x4A12  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4A14  0x05            EQ
0x4A15  0x2E 0x09       JZB 0x4A1E (+9)
0x4A17  0x1A 0x23       PUSHIB 0x23
0x4A19  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4A1B  0x33 0x2B 0x01  JW 0x4B46 (+299)

                        // case '-':                                            scanner.hs:552

0x4A1E  0x1A 0x2D       PUSHIB 0x2D
0x4A20  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4A22  0x05            EQ
0x4A23  0x2E 0x15       JZB 0x4A38 (+21)

                        // if (match('-'))                                      scanner.hs:554

0x4A25  0x1A 0x2D       PUSHIB 0x2D
0x4A27  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4A29  0x2E 0x08       JZB 0x4A31 (+8)

                        // { htoken = HopperToken.Decrement; }                  scanner.hs:555

0x4A2B  0x1A 0x2B       PUSHIB 0x2B
0x4A2D  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4A2F  0x30 0x06       JB 0x4A35 (+6)

                        // { htoken = HopperToken.Subtract; }                   scanner.hs:557

0x4A31  0x1A 0x26       PUSHIB 0x26
0x4A33  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:558

0x4A35  0x33 0x11 0x01  JW 0x4B46 (+273)

                        // case '+':                                            scanner.hs:559

0x4A38  0x1A 0x2B       PUSHIB 0x2B
0x4A3A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4A3C  0x05            EQ
0x4A3D  0x2E 0x15       JZB 0x4A52 (+21)

                        // if (match('+'))                                      scanner.hs:561

0x4A3F  0x1A 0x2B       PUSHIB 0x2B
0x4A41  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4A43  0x2E 0x08       JZB 0x4A4B (+8)

                        // { htoken = HopperToken.Increment; }                  scanner.hs:562

0x4A45  0x1A 0x2A       PUSHIB 0x2A
0x4A47  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4A49  0x30 0x06       JB 0x4A4F (+6)

                        // { htoken = HopperToken.Add; }                        scanner.hs:564

0x4A4B  0x1A 0x25       PUSHIB 0x25
0x4A4D  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:565

0x4A4F  0x33 0xF7 0x00  JW 0x4B46 (+247)

                        // case '!':                                            scanner.hs:566

0x4A52  0x1A 0x21       PUSHIB 0x21
0x4A54  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4A56  0x05            EQ
0x4A57  0x2E 0x15       JZB 0x4A6C (+21)

                        // if (match('='))                                      scanner.hs:568

0x4A59  0x1A 0x3D       PUSHIB 0x3D
0x4A5B  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4A5D  0x2E 0x08       JZB 0x4A65 (+8)

                        // { htoken = HopperToken.NE; }                         scanner.hs:569

0x4A5F  0x1A 0x1B       PUSHIB 0x1B
0x4A61  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4A63  0x30 0x06       JB 0x4A69 (+6)

                        // { htoken = HopperToken.BooleanNot; }                 scanner.hs:571

0x4A65  0x1A 0x20       PUSHIB 0x20
0x4A67  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:572

0x4A69  0x33 0xDD 0x00  JW 0x4B46 (+221)

                        // case '=':                                            scanner.hs:573

0x4A6C  0x1A 0x3D       PUSHIB 0x3D
0x4A6E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4A70  0x05            EQ
0x4A71  0x2E 0x15       JZB 0x4A86 (+21)

                        // if (match('='))                                      scanner.hs:575

0x4A73  0x1A 0x3D       PUSHIB 0x3D
0x4A75  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4A77  0x2E 0x08       JZB 0x4A7F (+8)

                        // { htoken = HopperToken.EQ; }                         scanner.hs:576

0x4A79  0x1A 0x18       PUSHIB 0x18
0x4A7B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4A7D  0x30 0x06       JB 0x4A83 (+6)

                        // { htoken = HopperToken.Assign; }                     scanner.hs:578

0x4A7F  0x1A 0x2C       PUSHIB 0x2C
0x4A81  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:579

0x4A83  0x33 0xC3 0x00  JW 0x4B46 (+195)

                        // case '<':                                            scanner.hs:580

0x4A86  0x1A 0x3C       PUSHIB 0x3C
0x4A88  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4A8A  0x05            EQ
0x4A8B  0x2E 0x21       JZB 0x4AAC (+33)

                        // if (match('='))                                      scanner.hs:582

0x4A8D  0x1A 0x3D       PUSHIB 0x3D
0x4A8F  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4A91  0x2E 0x08       JZB 0x4A99 (+8)

                        // { htoken = HopperToken.LE; }                         scanner.hs:583

0x4A93  0x1A 0x19       PUSHIB 0x19
0x4A95  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4A97  0x30 0x12       JB 0x4AA9 (+18)

                        // else if (match('<'))                                 scanner.hs:584

0x4A99  0x1A 0x3C       PUSHIB 0x3C
0x4A9B  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4A9D  0x2E 0x08       JZB 0x4AA5 (+8)

                        // { htoken = HopperToken.ShiftLeft; }                  scanner.hs:585

0x4A9F  0x1A 0x1C       PUSHIB 0x1C
0x4AA1  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4AA3  0x30 0x06       JB 0x4AA9 (+6)

                        // { htoken = HopperToken.LT; }                         scanner.hs:587

0x4AA5  0x1A 0x16       PUSHIB 0x16
0x4AA7  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:588

0x4AA9  0x33 0x9D 0x00  JW 0x4B46 (+157)

                        // case '>':                                            scanner.hs:589

0x4AAC  0x1A 0x3E       PUSHIB 0x3E
0x4AAE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4AB0  0x05            EQ
0x4AB1  0x2E 0x21       JZB 0x4AD2 (+33)

                        // if (match('='))                                      scanner.hs:591

0x4AB3  0x1A 0x3D       PUSHIB 0x3D
0x4AB5  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4AB7  0x2E 0x08       JZB 0x4ABF (+8)

                        // { htoken = HopperToken.GE; }                         scanner.hs:592

0x4AB9  0x1A 0x1A       PUSHIB 0x1A
0x4ABB  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4ABD  0x30 0x12       JB 0x4ACF (+18)

                        // else if (match('>'))                                 scanner.hs:593

0x4ABF  0x1A 0x3E       PUSHIB 0x3E
0x4AC1  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4AC3  0x2E 0x08       JZB 0x4ACB (+8)

                        // { htoken = HopperToken.ShiftRight; }                 scanner.hs:594

0x4AC5  0x1A 0x1D       PUSHIB 0x1D
0x4AC7  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4AC9  0x30 0x7D       JB 0x4B46 (+125)

                        // { htoken = HopperToken.GT; }                         scanner.hs:596

0x4ACB  0x1A 0x17       PUSHIB 0x17
0x4ACD  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:597

0x4ACF  0x33 0x77 0x00  JW 0x4B46 (+119)

                        // case '|':                                            scanner.hs:598

0x4AD2  0x1A 0x7C       PUSHIB 0x7C
0x4AD4  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4AD6  0x05            EQ
0x4AD7  0x2E 0x14       JZB 0x4AEB (+20)

                        // if (match('|'))                                      scanner.hs:600

0x4AD9  0x1A 0x7C       PUSHIB 0x7C
0x4ADB  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4ADD  0x2E 0x08       JZB 0x4AE5 (+8)

                        // { htoken = HopperToken.BooleanOr; }                  scanner.hs:601

0x4ADF  0x1A 0x1F       PUSHIB 0x1F
0x4AE1  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4AE3  0x30 0x63       JB 0x4B46 (+99)

                        // { htoken = HopperToken.BitOr; }                      scanner.hs:603

0x4AE5  0x1A 0x22       PUSHIB 0x22
0x4AE7  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:604

0x4AE9  0x30 0x5D       JB 0x4B46 (+93)

                        // case '&':                                            scanner.hs:605

0x4AEB  0x1A 0x26       PUSHIB 0x26
0x4AED  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4AEF  0x05            EQ
0x4AF0  0x2E 0x14       JZB 0x4B04 (+20)

                        // if (match('&'))                                      scanner.hs:607

0x4AF2  0x1A 0x26       PUSHIB 0x26
0x4AF4  0x2C 0x78       CALLB 0x78     // Scanner.match
0x4AF6  0x2E 0x08       JZB 0x4AFE (+8)

                        // { htoken = HopperToken.BooleanAnd; }                 scanner.hs:608

0x4AF8  0x1A 0x1E       PUSHIB 0x1E
0x4AFA  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x4AFC  0x30 0x4A       JB 0x4B46 (+74)

                        // { htoken = HopperToken.BitAnd; }                     scanner.hs:610

0x4AFE  0x1A 0x21       PUSHIB 0x21
0x4B00  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:611

0x4B02  0x30 0x44       JB 0x4B46 (+68)

                        // case '"':                                            scanner.hs:612

0x4B04  0x1A 0x22       PUSHIB 0x22
0x4B06  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4B08  0x05            EQ
0x4B09  0x2E 0x07       JZB 0x4B10 (+7)

                        // token = scanString();                                scanner.hs:614

0x4B0B  0x2C 0x7A       CALLB 0x7A     // Scanner.scanString
0x4B0D  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:615

0x4B0E  0x30 0x38       JB 0x4B46 (+56)

                        // case '\'':                                           scanner.hs:616

0x4B10  0x1A 0x27       PUSHIB 0x27
0x4B12  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4B14  0x05            EQ
0x4B15  0x2E 0x07       JZB 0x4B1C (+7)

                        // token = scanChar();                                  scanner.hs:618

0x4B17  0x2C 0x7B       CALLB 0x7B     // Scanner.scanChar
0x4B19  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:619

0x4B1A  0x30 0x2C       JB 0x4B46 (+44)

                        // uint ui = uint(c);                                   scanner.hs:622

0x4B1C  0x44            PUSHI0
0x4B1D  0x4F            PUSHLOCALB02
0x4B1E  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // token = errorToken("unexpected character: '" + c + "' (0x" + ui.ToHexString(2) + ")");

0x4B20  0x37 0x2E 0x0D  PUSHIW 0x0D2E
0x4B23  0x1A 0x17       PUSHIB 0x17
0x4B25  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B27  0x4F            PUSHLOCALB02
0x4B28  0x25 0x03       SYSCALL1 0x03  // String.Append
0x4B2A  0x37 0x45 0x0D  PUSHIW 0x0D45
0x4B2D  0x1A 0x05       PUSHIB 0x05
0x4B2F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B31  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4B33  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4B35  0x1A 0x02       PUSHIB 0x02
0x4B37  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x4B39  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4B3B  0x1A 0x29       PUSHIB 0x29
0x4B3D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4B3F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4B41  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4B43  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:624

0x4B44  0x28 0x02       DECSP 0x02

                        // }                                                    scanner.hs:625

0x4B46  0x28 0x02       DECSP 0x02

                        // if (htoken != HopperToken.Undefined)                 scanner.hs:626

0x4B48  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4B4A  0x2E 0x0E       JZB 0x4B58 (+14)

                        // token = Token.New(htoken, "", currentLine, currentPos, currentSourcePath);

0x4B4C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4B4E  0x24 0x02       SYSCALL0 0x02  // String.New
0x4B50  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4B53  0x20 0x38       PUSHGLOBALB 0x38
0x4B55  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4B57  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:630

0x4B58  0x28 0x04       DECSP 0x04

                        // if (dumpTokens)                                      scanner.hs:634

0x4B5A  0x20 0x40       PUSHGLOBALB 0x40
0x4B5C  0x2E 0x14       JZB 0x4B70 (+20)

                        // PrintLn("  " + Token.ToString(token), Color.Red, Color.Black);

0x4B5E  0x37 0x20 0x20  PUSHIW 0x2020
0x4B61  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4B63  0x4E            PUSHLOCALB00
0x4B64  0x2C 0x6C       CALLB 0x6C     // Token.ToString
0x4B66  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4B68  0x34 0x1E 0x01  CALLW 0x011E   // Color.Red_Get
0x4B6B  0x34 0x0F 0x01  CALLW 0x010F   // Color.Black_Get
0x4B6E  0x2C 0x1C       CALLB 0x1C     // Screen.PrintLn

                        // return token;                                        scanner.hs:638

0x4B70  0x4E            PUSHLOCALB00
0x4B71  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:127
// ####  Scanner.isAtEnd(..)  ####                                              0x0072

0x4B73  0x49            ENTER

                        // return (currentPos == sourceLength);                 scanner.hs:129

0x4B74  0x52 0x2E 0x32  PUSHGLOBALBB 0x322E
0x4B77  0x24 0x44       SYSCALL0 0x44  // Long.EQ
0x4B79  0x4A            RET0


// /source/compiler/tokens/scanner.hs:231
// ####  Scanner.skipWhitespace(..)  ####                                       0x0079

0x4B7A  0x49            ENTER

                        // char c = peek();                                     scanner.hs:234

0x4B7B  0x44            PUSHI0
0x4B7C  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4B7E  0x4C            POPLOCALB00

                        // if ((c == ' ') || (c == char(0x0D)) || (c == char(0x09)))

0x4B7F  0x4E            PUSHLOCALB00
0x4B80  0x1A 0x20       PUSHIB 0x20
0x4B82  0x05            EQ
0x4B83  0x27 0x00       DUP 0x00
0x4B85  0x2F 0x10       JNZB 0x4B95 (+16)
0x4B87  0x4E            PUSHLOCALB00
0x4B88  0x1A 0x0D       PUSHIB 0x0D
0x4B8A  0x05            EQ
0x4B8B  0x0B            BOOLOR
0x4B8C  0x27 0x00       DUP 0x00
0x4B8E  0x2F 0x07       JNZB 0x4B95 (+7)
0x4B90  0x4E            PUSHLOCALB00
0x4B91  0x1A 0x09       PUSHIB 0x09
0x4B93  0x05            EQ
0x4B94  0x0B            BOOLOR
0x4B95  0x2E 0x08       JZB 0x4B9D (+8)

                        // c = advance();                                       scanner.hs:237

0x4B97  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4B99  0x4C            POPLOCALB00

                        // }                                                    scanner.hs:238

0x4B9A  0x33 0x97 0x00  JW 0x4C31 (+151)

                        // else if (c == char(0x0A))                            scanner.hs:239

0x4B9D  0x4E            PUSHLOCALB00
0x4B9E  0x1A 0x0A       PUSHIB 0x0A
0x4BA0  0x05            EQ
0x4BA1  0x2E 0x0A       JZB 0x4BAB (+10)

                        // currentLine++;                                       scanner.hs:241

0x4BA3  0x53 0x30       INCGLOBALB 0x30

                        // c = advance();                                       scanner.hs:242

0x4BA5  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4BA7  0x4C            POPLOCALB00

                        // }                                                    scanner.hs:243

0x4BA8  0x33 0x89 0x00  JW 0x4C31 (+137)

                        // else if (c == '/')                                   scanner.hs:244

0x4BAB  0x4E            PUSHLOCALB00
0x4BAC  0x1A 0x2F       PUSHIB 0x2F
0x4BAE  0x05            EQ
0x4BAF  0x31 0x7F 0x00  JZW 0x4C2E (+127)

                        // char n = peekNext();                                 scanner.hs:246

0x4BB2  0x44            PUSHI0
0x4BB3  0x2C 0x77       CALLB 0x77     // Scanner.peekNext
0x4BB5  0x4D            POPLOCALB02

                        // if (n == '/')                                        scanner.hs:247

0x4BB6  0x4F            PUSHLOCALB02
0x4BB7  0x1A 0x2F       PUSHIB 0x2F
0x4BB9  0x05            EQ
0x4BBA  0x2E 0x1F       JZB 0x4BD9 (+31)

                        // c = peek();                                          scanner.hs:252

0x4BBC  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4BBE  0x4C            POPLOCALB00

                        // if ((c == char(0)) || (c == char(0x0A)) || isAtEnd())

0x4BBF  0x4E            PUSHLOCALB00
0x4BC0  0x44            PUSHI0
0x4BC1  0x05            EQ
0x4BC2  0x27 0x00       DUP 0x00
0x4BC4  0x2F 0x0E       JNZB 0x4BD2 (+14)
0x4BC6  0x4E            PUSHLOCALB00
0x4BC7  0x1A 0x0A       PUSHIB 0x0A
0x4BC9  0x05            EQ
0x4BCA  0x0B            BOOLOR
0x4BCB  0x27 0x00       DUP 0x00
0x4BCD  0x2F 0x05       JNZB 0x4BD2 (+5)
0x4BCF  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4BD1  0x0B            BOOLOR
0x4BD2  0x2F 0x58       JNZB 0x4C2A (+88)

                        // c = advance(); // gobble gobble                      scanner.hs:257

0x4BD4  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4BD6  0x4C            POPLOCALB00

                        // }                                                    scanner.hs:258

0x4BD7  0x30 0xE5       JB 0x4BBC (-27)

                        // else if (n == '*')                                   scanner.hs:260

0x4BD9  0x4F            PUSHLOCALB02
0x4BDA  0x1A 0x2A       PUSHIB 0x2A
0x4BDC  0x05            EQ
0x4BDD  0x2E 0x4A       JZB 0x4C27 (+74)

                        // c = advance();                                       scanner.hs:264

0x4BDF  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4BE1  0x4C            POPLOCALB00

                        // c = advance();                                       scanner.hs:265

0x4BE2  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4BE4  0x4C            POPLOCALB00

                        // c = peek();                                          scanner.hs:268

0x4BE5  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4BE7  0x4C            POPLOCALB00

                        // if ((c == char(0)) || isAtEnd())                     scanner.hs:269

0x4BE8  0x4E            PUSHLOCALB00
0x4BE9  0x44            PUSHI0
0x4BEA  0x05            EQ
0x4BEB  0x27 0x00       DUP 0x00
0x4BED  0x2F 0x05       JNZB 0x4BF2 (+5)
0x4BEF  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4BF1  0x0B            BOOLOR
0x4BF2  0x2F 0x38       JNZB 0x4C2A (+56)

                        // n = peekNext();                                      scanner.hs:273

0x4BF4  0x2C 0x77       CALLB 0x77     // Scanner.peekNext
0x4BF6  0x4D            POPLOCALB02

                        // if ((n == char(0)) || isAtEnd())                     scanner.hs:274

0x4BF7  0x4F            PUSHLOCALB02
0x4BF8  0x44            PUSHI0
0x4BF9  0x05            EQ
0x4BFA  0x27 0x00       DUP 0x00
0x4BFC  0x2F 0x05       JNZB 0x4C01 (+5)
0x4BFE  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4C00  0x0B            BOOLOR
0x4C01  0x2F 0x29       JNZB 0x4C2A (+41)

                        // if ((c == '*') && (n == '/'))                        scanner.hs:278

0x4C03  0x4E            PUSHLOCALB00
0x4C04  0x1A 0x2A       PUSHIB 0x2A
0x4C06  0x05            EQ
0x4C07  0x27 0x00       DUP 0x00
0x4C09  0x2E 0x07       JZB 0x4C10 (+7)
0x4C0B  0x4F            PUSHLOCALB02
0x4C0C  0x1A 0x2F       PUSHIB 0x2F
0x4C0E  0x05            EQ
0x4C0F  0x0C            BOOLAND
0x4C10  0x2E 0x0A       JZB 0x4C1A (+10)

                        // c = advance();                                       scanner.hs:281

0x4C12  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4C14  0x4C            POPLOCALB00

                        // c = advance();                                       scanner.hs:282

0x4C15  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4C17  0x4C            POPLOCALB00

                        // break;                                               scanner.hs:283

0x4C18  0x30 0x12       JB 0x4C2A (+18)

                        // c = advance(); // gobble gobble                      scanner.hs:285

0x4C1A  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4C1C  0x4C            POPLOCALB00

                        // if (c == char(0x0A))                                 scanner.hs:286

0x4C1D  0x4E            PUSHLOCALB00
0x4C1E  0x1A 0x0A       PUSHIB 0x0A
0x4C20  0x05            EQ
0x4C21  0x2E 0xC4       JZB 0x4BE5 (-60)

                        // currentLine++;                                       scanner.hs:288

0x4C23  0x53 0x30       INCGLOBALB 0x30

                        // }                                                    scanner.hs:290

0x4C25  0x30 0xC0       JB 0x4BE5 (-64)

                        // break; // just a single '/'                          scanner.hs:294

0x4C27  0x28 0x04       DECSP 0x04
0x4C29  0x4A            RET0

                        // }                                                    scanner.hs:296

0x4C2A  0x28 0x02       DECSP 0x02
0x4C2C  0x30 0x05       JB 0x4C31 (+5)

                        // break;                                               scanner.hs:299

0x4C2E  0x28 0x02       DECSP 0x02
0x4C30  0x4A            RET0

                        // }                                                    scanner.hs:301

0x4C31  0x28 0x02       DECSP 0x02
0x4C33  0x33 0x48 0xFF  JW 0x4B7B (-184)


// /source/compiler/tokens/scanner.hs:199
// ####  Scanner.advance(..)  ####                                              0x0075


                        // char c = sourceGetFromPos(currentPos, true);

0x4C36  0x5F 0x01       ENTERB 0x01

                        // char c = sourceGetFromPos(currentPos, true);

0x4C38  0x20 0x2E       PUSHGLOBALB 0x2E
0x4C3A  0x45            PUSHI1
0x4C3B  0x2C 0x74       CALLB 0x74     // Scanner.sourceGetFromPos
0x4C3D  0x4C            POPLOCALB00

                        // currentPos = currentPos + 1;                         scanner.hs:201

0x4C3E  0x20 0x2E       PUSHGLOBALB 0x2E
0x4C40  0x45            PUSHI1
0x4C41  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4C43  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x4C45  0x59 0x2E       POPCOPYGLOBALB 0x2E

                        // return c;                                            scanner.hs:202

0x4C47  0x4E            PUSHLOCALB00
0x4C48  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:355
// ####  Scanner.scanNumber(..)  ####                                           0x007C

0x4C4A  0x49            ENTER

                        // <string,string> token;                               scanner.hs:356

0x4C4B  0x1A 0x0F       PUSHIB 0x0F
0x4C4D  0x1A 0x0F       PUSHIB 0x0F
0x4C4F  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // string value = c.ToString();                         scanner.hs:357

0x4C51  0x24 0x02       SYSCALL0 0x02  // String.New
0x4C53  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4C55  0x2C 0xA8       CALLB 0xA8     // Char.ToString
0x4C57  0x5E            POPCOPYLOCALB02

                        // bool hexOk = false;                                  scanner.hs:358

0x4C58  0x44            PUSHI0

                        // bool binaryOk = false;                               scanner.hs:359

0x4C59  0x44            PUSHI0

                        // bool floatOk = false;                                scanner.hs:360

0x4C5A  0x44            PUSHI0

                        // HopperToken ttype = HopperToken.Integer;             scanner.hs:362

0x4C5B  0x44            PUSHI0
0x4C5C  0x1A 0x09       PUSHIB 0x09
0x4C5E  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // c = peek();                                          scanner.hs:367

0x4C60  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4C62  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // if ((c == 'x') && (value == "0"))                    scanner.hs:368

0x4C64  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4C66  0x1A 0x78       PUSHIB 0x78
0x4C68  0x05            EQ
0x4C69  0x27 0x00       DUP 0x00
0x4C6B  0x2E 0x0C       JZB 0x4C77 (+12)
0x4C6D  0x4F            PUSHLOCALB02
0x4C6E  0x1A 0x30       PUSHIB 0x30
0x4C70  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4C72  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4C74  0x44            PUSHI0
0x4C75  0x05            EQ
0x4C76  0x0C            BOOLAND
0x4C77  0x2E 0x0D       JZB 0x4C84 (+13)

                        // hexOk = true;                                        scanner.hs:370

0x4C79  0x45            PUSHI1
0x4C7A  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // value = value + advance();                           scanner.hs:371

0x4C7C  0x4F            PUSHLOCALB02
0x4C7D  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4C7F  0x25 0x03       SYSCALL1 0x03  // String.Append
0x4C81  0x5E            POPCOPYLOCALB02

                        // continue;                                            scanner.hs:372

0x4C82  0x30 0xDE       JB 0x4C60 (-34)

                        // if ((c == 'b') && (value == "0"))                    scanner.hs:374

0x4C84  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4C86  0x1A 0x62       PUSHIB 0x62
0x4C88  0x05            EQ
0x4C89  0x27 0x00       DUP 0x00
0x4C8B  0x2E 0x0C       JZB 0x4C97 (+12)
0x4C8D  0x4F            PUSHLOCALB02
0x4C8E  0x1A 0x30       PUSHIB 0x30
0x4C90  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4C92  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4C94  0x44            PUSHI0
0x4C95  0x05            EQ
0x4C96  0x0C            BOOLAND
0x4C97  0x2E 0x0D       JZB 0x4CA4 (+13)

                        // binaryOk = true;                                     scanner.hs:376

0x4C99  0x45            PUSHI1
0x4C9A  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // value = value + advance();                           scanner.hs:377

0x4C9C  0x4F            PUSHLOCALB02
0x4C9D  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4C9F  0x25 0x03       SYSCALL1 0x03  // String.Append
0x4CA1  0x5E            POPCOPYLOCALB02

                        // continue;                                            scanner.hs:378

0x4CA2  0x30 0xBE       JB 0x4C60 (-66)

                        // if (hexOk && c.IsHexDigit())                         scanner.hs:380

0x4CA4  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4CA6  0x27 0x00       DUP 0x00
0x4CA8  0x2E 0x07       JZB 0x4CAF (+7)
0x4CAA  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4CAC  0x2C 0xA6       CALLB 0xA6     // Char.IsHexDigit
0x4CAE  0x0C            BOOLAND
0x4CAF  0x2F 0x3E       JNZB 0x4CED (+62)

                        // else if (binaryOk && ((c == '0') || (c == '1')))

0x4CB1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4CB3  0x27 0x00       DUP 0x00
0x4CB5  0x2E 0x12       JZB 0x4CC7 (+18)
0x4CB7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4CB9  0x1A 0x30       PUSHIB 0x30
0x4CBB  0x05            EQ
0x4CBC  0x27 0x00       DUP 0x00
0x4CBE  0x2F 0x08       JNZB 0x4CC6 (+8)
0x4CC0  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4CC2  0x1A 0x31       PUSHIB 0x31
0x4CC4  0x05            EQ
0x4CC5  0x0B            BOOLOR
0x4CC6  0x0C            BOOLAND
0x4CC7  0x2F 0x26       JNZB 0x4CED (+38)

                        // else if ((c == '.') && !floatOk && (value.Length > 0))

0x4CC9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4CCB  0x1A 0x2E       PUSHIB 0x2E
0x4CCD  0x05            EQ
0x4CCE  0x27 0x00       DUP 0x00
0x4CD0  0x2E 0x10       JZB 0x4CE0 (+16)
0x4CD2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4CD4  0x41            BOOLNOT
0x4CD5  0x0C            BOOLAND
0x4CD6  0x27 0x00       DUP 0x00
0x4CD8  0x2E 0x08       JZB 0x4CE0 (+8)
0x4CDA  0x4F            PUSHLOCALB02
0x4CDB  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x4CDD  0x44            PUSHI0
0x4CDE  0x07            GT
0x4CDF  0x0C            BOOLAND
0x4CE0  0x2E 0x07       JZB 0x4CE7 (+7)

                        // floatOk = true;                                      scanner.hs:390

0x4CE2  0x45            PUSHI1
0x4CE3  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // }                                                    scanner.hs:391

0x4CE5  0x30 0x08       JB 0x4CED (+8)

                        // else if (!c.IsDigit())                               scanner.hs:392

0x4CE7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4CE9  0x2C 0xA2       CALLB 0xA2     // Char.IsDigit
0x4CEB  0x2E 0x0B       JZB 0x4CF6 (+11)

                        // value = value + advance();                           scanner.hs:396

0x4CED  0x4F            PUSHLOCALB02
0x4CEE  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4CF0  0x25 0x03       SYSCALL1 0x03  // String.Append
0x4CF2  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:397

0x4CF3  0x33 0x6D 0xFF  JW 0x4C60 (-147)

                        // if (hexOk)                                           scanner.hs:398

0x4CF6  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4CF8  0x2E 0x38       JZB 0x4D30 (+56)

                        // if (value.Length < 3)                                scanner.hs:400

0x4CFA  0x4F            PUSHLOCALB02
0x4CFB  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x4CFD  0x1A 0x03       PUSHIB 0x03
0x4CFF  0x08            LT
0x4D00  0x2E 0x0F       JZB 0x4D0F (+15)

                        // token = errorToken("invalid hex integer literal");

0x4D02  0x37 0x4A 0x0D  PUSHIW 0x0D4A
0x4D05  0x1A 0x1B       PUSHIB 0x1B
0x4D07  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D09  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4D0B  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:403

0x4D0C  0x33 0xAD 0x00  JW 0x4DB9 (+173)

                        // uint hexValue = 0;                                   scanner.hs:405

0x4D0F  0x44            PUSHI0

                        // if (!Token.TryParseHex(value, ref hexValue))

0x4D10  0x4F            PUSHLOCALB02
0x4D11  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x4D13  0x2C 0x67       CALLB 0x67     // Token.TryParseHex
0x4D15  0x2F 0x11       JNZB 0x4D26 (+17)

                        // token = errorToken("invalid hex integer literal");

0x4D17  0x37 0x4A 0x0D  PUSHIW 0x0D4A
0x4D1A  0x1A 0x1B       PUSHIB 0x1B
0x4D1C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D1E  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4D20  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:409

0x4D21  0x28 0x02       DECSP 0x02
0x4D23  0x33 0x96 0x00  JW 0x4DB9 (+150)

                        // value = hexValue.ToString();                         scanner.hs:411

0x4D26  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x4D28  0x2C 0xB0       CALLB 0xB0     // UInt.ToString
0x4D2A  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:412

0x4D2B  0x28 0x02       DECSP 0x02
0x4D2D  0x33 0x81 0x00  JW 0x4DAE (+129)

                        // else if (binaryOk)                                   scanner.hs:413

0x4D30  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4D32  0x2E 0x36       JZB 0x4D68 (+54)

                        // if (value.Length < 3)                                scanner.hs:415

0x4D34  0x4F            PUSHLOCALB02
0x4D35  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x4D37  0x1A 0x03       PUSHIB 0x03
0x4D39  0x08            LT
0x4D3A  0x2E 0x0F       JZB 0x4D49 (+15)

                        // token = errorToken("invalid binary integer literal");

0x4D3C  0x37 0x65 0x0D  PUSHIW 0x0D65
0x4D3F  0x1A 0x1E       PUSHIB 0x1E
0x4D41  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D43  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4D45  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:418

0x4D46  0x33 0x73 0x00  JW 0x4DB9 (+115)

                        // uint binaryValue = 0;                                scanner.hs:420

0x4D49  0x44            PUSHI0

                        // if (!Token.TryParseBinary(value, ref binaryValue))

0x4D4A  0x4F            PUSHLOCALB02
0x4D4B  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x4D4D  0x2C 0x69       CALLB 0x69     // Token.TryParseBinary
0x4D4F  0x2F 0x10       JNZB 0x4D5F (+16)

                        // token = errorToken("invalid binary integer literal");

0x4D51  0x37 0x65 0x0D  PUSHIW 0x0D65
0x4D54  0x1A 0x1E       PUSHIB 0x1E
0x4D56  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D58  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4D5A  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:424

0x4D5B  0x28 0x02       DECSP 0x02
0x4D5D  0x30 0x5C       JB 0x4DB9 (+92)

                        // value = binaryValue.ToString();                      scanner.hs:426

0x4D5F  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x4D61  0x2C 0xB0       CALLB 0xB0     // UInt.ToString
0x4D63  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:427

0x4D64  0x28 0x02       DECSP 0x02
0x4D66  0x30 0x48       JB 0x4DAE (+72)

                        // else if (floatOk)                                    scanner.hs:428

0x4D68  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4D6A  0x2E 0x26       JZB 0x4D90 (+38)

                        // float f;                                             scanner.hs:430

0x4D6C  0x24 0x4C       SYSCALL0 0x4C  // Float.New

                        // if (!Token.TryParseFloat(value, ref f))              scanner.hs:431

0x4D6E  0x4F            PUSHLOCALB02
0x4D6F  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x4D71  0x2C 0x6A       CALLB 0x6A     // Token.TryParseFloat
0x4D73  0x2F 0x10       JNZB 0x4D83 (+16)

                        // token = errorToken("invalid float literal");

0x4D75  0x37 0x83 0x0D  PUSHIW 0x0D83
0x4D78  0x1A 0x15       PUSHIB 0x15
0x4D7A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D7C  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4D7E  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:434

0x4D7F  0x28 0x02       DECSP 0x02
0x4D81  0x30 0x38       JB 0x4DB9 (+56)

                        // value = f.ToString();                                scanner.hs:436

0x4D83  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x4D85  0x24 0x4A       SYSCALL0 0x4A  // Float.ToString
0x4D87  0x5E            POPCOPYLOCALB02

                        // ttype = HopperToken.Float;                           scanner.hs:437

0x4D88  0x1A 0x0A       PUSHIB 0x0A
0x4D8A  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // }                                                    scanner.hs:438

0x4D8C  0x28 0x02       DECSP 0x02
0x4D8E  0x30 0x20       JB 0x4DAE (+32)

                        // long l;                                              scanner.hs:441

0x4D90  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (!Token.TryParseLong(value, ref l))               scanner.hs:442

0x4D92  0x4F            PUSHLOCALB02
0x4D93  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x4D95  0x2C 0x64       CALLB 0x64     // Token.TryParseLong
0x4D97  0x2F 0x10       JNZB 0x4DA7 (+16)

                        // token = errorToken("invalid integer literal");

0x4D99  0x37 0x98 0x0D  PUSHIW 0x0D98
0x4D9C  0x1A 0x17       PUSHIB 0x17
0x4D9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4DA0  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4DA2  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:445

0x4DA3  0x28 0x02       DECSP 0x02
0x4DA5  0x30 0x14       JB 0x4DB9 (+20)

                        // value = l.ToString();                                scanner.hs:447

0x4DA7  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x4DA9  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x4DAB  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:448

0x4DAC  0x28 0x02       DECSP 0x02

                        // token = Token.New(ttype, value, currentLine, currentPos, currentSourcePath);

0x4DAE  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4DB0  0x4F            PUSHLOCALB02
0x4DB1  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4DB4  0x20 0x38       PUSHGLOBALB 0x38
0x4DB6  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4DB8  0x5D            POPCOPYLOCALB00

                        // return token;                                        scanner.hs:453

0x4DB9  0x4E            PUSHLOCALB00
0x4DBA  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/tokens/scanner.hs:456
// ####  Scanner.scanIdentifier(..)  ####                                       0x007D


                        // uint dotSeen = 0;                                    scanner.hs:457

0x4DBC  0x5F 0x01       ENTERB 0x01

                        // string value = c.ToString();                         scanner.hs:458

0x4DBE  0x24 0x02       SYSCALL0 0x02  // String.New
0x4DC0  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4DC2  0x2C 0xA8       CALLB 0xA8     // Char.ToString
0x4DC4  0x5E            POPCOPYLOCALB02

                        // HopperToken ttype = HopperToken.Identifier;

0x4DC5  0x44            PUSHI0
0x4DC6  0x1A 0x03       PUSHIB 0x03
0x4DC8  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // c = peek();                                          scanner.hs:462

0x4DCA  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4DCC  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // if (!c.IsLetter() && !c.IsDigit())                   scanner.hs:463

0x4DCE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4DD0  0x2C 0xA7       CALLB 0xA7     // Char.IsLetter
0x4DD2  0x41            BOOLNOT
0x4DD3  0x27 0x00       DUP 0x00
0x4DD5  0x2E 0x08       JZB 0x4DDD (+8)
0x4DD7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4DD9  0x2C 0xA2       CALLB 0xA2     // Char.IsDigit
0x4DDB  0x41            BOOLNOT
0x4DDC  0x0C            BOOLAND
0x4DDD  0x2E 0x0B       JZB 0x4DE8 (+11)

                        // if (c == '.')                                        scanner.hs:465

0x4DDF  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4DE1  0x1A 0x2E       PUSHIB 0x2E
0x4DE3  0x05            EQ
0x4DE4  0x2E 0x0C       JZB 0x4DF0 (+12)

                        // dotSeen++;                                           scanner.hs:467

0x4DE6  0x22 0x00       INCLOCALB 0x00 (BP+0)

                        // value = value + advance();                           scanner.hs:474

0x4DE8  0x4F            PUSHLOCALB02
0x4DE9  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4DEB  0x25 0x03       SYSCALL1 0x03  // String.Append
0x4DED  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:475

0x4DEE  0x30 0xDC       JB 0x4DCA (-36)

                        // if (dotSeen > 0)                                     scanner.hs:476

0x4DF0  0x4E            PUSHLOCALB00
0x4DF1  0x44            PUSHI0
0x4DF2  0x07            GT
0x4DF3  0x2E 0x06       JZB 0x4DF9 (+6)

                        // ttype = HopperToken.DottedIdentifier;                scanner.hs:478

0x4DF5  0x1A 0x02       PUSHIB 0x02
0x4DF7  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (Token.IsKeyword(value))                          scanner.hs:480

0x4DF9  0x4F            PUSHLOCALB02
0x4DFA  0x2C 0x63       CALLB 0x63     // Token.IsKeyword
0x4DFC  0x2E 0x2F       JZB 0x4E2B (+47)

                        // switch (value)                                       scanner.hs:482

0x4DFE  0x4F            PUSHLOCALB02

                        // case "true":                                         scanner.hs:484

0x4DFF  0x37 0x84 0x0C  PUSHIW 0x0C84
0x4E02  0x1A 0x04       PUSHIB 0x04
0x4E04  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E06  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4E08  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4E0A  0x2F 0x08       JNZB 0x4E12 (+8)

                        // ttype = HopperToken.Bool;                            scanner.hs:486

0x4E0C  0x1A 0x07       PUSHIB 0x07
0x4E0E  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:487

0x4E10  0x30 0x19       JB 0x4E29 (+25)

                        // case "false":                                        scanner.hs:488

0x4E12  0x37 0x7F 0x0C  PUSHIW 0x0C7F
0x4E15  0x1A 0x05       PUSHIB 0x05
0x4E17  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E19  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4E1B  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4E1D  0x2F 0x08       JNZB 0x4E25 (+8)

                        // ttype = HopperToken.Bool;                            scanner.hs:490

0x4E1F  0x1A 0x07       PUSHIB 0x07
0x4E21  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:491

0x4E23  0x30 0x06       JB 0x4E29 (+6)

                        // ttype = HopperToken.Keyword;                         scanner.hs:494

0x4E25  0x1A 0x05       PUSHIB 0x05
0x4E27  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:496

0x4E29  0x28 0x02       DECSP 0x02

                        // if (Token.IsDirectiveKeyword(value))                 scanner.hs:498

0x4E2B  0x4F            PUSHLOCALB02
0x4E2C  0x2C 0x5D       CALLB 0x5D     // Token.IsDirectiveKeyword
0x4E2E  0x2E 0x06       JZB 0x4E34 (+6)

                        // ttype = HopperToken.Directive;                       scanner.hs:500

0x4E30  0x1A 0x06       PUSHIB 0x06
0x4E32  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // return Token.New(ttype, value, currentLine, currentPos, currentSourcePath);

0x4E34  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4E36  0x4F            PUSHLOCALB02
0x4E37  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4E3A  0x20 0x38       PUSHGLOBALB 0x38
0x4E3C  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4E3E  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/scanner.hs:218
// ####  Scanner.match(..)  ####                                                0x0078

0x4E40  0x49            ENTER

                        // if (isAtEnd())                                       scanner.hs:219

0x4E41  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4E43  0x2E 0x05       JZB 0x4E48 (+5)

                        // return false;                                        scanner.hs:221

0x4E45  0x44            PUSHI0
0x4E46  0x2B 0x02       RETRETB 0x02

                        // if (sourceGetFromPos(currentPos, true) != expected)

0x4E48  0x20 0x2E       PUSHGLOBALB 0x2E
0x4E4A  0x45            PUSHI1
0x4E4B  0x2C 0x74       CALLB 0x74     // Scanner.sourceGetFromPos
0x4E4D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4E4F  0x06            NE
0x4E50  0x2E 0x05       JZB 0x4E55 (+5)

                        // return false;                                        scanner.hs:225

0x4E52  0x44            PUSHI0
0x4E53  0x2B 0x02       RETRETB 0x02

                        // currentPos = currentPos + 1;                         scanner.hs:227

0x4E55  0x20 0x2E       PUSHGLOBALB 0x2E
0x4E57  0x45            PUSHI1
0x4E58  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4E5A  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x4E5C  0x59 0x2E       POPCOPYGLOBALB 0x2E

                        // return true;                                         scanner.hs:228

0x4E5E  0x45            PUSHI1
0x4E5F  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:304
// ####  Scanner.scanString(..)  ####                                           0x007A

0x4E61  0x49            ENTER

                        // string value;                                        scanner.hs:305

0x4E62  0x24 0x02       SYSCALL0 0x02  // String.New

                        // while ((peek() != '"') && (peek() != char(0)))

0x4E64  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4E66  0x1A 0x22       PUSHIB 0x22
0x4E68  0x06            NE
0x4E69  0x27 0x00       DUP 0x00
0x4E6B  0x2E 0x07       JZB 0x4E72 (+7)
0x4E6D  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4E6F  0x44            PUSHI0
0x4E70  0x06            NE
0x4E71  0x0C            BOOLAND
0x4E72  0x2E 0x3B       JZB 0x4EAD (+59)

                        // if (peek() == char(0x0A))                            scanner.hs:308

0x4E74  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4E76  0x1A 0x0A       PUSHIB 0x0A
0x4E78  0x05            EQ
0x4E79  0x2E 0x0D       JZB 0x4E86 (+13)

                        // return errorToken("unexpected EOL in string");

0x4E7B  0x37 0xAF 0x0D  PUSHIW 0x0DAF
0x4E7E  0x1A 0x18       PUSHIB 0x18
0x4E80  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E82  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4E84  0x2B 0x02       RETRETB 0x02

                        // char c = advance();                                  scanner.hs:312

0x4E86  0x44            PUSHI0
0x4E87  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4E89  0x4D            POPLOCALB02

                        // if (c == char(0x5C)) // \                            scanner.hs:313

0x4E8A  0x4F            PUSHLOCALB02
0x4E8B  0x1A 0x5C       PUSHIB 0x5C
0x4E8D  0x05            EQ
0x4E8E  0x2E 0x16       JZB 0x4EA4 (+22)

                        // if (   (peek() == '"') // \"                         scanner.hs:315

0x4E90  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4E92  0x1A 0x22       PUSHIB 0x22
0x4E94  0x05            EQ
0x4E95  0x27 0x00       DUP 0x00
0x4E97  0x2F 0x08       JNZB 0x4E9F (+8)
0x4E99  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4E9B  0x1A 0x5C       PUSHIB 0x5C
0x4E9D  0x05            EQ
0x4E9E  0x0B            BOOLOR
0x4E9F  0x2E 0x05       JZB 0x4EA4 (+5)

                        // c = advance(); // gooble the \                       scanner.hs:319

0x4EA1  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4EA3  0x4D            POPLOCALB02

                        // value = value + c;                                   scanner.hs:322

0x4EA4  0x4E            PUSHLOCALB00
0x4EA5  0x4F            PUSHLOCALB02
0x4EA6  0x25 0x03       SYSCALL1 0x03  // String.Append
0x4EA8  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:323

0x4EA9  0x28 0x02       DECSP 0x02
0x4EAB  0x30 0xB9       JB 0x4E64 (-71)

                        // if (isAtEnd())                                       scanner.hs:324

0x4EAD  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4EAF  0x2E 0x25       JZB 0x4ED4 (+37)

                        // if (value.Length > 80)                               scanner.hs:326

0x4EB1  0x4E            PUSHLOCALB00
0x4EB2  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x4EB4  0x1A 0x50       PUSHIB 0x50
0x4EB6  0x07            GT
0x4EB7  0x2E 0x09       JZB 0x4EC0 (+9)

                        // value = value.Substring(0, 80);                      scanner.hs:328

0x4EB9  0x4E            PUSHLOCALB00
0x4EBA  0x44            PUSHI0
0x4EBB  0x1A 0x50       PUSHIB 0x50
0x4EBD  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x4EBF  0x5D            POPCOPYLOCALB00

                        // return errorToken("unterminated string: '" + value + "'");

0x4EC0  0x37 0xC7 0x0D  PUSHIW 0x0DC7
0x4EC3  0x1A 0x16       PUSHIB 0x16
0x4EC5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4EC7  0x4E            PUSHLOCALB00
0x4EC8  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4ECA  0x1A 0x27       PUSHIB 0x27
0x4ECC  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4ECE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4ED0  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4ED2  0x2B 0x02       RETRETB 0x02

                        // char c = advance(); // consume the '"'               scanner.hs:332

0x4ED4  0x44            PUSHI0
0x4ED5  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4ED7  0x4D            POPLOCALB02

                        // return Token.New(HopperToken.StringConstant, value, currentLine, currentPos, currentSourcePath);

0x4ED8  0x1A 0x0B       PUSHIB 0x0B
0x4EDA  0x4E            PUSHLOCALB00
0x4EDB  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4EDE  0x20 0x38       PUSHGLOBALB 0x38
0x4EE0  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4EE2  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/scanner.hs:336
// ####  Scanner.scanChar(..)  ####                                             0x007B


                        // char c = advance();                                  scanner.hs:337

0x4EE4  0x5F 0x01       ENTERB 0x01

                        // char c = advance();                                  scanner.hs:337

0x4EE6  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4EE8  0x4C            POPLOCALB00

                        // if (c == char(0x5C))                                 scanner.hs:338

0x4EE9  0x4E            PUSHLOCALB00
0x4EEA  0x1A 0x5C       PUSHIB 0x5C
0x4EEC  0x05            EQ
0x4EED  0x2E 0x16       JZB 0x4F03 (+22)

                        // if (   (peek() == char(0x27)) // \'                  scanner.hs:340

0x4EEF  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4EF1  0x1A 0x27       PUSHIB 0x27
0x4EF3  0x05            EQ
0x4EF4  0x27 0x00       DUP 0x00
0x4EF6  0x2F 0x08       JNZB 0x4EFE (+8)
0x4EF8  0x2C 0x76       CALLB 0x76     // Scanner.peek
0x4EFA  0x1A 0x5C       PUSHIB 0x5C
0x4EFC  0x05            EQ
0x4EFD  0x0B            BOOLOR
0x4EFE  0x2E 0x05       JZB 0x4F03 (+5)

                        // c = advance();         // gobble the \               scanner.hs:344

0x4F00  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4F02  0x4C            POPLOCALB00

                        // char d = advance();                                  scanner.hs:347

0x4F03  0x44            PUSHI0
0x4F04  0x2C 0x75       CALLB 0x75     // Scanner.advance
0x4F06  0x4D            POPLOCALB02

                        // if (isAtEnd() || (d != char(0x27))) // '             scanner.hs:348

0x4F07  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4F09  0x27 0x00       DUP 0x00
0x4F0B  0x2F 0x07       JNZB 0x4F12 (+7)
0x4F0D  0x4F            PUSHLOCALB02
0x4F0E  0x1A 0x27       PUSHIB 0x27
0x4F10  0x06            NE
0x4F11  0x0B            BOOLOR
0x4F12  0x2E 0x0D       JZB 0x4F1F (+13)

                        // return errorToken("' expected");                     scanner.hs:350

0x4F14  0x37 0x04 0x0B  PUSHIW 0x0B04
0x4F17  0x1A 0x0A       PUSHIB 0x0A
0x4F19  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4F1B  0x2C 0x73       CALLB 0x73     // Scanner.errorToken
0x4F1D  0x2B 0x04       RETRETB 0x04

                        // return Token.New(HopperToken.Char, c.ToString(), currentLine, currentPos, currentSourcePath);

0x4F1F  0x1A 0x08       PUSHIB 0x08
0x4F21  0x4E            PUSHLOCALB00
0x4F22  0x2C 0xA8       CALLB 0xA8     // Char.ToString
0x4F24  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4F27  0x20 0x38       PUSHGLOBALB 0x38
0x4F29  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4F2B  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/scanner.hs:132
// ####  Scanner.errorToken(..)  ####                                           0x0073

0x4F2D  0x49            ENTER

                        // <string,string> token = Token.New(HopperToken.Error, message, currentLine, currentPos, currentSourcePath);

0x4F2E  0x1A 0x0F       PUSHIB 0x0F
0x4F30  0x1A 0x0F       PUSHIB 0x0F
0x4F32  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x4F34  0x45            PUSHI1
0x4F35  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4F37  0x52 0x30 0x2E  PUSHGLOBALBB 0x2E30
0x4F3A  0x20 0x38       PUSHGLOBALB 0x38
0x4F3C  0x2C 0x6B       CALLB 0x6B     // Token.New
0x4F3E  0x5D            POPCOPYLOCALB00

                        // return token;                                        scanner.hs:134

0x4F3F  0x4E            PUSHLOCALB00
0x4F40  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/scanner.hs:205
// ####  Scanner.peek(..)  ####                                                 0x0076

0x4F42  0x49            ENTER

                        // return sourceGetFromPos(currentPos, true);           scanner.hs:206

0x4F43  0x20 0x2E       PUSHGLOBALB 0x2E
0x4F45  0x45            PUSHI1
0x4F46  0x2C 0x74       CALLB 0x74     // Scanner.sourceGetFromPos
0x4F48  0x4A            RET0


// /source/compiler/tokens/scanner.hs:209
// ####  Scanner.peekNext(..)  ####                                             0x0077

0x4F49  0x49            ENTER

                        // if (isAtEnd())                                       scanner.hs:210

0x4F4A  0x2C 0x72       CALLB 0x72     // Scanner.isAtEnd
0x4F4C  0x2E 0x04       JZB 0x4F50 (+4)

                        // return char(0);                                      scanner.hs:212

0x4F4E  0x44            PUSHI0
0x4F4F  0x4A            RET0

                        // long currentPlusOne = currentPos+1;                  scanner.hs:214

0x4F50  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x4F52  0x20 0x2E       PUSHGLOBALB 0x2E
0x4F54  0x45            PUSHI1
0x4F55  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4F57  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x4F59  0x5D            POPCOPYLOCALB00

                        // return sourceGetFromPos(currentPlusOne, false);

0x4F5A  0x4E            PUSHLOCALB00
0x4F5B  0x44            PUSHI0
0x4F5C  0x2C 0x74       CALLB 0x74     // Scanner.sourceGetFromPos
0x4F5E  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:137
// ####  Scanner.sourceGetFromPos(..)  ####                                     0x0074


                        // char c;                                              scanner.hs:138

0x4F60  0x5F 0x05       ENTERB 0x05

                        // string ln;                                           scanner.hs:143

0x4F62  0x24 0x02       SYSCALL0 0x02  // String.New

                        // long current;                                        scanner.hs:144

0x4F64  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // long limit;                                          scanner.hs:145

0x4F66  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // long index;                                          scanner.hs:146

0x4F68  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (lastPosSet)                                      scanner.hs:150

0x4F6A  0x20 0x3E       PUSHGLOBALB 0x3E
0x4F6C  0x2E 0x10       JZB 0x4F7C (+16)

                        // if (pos == lastPos)                                  scanner.hs:152

0x4F6E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4F70  0x20 0x3C       PUSHGLOBALB 0x3C
0x4F72  0x24 0x44       SYSCALL0 0x44  // Long.EQ
0x4F74  0x2E 0x08       JZB 0x4F7C (+8)

                        // c = lastChar;                                        scanner.hs:154

0x4F76  0x20 0x3A       PUSHGLOBALB 0x3A
0x4F78  0x4C            POPLOCALB00

                        // break;                                               scanner.hs:155

0x4F79  0x33 0x84 0x00  JW 0x4FFD (+132)

                        // if (pos < currentStartPos)                           scanner.hs:158

0x4F7C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4F7E  0x20 0x36       PUSHGLOBALB 0x36
0x4F80  0x24 0x45       SYSCALL0 0x45  // Long.LT
0x4F82  0x2E 0x0A       JZB 0x4F8C (+10)

                        // currentStartPos = 0;                                 scanner.hs:160

0x4F84  0x44            PUSHI0
0x4F85  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4F87  0x59 0x36       POPCOPYGLOBALB 0x36

                        // iCurrentSourceLine = 0;                              scanner.hs:161

0x4F89  0x44            PUSHI0
0x4F8A  0x1F 0x34       POPGLOBALB 0x34

                        // current = currentStartPos;                           scanner.hs:164

0x4F8C  0x20 0x36       PUSHGLOBALB 0x36
0x4F8E  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // iLine = iCurrentSourceLine;                          scanner.hs:165

0x4F90  0x20 0x34       PUSHGLOBALB 0x34
0x4F92  0x4D            POPLOCALB02

                        // maxLines = sourceLines.Length;                       scanner.hs:166

0x4F93  0x20 0x2C       PUSHGLOBALB 0x2C
0x4F95  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4F97  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // ln = sourceLines[iLine];                             scanner.hs:169

0x4F99  0x20 0x2C       PUSHGLOBALB 0x2C
0x4F9B  0x4F            PUSHLOCALB02
0x4F9C  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x4F9E  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // length = ln.Length;                                  scanner.hs:170

0x4FA0  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4FA2  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x4FA4  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // limit = current+length;                              scanner.hs:171

0x4FA6  0x56 0x0C 0x06  PUSHLOCALBB 0x060C
0x4FA9  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4FAB  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x4FAD  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // if ((pos >= current) && (pos < limit))               scanner.hs:172

0x4FAF  0x56 0xFC 0x0C  PUSHLOCALBB 0x0CFC
0x4FB2  0x24 0x48       SYSCALL0 0x48  // Long.GE
0x4FB4  0x27 0x00       DUP 0x00
0x4FB6  0x2E 0x08       JZB 0x4FBE (+8)
0x4FB8  0x56 0xFC 0x0E  PUSHLOCALBB 0x0EFC
0x4FBB  0x24 0x45       SYSCALL0 0x45  // Long.LT
0x4FBD  0x0C            BOOLAND
0x4FBE  0x2E 0x17       JZB 0x4FD5 (+23)

                        // index = pos - current;                               scanner.hs:174

0x4FC0  0x56 0xFC 0x0C  PUSHLOCALBB 0x0CFC
0x4FC3  0x24 0x40       SYSCALL0 0x40  // Long.Sub
0x4FC5  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // uindex = uint(index);                                scanner.hs:175

0x4FC7  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x4FC9  0x24 0x3C       SYSCALL0 0x3C  // Long.ToUInt
0x4FCB  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // c = ln[uindex];                                      scanner.hs:176

0x4FCD  0x56 0x0A 0x08  PUSHLOCALBB 0x080A
0x4FD0  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x4FD2  0x4C            POPLOCALB00

                        // break;                                               scanner.hs:177

0x4FD3  0x30 0x20       JB 0x4FF3 (+32)

                        // current = current + length;                          scanner.hs:179

0x4FD5  0x56 0x0C 0x06  PUSHLOCALBB 0x060C
0x4FD8  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4FDA  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x4FDC  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // iLine = iLine + 1;                                   scanner.hs:180

0x4FDE  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (iLine == maxLines)                               scanner.hs:181

0x4FE0  0x4F            PUSHLOCALB02
0x4FE1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4FE3  0x05            EQ
0x4FE4  0x2F 0x0F       JNZB 0x4FF3 (+15)

                        // if (updateCache)                                     scanner.hs:185

0x4FE6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4FE8  0x2E 0xB1       JZB 0x4F99 (-79)

                        // currentStartPos = current;                           scanner.hs:187

0x4FEA  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x4FEC  0x59 0x36       POPCOPYGLOBALB 0x36

                        // iCurrentSourceLine = iLine;                          scanner.hs:188

0x4FEE  0x4F            PUSHLOCALB02
0x4FEF  0x1F 0x34       POPGLOBALB 0x34

                        // }                                                    scanner.hs:190

0x4FF1  0x30 0xA8       JB 0x4F99 (-88)

                        // lastPos = pos;                                       scanner.hs:191

0x4FF3  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4FF5  0x59 0x3C       POPCOPYGLOBALB 0x3C

                        // lastChar = c;                                        scanner.hs:192

0x4FF7  0x4E            PUSHLOCALB00
0x4FF8  0x1F 0x3A       POPGLOBALB 0x3A

                        // lastPosSet = true;                                   scanner.hs:193

0x4FFA  0x45            PUSHI1
0x4FFB  0x1F 0x3E       POPGLOBALB 0x3E

                        // return c;                                            scanner.hs:196

0x4FFD  0x4E            PUSHLOCALB00
0x4FFE  0x2B 0x16       RETRETB 0x16


// /source/system/string.hs:254
// ####  String.Contains(..)  ####                                              0x00CD


                        // uint index;                                          string.hs:255

0x5000  0x5F 0x01       ENTERB 0x01

                        // return IndexOf(this, needle, ref index);             string.hs:256

0x5002  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
0x5005  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x5007  0x2C 0xD5       CALLB 0xD5     // String.IndexOf
0x5009  0x2B 0x06       RETRETB 0x06


// /source/system/string.hs:326
// ####  String.IndexOf(..)  ####                                               0x00D5


                        // bool found;                                          string.hs:327

0x500B  0x5F 0x05       ENTERB 0x05

                        // length = this.Length;                                string.hs:332

0x500D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x500F  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x5011  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // pLength = pattern.Length;                            string.hs:333

0x5013  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5015  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x5017  0x4D            POPLOCALB02

                        // if (pIndex + pLength > length)                       string.hs:336

0x5018  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x501A  0x4F            PUSHLOCALB02
0x501B  0x00            ADD
0x501C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x501E  0x07            GT
0x501F  0x2F 0x32       JNZB 0x5051 (+50)

                        // found = true;                                        string.hs:340

0x5021  0x45            PUSHI1
0x5022  0x4C            POPLOCALB00

                        // for (i=0; i < pLength; i++)                          string.hs:341

0x5023  0x44            PUSHI0
0x5024  0x1B 0x08       POPLOCALB 0x08 (BP+8)
0x5026  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5028  0x4F            PUSHLOCALB02
0x5029  0x08            LT
0x502A  0x2E 0x1A       JZB 0x5044 (+26)

                        // if (this[i+pIndex] != pattern[i])                    string.hs:343

0x502C  0x56 0xFA 0x08  PUSHLOCALBB 0x08FA
0x502F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5031  0x00            ADD
0x5032  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x5034  0x56 0xFC 0x08  PUSHLOCALBB 0x08FC
0x5037  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x5039  0x06            NE
0x503A  0x2E 0x06       JZB 0x5040 (+6)

                        // found = false;                                       string.hs:345

0x503C  0x44            PUSHI0
0x503D  0x4C            POPLOCALB00

                        // break;                                               string.hs:346

0x503E  0x30 0x06       JB 0x5044 (+6)

                        // }                                                    string.hs:348

0x5040  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x5042  0x30 0xE4       JB 0x5026 (-28)

                        // if (found)                                           string.hs:349

0x5044  0x4E            PUSHLOCALB00
0x5045  0x2E 0x08       JZB 0x504D (+8)

                        // index = pIndex;                                      string.hs:351

0x5047  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5049  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // break;                                               string.hs:352

0x504B  0x30 0x06       JB 0x5051 (+6)

                        // pIndex++;                                            string.hs:354

0x504D  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // }                                                    string.hs:355

0x504F  0x30 0xC9       JB 0x5018 (-55)

                        // return found;                                        string.hs:356

0x5051  0x4E            PUSHLOCALB00
0x5052  0x2B 0x10       RETRETB 0x10


// /source/system/char.hs:78
// ####  Char.IsHexDigit(..)  ####                                              0x00A6


                        // byte b;                                              char.hs:79

0x5054  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:80

0x5056  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5058  0x4C            POPLOCALB00

                        // return ((b >= 48) && (b <= 57)) || // 0..9           char.hs:81

0x5059  0x4E            PUSHLOCALB00
0x505A  0x1A 0x30       PUSHIB 0x30
0x505C  0x09            GE
0x505D  0x27 0x00       DUP 0x00
0x505F  0x2E 0x07       JZB 0x5066 (+7)
0x5061  0x4E            PUSHLOCALB00
0x5062  0x1A 0x39       PUSHIB 0x39
0x5064  0x0A            LE
0x5065  0x0C            BOOLAND
0x5066  0x27 0x00       DUP 0x00
0x5068  0x2F 0x22       JNZB 0x508A (+34)
0x506A  0x4E            PUSHLOCALB00
0x506B  0x1A 0x41       PUSHIB 0x41
0x506D  0x09            GE
0x506E  0x27 0x00       DUP 0x00
0x5070  0x2E 0x07       JZB 0x5077 (+7)
0x5072  0x4E            PUSHLOCALB00
0x5073  0x1A 0x46       PUSHIB 0x46
0x5075  0x0A            LE
0x5076  0x0C            BOOLAND
0x5077  0x0B            BOOLOR
0x5078  0x27 0x00       DUP 0x00
0x507A  0x2F 0x10       JNZB 0x508A (+16)
0x507C  0x4E            PUSHLOCALB00
0x507D  0x1A 0x61       PUSHIB 0x61
0x507F  0x09            GE
0x5080  0x27 0x00       DUP 0x00
0x5082  0x2E 0x07       JZB 0x5089 (+7)
0x5084  0x4E            PUSHLOCALB00
0x5085  0x1A 0x66       PUSHIB 0x66
0x5087  0x0A            LE
0x5088  0x0C            BOOLAND
0x5089  0x0B            BOOLOR
0x508A  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:37
// ####  Char.ToDigit(..)  ####                                                 0x00A1

0x508C  0x49            ENTER

                        // d = d + 48; // +0                                    char.hs:38

0x508D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x508F  0x1A 0x30       PUSHIB 0x30
0x5091  0x00            ADD
0x5092  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // return char(d);                                      char.hs:39

0x5094  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5096  0x2B 0x02       RETRETB 0x02


// /source/system/char.hs:89
// ####  Char.IsLetter(..)  ####                                                0x00A7


                        // byte b;                                              char.hs:90

0x5098  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:91

0x509A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x509C  0x4C            POPLOCALB00

                        // return ((b >= 65) && (b <= 90))   // A..Z            char.hs:92

0x509D  0x4E            PUSHLOCALB00
0x509E  0x1A 0x41       PUSHIB 0x41
0x50A0  0x09            GE
0x50A1  0x27 0x00       DUP 0x00
0x50A3  0x2E 0x07       JZB 0x50AA (+7)
0x50A5  0x4E            PUSHLOCALB00
0x50A6  0x1A 0x5A       PUSHIB 0x5A
0x50A8  0x0A            LE
0x50A9  0x0C            BOOLAND
0x50AA  0x27 0x00       DUP 0x00
0x50AC  0x2F 0x10       JNZB 0x50BC (+16)
0x50AE  0x4E            PUSHLOCALB00
0x50AF  0x1A 0x61       PUSHIB 0x61
0x50B1  0x09            GE
0x50B2  0x27 0x00       DUP 0x00
0x50B4  0x2E 0x07       JZB 0x50BB (+7)
0x50B6  0x4E            PUSHLOCALB00
0x50B7  0x1A 0x7A       PUSHIB 0x7A
0x50B9  0x0A            LE
0x50BA  0x0C            BOOLAND
0x50BB  0x0B            BOOLOR
0x50BC  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:99
// ####  Char.ToString(..)  ####                                                0x00A8

0x50BE  0x49            ENTER

                        // string result;                                       char.hs:100

0x50BF  0x24 0x02       SYSCALL0 0x02  // String.New

                        // return result.Append(this);                          char.hs:101

0x50C1  0x4E            PUSHLOCALB00
0x50C2  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x50C4  0x25 0x03       SYSCALL1 0x03  // String.Append
0x50C6  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/token.hs:506
// ####  Token.New(..)  ####                                                    0x006B

0x50C8  0x49            ENTER

                        // <string,string> token;                               token.hs:507

0x50C9  0x1A 0x0F       PUSHIB 0x0F
0x50CB  0x1A 0x0F       PUSHIB 0x0F
0x50CD  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // token["type"] = HopperTokenToString(tokenType);

0x50CF  0x4E            PUSHLOCALB00
0x50D0  0x37 0x1B 0x07  PUSHIW 0x071B
0x50D3  0x1A 0x04       PUSHIB 0x04
0x50D5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x50D7  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
0x50D9  0x2C 0x5A       CALLB 0x5A     // Token.HopperTokenToString
0x50DB  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["lexeme"] = lexeme;                            token.hs:509

0x50DD  0x4E            PUSHLOCALB00
0x50DE  0x37 0xAF 0x06  PUSHIW 0x06AF
0x50E1  0x1A 0x06       PUSHIB 0x06
0x50E3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x50E5  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x50E7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["line"] = ln.ToString();                       token.hs:510

0x50E9  0x4E            PUSHLOCALB00
0x50EA  0x37 0x2D 0x01  PUSHIW 0x012D
0x50ED  0x1A 0x04       PUSHIB 0x04
0x50EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x50F1  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x50F3  0x2C 0xB0       CALLB 0xB0     // UInt.ToString
0x50F5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["source"] = sourcePath;                        token.hs:511

0x50F7  0x4E            PUSHLOCALB00
0x50F8  0x37 0x27 0x01  PUSHIW 0x0127
0x50FB  0x1A 0x06       PUSHIB 0x06
0x50FD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x50FF  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5101  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["pos"] = pos.ToString();                       token.hs:512

0x5103  0x4E            PUSHLOCALB00
0x5104  0x37 0xDD 0x0D  PUSHIW 0x0DDD
0x5107  0x1A 0x03       PUSHIB 0x03
0x5109  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x510B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x510D  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x510F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // return token;                                        token.hs:513

0x5111  0x4E            PUSHLOCALB00
0x5112  0x2B 0x0C       RETRETB 0x0C


// /source/compiler/tokens/token.hs:516
// ####  Token.ToString(..)  ####                                               0x006C


                        // HopperToken tokenType;                               token.hs:517

0x5114  0x5F 0x01       ENTERB 0x01

                        // string content = "Undefined";                        token.hs:518

0x5116  0x24 0x02       SYSCALL0 0x02  // String.New
0x5118  0x37 0xF7 0x0A  PUSHIW 0x0AF7
0x511B  0x1A 0x09       PUSHIB 0x09
0x511D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x511F  0x5E            POPCOPYLOCALB02

                        // if (token.Count > 0)                                 token.hs:519

0x5120  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5122  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x5124  0x44            PUSHI0
0x5125  0x07            GT
0x5126  0x31 0x20 0x01  JZW 0x5246 (+288)

                        // content = token["type"];                             token.hs:521

0x5129  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x512B  0x37 0x1B 0x07  PUSHIW 0x071B
0x512E  0x1A 0x04       PUSHIB 0x04
0x5130  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5132  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x5134  0x5E            POPCOPYLOCALB02

                        // tokenType = Token.GetType(token);                    token.hs:522

0x5135  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5137  0x2C 0x5B       CALLB 0x5B     // Token.GetType
0x5139  0x4C            POPLOCALB00

                        // switch (tokenType)                                   token.hs:523

0x513A  0x4E            PUSHLOCALB00

                        // case HopperToken.Identifier:                         token.hs:525

0x513B  0x1A 0x03       PUSHIB 0x03
0x513D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x513F  0x05            EQ
0x5140  0x2E 0x21       JZB 0x5161 (+33)

                        // content = content + " '" + token["lexeme"] + "'";

0x5142  0x4F            PUSHLOCALB02
0x5143  0x37 0x20 0x27  PUSHIW 0x2720
0x5146  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5148  0x24 0x03       SYSCALL0 0x03  // String.Append
0x514A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x514C  0x37 0xAF 0x06  PUSHIW 0x06AF
0x514F  0x1A 0x06       PUSHIB 0x06
0x5151  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5153  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x5155  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5157  0x1A 0x27       PUSHIB 0x27
0x5159  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x515B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x515D  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:528

0x515E  0x33 0xA4 0x00  JW 0x5202 (+164)

                        // case HopperToken.StringConstant:                     token.hs:529

0x5161  0x1A 0x0B       PUSHIB 0x0B
0x5163  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5165  0x05            EQ
0x5166  0x2E 0x1F       JZB 0x5185 (+31)

                        // content = content + " \"" + token["lexeme"] + '"';

0x5168  0x4F            PUSHLOCALB02
0x5169  0x37 0x20 0x22  PUSHIW 0x2220
0x516C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x516E  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5170  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5172  0x37 0xAF 0x06  PUSHIW 0x06AF
0x5175  0x1A 0x06       PUSHIB 0x06
0x5177  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5179  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x517B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x517D  0x1A 0x22       PUSHIB 0x22
0x517F  0x25 0x03       SYSCALL1 0x03  // String.Append
0x5181  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:532

0x5182  0x33 0x80 0x00  JW 0x5202 (+128)

                        // case HopperToken.Char:                               token.hs:533

0x5185  0x1A 0x08       PUSHIB 0x08
0x5187  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5189  0x05            EQ
0x518A  0x2E 0x20       JZB 0x51AA (+32)

                        // content = content + " '" + token["lexeme"] + "'";

0x518C  0x4F            PUSHLOCALB02
0x518D  0x37 0x20 0x27  PUSHIW 0x2720
0x5190  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5192  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5194  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5196  0x37 0xAF 0x06  PUSHIW 0x06AF
0x5199  0x1A 0x06       PUSHIB 0x06
0x519B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x519D  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x519F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x51A1  0x1A 0x27       PUSHIB 0x27
0x51A3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x51A5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x51A7  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:536

0x51A8  0x30 0x5A       JB 0x5202 (+90)

                        // case HopperToken.Keyword:                            token.hs:537

0x51AA  0x1A 0x05       PUSHIB 0x05
0x51AC  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x51AE  0x05            EQ
0x51AF  0x2E 0x19       JZB 0x51C8 (+25)

                        // content = content + " " + token["lexeme"];           token.hs:539

0x51B1  0x4F            PUSHLOCALB02
0x51B2  0x1A 0x20       PUSHIB 0x20
0x51B4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x51B6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x51B8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51BA  0x37 0xAF 0x06  PUSHIW 0x06AF
0x51BD  0x1A 0x06       PUSHIB 0x06
0x51BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x51C1  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x51C3  0x24 0x03       SYSCALL0 0x03  // String.Append
0x51C5  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:540

0x51C6  0x30 0x3C       JB 0x5202 (+60)

                        // case HopperToken.Integer:                            token.hs:541

0x51C8  0x1A 0x09       PUSHIB 0x09
0x51CA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x51CC  0x05            EQ
0x51CD  0x2E 0x19       JZB 0x51E6 (+25)

                        // content = content + " " + token["lexeme"];           token.hs:543

0x51CF  0x4F            PUSHLOCALB02
0x51D0  0x1A 0x20       PUSHIB 0x20
0x51D2  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x51D4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x51D6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51D8  0x37 0xAF 0x06  PUSHIW 0x06AF
0x51DB  0x1A 0x06       PUSHIB 0x06
0x51DD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x51DF  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x51E1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x51E3  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:544

0x51E4  0x30 0x1E       JB 0x5202 (+30)

                        // case HopperToken.Bool:                               token.hs:545

0x51E6  0x1A 0x07       PUSHIB 0x07
0x51E8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x51EA  0x05            EQ
0x51EB  0x2E 0x17       JZB 0x5202 (+23)

                        // content = content + " " + token["lexeme"];           token.hs:547

0x51ED  0x4F            PUSHLOCALB02
0x51EE  0x1A 0x20       PUSHIB 0x20
0x51F0  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x51F2  0x24 0x03       SYSCALL0 0x03  // String.Append
0x51F4  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51F6  0x37 0xAF 0x06  PUSHIW 0x06AF
0x51F9  0x1A 0x06       PUSHIB 0x06
0x51FB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x51FD  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x51FF  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5201  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:549

0x5202  0x28 0x02       DECSP 0x02

                        // content = content + "[" + token["source"] + ":" + token["line"] + "->" + token["pos"] + "]";

0x5204  0x4F            PUSHLOCALB02
0x5205  0x1A 0x5B       PUSHIB 0x5B
0x5207  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5209  0x24 0x03       SYSCALL0 0x03  // String.Append
0x520B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x520D  0x37 0x27 0x01  PUSHIW 0x0127
0x5210  0x1A 0x06       PUSHIB 0x06
0x5212  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5214  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x5216  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5218  0x1A 0x3A       PUSHIB 0x3A
0x521A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x521C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x521E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5220  0x37 0x2D 0x01  PUSHIW 0x012D
0x5223  0x1A 0x04       PUSHIB 0x04
0x5225  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5227  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x5229  0x24 0x03       SYSCALL0 0x03  // String.Append
0x522B  0x37 0x2D 0x3E  PUSHIW 0x3E2D
0x522E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5230  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5232  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5234  0x37 0xDD 0x0D  PUSHIW 0x0DDD
0x5237  0x1A 0x03       PUSHIB 0x03
0x5239  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x523B  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x523D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x523F  0x1A 0x5D       PUSHIB 0x5D
0x5241  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5243  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5245  0x5E            POPCOPYLOCALB02

                        // return content;                                      token.hs:552

0x5246  0x4F            PUSHLOCALB02
0x5247  0x2B 0x06       RETRETB 0x06


// /source/compiler/tokens/token.hs:414
// ####  Token.TryParseBinary(..)  ####                                         0x0069


                        // char c;                                              token.hs:415

0x5249  0x5F 0x04       ENTERB 0x04

                        // returnValue = 0;                                     token.hs:418

0x524B  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // if (!content.StartsWith("0b"))                       token.hs:419

0x524D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x524F  0x37 0x30 0x62  PUSHIW 0x6230
0x5252  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5254  0x2C 0xCF       CALLB 0xCF     // String.StartsWith
0x5256  0x2F 0x05       JNZB 0x525B (+5)

                        // return false;                                        token.hs:421

0x5258  0x44            PUSHI0
0x5259  0x2B 0x0A       RETRETB 0x0A

                        // length = content.Length;                             token.hs:423

0x525B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x525D  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x525F  0x4D            POPLOCALB02

                        // if (length < 3)                                      token.hs:424

0x5260  0x4F            PUSHLOCALB02
0x5261  0x1A 0x03       PUSHIB 0x03
0x5263  0x08            LT
0x5264  0x2E 0x05       JZB 0x5269 (+5)

                        // return false;                                        token.hs:426

0x5266  0x44            PUSHI0
0x5267  0x2B 0x0A       RETRETB 0x0A

                        // for ( ; i < length-2; i++)                           token.hs:428

0x5269  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x526B  0x4F            PUSHLOCALB02
0x526C  0x1A 0x02       PUSHIB 0x02
0x526E  0x01            SUB
0x526F  0x08            LT
0x5270  0x2E 0x22       JZB 0x5292 (+34)

                        // returnValue = returnValue * 2;                       token.hs:430

0x5272  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x5274  0x1A 0x02       PUSHIB 0x02
0x5276  0x03            MUL
0x5277  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // c = content.GetChar(i+2);                            token.hs:431

0x5279  0x56 0xFC 0x04  PUSHLOCALBB 0x04FC
0x527C  0x1A 0x02       PUSHIB 0x02
0x527E  0x00            ADD
0x527F  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x5281  0x4C            POPLOCALB00

                        // if (c == '1')                                        token.hs:432

0x5282  0x4E            PUSHLOCALB00
0x5283  0x1A 0x31       PUSHIB 0x31
0x5285  0x05            EQ
0x5286  0x2E 0x08       JZB 0x528E (+8)

                        // returnValue = returnValue + 1;                       token.hs:434

0x5288  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x528A  0x45            PUSHI1
0x528B  0x00            ADD
0x528C  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // }                                                    token.hs:436

0x528E  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x5290  0x30 0xD9       JB 0x5269 (-39)

                        // return true;                                         token.hs:437

0x5292  0x45            PUSHI1
0x5293  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/tokens/token.hs:440
// ####  Token.TryParseFloat(..)  ####                                          0x006A


                        // bool success;                                        token.hs:441

0x5295  0x5F 0x02       ENTERB 0x02

                        // long longValue;                                      token.hs:443

0x5297  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // float floatValue;                                    token.hs:444

0x5299  0x24 0x4C       SYSCALL0 0x4C  // Float.New

                        // string digits;                                       token.hs:445

0x529B  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (content.IndexOf('.', ref iDot))                  token.hs:448

0x529D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x529F  0x1A 0x2E       PUSHIB 0x2E
0x52A1  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x52A3  0x2C 0xD0       CALLB 0xD0     // String.IndexOf
0x52A5  0x31 0x79 0x00  JZW 0x531E (+121)

                        // digits = content.Substring(0, iDot);                 token.hs:450

0x52A8  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x52AA  0x44            PUSHI0
0x52AB  0x4F            PUSHLOCALB02
0x52AC  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x52AE  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (!TryParseLong(digits, ref longValue))            token.hs:451

0x52B0  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x52B2  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x52B4  0x2C 0x64       CALLB 0x64     // Token.TryParseLong
0x52B6  0x2E 0x78       JZB 0x532E (+120)

                        // floatValue = longValue.ToFloat();                    token.hs:455

0x52B8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x52BA  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x52BC  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // digits = content.Substring(iDot+1);                  token.hs:456

0x52BE  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x52C0  0x4F            PUSHLOCALB02
0x52C1  0x45            PUSHI1
0x52C2  0x00            ADD
0x52C3  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x52C5  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // uint length = digits.Length;                         token.hs:457

0x52C7  0x44            PUSHI0
0x52C8  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x52CA  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x52CC  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // if (length > 0)                                      token.hs:458

0x52CE  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x52D0  0x44            PUSHI0
0x52D1  0x07            GT
0x52D2  0x2E 0x46       JZB 0x5318 (+70)

                        // if (!TryParseLong(digits, ref longValue))            token.hs:460

0x52D4  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x52D6  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x52D8  0x2C 0x64       CALLB 0x64     // Token.TryParseLong
0x52DA  0x2F 0x06       JNZB 0x52E0 (+6)

                        // break;                                               token.hs:462

0x52DC  0x28 0x02       DECSP 0x02
0x52DE  0x30 0x50       JB 0x532E (+80)

                        // float decimalValue = longValue.ToFloat();            token.hs:464

0x52E0  0x24 0x4C       SYSCALL0 0x4C  // Float.New
0x52E2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x52E4  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x52E6  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // while (length > 0)                                   token.hs:465

0x52E8  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x52EA  0x44            PUSHI0
0x52EB  0x07            GT
0x52EC  0x2E 0x11       JZB 0x52FD (+17)

                        // decimalValue = decimalValue / 10.0;                  token.hs:467

0x52EE  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x52F0  0x37 0xE0 0x0D  PUSHIW 0x0DE0
0x52F3  0x24 0x4D       SYSCALL0 0x4D  // Float.NewFromConstant
0x52F5  0x24 0x50       SYSCALL0 0x50  // Float.Div
0x52F7  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // length--;                                            token.hs:468

0x52F9  0x23 0x0A       DECLOCALB 0x0A (BP+10)

                        // }                                                    token.hs:469

0x52FB  0x30 0xED       JB 0x52E8 (-19)

                        // if (floatValue > 0)                                  token.hs:470

0x52FD  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x52FF  0x44            PUSHI0
0x5300  0x24 0x34       SYSCALL0 0x34  // Int.ToFloat
0x5302  0x24 0x55       SYSCALL0 0x55  // Float.GT
0x5304  0x2E 0x0B       JZB 0x530F (+11)

                        // floatValue = floatValue + decimalValue;              token.hs:472

0x5306  0x56 0x06 0x0C  PUSHLOCALBB 0x0C06
0x5309  0x24 0x4E       SYSCALL0 0x4E  // Float.Add
0x530B  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // }                                                    token.hs:473

0x530D  0x30 0x09       JB 0x5316 (+9)

                        // floatValue = floatValue - decimalValue;              token.hs:476

0x530F  0x56 0x06 0x0C  PUSHLOCALBB 0x0C06
0x5312  0x24 0x4F       SYSCALL0 0x4F  // Float.Sub
0x5314  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // }                                                    token.hs:478

0x5316  0x28 0x02       DECSP 0x02

                        // success = true;                                      token.hs:479

0x5318  0x45            PUSHI1
0x5319  0x4C            POPLOCALB00

                        // }                                                    token.hs:480

0x531A  0x28 0x02       DECSP 0x02
0x531C  0x30 0x12       JB 0x532E (+18)

                        // if (TryParseLong(content, ref longValue))            token.hs:483

0x531E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5320  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x5322  0x2C 0x64       CALLB 0x64     // Token.TryParseLong
0x5324  0x2E 0x0A       JZB 0x532E (+10)

                        // floatValue = longValue.ToFloat();                    token.hs:485

0x5326  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5328  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x532A  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // success = true;                                      token.hs:486

0x532C  0x45            PUSHI1
0x532D  0x4C            POPLOCALB00

                        // if (success)                                         token.hs:491

0x532E  0x4E            PUSHLOCALB00
0x532F  0x2E 0x06       JZB 0x5335 (+6)

                        // returnValue = floatValue;                            token.hs:493

0x5331  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5333  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // return success;                                      token.hs:495

0x5335  0x4E            PUSHLOCALB00
0x5336  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/tokens/token.hs:268
// ####  Token.IsKeyword(..)  ####                                              0x0063

0x5338  0x49            ENTER

                        // return typeKeywords.Contains(candidate) || statementKeywords.Contains(candidate);

0x5339  0x20 0x22       PUSHGLOBALB 0x22
0x533B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x533D  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x533F  0x27 0x00       DUP 0x00
0x5341  0x2F 0x09       JNZB 0x534A (+9)
0x5343  0x20 0x24       PUSHGLOBALB 0x24
0x5345  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5347  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x5349  0x0B            BOOLOR
0x534A  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/token.hs:242
// ####  Token.IsDirectiveKeyword(..)  ####                                     0x005D

0x534C  0x49            ENTER

                        // return directiveKeywords.Contains(candidate);

0x534D  0x20 0x26       PUSHGLOBALB 0x26
0x534F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5351  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x5353  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/token.hs:69
// ####  Token.HopperTokenToString(..)  ####                                    0x005A

0x5355  0x49            ENTER

                        // string content;                                      token.hs:71

0x5356  0x24 0x02       SYSCALL0 0x02  // String.New

                        // uint i;                                              token.hs:72

0x5358  0x44            PUSHI0

                        // if (hopperTokenNames.Contains(tokenType))            token.hs:73

0x5359  0x20 0x2A       PUSHGLOBALB 0x2A
0x535B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x535D  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x535F  0x2E 0x0B       JZB 0x536A (+11)

                        // content = hopperTokenNames[tokenType];               token.hs:75

0x5361  0x20 0x2A       PUSHGLOBALB 0x2A
0x5363  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5365  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x5367  0x5D            POPCOPYLOCALB00

                        // }                                                    token.hs:76

0x5368  0x30 0x1B       JB 0x5383 (+27)

                        // i = uint(tokenType);                                 token.hs:79

0x536A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x536C  0x4D            POPLOCALB02

                        // content = "0x" + i.ToHexString(4);                   token.hs:80

0x536D  0x37 0x30 0x78  PUSHIW 0x7830
0x5370  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5372  0x4F            PUSHLOCALB02
0x5373  0x1A 0x04       PUSHIB 0x04
0x5375  0x2C 0xB3       CALLB 0xB3     // UInt.ToHexString
0x5377  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5379  0x5D            POPCOPYLOCALB00

                        // PrintLn("TODO : token not implemented in Token.HopperTokenToString");

0x537A  0x37 0xE4 0x0D  PUSHIW 0x0DE4
0x537D  0x1A 0x39       PUSHIB 0x39
0x537F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5381  0x2C 0x20       CALLB 0x20     // Screen.PrintLn

                        // return content;                                      token.hs:83

0x5383  0x4E            PUSHLOCALB00
0x5384  0x2B 0x06       RETRETB 0x06


// /source/system/color.hs:21
// ####  Color.Red_Get(..)  ####                                                0x011E

0x5386  0x49            ENTER

                        // uint Red         { get { return 0xF00; }}            color.hs:21

0x5387  0x37 0x00 0x0F  PUSHIW 0x0F00
0x538A  0x4A            RET0


// /source/system/string.hs:281
// ####  String.IndexOf(..)  ####                                               0x00D0


                        // uint i;                                              string.hs:282

0x538B  0x5F 0x02       ENTERB 0x02

                        // length = this.Length;                                string.hs:284

0x538D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x538F  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x5391  0x4D            POPLOCALB02

                        // for ( ; i < length; i++)                             string.hs:285

0x5392  0x4E            PUSHLOCALB00
0x5393  0x4F            PUSHLOCALB02
0x5394  0x08            LT
0x5395  0x2E 0x16       JZB 0x53AB (+22)

                        // if (this[i] == pattern)                              string.hs:287

0x5397  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5399  0x4E            PUSHLOCALB00
0x539A  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x539C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x539E  0x05            EQ
0x539F  0x2E 0x08       JZB 0x53A7 (+8)

                        // index = i;                                           string.hs:289

0x53A1  0x4E            PUSHLOCALB00
0x53A2  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         string.hs:290

0x53A4  0x45            PUSHI1
0x53A5  0x2B 0x0A       RETRETB 0x0A

                        // }                                                    string.hs:292

0x53A7  0x22 0x00       INCLOCALB 0x00 (BP+0)
0x53A9  0x30 0xE9       JB 0x5392 (-23)

                        // return false;                                        string.hs:293

0x53AB  0x44            PUSHI0
0x53AC  0x2B 0x0A       RETRETB 0x0A
