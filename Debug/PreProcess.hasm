0x0000 0x0000 // binary version number
0x0002 0x0306 // offset to constant data
0x0004 0x13ED // 'main' entry point offset

0x0006 0x0013 0x174C
0x000A 0x0012 0x1766
0x000E 0x0011 0x18B5
0x0012 0x000A 0x1AB7
0x0016 0x0005 0x1ADC
0x001A 0x0007 0x1B91
0x001E 0x0008 0x1B96
0x0022 0x0009 0x1B9B
0x0026 0x0003 0x1C16
0x002A 0x000D 0x1DDD
0x002E 0x000F 0x1E3D
0x0032 0x000C 0x2075
0x0036 0x0010 0x20D2
0x003A 0x0004 0x2173
0x003E 0x0002 0x221E
0x0042 0x0001 0x224D
0x0046 0x0006 0x22BF
0x004A 0x000B 0x2402
0x004E 0x000E 0x24F9
0x0052 0x0113 0x2528
0x0056 0x0107 0x254D
0x005A 0x0104 0x2570
0x005E 0x0103 0x257C
0x0062 0x010C 0x25A4
0x0066 0x0051 0x25ED
0x006A 0x0046 0x2618
0x006E 0x004F 0x2645
0x0072 0x004D 0x26BB
0x0076 0x0052 0x26DA
0x007A 0x0054 0x274A
0x007E 0x006B 0x2797
0x0082 0x006C 0x27BF
0x0086 0x006F 0x27C3
0x008A 0x0075 0x27D6
0x008E 0x007C 0x27E8
0x0092 0x007F 0x280D
0x0096 0x007E 0x2870
0x009A 0x0070 0x287B
0x009E 0x0072 0x287F
0x00A2 0x007D 0x2883
0x00A6 0x0080 0x289D
0x00AA 0x006E 0x28A6
0x00AE 0x0078 0x28DB
0x00B2 0x0079 0x28F3
0x00B6 0x007B 0x28FC
0x00BA 0x0081 0x2905
0x00BE 0x0082 0x29A5
0x00C2 0x0071 0x29B2
0x00C6 0x007A 0x29B6
0x00CA 0x0076 0x29CE
0x00CE 0x0077 0x29D4
0x00D2 0x006D 0x2A82
0x00D6 0x0137 0x2AAD
0x00DA 0x013C 0x2B08
0x00DE 0x0139 0x2B38
0x00E2 0x013B 0x2B52
0x00E6 0x00AA 0x2BA7
0x00EA 0x00C3 0x2BD3
0x00EE 0x0089 0x305F
0x00F2 0x0091 0x3103
0x00F6 0x00AB 0x3114
0x00FA 0x00BC 0x3195
0x00FE 0x0097 0x31A6
0x0102 0x00A9 0x31B0
0x0106 0x00BF 0x31B9
0x010A 0x00BB 0x3251
0x010E 0x00C0 0x3399
0x0112 0x00BA 0x33A8
0x0116 0x0098 0x3417
0x011A 0x00BE 0x3448
0x011E 0x00BD 0x34EA
0x0122 0x00A8 0x350E
0x0126 0x00B8 0x35B8
0x012A 0x0038 0x3639
0x012E 0x0034 0x3648
0x0132 0x0164 0x3654
0x0136 0x0165 0x3658
0x013A 0x0166 0x365D
0x013E 0x0176 0x3662
0x0142 0x0175 0x3666
0x0146 0x0162 0x366B
0x014A 0x0163 0x3670
0x014E 0x015E 0x3675
0x0152 0x0146 0x367A
0x0156 0x0058 0x367D
0x015A 0x0059 0x3685
0x015E 0x005A 0x370A
0x0162 0x006A 0x373D
0x0166 0x0069 0x374C
0x016A 0x005D 0x39C7
0x016E 0x0064 0x39CE
0x0172 0x0060 0x3A8A
0x0176 0x0067 0x3A9E
0x017A 0x0068 0x3C10
0x017E 0x0063 0x3C94
0x0182 0x0065 0x3CB5
0x0186 0x0066 0x3D38
0x018A 0x005E 0x3D81
0x018E 0x0061 0x3D96
0x0192 0x0062 0x3D9D
0x0196 0x005F 0x3DB4
0x019A 0x0085 0x3E54
0x019E 0x0086 0x4AB4
0x01A2 0x0084 0x4ACB
0x01A6 0x00CE 0x4AE2
0x01AA 0x00CF 0x4AE8
0x01AE 0x00D3 0x4AF0
0x01B2 0x00D4 0x4BA2
0x01B6 0x00D0 0x4C95
0x01BA 0x00D2 0x4CC7
0x01BE 0x00D1 0x4CD6
0x01C2 0x00CD 0x4D17
0x01C6 0x00CC 0x4D1E
0x01CA 0x00D5 0x518B
0x01CE 0x00DC 0x519F
0x01D2 0x00D9 0x51B7
0x01D6 0x00DD 0x51CB
0x01DA 0x00DE 0x5203
0x01DE 0x00DF 0x5229
0x01E2 0x0105 0x5233
0x01E6 0x0106 0x5249
0x01EA 0x010E 0x5277
0x01EE 0x00E7 0x529F
0x01F2 0x00EA 0x52D2
0x01F6 0x0189 0x5300
0x01FA 0x0188 0x531F
0x01FE 0x0186 0x5596
0x0202 0x0185 0x55A5
0x0206 0x0187 0x55AD
0x020A 0x01AD 0x5769
0x020E 0x018F 0x599C
0x0212 0x0190 0x5A10
0x0216 0x019B 0x5A84
0x021A 0x01AA 0x5C41
0x021E 0x01A5 0x5C4A
0x0222 0x01A9 0x5C53
0x0226 0x01A6 0x5C5C
0x022A 0x0191 0x5C65
0x022E 0x01AB 0x619C
0x0232 0x01A3 0x61A5
0x0236 0x01A4 0x6214
0x023A 0x01A2 0x6224
0x023E 0x0047 0x628D
0x0242 0x0056 0x67CE
0x0246 0x0057 0x6819
0x024A 0x0055 0x694D
0x024E 0x004E 0x69F1
0x0252 0x0048 0x6A05
0x0256 0x0050 0x6A0E
0x025A 0x004B 0x6A3D
0x025E 0x0045 0x6A46
0x0262 0x0155 0x6A77
0x0266 0x0092 0x6A7C
0x026A 0x0094 0x6A8B
0x026E 0x0095 0x6A95
0x0272 0x0096 0x6AA4
0x0276 0x00A4 0x6AB7
0x027A 0x00A5 0x6B2D
0x027E 0x008E 0x6BA3
0x0282 0x00A6 0x6BD7
0x0286 0x0090 0x6C4D
0x028A 0x00A2 0x6C81
0x028E 0x00A1 0x6D6D
0x0292 0x00A7 0x6E59
0x0296 0x00E1 0x6F45
0x029A 0x00E2 0x6F4F
0x029E 0x00DB 0x6F7D
0x02A2 0x00E3 0x6F99
0x02A6 0x0145 0x6FE4
0x02AA 0x0110 0x7139
0x02AE 0x01E1 0x7164
0x02B2 0x01DC 0x719F
0x02B6 0x01E0 0x71DF
0x02BA 0x01DB 0x71F6
0x02BE 0x01E2 0x7290
0x02C2 0x01E3 0x72A5
0x02C6 0x00D8 0x72D0
0x02CA 0x01F6 0x72DC
0x02CE 0x01F4 0x7326
0x02D2 0x01FC 0x733D
0x02D6 0x01FD 0x73E5
0x02DA 0x01FB 0x7521
0x02DE 0x01F9 0x7720
0x02E2 0x01F5 0x7765
0x02E6 0x01FA 0x777C
0x02EA 0x01F7 0x77C1
0x02EE 0x01F8 0x77E4
0x02F2 0x00AC 0x7807
0x02F6 0x00AF 0x7816
0x02FA 0x00C6 0x781F
0x02FE 0x01C6 0x789F
0x0302 0x01B8 0x78A3

// constant data  [4327]

0x0306  0x2D 0x5C 0x7C 0x2F 0x2D 0x5C 0x7C 0x2F  0x2E 0x68 0x73 0x2F 0x53 0x6F 0x75 0x72  -\|/-\|/.hs/Sour
0x0316  0x63 0x65 0x2F 0x43 0x6F 0x6D 0x70 0x69  0x6C 0x65 0x72 0x2F 0x2F 0x53 0x6F 0x75  ce/Compiler//Sou
0x0326  0x72 0x63 0x65 0x2F 0x44 0x65 0x62 0x75  0x67 0x67 0x65 0x72 0x2F 0x2F 0x53 0x6F  rce/Debugger//So
0x0336  0x75 0x72 0x63 0x65 0x2F 0x45 0x64 0x69  0x74 0x6F 0x72 0x2F 0x2F 0x53 0x6F 0x75  urce/Editor//Sou
0x0346  0x72 0x63 0x65 0x2F 0x53 0x68 0x65 0x6C  0x6C 0x2F 0x2F 0x53 0x6F 0x75 0x72 0x63  rce/Shell//Sourc
0x0356  0x65 0x2F 0x54 0x65 0x73 0x74 0x69 0x6E  0x67 0x2F 0x2E 0x6A 0x73 0x6F 0x6E 0x2F  e/Testing/.json/
0x0366  0x44 0x65 0x62 0x75 0x67 0x2F 0x4F 0x62  0x6A 0x2F 0x45 0x78 0x70 0x6F 0x72 0x74  Debug/Obj/Export
0x0376  0x69 0x6E 0x67 0x3A 0x20 0x27 0x53 0x75  0x63 0x63 0x65 0x73 0x73 0x2E 0x20 0x00  ing: 'Success. .
0x0386  0x00 0x7A 0x44 0x49 0x6E 0x76 0x61 0x6C  0x69 0x64 0x20 0x61 0x72 0x67 0x75 0x6D  .zDInvalid argum
0x0396  0x65 0x6E 0x74 0x73 0x20 0x66 0x6F 0x72  0x20 0x50 0x52 0x45 0x50 0x52 0x4F 0x43  ents for PREPROC
0x03A6  0x45 0x53 0x53 0x3A 0x20 0x20 0x50 0x52  0x45 0x50 0x52 0x4F 0x43 0x45 0x53 0x53  ESS:  PREPROCESS
0x03B6  0x20 0x5B 0x61 0x72 0x67 0x73 0x5D 0x20  0x3C 0x73 0x6F 0x75 0x72 0x63 0x65 0x20   [args] <source 
0x03C6  0x66 0x69 0x6C 0x65 0x3E 0x20 0x20 0x20  0x20 0x2D 0x67 0x20 0x3C 0x63 0x3E 0x20  file>    -g <c> 
0x03D6  0x3C 0x72 0x3E 0x20 0x3A 0x20 0x63 0x61  0x6C 0x6C 0x65 0x64 0x20 0x66 0x72 0x6F  <r> : called fro
0x03E6  0x6D 0x20 0x47 0x55 0x49 0x2C 0x20 0x6E  0x6F 0x74 0x20 0x63 0x6F 0x6E 0x73 0x6F  m GUI, not conso
0x03F6  0x6C 0x65 0x70 0x72 0x6F 0x67 0x72 0x61  0x6D 0x27 0x70 0x72 0x6F 0x67 0x72 0x61  leprogram'progra
0x0406  0x6D 0x27 0x20 0x65 0x78 0x70 0x65 0x63  0x74 0x65 0x64 0x50 0x72 0x6F 0x67 0x72  m' expectedProgr
0x0416  0x61 0x6D 0x20 0x6E 0x61 0x6D 0x65 0x20  0x69 0x64 0x65 0x6E 0x74 0x69 0x66 0x69  am name identifi
0x0426  0x65 0x72 0x20 0x65 0x78 0x70 0x65 0x63  0x74 0x65 0x64 0x75 0x6E 0x69 0x74 0x27  er expectedunit'
0x0436  0x75 0x6E 0x69 0x74 0x27 0x20 0x65 0x78  0x70 0x65 0x63 0x74 0x65 0x64 0x55 0x6E  unit' expectedUn
0x0446  0x69 0x74 0x20 0x6E 0x61 0x6D 0x65 0x20  0x69 0x64 0x65 0x6E 0x74 0x69 0x66 0x69  it name identifi
0x0456  0x65 0x72 0x20 0x65 0x78 0x70 0x65 0x63  0x74 0x65 0x64 0x6C 0x65 0x78 0x65 0x6D  er expectedlexem
0x0466  0x65 0x6D 0x61 0x69 0x6E 0x70 0x72 0x6F  0x67 0x72 0x61 0x6D 0x20 0x72 0x65 0x71  emainprogram req
0x0476  0x75 0x69 0x72 0x65 0x73 0x20 0x65 0x6E  0x74 0x72 0x79 0x20 0x70 0x6F 0x69 0x6E  uires entry poin
0x0486  0x74 0x27 0x23 0x65 0x6E 0x64 0x69 0x66  0x27 0x20 0x65 0x78 0x70 0x65 0x63 0x74  t'#endif' expect
0x0496  0x65 0x64 0x20 0x62 0x65 0x66 0x6F 0x72  0x65 0x20 0x65 0x6E 0x64 0x20 0x6F 0x66  ed before end of
0x04A6  0x20 0x66 0x69 0x6C 0x65 0x64 0x65 0x6C  0x65 0x67 0x61 0x74 0x65 0x23 0x64 0x65   filedelegate#de
0x04B6  0x66 0x69 0x6E 0x65 0x63 0x6F 0x6E 0x73  0x74 0x65 0x6E 0x75 0x6D 0x66 0x6C 0x61  fineconstenumfla
0x04C6  0x67 0x73 0x75 0x73 0x65 0x73 0x27 0x28  0x27 0x20 0x6F 0x72 0x20 0x27 0x3B 0x27  gsuses'(' or ';'
0x04D6  0x20 0x65 0x78 0x70 0x65 0x63 0x74 0x65  0x64 0x69 0x64 0x65 0x6E 0x74 0x69 0x66   expectedidentif
0x04E6  0x69 0x65 0x72 0x20 0x65 0x78 0x70 0x65  0x63 0x74 0x65 0x64 0x20 0x44 0x2C 0x20  ier expected D, 
0x04F6  0x66 0x75 0x6E 0x63 0x74 0x69 0x6F 0x6E  0x2C 0x20 0x6D 0x65 0x74 0x68 0x6F 0x64  function, method
0x0506  0x2C 0x20 0x70 0x72 0x6F 0x70 0x65 0x72  0x74 0x79 0x20 0x6F 0x72 0x20 0x67 0x6C  , property or gl
0x0516  0x6F 0x62 0x61 0x6C 0x20 0x64 0x65 0x63  0x6C 0x61 0x72 0x61 0x74 0x69 0x6F 0x6E  obal declaration
0x0526  0x20 0x65 0x78 0x70 0x65 0x63 0x74 0x65  0x64 0x69 0x6E 0x76 0x61 0x6C 0x69 0x64   expectedinvalid
0x0536  0x20 0x64 0x65 0x6C 0x65 0x67 0x61 0x74  0x65 0x20 0x64 0x65 0x63 0x6C 0x61 0x72   delegate declar
0x0546  0x61 0x74 0x69 0x6F 0x6E 0x2E 0x6D 0x61  0x69 0x6E 0x73 0x69 0x6D 0x70 0x6C 0x65  ation.mainsimple
0x0556  0x20 0x74 0x79 0x70 0x65 0x20 0x65 0x78  0x70 0x65 0x63 0x74 0x65 0x64 0x66 0x6C   type expectedfl
0x0566  0x6F 0x61 0x74 0x6C 0x6F 0x6E 0x67 0x73  0x74 0x72 0x69 0x6E 0x67 0x27 0x3D 0x27  oatlongstring'='
0x0576  0x20 0x65 0x78 0x70 0x65 0x63 0x74 0x65  0x64 0x70 0x61 0x74 0x68 0x20 0x6F 0x66   expectedpath of
0x0586  0x20 0x75 0x6E 0x69 0x74 0x20 0x73 0x6F  0x75 0x72 0x63 0x65 0x20 0x65 0x78 0x70   unit source exp
0x0596  0x65 0x63 0x74 0x65 0x64 0x27 0x20 0x6E  0x6F 0x74 0x20 0x66 0x6F 0x75 0x6E 0x64  ected' not found
0x05A6  0x44 0x69 0x63 0x74 0x69 0x6F 0x6E 0x61  0x72 0x79 0x50 0x61 0x69 0x72 0x41 0x72  DictionaryPairAr
0x05B6  0x72 0x61 0x79 0x4C 0x69 0x73 0x74 0x7C  0x62 0x6F 0x6F 0x6C 0x7C 0x62 0x79 0x74  rayList|bool|byt
0x05C6  0x65 0x7C 0x63 0x68 0x61 0x72 0x7C 0x75  0x69 0x6E 0x74 0x7C 0x69 0x6E 0x74 0x7C  e|char|uint|int|
0x05D6  0x6C 0x6F 0x6E 0x67 0x7C 0x66 0x6C 0x6F  0x61 0x74 0x7C 0x73 0x74 0x72 0x69 0x6E  long|float|strin
0x05E6  0x67 0x7C 0x74 0x79 0x70 0x65 0x7C 0x76  0x61 0x72 0x69 0x61 0x6E 0x74 0x7C 0x66  g|type|variant|f
0x05F6  0x69 0x6C 0x65 0x7C 0x64 0x69 0x72 0x65  0x63 0x74 0x6F 0x72 0x79 0x7C 0x61 0x72  ile|directory|ar
0x0606  0x72 0x61 0x79 0x73 0x20 0x63 0x61 0x6E  0x20 0x6F 0x6E 0x6C 0x79 0x20 0x63 0x6F  rays can only co
0x0616  0x6E 0x74 0x61 0x69 0x6E 0x20 0x76 0x61  0x6C 0x75 0x65 0x20 0x74 0x79 0x70 0x65  ntain value type
0x0626  0x73 0x27 0x7B 0x27 0x20 0x65 0x78 0x70  0x65 0x63 0x74 0x65 0x64 0x67 0x65 0x74  s'{' expectedget
0x0636  0x27 0x67 0x65 0x74 0x27 0x20 0x61 0x6C  0x72 0x65 0x61 0x64 0x79 0x20 0x64 0x65  'get' already de
0x0646  0x66 0x69 0x6E 0x65 0x64 0x20 0x66 0x6F  0x72 0x20 0x5F 0x47 0x65 0x74 0x56 0x5B  fined for _GetV[
0x0656  0x5D 0x6C 0x69 0x73 0x74 0x3C 0x56 0x3E  0x64 0x69 0x63 0x74 0x69 0x6F 0x6E 0x61  ]list<V>dictiona
0x0666  0x72 0x79 0x3C 0x4B 0x2C 0x56 0x3E 0x74  0x68 0x69 0x73 0x73 0x65 0x74 0x27 0x73  ry<K,V>thisset's
0x0676  0x65 0x74 0x27 0x20 0x61 0x6C 0x72 0x65  0x61 0x64 0x79 0x20 0x64 0x65 0x66 0x69  et' already defi
0x0686  0x6E 0x65 0x64 0x20 0x66 0x6F 0x72 0x20  0x5F 0x53 0x65 0x74 0x27 0x67 0x65 0x74  ned for _Set'get
0x0696  0x27 0x20 0x6F 0x72 0x20 0x27 0x73 0x65  0x74 0x27 0x20 0x65 0x78 0x70 0x65 0x63  ' or 'set' expec
0x06A6  0x74 0x65 0x64 0x27 0x7D 0x27 0x20 0x65  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x6D  ted'}' expectedm
0x06B6  0x65 0x6D 0x62 0x65 0x72 0x20 0x76 0x61  0x72 0x69 0x61 0x62 0x6C 0x65 0x73 0x20  ember variables 
0x06C6  0x6D 0x75 0x73 0x74 0x20 0x62 0x65 0x20  0x70 0x72 0x69 0x76 0x61 0x74 0x65 0x70  must be privatep
0x06D6  0x6F 0x73 0x6C 0x69 0x6E 0x65 0x73 0x79  0x73 0x74 0x65 0x6D 0x7C 0x62 0x6F 0x6F  oslinesystem|boo
0x06E6  0x6C 0x7C 0x62 0x79 0x74 0x65 0x7C 0x63  0x68 0x61 0x72 0x7C 0x75 0x69 0x6E 0x74  l|byte|char|uint
0x06F6  0x7C 0x69 0x6E 0x74 0x7C 0x74 0x79 0x70  0x65 0x7C 0x73 0x69 0x6D 0x70 0x6C 0x65  |int|type|simple
0x0706  0x20 0x69 0x64 0x65 0x6E 0x74 0x69 0x66  0x69 0x65 0x72 0x20 0x65 0x78 0x70 0x65   identifier expe
0x0716  0x63 0x74 0x65 0x64 0x69 0x64 0x65 0x6E  0x74 0x69 0x66 0x69 0x65 0x72 0x20 0x27  ctedidentifier '
0x0726  0x27 0x20 0x69 0x73 0x20 0x61 0x20 0x72  0x65 0x73 0x65 0x72 0x76 0x65 0x64 0x20  ' is a reserved 
0x0736  0x77 0x6F 0x72 0x64 0x69 0x64 0x65 0x6E  0x74 0x69 0x66 0x69 0x65 0x72 0x20 0x61  wordidentifier a
0x0746  0x6C 0x72 0x65 0x61 0x64 0x79 0x20 0x69  0x6E 0x20 0x75 0x73 0x65 0x75 0x6E 0x65  lready in useune
0x0756  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x20  0x65 0x6E 0x64 0x20 0x6F 0x66 0x20 0x66  xpected end of f
0x0766  0x69 0x6C 0x65 0x20 0x69 0x6E 0x20 0x65  0x6E 0x75 0x6D 0x2F 0x66 0x6C 0x61 0x67  ile in enum/flag
0x0776  0x73 0x20 0x64 0x65 0x63 0x6C 0x61 0x72  0x61 0x74 0x69 0x6F 0x6E 0x69 0x6E 0x74  s declarationint
0x0786  0x65 0x67 0x65 0x72 0x20 0x65 0x78 0x70  0x65 0x63 0x74 0x65 0x64 0x27 0x75 0x69  eger expected'ui
0x0796  0x6E 0x74 0x27 0x20 0x63 0x6F 0x6E 0x73  0x74 0x61 0x6E 0x74 0x20 0x65 0x78 0x70  nt' constant exp
0x07A6  0x65 0x63 0x74 0x65 0x64 0x72 0x65 0x66  0x61 0x72 0x67 0x75 0x6D 0x65 0x6E 0x74  ectedrefargument
0x07B6  0x20 0x27 0x27 0x20 0x61 0x6C 0x72 0x65  0x61 0x64 0x79 0x20 0x65 0x78 0x69 0x73   '' already exis
0x07C6  0x74 0x73 0x7C 0x61 0x72 0x72 0x61 0x79  0x7C 0x64 0x69 0x63 0x74 0x69 0x6F 0x6E  ts|array|diction
0x07D6  0x61 0x72 0x79 0x7C 0x6C 0x69 0x73 0x74  0x7C 0x73 0x74 0x72 0x69 0x6E 0x67 0x7C  ary|list|string|
0x07E6  0x62 0x6F 0x6F 0x6C 0x7C 0x62 0x79 0x74  0x65 0x7C 0x63 0x68 0x61 0x72 0x7C 0x75  bool|byte|char|u
0x07F6  0x69 0x6E 0x74 0x7C 0x69 0x6E 0x74 0x7C  0x6C 0x6F 0x6E 0x67 0x7C 0x66 0x6C 0x6F  int|int|long|flo
0x0806  0x61 0x74 0x7C 0x74 0x79 0x70 0x65 0x7C  0x66 0x69 0x6C 0x65 0x7C 0x64 0x69 0x72  at|type|file|dir
0x0816  0x65 0x63 0x74 0x6F 0x72 0x79 0x7C 0x54  0x4F 0x44 0x4F 0x20 0x3A 0x20 0x74 0x6F  ectory|TODO : to
0x0826  0x6B 0x65 0x6E 0x20 0x6E 0x6F 0x74 0x20  0x69 0x6D 0x70 0x6C 0x65 0x6D 0x65 0x6E  ken not implemen
0x0836  0x74 0x65 0x64 0x20 0x69 0x6E 0x20 0x54  0x6F 0x6B 0x65 0x6E 0x2E 0x47 0x65 0x74  ted in Token.Get
0x0846  0x54 0x79 0x70 0x65 0x2F 0x54 0x65 0x6D  0x70 0x2F 0x45 0x72 0x72 0x6F 0x72 0x73  Type/Temp/Errors
0x0856  0x2E 0x74 0x78 0x74 0x20 0x45 0x72 0x72  0x6F 0x72 0x20 0x61 0x74 0x20 0x65 0x6E  .txt Error at en
0x0866  0x64 0x20 0x45 0x72 0x72 0x6F 0x72 0x20  0x61 0x74 0x20 0x27 0x75 0x6E 0x69 0x74  d Error at 'unit
0x0876  0x73 0x73 0x79 0x6D 0x62 0x6F 0x6C 0x73  0x63 0x6F 0x6E 0x73 0x74 0x61 0x6E 0x74  ssymbolsconstant
0x0886  0x73 0x6D 0x65 0x6D 0x62 0x65 0x72 0x73  0x65 0x6E 0x75 0x6D 0x73 0x67 0x6C 0x6F  smembersenumsglo
0x0896  0x62 0x61 0x6C 0x73 0x76 0x6F 0x69 0x64  0x72 0x65 0x74 0x75 0x72 0x6E 0x74 0x79  balsvoidreturnty
0x08A6  0x70 0x65 0x64 0x65 0x6C 0x65 0x67 0x61  0x74 0x65 0x73 0x73 0x79 0x73 0x63 0x61  pedelegatessysca
0x08B6  0x6C 0x6C 0x6F 0x76 0x65 0x72 0x6C 0x6F  0x61 0x64 0x66 0x75 0x6E 0x63 0x74 0x69  lloverloadfuncti
0x08C6  0x6F 0x6E 0x73 0x64 0x75 0x70 0x6C 0x69  0x63 0x61 0x74 0x65 0x20 0x64 0x65 0x6C  onsduplicate del
0x08D6  0x65 0x67 0x61 0x74 0x65 0x20 0x64 0x65  0x66 0x69 0x6E 0x69 0x74 0x69 0x6F 0x6E  egate definition
0x08E6  0x64 0x65 0x6C 0x65 0x67 0x61 0x74 0x65  0x20 0x64 0x65 0x66 0x69 0x6E 0x69 0x74  delegate definit
0x08F6  0x69 0x6F 0x6E 0x73 0x20 0x64 0x69 0x66  0x66 0x65 0x72 0x20 0x6F 0x6E 0x6C 0x79  ions differ only
0x0906  0x20 0x62 0x79 0x20 0x72 0x65 0x74 0x75  0x72 0x6E 0x20 0x74 0x79 0x70 0x65 0x64   by return typed
0x0916  0x75 0x70 0x6C 0x69 0x63 0x61 0x74 0x65  0x20 0x66 0x75 0x6E 0x63 0x74 0x69 0x6F  uplicate functio
0x0926  0x6E 0x20 0x64 0x65 0x66 0x69 0x6E 0x69  0x74 0x69 0x6F 0x6E 0x66 0x75 0x6E 0x63  n definitionfunc
0x0936  0x74 0x69 0x6F 0x6E 0x20 0x64 0x65 0x66  0x69 0x6E 0x69 0x74 0x69 0x6F 0x6E 0x73  tion definitions
0x0946  0x20 0x64 0x69 0x66 0x66 0x65 0x72 0x20  0x6F 0x6E 0x6C 0x79 0x20 0x62 0x79 0x20   differ only by 
0x0956  0x72 0x65 0x74 0x75 0x72 0x6E 0x20 0x74  0x79 0x70 0x65 0x75 0x6E 0x64 0x65 0x66  return typeundef
0x0966  0x69 0x6E 0x65 0x64 0x20 0x27 0x73 0x79  0x73 0x74 0x65 0x6D 0x27 0x20 0x6D 0x65  ined 'system' me
0x0976  0x74 0x68 0x6F 0x64 0x20 0x27 0x64 0x75  0x70 0x6C 0x69 0x63 0x61 0x74 0x65 0x20  thod 'duplicate 
0x0986  0x67 0x6C 0x6F 0x62 0x61 0x6C 0x20 0x6D  0x65 0x6D 0x62 0x65 0x72 0x20 0x64 0x65  global member de
0x0996  0x66 0x69 0x6E 0x69 0x74 0x69 0x6F 0x6E  0x61 0x6D 0x62 0x69 0x67 0x75 0x6F 0x75  finitionambiguou
0x09A6  0x73 0x20 0x6E 0x61 0x6D 0x65 0x64 0x20  0x74 0x79 0x70 0x65 0x20 0x27 0x75 0x6E  s named type 'un
0x09B6  0x72 0x65 0x63 0x6F 0x67 0x6E 0x69 0x7A  0x65 0x64 0x20 0x74 0x79 0x70 0x65 0x20  recognized type 
0x09C6  0x6E 0x61 0x6D 0x65 0x75 0x6E 0x65 0x78  0x70 0x65 0x63 0x74 0x65 0x64 0x20 0x63  nameunexpected c
0x09D6  0x68 0x61 0x72 0x61 0x63 0x74 0x65 0x72  0x3A 0x20 0x27 0x27 0x20 0x28 0x30 0x78  haracter: '' (0x
0x09E6  0x69 0x6E 0x76 0x61 0x6C 0x69 0x64 0x20  0x68 0x65 0x78 0x20 0x69 0x6E 0x74 0x65  invalid hex inte
0x09F6  0x67 0x65 0x72 0x20 0x6C 0x69 0x74 0x65  0x72 0x61 0x6C 0x69 0x6E 0x76 0x61 0x6C  ger literalinval
0x0A06  0x69 0x64 0x20 0x62 0x69 0x6E 0x61 0x72  0x79 0x20 0x69 0x6E 0x74 0x65 0x67 0x65  id binary intege
0x0A16  0x72 0x20 0x6C 0x69 0x74 0x65 0x72 0x61  0x6C 0x69 0x6E 0x76 0x61 0x6C 0x69 0x64  r literalinvalid
0x0A26  0x20 0x66 0x6C 0x6F 0x61 0x74 0x20 0x6C  0x69 0x74 0x65 0x72 0x61 0x6C 0x69 0x6E   float literalin
0x0A36  0x76 0x61 0x6C 0x69 0x64 0x20 0x69 0x6E  0x74 0x65 0x67 0x65 0x72 0x20 0x6C 0x69  valid integer li
0x0A46  0x74 0x65 0x72 0x61 0x6C 0x74 0x72 0x75  0x65 0x66 0x61 0x6C 0x73 0x65 0x75 0x6E  teraltruefalseun
0x0A56  0x65 0x78 0x70 0x65 0x63 0x74 0x65 0x64  0x20 0x45 0x4F 0x4C 0x20 0x69 0x6E 0x20  expected EOL in 
0x0A66  0x73 0x74 0x72 0x69 0x6E 0x67 0x75 0x6E  0x74 0x65 0x72 0x6D 0x69 0x6E 0x61 0x74  stringunterminat
0x0A76  0x65 0x64 0x20 0x73 0x74 0x72 0x69 0x6E  0x67 0x3A 0x20 0x27 0x53 0x74 0x72 0x69  ed string: 'Stri
0x0A86  0x6E 0x67 0x4E 0x65 0x77 0x46 0x72 0x6F  0x6D 0x43 0x6F 0x6E 0x73 0x74 0x61 0x6E  ngNewFromConstan
0x0A96  0x74 0x4E 0x65 0x77 0x46 0x72 0x6F 0x6D  0x43 0x68 0x61 0x72 0x41 0x70 0x70 0x65  tNewFromCharAppe
0x0AA6  0x6E 0x64 0x49 0x6E 0x73 0x65 0x72 0x74  0x43 0x68 0x61 0x72 0x43 0x6F 0x6D 0x70  ndInsertCharComp
0x0AB6  0x61 0x72 0x65 0x4C 0x65 0x6E 0x67 0x74  0x68 0x5F 0x47 0x65 0x74 0x45 0x6E 0x64  areLength_GetEnd
0x0AC6  0x73 0x57 0x69 0x74 0x68 0x53 0x75 0x62  0x73 0x74 0x72 0x69 0x6E 0x67 0x52 0x65  sWithSubstringRe
0x0AD6  0x70 0x6C 0x61 0x63 0x65 0x47 0x65 0x74  0x43 0x68 0x61 0x72 0x43 0x6F 0x75 0x6E  placeGetCharCoun
0x0AE6  0x74 0x5F 0x47 0x65 0x74 0x47 0x65 0x74  0x49 0x74 0x65 0x6D 0x53 0x65 0x74 0x49  t_GetGetItemSetI
0x0AF6  0x74 0x65 0x6D 0x47 0x65 0x74 0x49 0x74  0x65 0x6D 0x41 0x73 0x56 0x61 0x72 0x69  temGetItemAsVari
0x0B06  0x61 0x6E 0x74 0x43 0x6C 0x65 0x61 0x72  0x52 0x65 0x6D 0x6F 0x76 0x65 0x43 0x6F  antClearRemoveCo
0x0B16  0x6E 0x74 0x61 0x69 0x6E 0x73 0x4E 0x65  0x78 0x74 0x4B 0x65 0x79 0x4B 0x65 0x79  ntainsNextKeyKey
0x0B26  0x54 0x79 0x70 0x65 0x56 0x61 0x6C 0x75  0x65 0x56 0x61 0x6C 0x75 0x65 0x54 0x79  TypeValueValueTy
0x0B36  0x70 0x65 0x42 0x6F 0x78 0x55 0x6E 0x42  0x6F 0x78 0x53 0x63 0x72 0x65 0x65 0x6E  peBoxUnBoxScreen
0x0B46  0x50 0x72 0x69 0x6E 0x74 0x50 0x72 0x69  0x6E 0x74 0x4C 0x6E 0x53 0x65 0x74 0x43  PrintPrintLnSetC
0x0B56  0x75 0x72 0x73 0x6F 0x72 0x43 0x6F 0x6C  0x75 0x6D 0x6E 0x73 0x5F 0x47 0x65 0x74  ursorColumns_Get
0x0B66  0x52 0x6F 0x77 0x73 0x5F 0x47 0x65 0x74  0x43 0x75 0x72 0x73 0x6F 0x72 0x58 0x5F  Rows_GetCursorX_
0x0B76  0x47 0x65 0x74 0x43 0x75 0x72 0x73 0x6F  0x72 0x59 0x5F 0x47 0x65 0x74 0x53 0x75  GetCursorY_GetSu
0x0B86  0x73 0x70 0x65 0x6E 0x64 0x52 0x65 0x73  0x75 0x6D 0x65 0x44 0x72 0x61 0x77 0x43  spendResumeDrawC
0x0B96  0x68 0x61 0x72 0x49 0x6E 0x74 0x54 0x6F  0x46 0x6C 0x6F 0x61 0x74 0x54 0x6F 0x4C  harIntToFloatToL
0x0BA6  0x6F 0x6E 0x67 0x55 0x49 0x6E 0x74 0x54  0x6F 0x49 0x6E 0x74 0x54 0x6F 0x53 0x74  ongUIntToIntToSt
0x0BB6  0x72 0x69 0x6E 0x67 0x54 0x6F 0x42 0x79  0x74 0x65 0x73 0x54 0x6F 0x55 0x49 0x6E  ringToBytesToUIn
0x0BC6  0x74 0x41 0x64 0x64 0x44 0x69 0x76 0x4D  0x75 0x6C 0x4D 0x6F 0x64 0x4E 0x65 0x67  tAddDivMulModNeg
0x0BD6  0x61 0x74 0x65 0x54 0x69 0x6D 0x65 0x4D  0x69 0x6C 0x6C 0x69 0x73 0x5F 0x47 0x65  ateTimeMillis_Ge
0x0BE6  0x74 0x4D 0x69 0x63 0x72 0x6F 0x73 0x5F  0x47 0x65 0x74 0x53 0x79 0x73 0x74 0x65  tMicros_GetSyste
0x0BF6  0x6D 0x41 0x72 0x67 0x75 0x6D 0x65 0x6E  0x74 0x73 0x5F 0x47 0x65 0x74 0x43 0x75  mArguments_GetCu
0x0C06  0x72 0x72 0x65 0x6E 0x74 0x44 0x69 0x72  0x65 0x63 0x74 0x6F 0x72 0x79 0x5F 0x47  rrentDirectory_G
0x0C16  0x65 0x74 0x43 0x75 0x72 0x72 0x65 0x6E  0x74 0x44 0x69 0x72 0x65 0x63 0x74 0x6F  etCurrentDirecto
0x0C26  0x72 0x79 0x5F 0x53 0x65 0x74 0x42 0x65  0x65 0x70 0x45 0x78 0x65 0x63 0x75 0x74  ry_SetBeepExecut
0x0C36  0x65 0x52 0x65 0x67 0x69 0x73 0x74 0x65  0x72 0x4F 0x62 0x6A 0x65 0x63 0x74 0x46  eRegisterObjectF
0x0C46  0x69 0x6C 0x65 0x45 0x78 0x69 0x73 0x74  0x73 0x4F 0x70 0x65 0x6E 0x43 0x72 0x65  ileExistsOpenCre
0x0C56  0x61 0x74 0x65 0x52 0x65 0x61 0x64 0x4C  0x69 0x6E 0x65 0x49 0x73 0x56 0x61 0x6C  ateReadLineIsVal
0x0C66  0x69 0x64 0x46 0x6C 0x75 0x73 0x68 0x44  0x65 0x6C 0x65 0x74 0x65 0x47 0x65 0x74  idFlushDeleteGet
0x0C76  0x53 0x69 0x7A 0x65 0x47 0x65 0x74 0x44  0x69 0x72 0x65 0x63 0x74 0x6F 0x72 0x79  SizeGetDirectory
0x0C86  0x43 0x6F 0x75 0x6E 0x74 0x47 0x65 0x74  0x46 0x69 0x6C 0x65 0x43 0x6F 0x75 0x6E  CountGetFileCoun
0x0C96  0x74 0x4B 0x65 0x79 0x62 0x6F 0x61 0x72  0x64 0x52 0x65 0x61 0x64 0x4B 0x65 0x79  tKeyboardReadKey
0x0CA6  0x49 0x73 0x41 0x76 0x61 0x69 0x6C 0x61  0x62 0x6C 0x65 0x5F 0x47 0x65 0x74 0x54  IsAvailable_GetT
0x0CB6  0x6F 0x4B 0x65 0x79 0x43 0x6C 0x69 0x63  0x6B 0x58 0x5F 0x47 0x65 0x74 0x43 0x6C  oKeyClickX_GetCl
0x0CC6  0x69 0x63 0x6B 0x59 0x5F 0x47 0x65 0x74  0x43 0x6C 0x69 0x63 0x6B 0x55 0x70 0x5F  ickY_GetClickUp_
0x0CD6  0x47 0x65 0x74 0x43 0x6C 0x69 0x63 0x6B  0x44 0x6F 0x75 0x62 0x6C 0x65 0x5F 0x47  GetClickDouble_G
0x0CE6  0x65 0x74 0x53 0x63 0x72 0x6F 0x6C 0x6C  0x44 0x65 0x6C 0x74 0x61 0x5F 0x47 0x65  etScrollDelta_Ge
0x0CF6  0x74 0x44 0x69 0x61 0x67 0x6E 0x6F 0x73  0x74 0x69 0x63 0x73 0x4F 0x75 0x74 0x70  tDiagnosticsOutp
0x0D06  0x75 0x74 0x44 0x65 0x62 0x75 0x67 0x41  0x73 0x73 0x65 0x72 0x74 0x44 0x69 0x65  utDebugAssertDie
0x0D16  0x53 0x65 0x74 0x45 0x72 0x72 0x6F 0x72  0x54 0x79 0x70 0x65 0x73 0x54 0x79 0x70  SetErrorTypesTyp
0x0D26  0x65 0x4F 0x66 0x56 0x61 0x6C 0x75 0x65  0x54 0x79 0x70 0x65 0x4F 0x66 0x4B 0x65  eOfValueTypeOfKe
0x0D36  0x79 0x54 0x79 0x70 0x65 0x4F 0x66 0x42  0x6F 0x78 0x54 0x79 0x70 0x65 0x4F 0x66  yTypeOfBoxTypeOf
0x0D46  0x56 0x65 0x72 0x69 0x66 0x79 0x56 0x61  0x6C 0x75 0x65 0x54 0x79 0x70 0x65 0x73  VerifyValueTypes
0x0D56  0x42 0x75 0x69 0x6C 0x64 0x57 0x65 0x62  0x53 0x65 0x72 0x76 0x65 0x72 0x4D 0x65  BuildWebServerMe
0x0D66  0x74 0x68 0x6F 0x64 0x5F 0x47 0x65 0x74  0x55 0x52 0x4C 0x5F 0x47 0x65 0x74 0x53  thod_GetURL_GetS
0x0D76  0x65 0x6E 0x64 0x43 0x6C 0x65 0x61 0x72  0x48 0x61 0x6E 0x64 0x6C 0x65 0x72 0x73  endClearHandlers
0x0D86  0x48 0x74 0x74 0x70 0x43 0x6C 0x69 0x65  0x6E 0x74 0x47 0x65 0x74 0x52 0x65 0x71  HttpClientGetReq
0x0D96  0x75 0x65 0x73 0x74 0x52 0x75 0x6E 0x74  0x69 0x6D 0x65 0x48 0x61 0x6C 0x74 0x65  uestRuntimeHalte
0x0DA6  0x64 0x5F 0x47 0x65 0x74 0x48 0x61 0x6C  0x74 0x65 0x64 0x5F 0x53 0x65 0x74 0x4C  d_GetHalted_SetL
0x0DB6  0x6F 0x61 0x64 0x42 0x79 0x74 0x65 0x73  0x4C 0x6F 0x61 0x64 0x65 0x64 0x5F 0x47  oadBytesLoaded_G
0x0DC6  0x65 0x74 0x53 0x65 0x74 0x56 0x69 0x73  0x69 0x62 0x69 0x6C 0x69 0x74 0x79 0x53  etSetVisibilityS
0x0DD6  0x65 0x74 0x53 0x74 0x65 0x70 0x70 0x69  0x6E 0x67 0x53 0x74 0x65 0x70 0x49 0x6E  etSteppingStepIn
0x0DE6  0x74 0x6F 0x53 0x74 0x65 0x70 0x4F 0x76  0x65 0x72 0x53 0x74 0x65 0x70 0x52 0x75  toStepOverStepRu
0x0DF6  0x6E 0x50 0x43 0x5F 0x47 0x65 0x74 0x57  0x61 0x69 0x74 0x69 0x6E 0x67 0x5F 0x47  nPC_GetWaiting_G
0x0E06  0x65 0x74 0x43 0x6C 0x65 0x61 0x72 0x42  0x72 0x65 0x61 0x6B 0x70 0x6F 0x69 0x6E  etClearBreakpoin
0x0E16  0x74 0x73 0x43 0x6C 0x65 0x61 0x72 0x53  0x74 0x61 0x74 0x65 0x6D 0x65 0x6E 0x74  tsClearStatement
0x0E26  0x73 0x53 0x65 0x74 0x42 0x72 0x65 0x61  0x6B 0x70 0x6F 0x69 0x6E 0x74 0x53 0x65  sSetBreakpointSe
0x0E36  0x74 0x53 0x74 0x61 0x74 0x65 0x6D 0x65  0x6E 0x74 0x53 0x50 0x5F 0x47 0x65 0x74  tStatementSP_Get
0x0E46  0x42 0x50 0x5F 0x47 0x65 0x74 0x43 0x53  0x50 0x5F 0x47 0x65 0x74 0x47 0x65 0x74  BP_GetCSP_GetGet
0x0E56  0x53 0x74 0x61 0x63 0x6B 0x57 0x6F 0x72  0x64 0x47 0x65 0x74 0x53 0x74 0x61 0x63  StackWordGetStac
0x0E66  0x6B 0x56 0x61 0x72 0x69 0x61 0x6E 0x74  0x47 0x65 0x74 0x53 0x74 0x61 0x63 0x6B  kVariantGetStack
0x0E76  0x54 0x79 0x70 0x65 0x47 0x65 0x74 0x43  0x61 0x6C 0x6C 0x53 0x74 0x61 0x63 0x6B  TypeGetCallStack
0x0E86  0x57 0x6F 0x72 0x64 0x53 0x65 0x72 0x69  0x61 0x6C 0x43 0x6F 0x6E 0x6E 0x65 0x63  WordSerialConnec
0x0E96  0x74 0x43 0x6C 0x6F 0x73 0x65 0x52 0x65  0x61 0x64 0x43 0x68 0x61 0x72 0x57 0x72  tCloseReadCharWr
0x0EA6  0x69 0x74 0x65 0x43 0x68 0x61 0x72 0x48  0x61 0x72 0x64 0x77 0x61 0x72 0x65 0x4C  iteCharHardwareL
0x0EB6  0x45 0x44 0x5F 0x53 0x65 0x74 0x4D 0x65  0x6D 0x6F 0x72 0x79 0x52 0x65 0x61 0x64  ED_SetMemoryRead
0x0EC6  0x42 0x79 0x74 0x65 0x57 0x72 0x69 0x74  0x65 0x42 0x79 0x74 0x65 0x4D 0x61 0x78  ByteWriteByteMax
0x0ED6  0x69 0x6D 0x75 0x6D 0x41 0x6C 0x6C 0x6F  0x63 0x61 0x74 0x65 0x46 0x72 0x65 0x65  imumAllocateFree
0x0EE6  0x54 0x72 0x61 0x63 0x65 0x5F 0x53 0x65  0x74 0x54 0x72 0x61 0x63 0x65 0x5F 0x47  Trace_SetTrace_G
0x0EF6  0x65 0x74 0x48 0x61 0x73 0x68 0x4B 0x65  0x79 0x43 0x6C 0x69 0x70 0x62 0x6F 0x61  etHashKeyClipboa
0x0F06  0x72 0x64 0x48 0x61 0x73 0x54 0x65 0x78  0x74 0x5F 0x47 0x65 0x74 0x47 0x65 0x74  rdHasText_GetGet
0x0F16  0x54 0x65 0x78 0x74 0x53 0x65 0x74 0x54  0x65 0x78 0x74 0x42 0x75 0x69 0x6C 0x64  TextSetTextBuild
0x0F26  0x46 0x72 0x6F 0x6E 0x74 0x52 0x65 0x61  0x64 0x42 0x69 0x74 0x57 0x72 0x69 0x74  FrontReadBitWrit
0x0F36  0x65 0x42 0x69 0x74 0x54 0x6F 0x55 0x70  0x70 0x65 0x72 0x49 0x73 0x55 0x70 0x70  eBitToUpperIsUpp
0x0F46  0x65 0x72 0x49 0x73 0x44 0x69 0x67 0x69  0x74 0x49 0x73 0x4C 0x65 0x74 0x74 0x65  erIsDigitIsLette
0x0F56  0x72 0x4F 0x72 0x44 0x69 0x67 0x69 0x74  0x49 0x73 0x4C 0x6F 0x77 0x65 0x72 0x54  rOrDigitIsLowerT
0x0F66  0x6F 0x44 0x69 0x67 0x69 0x74 0x54 0x6F  0x48 0x65 0x78 0x49 0x73 0x48 0x65 0x78  oDigitToHexIsHex
0x0F76  0x44 0x69 0x67 0x69 0x74 0x54 0x6F 0x4C  0x6F 0x77 0x65 0x72 0x53 0x74 0x61 0x72  DigitToLowerStar
0x0F86  0x74 0x73 0x57 0x69 0x74 0x68 0x49 0x6E  0x64 0x65 0x78 0x4F 0x66 0x57 0x61 0x72  tsWithIndexOfWar
0x0F96  0x70 0x5F 0x53 0x65 0x74 0x57 0x61 0x72  0x70 0x5F 0x47 0x65 0x74 0x44 0x65 0x6C  p_SetWarp_GetDel
0x0FA6  0x61 0x79 0x70 0x72 0x65 0x70 0x72 0x6F  0x63 0x65 0x73 0x73 0x6F 0x72 0x20 0x64  aypreprocessor d
0x0FB6  0x69 0x72 0x65 0x63 0x74 0x69 0x76 0x65  0x20 0x6D 0x75 0x73 0x74 0x20 0x62 0x65  irective must be
0x0FC6  0x20 0x6F 0x6E 0x20 0x6F 0x6E 0x65 0x20  0x6C 0x69 0x6E 0x65 0x70 0x72 0x65 0x70   on one lineprep
0x0FD6  0x72 0x6F 0x63 0x65 0x73 0x73 0x6F 0x72  0x20 0x73 0x79 0x6D 0x62 0x6F 0x6C 0x20  rocessor symbol 
0x0FE6  0x63 0x61 0x6E 0x20 0x6F 0x6E 0x6C 0x79  0x20 0x62 0x65 0x20 0x64 0x65 0x66 0x69  can only be defi
0x0FF6  0x6E 0x65 0x64 0x20 0x6F 0x6E 0x63 0x65  0x23 0x69 0x66 0x64 0x65 0x66 0x23 0x69  ned once#ifdef#i
0x1006  0x66 0x6E 0x64 0x65 0x66 0x70 0x72 0x65  0x70 0x72 0x6F 0x63 0x65 0x73 0x73 0x6F  fndefpreprocesso
0x1016  0x72 0x44 0x69 0x72 0x65 0x63 0x74 0x69  0x76 0x65 0x20 0x27 0x27 0x20 0x6E 0x6F  rDirective '' no
0x1026  0x74 0x20 0x79 0x65 0x74 0x20 0x69 0x6D  0x70 0x6C 0x65 0x6D 0x65 0x6E 0x74 0x65  t yet implemente
0x1036  0x64 0x23 0x65 0x6C 0x73 0x65 0x75 0x6E  0x65 0x78 0x70 0x65 0x63 0x74 0x65 0x64  d#elseunexpected
0x1046  0x20 0x27 0x23 0x65 0x6C 0x73 0x65 0x27  0x75 0x6E 0x65 0x78 0x70 0x65 0x63 0x74   '#else'unexpect
0x1056  0x65 0x64 0x20 0x27 0x23 0x65 0x6E 0x64  0x69 0x66 0x27 0x70 0x72 0x65 0x70 0x72  ed '#endif'prepr
0x1066  0x6F 0x63 0x65 0x73 0x73 0x6F 0x72 0x45  0x78 0x70 0x72 0x65 0x73 0x73 0x69 0x6F  ocessorExpressio
0x1076  0x6E 0x20 0x6E 0x6F 0x74 0x20 0x79 0x65  0x74 0x20 0x69 0x6D 0x70 0x6C 0x65 0x6D  n not yet implem
0x1086  0x65 0x6E 0x74 0x65 0x64 0x75 0x6E 0x65  0x78 0x70 0x65 0x63 0x74 0x65 0x64 0x20  entedunexpected 
0x1096  0x62 0x6F 0x6F 0x6C 0x65 0x61 0x6E 0x20  0x6C 0x69 0x74 0x65 0x72 0x61 0x6C 0x27  boolean literal'
0x10A6  0x62 0x79 0x74 0x65 0x27 0x20 0x63 0x6F  0x6E 0x73 0x74 0x61 0x6E 0x74 0x20 0x6F  byte' constant o
0x10B6  0x75 0x74 0x20 0x6F 0x66 0x20 0x72 0x61  0x6E 0x67 0x65 0x27 0x69 0x6E 0x74 0x27  ut of range'int'
0x10C6  0x20 0x63 0x6F 0x6E 0x73 0x74 0x61 0x6E  0x74 0x20 0x6F 0x75 0x74 0x20 0x6F 0x66   constant out of
0x10D6  0x20 0x72 0x61 0x6E 0x67 0x65 0x27 0x75  0x69 0x6E 0x74 0x27 0x20 0x63 0x6F 0x6E   range'uint' con
0x10E6  0x73 0x74 0x61 0x6E 0x74 0x20 0x6F 0x75  0x74 0x20 0x6F 0x66 0x20 0x72 0x61 0x6E  stant out of ran
0x10F6  0x67 0x65 0x75 0x6E 0x64 0x65 0x66 0x69  0x6E 0x65 0x64 0x20 0x69 0x64 0x65 0x6E  geundefined iden
0x1106  0x74 0x69 0x66 0x69 0x65 0x72 0x69 0x6E  0x76 0x61 0x6C 0x69 0x64 0x20 0x69 0x64  tifierinvalid id
0x1116  0x65 0x6E 0x74 0x69 0x66 0x69 0x65 0x72  0x63 0x6F 0x6E 0x73 0x74 0x61 0x6E 0x74  entifierconstant
0x1126  0x20 0x69 0x64 0x65 0x6E 0x74 0x69 0x66  0x69 0x65 0x72 0x20 0x63 0x61 0x73 0x65   identifier case
0x1136  0x20 0x6E 0x6F 0x74 0x20 0x69 0x6D 0x70  0x6C 0x65 0x6D 0x65 0x6E 0x74 0x65 0x64   not implemented
0x1146  0x27 0x20 0x66 0x6C 0x61 0x67 0x73 0x20  0x63 0x6F 0x6E 0x73 0x74 0x61 0x6E 0x74  ' flags constant
0x1156  0x2C 0x20 0x28 0x77 0x61 0x73 0x20 0x27  0x27 0x20 0x65 0x6E 0x75 0x6D 0x20 0x63  , (was '' enum c
0x1166  0x6F 0x6E 0x73 0x74 0x61 0x6E 0x74 0x2C  0x20 0x28 0x77 0x61 0x73 0x20 0x27 0x27  onstant, (was ''
0x1176  0x20 0x63 0x6F 0x6E 0x73 0x74 0x61 0x6E  0x74 0x20 0x65 0x78 0x70 0x72 0x65 0x73   constant expres
0x1186  0x73 0x69 0x6F 0x6E 0x2C 0x20 0x28 0x77  0x61 0x73 0x20 0x27 0x22 0x3A 0x20 0x75  sion, (was '": u
0x1196  0x6E 0x73 0x75 0x70 0x70 0x6F 0x72 0x74  0x65 0x64 0x20 0x27 0x29 0x20 0x69 0x6E  nsupported ') in
0x11A6  0x20 0x3C 0x73 0x74 0x72 0x69 0x6E 0x67  0x2C 0x20 0x76 0x61 0x72 0x69 0x61 0x6E   <string, varian
0x11B6  0x74 0x3E 0x2C 0x20 0x28 0x6B 0x65 0x79  0x3D 0x27 0x20 0x69 0x6E 0x20 0x3C 0x76  t>, (key=' in <v
0x11C6  0x61 0x72 0x69 0x61 0x6E 0x74 0x3E 0x70  0x61 0x69 0x72 0x2B 0x69 0x6E 0x74 0x2D  ariant>pair+int-
0x11D6  0x69 0x6E 0x74 0x20 0x2D 0x3E 0x20 0x45  0x4F 0x46 0x55 0x6E 0x64 0x65 0x66 0x69  int -> EOFUndefi
0x11E6  0x6E 0x65 0x64 0x42 0x6F 0x6F 0x6C 0x4B  0x65 0x79 0x77 0x6F 0x72 0x64 0x49 0x64  nedBoolKeywordId
0x11F6  0x65 0x6E 0x74 0x69 0x66 0x69 0x65 0x72  0x44 0x6F 0x74 0x74 0x65 0x64 0x49 0x64  entifierDottedId
0x1206  0x65 0x6E 0x74 0x69 0x66 0x69 0x65 0x72  0x49 0x6E 0x74 0x65 0x67 0x65 0x72 0x53  entifierIntegerS
0x1216  0x74 0x72 0x69 0x6E 0x67 0x43 0x6F 0x6E  0x73 0x74 0x61 0x6E 0x74 0x41 0x73 0x73  tringConstantAss
0x1226  0x69 0x67 0x6E 0x42 0x69 0x74 0x41 0x6E  0x64 0x42 0x69 0x74 0x4F 0x72 0x4C 0x50  ignBitAndBitOrLP
0x1236  0x61 0x72 0x65 0x6E 0x52 0x50 0x61 0x72  0x65 0x6E 0x4C 0x42 0x72 0x61 0x63 0x65  arenRParenLBrace
0x1246  0x52 0x42 0x72 0x61 0x63 0x65 0x4C 0x42  0x72 0x61 0x63 0x6B 0x65 0x74 0x52 0x42  RBraceLBracketRB
0x1256  0x72 0x61 0x63 0x6B 0x65 0x74 0x53 0x65  0x6D 0x69 0x43 0x6F 0x6C 0x6F 0x6E 0x43  racketSemiColonC
0x1266  0x6F 0x6D 0x6D 0x61 0x53 0x75 0x62 0x74  0x72 0x61 0x63 0x74 0x4D 0x75 0x6C 0x74  ommaSubtractMult
0x1276  0x69 0x70 0x6C 0x79 0x44 0x69 0x76 0x69  0x64 0x65 0x4D 0x6F 0x64 0x75 0x6C 0x75  iplyDivideModulu
0x1286  0x73 0x49 0x6E 0x63 0x72 0x65 0x6D 0x65  0x6E 0x74 0x44 0x65 0x63 0x72 0x65 0x6D  sIncrementDecrem
0x1296  0x65 0x6E 0x74 0x53 0x68 0x69 0x66 0x74  0x4C 0x65 0x66 0x74 0x53 0x68 0x69 0x66  entShiftLeftShif
0x12A6  0x74 0x52 0x69 0x67 0x68 0x74 0x42 0x6F  0x6F 0x6C 0x65 0x61 0x6E 0x4E 0x6F 0x74  tRightBooleanNot
0x12B6  0x42 0x6F 0x6F 0x6C 0x65 0x61 0x6E 0x4F  0x72 0x42 0x6F 0x6F 0x6C 0x65 0x61 0x6E  BooleanOrBoolean
0x12C6  0x41 0x6E 0x64 0x42 0x69 0x74 0x4E 0x6F  0x74 0x42 0x69 0x74 0x58 0x6F 0x72 0x6D  AndBitNotBitXorm
0x12D6  0x65 0x6D 0x6F 0x72 0x79 0x6D 0x65 0x6D  0x6F 0x72 0x79 0x77 0x6F 0x72 0x64 0x62  emorymemorywordb
0x12E6  0x72 0x65 0x61 0x6B 0x63 0x6F 0x6E 0x74  0x69 0x6E 0x75 0x65 0x64 0x65 0x66 0x61  reakcontinuedefa
0x12F6  0x75 0x6C 0x74 0x65 0x6D 0x62 0x65 0x64  0x66 0x6F 0x72 0x65 0x61 0x63 0x68 0x6C  ultembedforeachl
0x1306  0x6F 0x6F 0x70 0x73 0x77 0x69 0x74 0x63  0x68 0x74 0x79 0x70 0x65 0x6F 0x66 0x77  oopswitchtypeofw
0x1316  0x68 0x69 0x6C 0x65 0x00 0x00 0x20 0x41  0x54 0x4F 0x44 0x4F 0x20 0x3A 0x20 0x74  hile.. ATODO : t
0x1326  0x6F 0x6B 0x65 0x6E 0x20 0x6E 0x6F 0x74  0x20 0x69 0x6D 0x70 0x6C 0x65 0x6D 0x65  oken not impleme
0x1336  0x6E 0x74 0x65 0x64 0x20 0x69 0x6E 0x20  0x54 0x6F 0x6B 0x65 0x6E 0x2E 0x48 0x6F  nted in Token.Ho
0x1346  0x70 0x70 0x65 0x72 0x54 0x6F 0x6B 0x65  0x6E 0x54 0x6F 0x53 0x74 0x72 0x69 0x6E  pperTokenToStrin
0x1356  0x67 0x61 0x6D 0x62 0x69 0x67 0x75 0x6F  0x75 0x73 0x20 0x75 0x6E 0x64 0x65 0x63  gambiguous undec
0x1366  0x6F 0x72 0x61 0x74 0x65 0x64 0x20 0x6E  0x61 0x6D 0x65 0x64 0x20 0x74 0x79 0x70  orated named typ
0x1376  0x65 0x20 0x6E 0x61 0x6D 0x65 0x75 0x6E  0x6B 0x6E 0x6F 0x77 0x6E 0x20 0x74 0x79  e nameunknown ty
0x1386  0x70 0x65 0x20 0x30 0x78 0x69 0x6E 0x20  0x54 0x79 0x70 0x65 0x2E 0x54 0x6F 0x53  pe 0xin Type.ToS
0x1396  0x74 0x72 0x69 0x6E 0x67 0x28 0x29 0x48  0x36 0x35 0x30 0x32 0x48 0x36 0x35 0x30  tring()H6502H650
0x13A6  0x32 0x20 0x68 0x61 0x73 0x20 0x61 0x20  0x6C 0x69 0x6D 0x69 0x74 0x20 0x6F 0x66  2 has a limit of
0x13B6  0x20 0x31 0x36 0x33 0x38 0x33 0x20 0x66  0x6F 0x72 0x20 0x66 0x75 0x6E 0x63 0x74   16383 for funct
0x13C6  0x69 0x6F 0x6E 0x20 0x69 0x6E 0x64 0x69  0x63 0x65 0x73 0x2C 0x20 0x28 0x77 0x61  ion indices, (wa
0x13D6  0x73 0x20 0x27 0x50 0x45 0x45 0x50 0x48  0x4F 0x4C 0x45 0x4F 0x50 0x54 0x69 0x4F  s 'PEEPHOLEOPTiO
0x13E6  0x76 0x65 0x72 0x6C 0x6F 0x61 0x64                                               verload


// PreProcess.hs:1125
// ####  PreProcess.main(..)  ####                                              0x0000

0x13ED  0x1A 0x0F       PUSHIB 0x0F
0x13EF  0x1A 0x06       PUSHIB 0x06
0x13F1  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x13F3  0x24 0x02       SYSCALL0 0x02  // String.New
0x13F5  0x1A 0x0F       PUSHIB 0x0F
0x13F7  0x1A 0x06       PUSHIB 0x06
0x13F9  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x13FB  0x1A 0x0F       PUSHIB 0x0F
0x13FD  0x1A 0x06       PUSHIB 0x06
0x13FF  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1401  0x1A 0x0F       PUSHIB 0x0F
0x1403  0x1A 0x06       PUSHIB 0x06
0x1405  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1407  0x1A 0x0F       PUSHIB 0x0F
0x1409  0x1A 0x06       PUSHIB 0x06
0x140B  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x140D  0x1A 0x0F       PUSHIB 0x0F
0x140F  0x1A 0x06       PUSHIB 0x06
0x1411  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1413  0x1A 0x0F       PUSHIB 0x0F
0x1415  0x1A 0x07       PUSHIB 0x07
0x1417  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1419  0x1A 0x07       PUSHIB 0x07
0x141B  0x1A 0x0F       PUSHIB 0x0F
0x141D  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x141F  0x1A 0x0F       PUSHIB 0x0F
0x1421  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1423  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x1425  0x44            PUSHI0
0x1426  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x1428  0x44            PUSHI0
0x1429  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x142B  0x24 0x02       SYSCALL0 0x02  // String.New
0x142D  0x44            PUSHI0
0x142E  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x1430  0x44            PUSHI0
0x1431  0x44            PUSHI0
0x1432  0x1A 0x0F       PUSHIB 0x0F
0x1434  0x1A 0x0F       PUSHIB 0x0F
0x1436  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1438  0x44            PUSHI0
0x1439  0x44            PUSHI0
0x143A  0x1F 0x2A       POPGLOBALB 0x2A
0x143C  0x1A 0x0F       PUSHIB 0x0F
0x143E  0x1A 0x0F       PUSHIB 0x0F
0x1440  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1442  0x1A 0x0F       PUSHIB 0x0F
0x1444  0x1A 0x0F       PUSHIB 0x0F
0x1446  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1448  0x44            PUSHI0
0x1449  0x44            PUSHI0
0x144A  0x24 0x02       SYSCALL0 0x02  // String.New
0x144C  0x44            PUSHI0
0x144D  0x1A 0x08       PUSHIB 0x08
0x144F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1451  0x1F 0x34       POPGLOBALB 0x34
0x1453  0x24 0x60       SYSCALL0 0x60  // File.New
0x1455  0x44            PUSHI0
0x1456  0x44            PUSHI0
0x1457  0x44            PUSHI0
0x1458  0x1A 0x0F       PUSHIB 0x0F
0x145A  0x1A 0x03       PUSHIB 0x03
0x145C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x145E  0x1A 0x0F       PUSHIB 0x0F
0x1460  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1462  0x1A 0x0F       PUSHIB 0x0F
0x1464  0x1A 0x04       PUSHIB 0x04
0x1466  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1468  0x1A 0x04       PUSHIB 0x04
0x146A  0x1A 0x0F       PUSHIB 0x0F
0x146C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x146E  0x1A 0x04       PUSHIB 0x04
0x1470  0x1A 0x0E       PUSHIB 0x0E
0x1472  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1474  0x1A 0x04       PUSHIB 0x04
0x1476  0x1A 0x04       PUSHIB 0x04
0x1478  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x147A  0x1A 0x04       PUSHIB 0x04
0x147C  0x1A 0x0F       PUSHIB 0x0F
0x147E  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1480  0x1A 0x0F       PUSHIB 0x0F
0x1482  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1484  0x1A 0x0F       PUSHIB 0x0F
0x1486  0x1A 0x04       PUSHIB 0x04
0x1488  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x148A  0x1A 0x04       PUSHIB 0x04
0x148C  0x1A 0x19       PUSHIB 0x19
0x148E  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1490  0x1A 0x04       PUSHIB 0x04
0x1492  0x1A 0x0F       PUSHIB 0x0F
0x1494  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1496  0x1A 0x04       PUSHIB 0x04
0x1498  0x1A 0x19       PUSHIB 0x19
0x149A  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x149C  0x1A 0x04       PUSHIB 0x04
0x149E  0x1A 0x19       PUSHIB 0x19
0x14A0  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14A2  0x1A 0x04       PUSHIB 0x04
0x14A4  0x1A 0x0E       PUSHIB 0x0E
0x14A6  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14A8  0x1A 0x04       PUSHIB 0x04
0x14AA  0x1A 0x04       PUSHIB 0x04
0x14AC  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14AE  0x1A 0x04       PUSHIB 0x04
0x14B0  0x1A 0x0F       PUSHIB 0x0F
0x14B2  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14B4  0x1A 0x04       PUSHIB 0x04
0x14B6  0x1A 0x03       PUSHIB 0x03
0x14B8  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14BA  0x1A 0x04       PUSHIB 0x04
0x14BC  0x1A 0x03       PUSHIB 0x03
0x14BE  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14C0  0x1A 0x0F       PUSHIB 0x0F
0x14C2  0x1A 0x03       PUSHIB 0x03
0x14C4  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14C6  0x1A 0x04       PUSHIB 0x04
0x14C8  0x1A 0x19       PUSHIB 0x19
0x14CA  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14CC  0x1A 0x04       PUSHIB 0x04
0x14CE  0x1A 0x13       PUSHIB 0x13
0x14D0  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14D2  0x1A 0x04       PUSHIB 0x04
0x14D4  0x1A 0x04       PUSHIB 0x04
0x14D6  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14D8  0x44            PUSHI0
0x14D9  0x1A 0x0F       PUSHIB 0x0F
0x14DB  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x14DD  0x1A 0x0F       PUSHIB 0x0F
0x14DF  0x1A 0x04       PUSHIB 0x04
0x14E1  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14E3  0x1A 0x04       PUSHIB 0x04
0x14E5  0x1A 0x19       PUSHIB 0x19
0x14E7  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14E9  0x1A 0x04       PUSHIB 0x04
0x14EB  0x1A 0x0F       PUSHIB 0x0F
0x14ED  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14EF  0x1A 0x04       PUSHIB 0x04
0x14F1  0x1A 0x19       PUSHIB 0x19
0x14F3  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14F5  0x44            PUSHI0
0x14F6  0x1A 0x0F       PUSHIB 0x0F
0x14F8  0x1A 0x13       PUSHIB 0x13
0x14FA  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x14FC  0x1A 0x0F       PUSHIB 0x0F
0x14FE  0x1A 0x04       PUSHIB 0x04
0x1500  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1502  0x1A 0x04       PUSHIB 0x04
0x1504  0x1A 0x13       PUSHIB 0x13
0x1506  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1508  0x1A 0x0F       PUSHIB 0x0F
0x150A  0x1A 0x13       PUSHIB 0x13
0x150C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x150E  0x1A 0x0F       PUSHIB 0x0F
0x1510  0x1A 0x04       PUSHIB 0x04
0x1512  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1514  0x1A 0x04       PUSHIB 0x04
0x1516  0x1A 0x13       PUSHIB 0x13
0x1518  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x151A  0x1A 0x04       PUSHIB 0x04
0x151C  0x1A 0x13       PUSHIB 0x13
0x151E  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1520  0x1A 0x04       PUSHIB 0x04
0x1522  0x1A 0x19       PUSHIB 0x19
0x1524  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1526  0x1A 0x0F       PUSHIB 0x0F
0x1528  0x1A 0x0F       PUSHIB 0x0F
0x152A  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x152C  0x1A 0x0F       PUSHIB 0x0F
0x152E  0x1A 0x0F       PUSHIB 0x0F
0x1530  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1532  0x1A 0x0F       PUSHIB 0x0F
0x1534  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1536  0x1A 0x13       PUSHIB 0x13
0x1538  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x153A  0x44            PUSHI0
0x153B  0x1A 0x04       PUSHIB 0x04
0x153D  0x1A 0x06       PUSHIB 0x06
0x153F  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1541  0x1A 0x04       PUSHIB 0x04
0x1543  0x1A 0x19       PUSHIB 0x19
0x1545  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1547  0x1A 0x06       PUSHIB 0x06
0x1549  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x154B  0x44            PUSHI0
0x154C  0x24 0x02       SYSCALL0 0x02  // String.New
0x154E  0x1A 0x13       PUSHIB 0x13
0x1550  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1552  0x1A 0x0F       PUSHIB 0x0F
0x1554  0x1A 0x0F       PUSHIB 0x0F
0x1556  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1558  0x1A 0x0F       PUSHIB 0x0F
0x155A  0x1A 0x06       PUSHIB 0x06
0x155C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x155E  0x1A 0x03       PUSHIB 0x03
0x1560  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1562  0x1A 0x03       PUSHIB 0x03
0x1564  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1566  0x44            PUSHI0
0x1567  0x44            PUSHI0
0x1568  0x44            PUSHI0
0x1569  0x44            PUSHI0
0x156A  0x44            PUSHI0
0x156B  0x44            PUSHI0
0x156C  0x44            PUSHI0
0x156D  0x49            ENTER

                        // <string> rawArgs = System.Arguments;                 PreProcess.hs:1128

0x156E  0x1A 0x0F       PUSHIB 0x0F
0x1570  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1572  0x24 0x59       SYSCALL0 0x59  // System.Arguments_Get
0x1574  0x5D            POPCOPYLOCALB00

                        // <string> args;                                       PreProcess.hs:1129

0x1575  0x1A 0x0F       PUSHIB 0x0F
0x1577  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // for (uint iArg = 0; iArg < rawArgs.Length; iArg++)

0x1579  0x44            PUSHI0
0x157A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x157C  0x4E            PUSHLOCALB00
0x157D  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x157F  0x08            LT
0x1580  0x31 0x77 0x00  JZW 0x15F7 (+119)

                        // string arg = rawArgs[iArg];                          PreProcess.hs:1133

0x1583  0x24 0x02       SYSCALL0 0x02  // String.New
0x1585  0x4E            PUSHLOCALB00
0x1586  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1588  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x158A  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if ((arg.Length == 2) && (arg[0] == '-'))            PreProcess.hs:1134

0x158C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x158E  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x1590  0x1A 0x02       PUSHIB 0x02
0x1592  0x05            EQ
0x1593  0x27 0x00       DUP 0x00
0x1595  0x2E 0x0B       JZB 0x15A0 (+11)
0x1597  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1599  0x44            PUSHI0
0x159A  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x159C  0x1A 0x2D       PUSHIB 0x2D
0x159E  0x05            EQ
0x159F  0x0C            BOOLAND
0x15A0  0x2E 0x4B       JZB 0x15EB (+75)

                        // arg = arg.ToLower();                                 PreProcess.hs:1136

0x15A2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x15A4  0x34 0x13 0x01  CALLW 0x0113   // String.ToLower
0x15A7  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // switch (arg)                                         PreProcess.hs:1137

0x15A9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)

                        // case "-g":                                           PreProcess.hs:1139

0x15AB  0x37 0x2D 0x67  PUSHIW 0x672D
0x15AE  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x15B0  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x15B2  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x15B4  0x2F 0x2C       JNZB 0x15E0 (+44)

                        // uint col;                                            PreProcess.hs:1141

0x15B6  0x44            PUSHI0

                        // uint row;                                            PreProcess.hs:1142

0x15B7  0x44            PUSHI0

                        // iArg++;                                              PreProcess.hs:1143

0x15B8  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // if (TryParseUInt(rawArgs[iArg], ref col))            PreProcess.hs:1144

0x15BA  0x4E            PUSHLOCALB00
0x15BB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x15BD  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x15BF  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x15C1  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x15C3  0x2E 0x02       JZB 0x15C5 (+2)

                        // iArg++;                                              PreProcess.hs:1147

0x15C5  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // if (TryParseUInt(rawArgs[iArg], ref row))            PreProcess.hs:1148

0x15C7  0x4E            PUSHLOCALB00
0x15C8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x15CA  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x15CC  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x15CE  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x15D0  0x2E 0x02       JZB 0x15D2 (+2)

                        // Parser.SetInteractive(byte(col), byte(row));

0x15D2  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x15D4  0x51 0x03       CAST 0x03
0x15D6  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x15D8  0x51 0x03       CAST 0x03
0x15DA  0x2C 0x6B       CALLB 0x6B     // Parser.SetInteractive

                        // }                                                    PreProcess.hs:1152

0x15DC  0x28 0x04       DECSP 0x04
0x15DE  0x30 0x09       JB 0x15E7 (+9)

                        // args.Clear();                                        PreProcess.hs:1155

0x15E0  0x4F            PUSHLOCALB02
0x15E1  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // break;                                               PreProcess.hs:1156

0x15E3  0x28 0x06       DECSP 0x06
0x15E5  0x30 0x14       JB 0x15F9 (+20)

                        // }                                                    PreProcess.hs:1158

0x15E7  0x28 0x02       DECSP 0x02

                        // }                                                    PreProcess.hs:1159

0x15E9  0x30 0x07       JB 0x15F0 (+7)

                        // args.Append(arg);                                    PreProcess.hs:1162

0x15EB  0x4F            PUSHLOCALB02
0x15EC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x15EE  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    PreProcess.hs:1164

0x15F0  0x28 0x02       DECSP 0x02
0x15F2  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x15F4  0x33 0x86 0xFF  JW 0x157A (-122)
0x15F7  0x28 0x02       DECSP 0x02

                        // if (args.Length != 1)                                PreProcess.hs:1166

0x15F9  0x4F            PUSHLOCALB02
0x15FA  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x15FC  0x45            PUSHI1
0x15FD  0x06            NE
0x15FE  0x2E 0x08       JZB 0x1606 (+8)

                        // BadArguments();                                      PreProcess.hs:1168

0x1600  0x2C 0x13       CALLB 0x13     // PreProcess.BadArguments

                        // break;                                               PreProcess.hs:1169

0x1602  0x28 0x04       DECSP 0x04
0x1604  0x2A 0xB4       RETB 0xB4

                        // bool sourceFound;                                    PreProcess.hs:1171

0x1606  0x44            PUSHI0

                        // string sourcePath = args[0];                         PreProcess.hs:1172

0x1607  0x24 0x02       SYSCALL0 0x02  // String.New
0x1609  0x4F            PUSHLOCALB02
0x160A  0x44            PUSHI0
0x160B  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x160D  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string ext = ".hs";                                  PreProcess.hs:1173

0x160F  0x24 0x02       SYSCALL0 0x02  // String.New
0x1611  0x1A 0x08       PUSHIB 0x08
0x1613  0x1A 0x03       PUSHIB 0x03
0x1615  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1617  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // string codePath = args[0];                           PreProcess.hs:1174

0x1619  0x24 0x02       SYSCALL0 0x02  // String.New
0x161B  0x4F            PUSHLOCALB02
0x161C  0x44            PUSHI0
0x161D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x161F  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // <string> sourceFolders;                              PreProcess.hs:1175

0x1621  0x1A 0x0F       PUSHIB 0x0F
0x1623  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // sourceFolders.Append("/Source/Compiler/");           PreProcess.hs:1176

0x1625  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1627  0x1A 0x0B       PUSHIB 0x0B
0x1629  0x1A 0x11       PUSHIB 0x11
0x162B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x162D  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // sourceFolders.Append("/Source/Debugger/");           PreProcess.hs:1177

0x162F  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1631  0x1A 0x1C       PUSHIB 0x1C
0x1633  0x1A 0x11       PUSHIB 0x11
0x1635  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1637  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // sourceFolders.Append("/Source/Editor/");             PreProcess.hs:1178

0x1639  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x163B  0x1A 0x2D       PUSHIB 0x2D
0x163D  0x1A 0x0F       PUSHIB 0x0F
0x163F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1641  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // sourceFolders.Append("/Source/Shell/");              PreProcess.hs:1179

0x1643  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1645  0x1A 0x3C       PUSHIB 0x3C
0x1647  0x1A 0x0E       PUSHIB 0x0E
0x1649  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x164B  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // sourceFolders.Append("/Source/Testing/");            PreProcess.hs:1180

0x164D  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x164F  0x1A 0x4A       PUSHIB 0x4A
0x1651  0x1A 0x10       PUSHIB 0x10
0x1653  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1655  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // foreach (var sourceFolder in sourceFolders)

0x1657  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1659  0x44            PUSHI0
0x165A  0x44            PUSHI0
0x165B  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x165D  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x165F  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1661  0x05            EQ
0x1662  0x2F 0x1F       JNZB 0x1681 (+31)
0x1664  0x56 0x0E 0x12  PUSHLOCALBB 0x120E
0x1667  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x1669  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // if (File.Exists(ref sourcePath, ref ext, sourceFolder))

0x166B  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x166D  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x166F  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1671  0x34 0x37 0x01  CALLW 0x0137   // File.Exists
0x1674  0x2E 0x09       JZB 0x167D (+9)

                        // sourceFound = true;                                  PreProcess.hs:1185

0x1676  0x45            PUSHI1
0x1677  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // break;                                               PreProcess.hs:1186

0x1679  0x28 0x06       DECSP 0x06
0x167B  0x30 0x08       JB 0x1683 (+8)

                        // }                                                    PreProcess.hs:1188

0x167D  0x22 0x12       INCLOCALB 0x12 (BP+18)
0x167F  0x30 0xDC       JB 0x165B (-36)
0x1681  0x28 0x06       DECSP 0x06

                        // if (!sourceFound)                                    PreProcess.hs:1189

0x1683  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1685  0x2F 0x04       JNZB 0x1689 (+4)

                        // BadArguments();                                      PreProcess.hs:1191

0x1687  0x2C 0x13       CALLB 0x13     // PreProcess.BadArguments

                        // long startTime = Millis;                             PreProcess.hs:1193

0x1689  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x168B  0x24 0x57       SYSCALL0 0x57  // Time.Millis_Get
0x168D  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // string extension = Path.GetExtension(sourcePath);

0x168F  0x24 0x02       SYSCALL0 0x02  // String.New
0x1691  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1693  0x34 0x3C 0x01  CALLW 0x013C   // Path.GetExtension
0x1696  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // string jsonPath  = sourcePath.Replace(extension, ".json");

0x1698  0x24 0x02       SYSCALL0 0x02  // String.New
0x169A  0x56 0x06 0x10  PUSHLOCALBB 0x1006
0x169D  0x1A 0x5A       PUSHIB 0x5A
0x169F  0x1A 0x05       PUSHIB 0x05
0x16A1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16A3  0x24 0x09       SYSCALL0 0x09  // String.Replace
0x16A5  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // jsonPath = Path.GetFileName(jsonPath);               PreProcess.hs:1198

0x16A7  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16A9  0x34 0x39 0x01  CALLW 0x0139   // Path.GetFileName
0x16AC  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // jsonPath = Path.Combine("/Debug/Obj/", jsonPath);

0x16AE  0x1A 0x5F       PUSHIB 0x5F
0x16B0  0x1A 0x0B       PUSHIB 0x0B
0x16B2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16B4  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16B6  0x34 0x3B 0x01  CALLW 0x013B   // Path.Combine
0x16B9  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // if (File.Exists(jsonPath))                           PreProcess.hs:1200

0x16BB  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16BD  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x16BF  0x2E 0x06       JZB 0x16C5 (+6)

                        // File.Delete(jsonPath);                               PreProcess.hs:1203

0x16C1  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16C3  0x24 0x68       SYSCALL0 0x68  // File.Delete

                        // if (!buildSymbols(sourcePath))                       PreProcess.hs:1205

0x16C5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x16C7  0x2C 0x12       CALLB 0x12     // PreProcess.buildSymbols
0x16C9  0x2F 0x07       JNZB 0x16D0 (+7)

                        // break;                                               PreProcess.hs:1208

0x16CB  0x28 0x04       DECSP 0x04
0x16CD  0x33 0x7B 0x00  JW 0x1748 (+123)

                        // if (!Symbols.DeferredValidation())                   PreProcess.hs:1211

0x16D0  0x2C 0xAA       CALLB 0xAA     // Symbols.DeferredValidation
0x16D2  0x2F 0x07       JNZB 0x16D9 (+7)

                        // break;                                               PreProcess.hs:1214

0x16D4  0x28 0x04       DECSP 0x04
0x16D6  0x33 0x72 0x00  JW 0x1748 (+114)

                        // if (!Parser.IsInteractive())                         PreProcess.hs:1216

0x16D9  0x2C 0x6C       CALLB 0x6C     // Parser.IsInteractive
0x16DB  0x2F 0x16       JNZB 0x16F1 (+22)

                        // PrintLn();                                           PreProcess.hs:1218

0x16DD  0x24 0x2A       SYSCALL0 0x2A  // Screen.PrintLn

                        // PrintLn("Exporting: '" + jsonPath + "'");            PreProcess.hs:1219

0x16DF  0x1A 0x6A       PUSHIB 0x6A
0x16E1  0x1A 0x0C       PUSHIB 0x0C
0x16E3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x16E5  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16E7  0x24 0x03       SYSCALL0 0x03  // String.Append
0x16E9  0x1A 0x27       PUSHIB 0x27
0x16EB  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x16ED  0x24 0x03       SYSCALL0 0x03  // String.Append
0x16EF  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // if (!Symbols.Export(jsonPath))                       PreProcess.hs:1221

0x16F1  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x16F3  0x2C 0xC3       CALLB 0xC3     // Symbols.Export
0x16F5  0x2F 0x06       JNZB 0x16FB (+6)

                        // break;                                               PreProcess.hs:1223

0x16F7  0x28 0x04       DECSP 0x04
0x16F9  0x30 0x4F       JB 0x1748 (+79)

                        // if (!Parser.IsInteractive())                         PreProcess.hs:1225

0x16FB  0x2C 0x6C       CALLB 0x6C     // Parser.IsInteractive
0x16FD  0x2F 0x47       JNZB 0x1744 (+71)

                        // Print("Success. ", Color.ProgressText, Color.ProgressFace);

0x16FF  0x1A 0x76       PUSHIB 0x76
0x1701  0x1A 0x09       PUSHIB 0x09
0x1703  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1705  0x34 0x64 0x01  CALLW 0x0164   // Color.ProgressText_Get
0x1708  0x34 0x65 0x01  CALLW 0x0165   // Color.ProgressFace_Get
0x170B  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // long elapsedTime = Millis - startTime;               PreProcess.hs:1228

0x170D  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x170F  0x24 0x57       SYSCALL0 0x57  // Time.Millis_Get
0x1711  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x1713  0x24 0x40       SYSCALL0 0x40  // Long.Sub
0x1715  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // float seconds = elapsedTime / 1000.0;                PreProcess.hs:1229

0x1717  0x24 0x4C       SYSCALL0 0x4C  // Float.New
0x1719  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x171B  0x1A 0x7F       PUSHIB 0x7F
0x171D  0x24 0x4D       SYSCALL0 0x4D  // Float.NewFromConstant
0x171F  0x43            SWAP
0x1720  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x1722  0x43            SWAP
0x1723  0x24 0x50       SYSCALL0 0x50  // Float.Div
0x1725  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // PrintLn("  " +seconds.ToString() + "s", Color.ProgressHighlight, Color.ProgressFace);

0x1727  0x37 0x20 0x20  PUSHIW 0x2020
0x172A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x172C  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x172E  0x24 0x4A       SYSCALL0 0x4A  // Float.ToString
0x1730  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1732  0x1A 0x73       PUSHIB 0x73
0x1734  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1736  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1738  0x34 0x66 0x01  CALLW 0x0166   // Color.ProgressHighlight_Get
0x173B  0x34 0x65 0x01  CALLW 0x0165   // Color.ProgressFace_Get
0x173E  0x2C 0x34       CALLB 0x34     // Screen.PrintLn

                        // }                                                    PreProcess.hs:1231

0x1740  0x28 0x04       DECSP 0x04
0x1742  0x30 0x04       JB 0x1746 (+4)

                        // Parser.ProgressDone();                               PreProcess.hs:1234

0x1744  0x2C 0x6F       CALLB 0x6F     // Parser.ProgressDone

                        // break;                                               PreProcess.hs:1236

0x1746  0x28 0x04       DECSP 0x04

                        // break;                                               PreProcess.hs:1238

0x1748  0x28 0x10       DECSP 0x10
0x174A  0x2A 0xB4       RETB 0xB4


// PreProcess.hs:1120
// ####  PreProcess.BadArguments(..)  ####                                      0x0013

0x174C  0x49            ENTER

                        // PrintLn("Invalid arguments for PREPROCESS:");

0x174D  0x1A 0x83       PUSHIB 0x83
0x174F  0x1A 0x21       PUSHIB 0x21
0x1751  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1753  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // PrintLn("  PREPROCESS [args] <source file>");

0x1755  0x1A 0xA4       PUSHIB 0xA4
0x1757  0x1A 0x21       PUSHIB 0x21
0x1759  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x175B  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // PrintLn("    -g <c> <r> : called from GUI, not console");

0x175D  0x1A 0xC5       PUSHIB 0xC5
0x175F  0x1A 0x2D       PUSHIB 0x2D
0x1761  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1763  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // }                                                    PreProcess.hs:1124

0x1765  0x4A            RET0


// PreProcess.hs:1005
// ####  PreProcess.buildSymbols(..)  ####                                      0x0012


                        // bool success = true;                                 PreProcess.hs:1006

0x1766  0x5F 0x01       ENTERB 0x01

                        // bool success = true;                                 PreProcess.hs:1006

0x1768  0x45            PUSHI1
0x1769  0x4C            POPLOCALB00

                        // unitsParsed.Clear();                                 PreProcess.hs:1007

0x176A  0x20 0x00       PUSHGLOBALB 0x00
0x176C  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // unitsParsed[sourcePath] = true; // make sure program is included in the source paths

0x176E  0x20 0x00       PUSHGLOBALB 0x00
0x1770  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1772  0x45            PUSHI1
0x1773  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // Symbols.New();                                       PreProcess.hs:1010

0x1775  0x2C 0x89       CALLB 0x89     // Symbols.New

                        // Scanner.New();                                       PreProcess.hs:1011

0x1777  0x2C 0x58       CALLB 0x58     // Scanner.New

                        // SysCalls.New();                                      PreProcess.hs:1012

0x1779  0x2C 0x85       CALLB 0x85     // SysCalls.New

                        // bool firstUnit = true;                               PreProcess.hs:1014

0x177B  0x44            PUSHI0
0x177C  0x45            PUSHI1
0x177D  0x4D            POPLOCALB02

                        // Parser.Reset();                                      PreProcess.hs:1017

0x177E  0x2C 0x75       CALLB 0x75     // Parser.Reset

                        // Directives.New();                                    PreProcess.hs:1019

0x1780  0x2C 0xCE       CALLB 0xCE     // Directives.New

                        // Scanner.Load(sourcePath);                            PreProcess.hs:1021

0x1782  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1784  0x2C 0x59       CALLB 0x59     // Scanner.Load

                        // long pos = 0;                                        PreProcess.hs:1022

0x1786  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x1788  0x44            PUSHI0
0x1789  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x178B  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Scanner.Reset(pos, 1, sourcePath);                   PreProcess.hs:1023

0x178D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x178F  0x45            PUSHI1
0x1790  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1792  0x2C 0x5A       CALLB 0x5A     // Scanner.Reset

                        // Parser.Advance(); // load up first token             PreProcess.hs:1024

0x1794  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (firstUnit)                                       PreProcess.hs:1025

0x1796  0x4F            PUSHLOCALB02
0x1797  0x2E 0x1F       JZB 0x17B6 (+31)

                        // Parser.Consume(HopperToken.Keyword, "program", "'program' expected");

0x1799  0x1A 0x05       PUSHIB 0x05
0x179B  0x1A 0xF2       PUSHIB 0xF2
0x179D  0x1A 0x07       PUSHIB 0x07
0x179F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17A1  0x1A 0xF9       PUSHIB 0xF9
0x17A3  0x1A 0x12       PUSHIB 0x12
0x17A5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17A7  0x2C 0x7F       CALLB 0x7F     // Parser.Consume

                        // Parser.Consume(HopperToken.Identifier, "Program name identifier expected");

0x17A9  0x1A 0x03       PUSHIB 0x03
0x17AB  0x37 0x0B 0x01  PUSHIW 0x010B
0x17AE  0x1A 0x20       PUSHIB 0x20
0x17B0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17B2  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // }                                                    PreProcess.hs:1029

0x17B4  0x30 0x1F       JB 0x17D3 (+31)

                        // Parser.Consume(HopperToken.Keyword, "unit", "'unit' expected");

0x17B6  0x1A 0x05       PUSHIB 0x05
0x17B8  0x37 0x2B 0x01  PUSHIW 0x012B
0x17BB  0x1A 0x04       PUSHIB 0x04
0x17BD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17BF  0x37 0x2F 0x01  PUSHIW 0x012F
0x17C2  0x1A 0x0F       PUSHIB 0x0F
0x17C4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17C6  0x2C 0x7F       CALLB 0x7F     // Parser.Consume

                        // Parser.Consume(HopperToken.Identifier, "Unit name identifier expected");

0x17C8  0x1A 0x03       PUSHIB 0x03
0x17CA  0x37 0x3E 0x01  PUSHIW 0x013E
0x17CD  0x1A 0x1D       PUSHIB 0x1D
0x17CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17D1  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // if (Parser.HadError)                                 PreProcess.hs:1035

0x17D3  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x17D5  0x2E 0x09       JZB 0x17DE (+9)

                        // success = false;                                     PreProcess.hs:1037

0x17D7  0x44            PUSHI0
0x17D8  0x4C            POPLOCALB00

                        // break;                                               PreProcess.hs:1038

0x17D9  0x28 0x02       DECSP 0x02
0x17DB  0x33 0xD7 0x00  JW 0x18B2 (+215)

                        // <string,string> previousToken = Parser.PreviousToken;

0x17DE  0x1A 0x0F       PUSHIB 0x0F
0x17E0  0x1A 0x0F       PUSHIB 0x0F
0x17E2  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x17E4  0x2C 0x72       CALLB 0x72     // Parser.PreviousToken_Get
0x17E6  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // currentUnit = previousToken["lexeme"];               PreProcess.hs:1041

0x17E8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x17EA  0x37 0x5B 0x01  PUSHIW 0x015B
0x17ED  0x1A 0x06       PUSHIB 0x06
0x17EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x17F1  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x17F3  0x59 0x02       POPCOPYGLOBALB 0x02

                        // AddNameSpace(currentUnit);                           PreProcess.hs:1042

0x17F5  0x20 0x02       PUSHGLOBALB 0x02
0x17F7  0x2C 0x91       CALLB 0x91     // Symbols.AddNameSpace

                        // Parser.Consume(HopperToken.LBrace, '{');             PreProcess.hs:1044

0x17F9  0x1A 0x12       PUSHIB 0x12
0x17FB  0x1A 0x7B       PUSHIB 0x7B
0x17FD  0x2C 0x7D       CALLB 0x7D     // Parser.Consume

                        // if (Parser.HadError)                                 PreProcess.hs:1045

0x17FF  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1801  0x2E 0x09       JZB 0x180A (+9)

                        // success = false;                                     PreProcess.hs:1047

0x1803  0x44            PUSHI0
0x1804  0x4C            POPLOCALB00

                        // break;                                               PreProcess.hs:1048

0x1805  0x28 0x04       DECSP 0x04
0x1807  0x33 0xAB 0x00  JW 0x18B2 (+171)

                        // firstUnit = false;                                   PreProcess.hs:1050

0x180A  0x44            PUSHI0
0x180B  0x4D            POPLOCALB02

                        // bool endedProperly = false;                          PreProcess.hs:1051

0x180C  0x44            PUSHI0

                        // if (Parser.Check(HopperToken.EOF))                   PreProcess.hs:1054

0x180D  0x1A 0x2D       PUSHIB 0x2D
0x180F  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1811  0x2F 0x1F       JNZB 0x1830 (+31)

                        // if (Parser.Check(HopperToken.RBrace))                PreProcess.hs:1058

0x1813  0x1A 0x13       PUSHIB 0x13
0x1815  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1817  0x2E 0x07       JZB 0x181E (+7)

                        // endedProperly = true;                                PreProcess.hs:1060

0x1819  0x45            PUSHI1
0x181A  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // break;                                               PreProcess.hs:1061

0x181C  0x30 0x14       JB 0x1830 (+20)

                        // if (Parser.HadError)                                 PreProcess.hs:1063

0x181E  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1820  0x2E 0x06       JZB 0x1826 (+6)

                        // success = false;                                     PreProcess.hs:1065

0x1822  0x44            PUSHI0
0x1823  0x4C            POPLOCALB00

                        // break;                                               PreProcess.hs:1066

0x1824  0x30 0x0C       JB 0x1830 (+12)

                        // declaration();                                       PreProcess.hs:1070

0x1826  0x2C 0x11       CALLB 0x11     // PreProcess.declaration

                        // Parser.ProgressTick(".");                            PreProcess.hs:1071

0x1828  0x1A 0x2E       PUSHIB 0x2E
0x182A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x182C  0x2C 0x6E       CALLB 0x6E     // Parser.ProgressTick

                        // }                                                    PreProcess.hs:1072

0x182E  0x30 0xDF       JB 0x180D (-33)

                        // if (Parser.HadError)                                 PreProcess.hs:1073

0x1830  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1832  0x2E 0x06       JZB 0x1838 (+6)

                        // success = false;                                     PreProcess.hs:1076

0x1834  0x44            PUSHI0
0x1835  0x4C            POPLOCALB00

                        // }                                                    PreProcess.hs:1077

0x1836  0x30 0x3A       JB 0x1870 (+58)

                        // else if (!endedProperly)                             PreProcess.hs:1078

0x1838  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x183A  0x2F 0x0A       JNZB 0x1844 (+10)

                        // Parser.Error('}');                                   PreProcess.hs:1081

0x183C  0x1A 0x7D       PUSHIB 0x7D
0x183E  0x2C 0x78       CALLB 0x78     // Parser.Error

                        // success = false;                                     PreProcess.hs:1082

0x1840  0x44            PUSHI0
0x1841  0x4C            POPLOCALB00

                        // }                                                    PreProcess.hs:1083

0x1842  0x30 0x2E       JB 0x1870 (+46)

                        // uint mIndex;                                         PreProcess.hs:1086

0x1844  0x44            PUSHI0

                        // if (!Symbols.GetFunctionIndex("main", ref mIndex))

0x1845  0x37 0x61 0x01  PUSHIW 0x0161
0x1848  0x1A 0x04       PUSHIB 0x04
0x184A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x184C  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x184E  0x2C 0xAB       CALLB 0xAB     // Symbols.GetFunctionIndex
0x1850  0x2F 0x0D       JNZB 0x185D (+13)

                        // Parser.Error("program requires entry point");

0x1852  0x37 0x65 0x01  PUSHIW 0x0165
0x1855  0x1A 0x1C       PUSHIB 0x1C
0x1857  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1859  0x2C 0x79       CALLB 0x79     // Parser.Error

                        // success = false;                                     PreProcess.hs:1090

0x185B  0x44            PUSHI0
0x185C  0x4C            POPLOCALB00

                        // if (Directives.IsStillOpen)                          PreProcess.hs:1093

0x185D  0x2C 0xCF       CALLB 0xCF     // Directives.IsStillOpen_Get
0x185F  0x2E 0x0F       JZB 0x186E (+15)

                        // Parser.ErrorAtCurrent("'#endif' expected before end of file");

0x1861  0x37 0x81 0x01  PUSHIW 0x0181
0x1864  0x1A 0x24       PUSHIB 0x24
0x1866  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1868  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:1096

0x186A  0x28 0x08       DECSP 0x08
0x186C  0x30 0x46       JB 0x18B2 (+70)

                        // }                                                    PreProcess.hs:1098

0x186E  0x28 0x02       DECSP 0x02

                        // sourcePath = "";                                     PreProcess.hs:1100

0x1870  0x24 0x02       SYSCALL0 0x02  // String.New
0x1872  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // foreach (var kv in unitsParsed)                      PreProcess.hs:1101

0x1874  0x20 0x00       PUSHGLOBALB 0x00
0x1876  0x1A 0x0F       PUSHIB 0x0F
0x1878  0x1A 0x0F       PUSHIB 0x0F
0x187A  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x187C  0x44            PUSHI0
0x187D  0x56 0x0A 0x0E  PUSHLOCALBB 0x0E0A
0x1880  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x1882  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
0x1884  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
0x1886  0x2E 0x19       JZB 0x189F (+25)

                        // if (!kv.value)                                       PreProcess.hs:1103

0x1888  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x188A  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x188C  0x2F 0xF1       JNZB 0x187D (-15)

                        // sourcePath = kv.key;                                 PreProcess.hs:1106

0x188E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1890  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x1892  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // unitsParsed[sourcePath] = true;                      PreProcess.hs:1107

0x1894  0x20 0x00       PUSHGLOBALB 0x00
0x1896  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1898  0x45            PUSHI1
0x1899  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // break;                                               PreProcess.hs:1108

0x189B  0x28 0x06       DECSP 0x06
0x189D  0x30 0x04       JB 0x18A1 (+4)

                        // }                                                    PreProcess.hs:1110

0x189F  0x28 0x06       DECSP 0x06

                        // if (sourcePath == "")                                PreProcess.hs:1111

0x18A1  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x18A3  0x24 0x02       SYSCALL0 0x02  // String.New
0x18A5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x18A7  0x2F 0x06       JNZB 0x18AD (+6)

                        // break;                                               PreProcess.hs:1113

0x18A9  0x28 0x06       DECSP 0x06
0x18AB  0x30 0x07       JB 0x18B2 (+7)

                        // }                                                    PreProcess.hs:1115

0x18AD  0x28 0x06       DECSP 0x06
0x18AF  0x33 0xCF 0xFE  JW 0x177E (-305)

                        // return success;                                      PreProcess.hs:1116

0x18B2  0x4E            PUSHLOCALB00
0x18B3  0x2B 0x06       RETRETB 0x06


// PreProcess.hs:819
// ####  PreProcess.declaration(..)  ####                                       0x0011


                        // bool isDelegate;                                     PreProcess.hs:820

0x18B5  0x5F 0x01       ENTERB 0x01

                        // if (Parser.Check(HopperToken.Keyword, "delegate"))

0x18B7  0x1A 0x05       PUSHIB 0x05
0x18B9  0x37 0xA5 0x01  PUSHIW 0x01A5
0x18BC  0x1A 0x08       PUSHIB 0x08
0x18BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18C0  0x2C 0x81       CALLB 0x81     // Parser.Check
0x18C2  0x2E 0x06       JZB 0x18C8 (+6)

                        // isDelegate = true;                                   PreProcess.hs:823

0x18C4  0x45            PUSHI1
0x18C5  0x4C            POPLOCALB00

                        // Parser.Advance(); // delegate                        PreProcess.hs:824

0x18C6  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (Parser.Check(HopperToken.Directive, "#define"))

0x18C8  0x1A 0x06       PUSHIB 0x06
0x18CA  0x37 0xAD 0x01  PUSHIW 0x01AD
0x18CD  0x1A 0x07       PUSHIB 0x07
0x18CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x18D1  0x2C 0x81       CALLB 0x81     // Parser.Check
0x18D3  0x2E 0x06       JZB 0x18D9 (+6)

                        // Directives.Declaration();                            PreProcess.hs:829

0x18D5  0x2C 0xD3       CALLB 0xD3     // Directives.Declaration

                        // }                                                    PreProcess.hs:830

0x18D7  0x2A 0x02       RETB 0x02

                        // else if (Parser.Check(HopperToken.Directive))

0x18D9  0x1A 0x06       PUSHIB 0x06
0x18DB  0x2C 0x80       CALLB 0x80     // Parser.Check
0x18DD  0x2E 0x06       JZB 0x18E3 (+6)

                        // Directives.Directive();                              PreProcess.hs:833

0x18DF  0x2C 0xD4       CALLB 0xD4     // Directives.Directive

                        // }                                                    PreProcess.hs:834

0x18E1  0x2A 0x02       RETB 0x02

                        // bool allDefined = Directives.IsAllDefined();

0x18E3  0x44            PUSHI0
0x18E4  0x2C 0xD0       CALLB 0xD0     // Directives.IsAllDefined
0x18E6  0x4D            POPLOCALB02

                        // if (!allDefined)                                     PreProcess.hs:840

0x18E7  0x4F            PUSHLOCALB02
0x18E8  0x2F 0x15       JNZB 0x18FD (+21)

                        // if (Parser.Check(HopperToken.Directive))             PreProcess.hs:844

0x18EA  0x1A 0x06       PUSHIB 0x06
0x18EC  0x2C 0x80       CALLB 0x80     // Parser.Check
0x18EE  0x2F 0x0C       JNZB 0x18FA (+12)

                        // if (Parser.Check(HopperToken.EOF))                   PreProcess.hs:848

0x18F0  0x1A 0x2D       PUSHIB 0x2D
0x18F2  0x2C 0x80       CALLB 0x80     // Parser.Check
0x18F4  0x2F 0x06       JNZB 0x18FA (+6)

                        // Parser.Advance(); // gobble gobble                   PreProcess.hs:852

0x18F6  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    PreProcess.hs:853

0x18F8  0x30 0xF2       JB 0x18EA (-14)

                        // }                                                    PreProcess.hs:854

0x18FA  0x33 0xB9 0x01  JW 0x1AB3 (+441)

                        // else if (Parser.Check(HopperToken.LBrace))           PreProcess.hs:855

0x18FD  0x1A 0x12       PUSHIB 0x12
0x18FF  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1901  0x2E 0x07       JZB 0x1908 (+7)

                        // mainMethodDeclaration();                             PreProcess.hs:857

0x1903  0x2C 0x0A       CALLB 0x0A     // PreProcess.mainMethodDeclaration

                        // }                                                    PreProcess.hs:858

0x1905  0x33 0xAE 0x01  JW 0x1AB3 (+430)

                        // else if (Parser.Check(HopperToken.Keyword, "const"))

0x1908  0x1A 0x05       PUSHIB 0x05
0x190A  0x37 0xB4 0x01  PUSHIW 0x01B4
0x190D  0x1A 0x05       PUSHIB 0x05
0x190F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1911  0x2C 0x81       CALLB 0x81     // Parser.Check
0x1913  0x2E 0x07       JZB 0x191A (+7)

                        // constDeclaration();                                  PreProcess.hs:861

0x1915  0x2C 0x05       CALLB 0x05     // PreProcess.constDeclaration

                        // }                                                    PreProcess.hs:862

0x1917  0x33 0x9C 0x01  JW 0x1AB3 (+412)

                        // else if (Parser.Check(HopperToken.Keyword, "enum"))

0x191A  0x1A 0x05       PUSHIB 0x05
0x191C  0x37 0xB9 0x01  PUSHIW 0x01B9
0x191F  0x1A 0x04       PUSHIB 0x04
0x1921  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1923  0x2C 0x81       CALLB 0x81     // Parser.Check
0x1925  0x2E 0x07       JZB 0x192C (+7)

                        // enumDeclaration();                                   PreProcess.hs:865

0x1927  0x2C 0x07       CALLB 0x07     // PreProcess.enumDeclaration

                        // }                                                    PreProcess.hs:866

0x1929  0x33 0x8A 0x01  JW 0x1AB3 (+394)

                        // else if (Parser.Check(HopperToken.Keyword, "flags"))

0x192C  0x1A 0x05       PUSHIB 0x05
0x192E  0x37 0xBD 0x01  PUSHIW 0x01BD
0x1931  0x1A 0x05       PUSHIB 0x05
0x1933  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1935  0x2C 0x81       CALLB 0x81     // Parser.Check
0x1937  0x2E 0x07       JZB 0x193E (+7)

                        // flagsDeclaration();                                  PreProcess.hs:869

0x1939  0x2C 0x08       CALLB 0x08     // PreProcess.flagsDeclaration

                        // }                                                    PreProcess.hs:870

0x193B  0x33 0x78 0x01  JW 0x1AB3 (+376)

                        // else if (Parser.Check(HopperToken.Keyword, "uses"))

0x193E  0x1A 0x05       PUSHIB 0x05
0x1940  0x37 0xC2 0x01  PUSHIW 0x01C2
0x1943  0x1A 0x04       PUSHIB 0x04
0x1945  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1947  0x2C 0x81       CALLB 0x81     // Parser.Check
0x1949  0x2E 0x07       JZB 0x1950 (+7)

                        // usesDeclaration();                                   PreProcess.hs:873

0x194B  0x2C 0x09       CALLB 0x09     // PreProcess.usesDeclaration

                        // }                                                    PreProcess.hs:874

0x194D  0x33 0x66 0x01  JW 0x1AB3 (+358)

                        // <string, string> idToken;                            PreProcess.hs:879

0x1950  0x1A 0x0F       PUSHIB 0x0F
0x1952  0x1A 0x0F       PUSHIB 0x0F
0x1954  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // bool isFunction = false;                             PreProcess.hs:880

0x1956  0x44            PUSHI0

                        // bool isProperty = false;                             PreProcess.hs:881

0x1957  0x44            PUSHI0

                        // bool isMethod = false;                               PreProcess.hs:882

0x1958  0x44            PUSHI0

                        // bool isGlobal = false;                               PreProcess.hs:883

0x1959  0x44            PUSHI0

                        // string typeString;                                   PreProcess.hs:885

0x195A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool isType = false;                                 PreProcess.hs:886

0x195C  0x44            PUSHI0

                        // <string,string> peekNextToken = Parser.Peek();

0x195D  0x1A 0x0F       PUSHIB 0x0F
0x195F  0x1A 0x0F       PUSHIB 0x0F
0x1961  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1963  0x2C 0x82       CALLB 0x82     // Parser.Peek
0x1965  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // if (HopperToken.LParen != Token.GetType(peekNextToken))

0x1967  0x1A 0x10       PUSHIB 0x10
0x1969  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x196B  0x2C 0x46       CALLB 0x46     // Token.GetType
0x196D  0x06            NE
0x196E  0x2E 0x08       JZB 0x1976 (+8)

                        // isType = tryParseTypeString(ref typeString);

0x1970  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
0x1972  0x2C 0x03       CALLB 0x03     // PreProcess.tryParseTypeString
0x1974  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // if (isType)                                          PreProcess.hs:893

0x1976  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1978  0x2E 0x64       JZB 0x19DC (+100)

                        // if (Parser.Check(HopperToken.Identifier) || Parser.Check(HopperToken.DottedIdentifier))

0x197A  0x1A 0x03       PUSHIB 0x03
0x197C  0x2C 0x80       CALLB 0x80     // Parser.Check
0x197E  0x27 0x00       DUP 0x00
0x1980  0x2F 0x07       JNZB 0x1987 (+7)
0x1982  0x1A 0x02       PUSHIB 0x02
0x1984  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1986  0x0B            BOOLOR
0x1987  0x2E 0x40       JZB 0x19C7 (+64)

                        // idToken = Parser.CurrentToken;                       PreProcess.hs:897

0x1989  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x198B  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance();                                    PreProcess.hs:898

0x198D  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (Parser.Check(HopperToken.LParen))                PreProcess.hs:899

0x198F  0x1A 0x10       PUSHIB 0x10
0x1991  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1993  0x2E 0x07       JZB 0x199A (+7)

                        // isFunction = true;                                   PreProcess.hs:902

0x1995  0x45            PUSHI1
0x1996  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // }                                                    PreProcess.hs:903

0x1998  0x30 0x41       JB 0x19D9 (+65)

                        // else if (Parser.Check(HopperToken.SemiColon) || Parser.Check(HopperToken.Assign))

0x199A  0x1A 0x0C       PUSHIB 0x0C
0x199C  0x2C 0x80       CALLB 0x80     // Parser.Check
0x199E  0x27 0x00       DUP 0x00
0x19A0  0x2F 0x07       JNZB 0x19A7 (+7)
0x19A2  0x1A 0x2C       PUSHIB 0x2C
0x19A4  0x2C 0x80       CALLB 0x80     // Parser.Check
0x19A6  0x0B            BOOLOR
0x19A7  0x2E 0x07       JZB 0x19AE (+7)

                        // isGlobal = true;                                     PreProcess.hs:907

0x19A9  0x45            PUSHI1
0x19AA  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // }                                                    PreProcess.hs:908

0x19AC  0x30 0x2D       JB 0x19D9 (+45)

                        // else if (Parser.Check(HopperToken.LBrace))           PreProcess.hs:909

0x19AE  0x1A 0x12       PUSHIB 0x12
0x19B0  0x2C 0x80       CALLB 0x80     // Parser.Check
0x19B2  0x2E 0x07       JZB 0x19B9 (+7)

                        // isProperty = true;                                   PreProcess.hs:912

0x19B4  0x45            PUSHI1
0x19B5  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // }                                                    PreProcess.hs:913

0x19B7  0x30 0x22       JB 0x19D9 (+34)

                        // Parser.Error("'(' or ';' expected");                 PreProcess.hs:916

0x19B9  0x37 0xC6 0x01  PUSHIW 0x01C6
0x19BC  0x1A 0x13       PUSHIB 0x13
0x19BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19C0  0x2C 0x79       CALLB 0x79     // Parser.Error

                        // break;                                               PreProcess.hs:917

0x19C2  0x28 0x10       DECSP 0x10
0x19C4  0x33 0xEF 0x00  JW 0x1AB3 (+239)

                        // Parser.ErrorAtCurrent("identifier expected D, " + typeString);

0x19C7  0x37 0xD9 0x01  PUSHIW 0x01D9
0x19CA  0x1A 0x17       PUSHIB 0x17
0x19CC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x19CE  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x19D0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x19D2  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:923

0x19D4  0x28 0x10       DECSP 0x10
0x19D6  0x33 0xDD 0x00  JW 0x1AB3 (+221)

                        // } // isType                                          PreProcess.hs:925

0x19D9  0x33 0x92 0x00  JW 0x1A6B (+146)

                        // else if (Parser.Check(HopperToken.Identifier) || Parser.Check(HopperToken.DottedIdentifier))

0x19DC  0x1A 0x03       PUSHIB 0x03
0x19DE  0x2C 0x80       CALLB 0x80     // Parser.Check
0x19E0  0x27 0x00       DUP 0x00
0x19E2  0x2F 0x07       JNZB 0x19E9 (+7)
0x19E4  0x1A 0x02       PUSHIB 0x02
0x19E6  0x2C 0x80       CALLB 0x80     // Parser.Check
0x19E8  0x0B            BOOLOR
0x19E9  0x31 0x82 0x00  JZW 0x1A6B (+130)

                        // idToken = Parser.CurrentToken;                       PreProcess.hs:928

0x19EC  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x19EE  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance();                                    PreProcess.hs:929

0x19F0  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (Parser.Check(HopperToken.Identifier) || Parser.Check(HopperToken.DottedIdentifier))

0x19F2  0x1A 0x03       PUSHIB 0x03
0x19F4  0x2C 0x80       CALLB 0x80     // Parser.Check
0x19F6  0x27 0x00       DUP 0x00
0x19F8  0x2F 0x07       JNZB 0x19FF (+7)
0x19FA  0x1A 0x02       PUSHIB 0x02
0x19FC  0x2C 0x80       CALLB 0x80     // Parser.Check
0x19FE  0x0B            BOOLOR
0x19FF  0x2E 0x5B       JZB 0x1A5A (+91)

                        // <string,string> typeToken = idToken;                 PreProcess.hs:933

0x1A01  0x1A 0x0F       PUSHIB 0x0F
0x1A03  0x1A 0x0F       PUSHIB 0x0F
0x1A05  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1A07  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1A09  0x57 0x14       POPCOPYLOCALB 0x14 (BP+20)

                        // idToken = Parser.CurrentToken;                       PreProcess.hs:934

0x1A0B  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x1A0D  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance();                                    PreProcess.hs:935

0x1A0F  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (Parser.Check(HopperToken.LParen))                PreProcess.hs:937

0x1A11  0x1A 0x10       PUSHIB 0x10
0x1A13  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1A15  0x2E 0x07       JZB 0x1A1C (+7)

                        // isFunction = true;                                   PreProcess.hs:940

0x1A17  0x45            PUSHI1
0x1A18  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // }                                                    PreProcess.hs:941

0x1A1A  0x30 0x2F       JB 0x1A49 (+47)

                        // else if (Parser.Check(HopperToken.SemiColon) || Parser.Check(HopperToken.Assign))

0x1A1C  0x1A 0x0C       PUSHIB 0x0C
0x1A1E  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1A20  0x27 0x00       DUP 0x00
0x1A22  0x2F 0x07       JNZB 0x1A29 (+7)
0x1A24  0x1A 0x2C       PUSHIB 0x2C
0x1A26  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1A28  0x0B            BOOLOR
0x1A29  0x2E 0x07       JZB 0x1A30 (+7)

                        // isGlobal = true;                                     PreProcess.hs:945

0x1A2B  0x45            PUSHI1
0x1A2C  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // }                                                    PreProcess.hs:946

0x1A2E  0x30 0x1B       JB 0x1A49 (+27)

                        // else if (Parser.Check(HopperToken.LBrace))           PreProcess.hs:947

0x1A30  0x1A 0x12       PUSHIB 0x12
0x1A32  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1A34  0x2E 0x07       JZB 0x1A3B (+7)

                        // isProperty = true;                                   PreProcess.hs:950

0x1A36  0x45            PUSHI1
0x1A37  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // }                                                    PreProcess.hs:951

0x1A39  0x30 0x10       JB 0x1A49 (+16)

                        // Parser.ErrorAtCurrent("'(' or ';' expected");

0x1A3B  0x37 0xC6 0x01  PUSHIW 0x01C6
0x1A3E  0x1A 0x13       PUSHIB 0x13
0x1A40  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A42  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:955

0x1A44  0x28 0x12       DECSP 0x12
0x1A46  0x33 0x6D 0x00  JW 0x1AB3 (+109)

                        // typeString = typeToken["lexeme"];                    PreProcess.hs:957

0x1A49  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x1A4B  0x37 0x5B 0x01  PUSHIW 0x015B
0x1A4E  0x1A 0x06       PUSHIB 0x06
0x1A50  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1A52  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1A54  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // } // two identifiers                                 PreProcess.hs:958

0x1A56  0x28 0x02       DECSP 0x02
0x1A58  0x30 0x13       JB 0x1A6B (+19)

                        // if (!Parser.Check(HopperToken.LParen))               PreProcess.hs:962

0x1A5A  0x1A 0x10       PUSHIB 0x10
0x1A5C  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1A5E  0x2F 0x0A       JNZB 0x1A68 (+10)

                        // Parser.ErrorAtCurrent('(');                          PreProcess.hs:964

0x1A60  0x1A 0x28       PUSHIB 0x28
0x1A62  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:965

0x1A64  0x28 0x10       DECSP 0x10
0x1A66  0x30 0x4D       JB 0x1AB3 (+77)

                        // isMethod = true;                                     PreProcess.hs:967

0x1A68  0x45            PUSHI1
0x1A69  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // if (isFunction)                                      PreProcess.hs:971

0x1A6B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1A6D  0x2E 0x0C       JZB 0x1A79 (+12)

                        // functionDeclaration(idToken, typeString, isDelegate);

0x1A6F  0x56 0x04 0x0E  PUSHLOCALBB 0x0E04
0x1A72  0x4E            PUSHLOCALB00
0x1A73  0x2C 0x0D       CALLB 0x0D     // PreProcess.functionDeclaration

                        // isDelegate = false;                                  PreProcess.hs:974

0x1A75  0x44            PUSHI0
0x1A76  0x4C            POPLOCALB00

                        // }                                                    PreProcess.hs:975

0x1A77  0x30 0x2E       JB 0x1AA5 (+46)

                        // else if (isProperty)                                 PreProcess.hs:976

0x1A79  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x1A7B  0x2E 0x09       JZB 0x1A84 (+9)

                        // propertyDeclaration(idToken, typeString);            PreProcess.hs:978

0x1A7D  0x56 0x04 0x0E  PUSHLOCALBB 0x0E04
0x1A80  0x2C 0x0F       CALLB 0x0F     // PreProcess.propertyDeclaration

                        // }                                                    PreProcess.hs:979

0x1A82  0x30 0x23       JB 0x1AA5 (+35)

                        // else if (isMethod)                                   PreProcess.hs:980

0x1A84  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x1A86  0x2E 0x0B       JZB 0x1A91 (+11)

                        // methodDeclaration(idToken, isDelegate);              PreProcess.hs:982

0x1A88  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1A8A  0x4E            PUSHLOCALB00
0x1A8B  0x2C 0x0C       CALLB 0x0C     // PreProcess.methodDeclaration

                        // isDelegate = false;                                  PreProcess.hs:983

0x1A8D  0x44            PUSHI0
0x1A8E  0x4C            POPLOCALB00

                        // }                                                    PreProcess.hs:984

0x1A8F  0x30 0x16       JB 0x1AA5 (+22)

                        // else if (isGlobal)                                   PreProcess.hs:985

0x1A91  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1A93  0x2E 0x09       JZB 0x1A9C (+9)

                        // globalDeclaration(idToken, typeString);              PreProcess.hs:987

0x1A95  0x56 0x04 0x0E  PUSHLOCALBB 0x0E04
0x1A98  0x2C 0x10       CALLB 0x10     // PreProcess.globalDeclaration

                        // }                                                    PreProcess.hs:988

0x1A9A  0x30 0x0B       JB 0x1AA5 (+11)

                        // Parser.ErrorAtCurrent("function, method, property or global declaration expected");

0x1A9C  0x37 0xF0 0x01  PUSHIW 0x01F0
0x1A9F  0x1A 0x39       PUSHIB 0x39
0x1AA1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AA3  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // if (isDelegate)                                      PreProcess.hs:993

0x1AA5  0x4E            PUSHLOCALB00
0x1AA6  0x2E 0x0B       JZB 0x1AB1 (+11)

                        // Parser.ErrorAtCurrent("invalid delegate declaration");

0x1AA8  0x37 0x29 0x02  PUSHIW 0x0229
0x1AAB  0x1A 0x1C       PUSHIB 0x1C
0x1AAD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AAF  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:997

0x1AB1  0x28 0x10       DECSP 0x10

                        // } // not directive                                   PreProcess.hs:1000

0x1AB3  0x28 0x02       DECSP 0x02

                        // } // declaration()                                   PreProcess.hs:1001

0x1AB5  0x2A 0x02       RETB 0x02


// PreProcess.hs:452
// ####  PreProcess.mainMethodDeclaration(..)  ####                             0x000A

0x1AB7  0x49            ENTER

                        // <string> blockPos = walkBlock();                     PreProcess.hs:455

0x1AB8  0x1A 0x0F       PUSHIB 0x0F
0x1ABA  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1ABC  0x2C 0x04       CALLB 0x04     // PreProcess.walkBlock
0x1ABE  0x5D            POPCOPYLOCALB00

                        // if (HadError)                                        PreProcess.hs:456

0x1ABF  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1AC1  0x2E 0x05       JZB 0x1AC6 (+5)

                        // break;                                               PreProcess.hs:458

0x1AC3  0x28 0x02       DECSP 0x02
0x1AC5  0x4A            RET0

                        // < <string > > arguments;                             PreProcess.hs:460

0x1AC6  0x1A 0x19       PUSHIB 0x19
0x1AC8  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // Symbols.AddMethod(currentUnit + ".main", arguments, blockPos);

0x1ACA  0x20 0x02       PUSHGLOBALB 0x02
0x1ACC  0x37 0x45 0x02  PUSHIW 0x0245
0x1ACF  0x1A 0x05       PUSHIB 0x05
0x1AD1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AD3  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1AD5  0x4F            PUSHLOCALB02
0x1AD6  0x4E            PUSHLOCALB00
0x1AD7  0x2C 0xBC       CALLB 0xBC     // Symbols.AddMethod

                        // break;                                               PreProcess.hs:462

0x1AD9  0x28 0x04       DECSP 0x04
0x1ADB  0x4A            RET0


// PreProcess.hs:256
// ####  PreProcess.constDeclaration(..)  ####                                  0x0005

0x1ADC  0x49            ENTER

                        // string typeString;                                   PreProcess.hs:257

0x1ADD  0x24 0x02       SYSCALL0 0x02  // String.New

                        // Parser.Advance(); // const                           PreProcess.hs:260

0x1ADF  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (!tryParseTypeString(ref typeString))             PreProcess.hs:261

0x1AE1  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x1AE3  0x2C 0x03       CALLB 0x03     // PreProcess.tryParseTypeString
0x1AE5  0x2F 0x0D       JNZB 0x1AF2 (+13)

                        // Parser.ErrorAtCurrent("simple type expected");

0x1AE7  0x37 0x4A 0x02  PUSHIW 0x024A
0x1AEA  0x1A 0x14       PUSHIB 0x14
0x1AEC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1AEE  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:264

0x1AF0  0x2A 0x02       RETB 0x02

                        // if (!isValueType(typeString) && (typeString != "float") && (typeString != "long") && (typeString != "string"))

0x1AF2  0x4E            PUSHLOCALB00
0x1AF3  0x2C 0x02       CALLB 0x02     // PreProcess.isValueType
0x1AF5  0x41            BOOLNOT
0x1AF6  0x27 0x00       DUP 0x00
0x1AF8  0x2E 0x31       JZB 0x1B29 (+49)
0x1AFA  0x4E            PUSHLOCALB00
0x1AFB  0x37 0x5E 0x02  PUSHIW 0x025E
0x1AFE  0x1A 0x05       PUSHIB 0x05
0x1B00  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B02  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1B04  0x44            PUSHI0
0x1B05  0x06            NE
0x1B06  0x0C            BOOLAND
0x1B07  0x27 0x00       DUP 0x00
0x1B09  0x2E 0x20       JZB 0x1B29 (+32)
0x1B0B  0x4E            PUSHLOCALB00
0x1B0C  0x37 0x63 0x02  PUSHIW 0x0263
0x1B0F  0x1A 0x04       PUSHIB 0x04
0x1B11  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B13  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1B15  0x44            PUSHI0
0x1B16  0x06            NE
0x1B17  0x0C            BOOLAND
0x1B18  0x27 0x00       DUP 0x00
0x1B1A  0x2E 0x0F       JZB 0x1B29 (+15)
0x1B1C  0x4E            PUSHLOCALB00
0x1B1D  0x37 0x67 0x02  PUSHIW 0x0267
0x1B20  0x1A 0x06       PUSHIB 0x06
0x1B22  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B24  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1B26  0x44            PUSHI0
0x1B27  0x06            NE
0x1B28  0x0C            BOOLAND
0x1B29  0x2E 0x0D       JZB 0x1B36 (+13)

                        // Parser.ErrorAtCurrent("simple type expected");

0x1B2B  0x37 0x4A 0x02  PUSHIW 0x024A
0x1B2E  0x1A 0x14       PUSHIB 0x14
0x1B30  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B32  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:269

0x1B34  0x2A 0x02       RETB 0x02

                        // <string,string> idToken = Parser.CurrentToken;

0x1B36  0x1A 0x0F       PUSHIB 0x0F
0x1B38  0x1A 0x0F       PUSHIB 0x0F
0x1B3A  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1B3C  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x1B3E  0x5E            POPCOPYLOCALB02

                        // string identifier;                                   PreProcess.hs:272

0x1B3F  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool public;                                         PreProcess.hs:273

0x1B41  0x44            PUSHI0

                        // if (!normalizeIdentifier(idToken, ref identifier, ref public, true)) // noDuplicates

0x1B42  0x4F            PUSHLOCALB02
0x1B43  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x1B45  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x1B47  0x45            PUSHI1
0x1B48  0x2C 0x01       CALLB 0x01     // PreProcess.normalizeIdentifier
0x1B4A  0x2F 0x06       JNZB 0x1B50 (+6)

                        // break;                                               PreProcess.hs:276

0x1B4C  0x28 0x06       DECSP 0x06
0x1B4E  0x2A 0x02       RETB 0x02

                        // Parser.Advance();                                    PreProcess.hs:278

0x1B50  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // Parser.Consume(HopperToken.Assign, "'=' expected");

0x1B52  0x1A 0x2C       PUSHIB 0x2C
0x1B54  0x37 0x6D 0x02  PUSHIW 0x026D
0x1B57  0x1A 0x0C       PUSHIB 0x0C
0x1B59  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B5B  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // if (HadError)                                        PreProcess.hs:280

0x1B5D  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1B5F  0x2E 0x06       JZB 0x1B65 (+6)

                        // break;                                               PreProcess.hs:282

0x1B61  0x28 0x06       DECSP 0x06
0x1B63  0x2A 0x02       RETB 0x02

                        // string value = ParseConstantExpression(typeString);

0x1B65  0x24 0x02       SYSCALL0 0x02  // String.New
0x1B67  0x4E            PUSHLOCALB00
0x1B68  0x2C 0xCD       CALLB 0xCD     // Constant.ParseConstantExpression
0x1B6A  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (HadError)                                        PreProcess.hs:285

0x1B6C  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1B6E  0x2E 0x06       JZB 0x1B74 (+6)

                        // break;                                               PreProcess.hs:287

0x1B70  0x28 0x08       DECSP 0x08
0x1B72  0x2A 0x02       RETB 0x02

                        // Symbols.AddConstant(idToken["lexeme"], value);

0x1B74  0x4F            PUSHLOCALB02
0x1B75  0x37 0x5B 0x01  PUSHIW 0x015B
0x1B78  0x1A 0x06       PUSHIB 0x06
0x1B7A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B7C  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1B7E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x1B80  0x2C 0x97       CALLB 0x97     // Symbols.AddConstant

                        // Parser.Consume(HopperToken.SemiColon, "';' expected");

0x1B82  0x1A 0x0C       PUSHIB 0x0C
0x1B84  0x37 0xCD 0x01  PUSHIW 0x01CD
0x1B87  0x1A 0x0C       PUSHIB 0x0C
0x1B89  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1B8B  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // break;                                               PreProcess.hs:292

0x1B8D  0x28 0x08       DECSP 0x08
0x1B8F  0x2A 0x02       RETB 0x02


// PreProcess.hs:411
// ####  PreProcess.enumDeclaration(..)  ####                                   0x0007


                        // enumDeclaration(false);                              PreProcess.hs:412

0x1B91  0x5F 0x01       ENTERB 0x01

                        // enumDeclaration(false);                              PreProcess.hs:412

0x1B93  0x2C 0x06       CALLB 0x06     // PreProcess.enumDeclaration

                        // }                                                    PreProcess.hs:413

0x1B95  0x4A            RET0


// PreProcess.hs:415
// ####  PreProcess.flagsDeclaration(..)  ####                                  0x0008

0x1B96  0x49            ENTER

                        // enumDeclaration(true);                               PreProcess.hs:416

0x1B97  0x45            PUSHI1
0x1B98  0x2C 0x06       CALLB 0x06     // PreProcess.enumDeclaration

                        // }                                                    PreProcess.hs:417

0x1B9A  0x4A            RET0


// PreProcess.hs:420
// ####  PreProcess.usesDeclaration(..)  ####                                   0x0009

0x1B9B  0x49            ENTER

                        // Parser.Advance(); // uses                            PreProcess.hs:423

0x1B9C  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (!Parser.Check(HopperToken.StringConstant))

0x1B9E  0x1A 0x0B       PUSHIB 0x0B
0x1BA0  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1BA2  0x2F 0x0C       JNZB 0x1BAE (+12)

                        // Parser.ErrorAtCurrent("path of unit source expected");

0x1BA4  0x37 0x79 0x02  PUSHIW 0x0279
0x1BA7  0x1A 0x1C       PUSHIB 0x1C
0x1BA9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BAB  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:427

0x1BAD  0x4A            RET0

                        // Parser.Advance();                                    PreProcess.hs:429

0x1BAE  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // <string, string> previousToken = Parser.PreviousToken;

0x1BB0  0x1A 0x0F       PUSHIB 0x0F
0x1BB2  0x1A 0x0F       PUSHIB 0x0F
0x1BB4  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1BB6  0x2C 0x72       CALLB 0x72     // Parser.PreviousToken_Get
0x1BB8  0x5D            POPCOPYLOCALB00

                        // string hsPath = previousToken["lexeme"];             PreProcess.hs:431

0x1BB9  0x24 0x02       SYSCALL0 0x02  // String.New
0x1BBB  0x4E            PUSHLOCALB00
0x1BBC  0x37 0x5B 0x01  PUSHIW 0x015B
0x1BBF  0x1A 0x06       PUSHIB 0x06
0x1BC1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BC3  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1BC5  0x5E            POPCOPYLOCALB02

                        // string hsPathLower = hsPath.ToLower();               PreProcess.hs:432

0x1BC6  0x24 0x02       SYSCALL0 0x02  // String.New
0x1BC8  0x4F            PUSHLOCALB02
0x1BC9  0x34 0x13 0x01  CALLW 0x0113   // String.ToLower
0x1BCC  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (!hsPathLower.EndsWith(".hs"))                    PreProcess.hs:433

0x1BCE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1BD0  0x1A 0x08       PUSHIB 0x08
0x1BD2  0x1A 0x03       PUSHIB 0x03
0x1BD4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BD6  0x25 0x07       SYSCALL1 0x07  // String.EndsWith
0x1BD8  0x2F 0x0C       JNZB 0x1BE4 (+12)

                        // hsPath = hsPath + ".hs";                             PreProcess.hs:435

0x1BDA  0x4F            PUSHLOCALB02
0x1BDB  0x1A 0x08       PUSHIB 0x08
0x1BDD  0x1A 0x03       PUSHIB 0x03
0x1BDF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BE1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1BE3  0x5E            POPCOPYLOCALB02

                        // if (!File.Exists(hsPath))                            PreProcess.hs:437

0x1BE4  0x4F            PUSHLOCALB02
0x1BE5  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x1BE7  0x2F 0x17       JNZB 0x1BFE (+23)

                        // Parser.ErrorAtCurrent("'" + hsPath + "' not found");

0x1BE9  0x1A 0x27       PUSHIB 0x27
0x1BEB  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1BED  0x4F            PUSHLOCALB02
0x1BEE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1BF0  0x37 0x95 0x02  PUSHIW 0x0295
0x1BF3  0x1A 0x0B       PUSHIB 0x0B
0x1BF5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1BF7  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1BF9  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:440

0x1BFB  0x28 0x06       DECSP 0x06
0x1BFD  0x4A            RET0

                        // hsPathLower = hsPath.ToLower();                      PreProcess.hs:442

0x1BFE  0x4F            PUSHLOCALB02
0x1BFF  0x34 0x13 0x01  CALLW 0x0113   // String.ToLower
0x1C02  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (!unitsParsed.Contains(hsPathLower))              PreProcess.hs:443

0x1C04  0x20 0x00       PUSHGLOBALB 0x00
0x1C06  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1C08  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x1C0A  0x2F 0x09       JNZB 0x1C13 (+9)

                        // unitsParsed[hsPathLower] = false; // false means we're aware of it but we haven't parsed it yet

0x1C0C  0x20 0x00       PUSHGLOBALB 0x00
0x1C0E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1C10  0x44            PUSHI0
0x1C11  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // break;                                               PreProcess.hs:447

0x1C13  0x28 0x06       DECSP 0x06
0x1C15  0x4A            RET0


// PreProcess.hs:79
// ####  PreProcess.tryParseTypeString(..)  ####                                0x0003


                        // bool genericKAllowed = (currentUnit == "Dictionary") || (currentUnit == "Pair");

0x1C16  0x5F 0x01       ENTERB 0x01

                        // bool genericKAllowed = (currentUnit == "Dictionary") || (currentUnit == "Pair");

0x1C18  0x20 0x02       PUSHGLOBALB 0x02
0x1C1A  0x37 0xA0 0x02  PUSHIW 0x02A0
0x1C1D  0x1A 0x0A       PUSHIB 0x0A
0x1C1F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C21  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1C23  0x44            PUSHI0
0x1C24  0x05            EQ
0x1C25  0x27 0x00       DUP 0x00
0x1C27  0x2F 0x10       JNZB 0x1C37 (+16)
0x1C29  0x20 0x02       PUSHGLOBALB 0x02
0x1C2B  0x37 0xAA 0x02  PUSHIW 0x02AA
0x1C2E  0x1A 0x04       PUSHIB 0x04
0x1C30  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C32  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1C34  0x44            PUSHI0
0x1C35  0x05            EQ
0x1C36  0x0B            BOOLOR
0x1C37  0x4C            POPLOCALB00

                        // bool genericVAllowed = genericKAllowed || (currentUnit == "Array") || (currentUnit == "List");

0x1C38  0x44            PUSHI0
0x1C39  0x4E            PUSHLOCALB00
0x1C3A  0x27 0x00       DUP 0x00
0x1C3C  0x2F 0x22       JNZB 0x1C5E (+34)
0x1C3E  0x20 0x02       PUSHGLOBALB 0x02
0x1C40  0x37 0xAE 0x02  PUSHIW 0x02AE
0x1C43  0x1A 0x05       PUSHIB 0x05
0x1C45  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C47  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1C49  0x44            PUSHI0
0x1C4A  0x05            EQ
0x1C4B  0x0B            BOOLOR
0x1C4C  0x27 0x00       DUP 0x00
0x1C4E  0x2F 0x10       JNZB 0x1C5E (+16)
0x1C50  0x20 0x02       PUSHGLOBALB 0x02
0x1C52  0x37 0xB3 0x02  PUSHIW 0x02B3
0x1C55  0x1A 0x04       PUSHIB 0x04
0x1C57  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C59  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1C5B  0x44            PUSHI0
0x1C5C  0x05            EQ
0x1C5D  0x0B            BOOLOR
0x1C5E  0x4D            POPLOCALB02

                        // bool success = false;                                PreProcess.hs:83

0x1C5F  0x44            PUSHI0

                        // bool isSimple = false;                               PreProcess.hs:86

0x1C60  0x44            PUSHI0

                        // <string,string> typeToken = Parser.CurrentToken;

0x1C61  0x1A 0x0F       PUSHIB 0x0F
0x1C63  0x1A 0x0F       PUSHIB 0x0F
0x1C65  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x1C67  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x1C69  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (Parser.Check(HopperToken.Keyword, "|bool|byte|char|uint|int|long|float|string|type|variant|file|directory|"))

0x1C6B  0x1A 0x05       PUSHIB 0x05
0x1C6D  0x37 0xB7 0x02  PUSHIW 0x02B7
0x1C70  0x1A 0x47       PUSHIB 0x47
0x1C72  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C74  0x2C 0x81       CALLB 0x81     // Parser.Check
0x1C76  0x2E 0x05       JZB 0x1C7B (+5)

                        // isSimple = true;                                     PreProcess.hs:90

0x1C78  0x45            PUSHI1
0x1C79  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (Parser.Check(HopperToken.Identifier) || Parser.Check(HopperToken.DottedIdentifier))

0x1C7B  0x1A 0x03       PUSHIB 0x03
0x1C7D  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1C7F  0x27 0x00       DUP 0x00
0x1C81  0x2F 0x07       JNZB 0x1C88 (+7)
0x1C83  0x1A 0x02       PUSHIB 0x02
0x1C85  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1C87  0x0B            BOOLOR
0x1C88  0x2E 0x49       JZB 0x1CD1 (+73)

                        // if (genericKAllowed && (typeToken["lexeme"] == "K"))

0x1C8A  0x4E            PUSHLOCALB00
0x1C8B  0x27 0x00       DUP 0x00
0x1C8D  0x2E 0x16       JZB 0x1CA3 (+22)
0x1C8F  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x1C91  0x37 0x5B 0x01  PUSHIW 0x015B
0x1C94  0x1A 0x06       PUSHIB 0x06
0x1C96  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1C98  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1C9A  0x1A 0x4B       PUSHIB 0x4B
0x1C9C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1C9E  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1CA0  0x44            PUSHI0
0x1CA1  0x05            EQ
0x1CA2  0x0C            BOOLAND
0x1CA3  0x2E 0x07       JZB 0x1CAA (+7)

                        // isSimple = true;                                     PreProcess.hs:96

0x1CA5  0x45            PUSHI1
0x1CA6  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // }                                                    PreProcess.hs:97

0x1CA8  0x30 0x29       JB 0x1CD1 (+41)

                        // else if (genericVAllowed && (typeToken["lexeme"] == "V"))

0x1CAA  0x4F            PUSHLOCALB02
0x1CAB  0x27 0x00       DUP 0x00
0x1CAD  0x2E 0x16       JZB 0x1CC3 (+22)
0x1CAF  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x1CB1  0x37 0x5B 0x01  PUSHIW 0x015B
0x1CB4  0x1A 0x06       PUSHIB 0x06
0x1CB6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CB8  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1CBA  0x1A 0x56       PUSHIB 0x56
0x1CBC  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1CBE  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1CC0  0x44            PUSHI0
0x1CC1  0x05            EQ
0x1CC2  0x0C            BOOLAND
0x1CC3  0x2E 0x07       JZB 0x1CCA (+7)

                        // isSimple = true;                                     PreProcess.hs:100

0x1CC5  0x45            PUSHI1
0x1CC6  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // }                                                    PreProcess.hs:101

0x1CC8  0x30 0x09       JB 0x1CD1 (+9)

                        // isSimple = true; // on first pass, just assume it is a valid named value type

0x1CCA  0x45            PUSHI1
0x1CCB  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // Symbols.DeferValidation(typeToken);                  PreProcess.hs:105

0x1CCD  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x1CCF  0x2C 0xA9       CALLB 0xA9     // Symbols.DeferValidation

                        // if (isSimple)                                        PreProcess.hs:108

0x1CD1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1CD3  0x31 0xAF 0x00  JZW 0x1D82 (+175)

                        // success = true;                                      PreProcess.hs:111

0x1CD6  0x45            PUSHI1
0x1CD7  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // typeString = typeString + typeToken["lexeme"];

0x1CD9  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1CDB  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x1CDD  0x37 0x5B 0x01  PUSHIW 0x015B
0x1CE0  0x1A 0x06       PUSHIB 0x06
0x1CE2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1CE4  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x1CE6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1CE8  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // Parser.Advance();                                    PreProcess.hs:113

0x1CEA  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // bool arrayUnitV = false;                             PreProcess.hs:114

0x1CEC  0x44            PUSHI0

                        // if (Parser.Check(HopperToken.LBracket))              PreProcess.hs:115

0x1CED  0x1A 0x14       PUSHIB 0x14
0x1CEF  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1CF1  0x31 0x8D 0x00  JZW 0x1D7E (+141)

                        // if (!isValueType(typeString))                        PreProcess.hs:118

0x1CF4  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1CF6  0x2C 0x02       CALLB 0x02     // PreProcess.isValueType
0x1CF8  0x2F 0x36       JNZB 0x1D2E (+54)

                        // if ((currentUnit == "Array") && (typeString == "V"))

0x1CFA  0x20 0x02       PUSHGLOBALB 0x02
0x1CFC  0x37 0xAE 0x02  PUSHIW 0x02AE
0x1CFF  0x1A 0x05       PUSHIB 0x05
0x1D01  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D03  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1D05  0x44            PUSHI0
0x1D06  0x05            EQ
0x1D07  0x27 0x00       DUP 0x00
0x1D09  0x2E 0x0D       JZB 0x1D16 (+13)
0x1D0B  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1D0D  0x1A 0x56       PUSHIB 0x56
0x1D0F  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1D11  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1D13  0x44            PUSHI0
0x1D14  0x05            EQ
0x1D15  0x0C            BOOLAND
0x1D16  0x2E 0x07       JZB 0x1D1D (+7)

                        // arrayUnitV = true;                                   PreProcess.hs:123

0x1D18  0x45            PUSHI1
0x1D19  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // }                                                    PreProcess.hs:124

0x1D1B  0x30 0x13       JB 0x1D2E (+19)

                        // Parser.ErrorAtCurrent("arrays can only contain value types");

0x1D1D  0x37 0xFE 0x02  PUSHIW 0x02FE
0x1D20  0x1A 0x23       PUSHIB 0x23
0x1D22  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D24  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // success = false;                                     PreProcess.hs:128

0x1D26  0x44            PUSHI0
0x1D27  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // break;                                               PreProcess.hs:129

0x1D29  0x28 0x06       DECSP 0x06
0x1D2B  0x33 0xAE 0x00  JW 0x1DD9 (+174)

                        // Parser.Advance(); // [                               PreProcess.hs:132

0x1D2E  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // typeString = typeString + "[";                       PreProcess.hs:133

0x1D30  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1D32  0x1A 0x5B       PUSHIB 0x5B
0x1D34  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1D36  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1D38  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // string value;                                        PreProcess.hs:134

0x1D3A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (arrayUnitV && Parser.Check(HopperToken.RBracket))

0x1D3C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x1D3E  0x27 0x00       DUP 0x00
0x1D40  0x2E 0x07       JZB 0x1D47 (+7)
0x1D42  0x1A 0x15       PUSHIB 0x15
0x1D44  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1D46  0x0C            BOOLAND
0x1D47  0x2F 0x0D       JNZB 0x1D54 (+13)

                        // value = ParseConstantExpression("uint");             PreProcess.hs:141

0x1D49  0x37 0xC7 0x02  PUSHIW 0x02C7
0x1D4C  0x1A 0x04       PUSHIB 0x04
0x1D4E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1D50  0x2C 0xCD       CALLB 0xCD     // Constant.ParseConstantExpression
0x1D52  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // typeString = typeString + value;                     PreProcess.hs:143

0x1D54  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1D56  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x1D58  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1D5A  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // if (!Parser.Check(HopperToken.RBracket))             PreProcess.hs:144

0x1D5C  0x1A 0x15       PUSHIB 0x15
0x1D5E  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1D60  0x2F 0x0E       JNZB 0x1D6E (+14)

                        // Parser.ErrorAtCurrent(']');                          PreProcess.hs:146

0x1D62  0x1A 0x5D       PUSHIB 0x5D
0x1D64  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // success = false;                                     PreProcess.hs:147

0x1D66  0x44            PUSHI0
0x1D67  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // break;                                               PreProcess.hs:148

0x1D69  0x28 0x08       DECSP 0x08
0x1D6B  0x33 0x6E 0x00  JW 0x1DD9 (+110)

                        // Parser.Advance(); // ]                               PreProcess.hs:150

0x1D6E  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // typeString = typeString + "]";                       PreProcess.hs:151

0x1D70  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1D72  0x1A 0x5D       PUSHIB 0x5D
0x1D74  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1D76  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1D78  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // break;                                               PreProcess.hs:153

0x1D7A  0x28 0x08       DECSP 0x08
0x1D7C  0x30 0x5D       JB 0x1DD9 (+93)

                        // }                                                    PreProcess.hs:155

0x1D7E  0x28 0x02       DECSP 0x02
0x1D80  0x30 0x57       JB 0x1DD7 (+87)

                        // else if (Parser.Check(HopperToken.LT))               PreProcess.hs:156

0x1D82  0x1A 0x16       PUSHIB 0x16
0x1D84  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1D86  0x2E 0x51       JZB 0x1DD7 (+81)

                        // Parser.Advance(); // <                               PreProcess.hs:158

0x1D88  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // typeString = typeString + "<";                       PreProcess.hs:160

0x1D8A  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1D8C  0x1A 0x3C       PUSHIB 0x3C
0x1D8E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1D90  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1D92  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // success = tryParseTypeString(ref typeString);

0x1D94  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1D96  0x2C 0x03       CALLB 0x03     // PreProcess.tryParseTypeString
0x1D98  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (success)                                         PreProcess.hs:162

0x1D9A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1D9C  0x2E 0x1A       JZB 0x1DB6 (+26)

                        // if (Parser.Check(HopperToken.Comma))                 PreProcess.hs:164

0x1D9E  0x1A 0x0D       PUSHIB 0x0D
0x1DA0  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1DA2  0x2E 0x14       JZB 0x1DB6 (+20)

                        // Parser.Advance(); // ,                               PreProcess.hs:167

0x1DA4  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // typeString = typeString + ",";                       PreProcess.hs:168

0x1DA6  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1DA8  0x1A 0x2C       PUSHIB 0x2C
0x1DAA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1DAC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1DAE  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // success = tryParseTypeString(ref typeString);

0x1DB0  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1DB2  0x2C 0x03       CALLB 0x03     // PreProcess.tryParseTypeString
0x1DB4  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (success)                                         PreProcess.hs:172

0x1DB6  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1DB8  0x2E 0x1F       JZB 0x1DD7 (+31)

                        // if (!Parser.Check(HopperToken.GT))                   PreProcess.hs:174

0x1DBA  0x1A 0x17       PUSHIB 0x17
0x1DBC  0x2C 0x80       CALLB 0x80     // Parser.Check
0x1DBE  0x2F 0x0D       JNZB 0x1DCB (+13)

                        // Parser.ErrorAtCurrent('>');                          PreProcess.hs:176

0x1DC0  0x1A 0x3E       PUSHIB 0x3E
0x1DC2  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // success = false;                                     PreProcess.hs:177

0x1DC4  0x44            PUSHI0
0x1DC5  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // break;                                               PreProcess.hs:178

0x1DC7  0x28 0x04       DECSP 0x04
0x1DC9  0x30 0x10       JB 0x1DD9 (+16)

                        // Parser.Advance(); // >                               PreProcess.hs:180

0x1DCB  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // typeString = typeString + ">";                       PreProcess.hs:181

0x1DCD  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x1DCF  0x1A 0x3E       PUSHIB 0x3E
0x1DD1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x1DD3  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1DD5  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // break;                                               PreProcess.hs:184

0x1DD7  0x28 0x04       DECSP 0x04

                        // return success;                                      PreProcess.hs:186

0x1DD9  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1DDB  0x2B 0x08       RETRETB 0x08


// PreProcess.hs:567
// ####  PreProcess.functionDeclaration(..)  ####                               0x000D

0x1DDD  0x49            ENTER

                        // string identifier;                                   PreProcess.hs:570

0x1DDE  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool public;                                         PreProcess.hs:571

0x1DE0  0x44            PUSHI0

                        // if (!normalizeIdentifier(idToken, ref identifier, ref public, false))

0x1DE1  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x1DE3  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x1DE5  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x1DE7  0x44            PUSHI0
0x1DE8  0x2C 0x01       CALLB 0x01     // PreProcess.normalizeIdentifier
0x1DEA  0x2F 0x06       JNZB 0x1DF0 (+6)

                        // break;                                               PreProcess.hs:574

0x1DEC  0x28 0x04       DECSP 0x04
0x1DEE  0x2A 0x06       RETB 0x06

                        // < <string > > arguments = argumentsDeclaration();

0x1DF0  0x1A 0x19       PUSHIB 0x19
0x1DF2  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1DF4  0x2C 0x0B       CALLB 0x0B     // PreProcess.argumentsDeclaration
0x1DF6  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (HadError)                                        PreProcess.hs:578

0x1DF8  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1DFA  0x2E 0x06       JZB 0x1E00 (+6)

                        // break;                                               PreProcess.hs:580

0x1DFC  0x28 0x06       DECSP 0x06
0x1DFE  0x2A 0x06       RETB 0x06

                        // if (isDelegate)                                      PreProcess.hs:582

0x1E00  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x1E02  0x2E 0x1F       JZB 0x1E21 (+31)

                        // Parser.Consume(HopperToken.SemiColon, "';' expected");

0x1E04  0x1A 0x0C       PUSHIB 0x0C
0x1E06  0x37 0xCD 0x01  PUSHIW 0x01CD
0x1E09  0x1A 0x0C       PUSHIB 0x0C
0x1E0B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E0D  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // if (HadError)                                        PreProcess.hs:585

0x1E0F  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1E11  0x2E 0x06       JZB 0x1E17 (+6)

                        // break;                                               PreProcess.hs:587

0x1E13  0x28 0x06       DECSP 0x06
0x1E15  0x2A 0x06       RETB 0x06

                        // Symbols.AddFunctionDelegate(identifier, arguments, returnTypeString);

0x1E17  0x4E            PUSHLOCALB00
0x1E18  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
0x1E1B  0x2C 0xBF       CALLB 0xBF     // Symbols.AddFunctionDelegate

                        // break;                                               PreProcess.hs:590

0x1E1D  0x28 0x06       DECSP 0x06
0x1E1F  0x2A 0x06       RETB 0x06

                        // <string> blockPos = walkBlock();                     PreProcess.hs:592

0x1E21  0x1A 0x0F       PUSHIB 0x0F
0x1E23  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1E25  0x2C 0x04       CALLB 0x04     // PreProcess.walkBlock
0x1E27  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if (HadError)                                        PreProcess.hs:593

0x1E29  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1E2B  0x2E 0x06       JZB 0x1E31 (+6)

                        // break;                                               PreProcess.hs:595

0x1E2D  0x28 0x08       DECSP 0x08
0x1E2F  0x2A 0x06       RETB 0x06

                        // Symbols.AddFunction(identifier, arguments, returnTypeString, blockPos);

0x1E31  0x4E            PUSHLOCALB00
0x1E32  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
0x1E35  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x1E37  0x2C 0xBB       CALLB 0xBB     // Symbols.AddFunction

                        // break;                                               PreProcess.hs:598

0x1E39  0x28 0x08       DECSP 0x08
0x1E3B  0x2A 0x06       RETB 0x06


// PreProcess.hs:621
// ####  PreProcess.propertyDeclaration(..)  ####                               0x000F


                        // bool hadGet;                                         PreProcess.hs:622

0x1E3D  0x5F 0x02       ENTERB 0x02

                        // string identifier;                                   PreProcess.hs:626

0x1E3F  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool public;                                         PreProcess.hs:627

0x1E41  0x44            PUSHI0

                        // if (!normalizeIdentifier(idToken, ref identifier, ref public, true))

0x1E42  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x1E44  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x1E46  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x1E48  0x45            PUSHI1
0x1E49  0x2C 0x01       CALLB 0x01     // PreProcess.normalizeIdentifier
0x1E4B  0x2F 0x06       JNZB 0x1E51 (+6)

                        // break;                                               PreProcess.hs:630

0x1E4D  0x28 0x04       DECSP 0x04
0x1E4F  0x2A 0x08       RETB 0x08

                        // Parser.Consume(HopperToken.LBrace, "'{' expected");

0x1E51  0x1A 0x12       PUSHIB 0x12
0x1E53  0x37 0x21 0x03  PUSHIW 0x0321
0x1E56  0x1A 0x0C       PUSHIB 0x0C
0x1E58  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E5A  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // if (HadError)                                        PreProcess.hs:634

0x1E5C  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1E5E  0x2E 0x06       JZB 0x1E64 (+6)

                        // break;                                               PreProcess.hs:636

0x1E60  0x28 0x04       DECSP 0x04
0x1E62  0x2A 0x08       RETB 0x08

                        // if (Parser.Check(HopperToken.Keyword, "get"))

0x1E64  0x1A 0x05       PUSHIB 0x05
0x1E66  0x37 0x2D 0x03  PUSHIW 0x032D
0x1E69  0x1A 0x03       PUSHIB 0x03
0x1E6B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E6D  0x2C 0x81       CALLB 0x81     // Parser.Check
0x1E6F  0x31 0xDB 0x00  JZW 0x1F4A (+219)

                        // Parser.Advance();                                    PreProcess.hs:642

0x1E72  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (hadGet)                                          PreProcess.hs:643

0x1E74  0x4E            PUSHLOCALB00
0x1E75  0x2E 0x12       JZB 0x1E87 (+18)

                        // Parser.ErrorAtCurrent("'get' already defined for " + identifier);

0x1E77  0x37 0x30 0x03  PUSHIW 0x0330
0x1E7A  0x1A 0x1A       PUSHIB 0x1A
0x1E7C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1E7E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1E80  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1E82  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:646

0x1E84  0x33 0xCA 0x01  JW 0x204E (+458)

                        // hadGet = true;                                       PreProcess.hs:648

0x1E87  0x45            PUSHI1
0x1E88  0x4C            POPLOCALB00

                        // <string> blockPos = walkBlock();                     PreProcess.hs:649

0x1E89  0x1A 0x0F       PUSHIB 0x0F
0x1E8B  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1E8D  0x2C 0x04       CALLB 0x04     // PreProcess.walkBlock
0x1E8F  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (HadError)                                        PreProcess.hs:650

0x1E91  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1E93  0x2E 0x07       JZB 0x1E9A (+7)

                        // break;                                               PreProcess.hs:652

0x1E95  0x28 0x02       DECSP 0x02
0x1E97  0x33 0xB7 0x01  JW 0x204E (+439)

                        // string getterName = identifier + "_Get";             PreProcess.hs:655

0x1E9A  0x24 0x02       SYSCALL0 0x02  // String.New
0x1E9C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1E9E  0x37 0x4A 0x03  PUSHIW 0x034A
0x1EA1  0x1A 0x04       PUSHIB 0x04
0x1EA3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EA5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1EA7  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // < <string > > arguments;                             PreProcess.hs:656

0x1EA9  0x1A 0x19       PUSHIB 0x19
0x1EAB  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // uint iDot;                                           PreProcess.hs:658

0x1EAD  0x44            PUSHI0

                        // string typeName;                                     PreProcess.hs:659

0x1EAE  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (getterName.IndexOf('.', ref iDot))               PreProcess.hs:660

0x1EB0  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x1EB2  0x1A 0x2E       PUSHIB 0x2E
0x1EB4  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
0x1EB6  0x34 0x07 0x01  CALLW 0x0107   // String.IndexOf
0x1EB9  0x31 0x84 0x00  JZW 0x1F3D (+132)

                        // typeName = getterName.Substring(0, iDot);            PreProcess.hs:662

0x1EBC  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x1EBE  0x44            PUSHI0
0x1EBF  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x1EC1  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x1EC3  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // typeName = typeName.ToLower();                       PreProcess.hs:663

0x1EC5  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1EC7  0x34 0x13 0x01  CALLW 0x0113   // String.ToLower
0x1ECA  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // if (isThisType(typeName))                            PreProcess.hs:664

0x1ECC  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1ECE  0x2C 0x0E       CALLB 0x0E     // PreProcess.isThisType
0x1ED0  0x2E 0x6D       JZB 0x1F3D (+109)

                        // switch (typeName)                                    PreProcess.hs:666

0x1ED2  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)

                        // case "array":                                        PreProcess.hs:668

0x1ED4  0x37 0xFE 0x02  PUSHIW 0x02FE
0x1ED7  0x1A 0x05       PUSHIB 0x05
0x1ED9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EDB  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1EDD  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1EDF  0x2F 0x0D       JNZB 0x1EEC (+13)

                        // typeName = "V[]";                                    PreProcess.hs:670

0x1EE1  0x37 0x4E 0x03  PUSHIW 0x034E
0x1EE4  0x1A 0x03       PUSHIB 0x03
0x1EE6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EE8  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // }                                                    PreProcess.hs:671

0x1EEA  0x30 0x30       JB 0x1F1A (+48)

                        // case "list":                                         PreProcess.hs:672

0x1EEC  0x37 0x51 0x03  PUSHIW 0x0351
0x1EEF  0x1A 0x04       PUSHIB 0x04
0x1EF1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1EF3  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1EF5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1EF7  0x2F 0x0D       JNZB 0x1F04 (+13)

                        // typeName = "<V>";                                    PreProcess.hs:674

0x1EF9  0x37 0x55 0x03  PUSHIW 0x0355
0x1EFC  0x1A 0x03       PUSHIB 0x03
0x1EFE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F00  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // }                                                    PreProcess.hs:675

0x1F02  0x30 0x18       JB 0x1F1A (+24)

                        // case "dictionary":                                   PreProcess.hs:676

0x1F04  0x37 0x58 0x03  PUSHIW 0x0358
0x1F07  0x1A 0x0A       PUSHIB 0x0A
0x1F09  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F0B  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1F0D  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1F0F  0x2F 0x0B       JNZB 0x1F1A (+11)

                        // typeName = "<K,V>";                                  PreProcess.hs:678

0x1F11  0x37 0x62 0x03  PUSHIW 0x0362
0x1F14  0x1A 0x05       PUSHIB 0x05
0x1F16  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F18  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // }                                                    PreProcess.hs:680

0x1F1A  0x28 0x02       DECSP 0x02

                        // <string> thisargument;                               PreProcess.hs:681

0x1F1C  0x1A 0x0F       PUSHIB 0x0F
0x1F1E  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // thisargument.Append(""); // not "ref"                PreProcess.hs:682

0x1F20  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1F22  0x24 0x02       SYSCALL0 0x02  // String.New
0x1F24  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // thisargument.Append(typeName);                       PreProcess.hs:683

0x1F26  0x56 0x12 0x10  PUSHLOCALBB 0x1012
0x1F29  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // thisargument.Append("this");                         PreProcess.hs:684

0x1F2B  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1F2D  0x37 0x67 0x03  PUSHIW 0x0367
0x1F30  0x1A 0x04       PUSHIB 0x04
0x1F32  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F34  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // arguments.Append(thisargument);                      PreProcess.hs:685

0x1F36  0x56 0x0C 0x12  PUSHLOCALBB 0x120C
0x1F39  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    PreProcess.hs:686

0x1F3B  0x28 0x02       DECSP 0x02

                        // Symbols.AddFunction(getterName, arguments, typeString, blockPos);

0x1F3D  0x56 0x0A 0x0C  PUSHLOCALBB 0x0C0A
0x1F40  0x56 0xFE 0x08  PUSHLOCALBB 0x08FE
0x1F43  0x2C 0xBB       CALLB 0xBB     // Symbols.AddFunction

                        // continue;                                            PreProcess.hs:690

0x1F45  0x28 0x0A       DECSP 0x0A
0x1F47  0x33 0x1D 0xFF  JW 0x1E64 (-227)

                        // else if (Parser.Check(HopperToken.Keyword, "set"))

0x1F4A  0x1A 0x05       PUSHIB 0x05
0x1F4C  0x37 0x6B 0x03  PUSHIW 0x036B
0x1F4F  0x1A 0x03       PUSHIB 0x03
0x1F51  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F53  0x2C 0x81       CALLB 0x81     // Parser.Check
0x1F55  0x31 0xF9 0x00  JZW 0x204E (+249)

                        // Parser.Advance();                                    PreProcess.hs:694

0x1F58  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (hadSet)                                          PreProcess.hs:695

0x1F5A  0x4F            PUSHLOCALB02
0x1F5B  0x2E 0x12       JZB 0x1F6D (+18)

                        // Parser.ErrorAtCurrent("'set' already defined for " + identifier);

0x1F5D  0x37 0x6E 0x03  PUSHIW 0x036E
0x1F60  0x1A 0x1A       PUSHIB 0x1A
0x1F62  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F64  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1F66  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1F68  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:698

0x1F6A  0x33 0xE4 0x00  JW 0x204E (+228)

                        // hadSet = true;                                       PreProcess.hs:700

0x1F6D  0x45            PUSHI1
0x1F6E  0x4D            POPLOCALB02

                        // <string> blockPos = walkBlock();                     PreProcess.hs:701

0x1F6F  0x1A 0x0F       PUSHIB 0x0F
0x1F71  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x1F73  0x2C 0x04       CALLB 0x04     // PreProcess.walkBlock
0x1F75  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (HadError)                                        PreProcess.hs:702

0x1F77  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x1F79  0x2E 0x07       JZB 0x1F80 (+7)

                        // break;                                               PreProcess.hs:704

0x1F7B  0x28 0x02       DECSP 0x02
0x1F7D  0x33 0xD1 0x00  JW 0x204E (+209)

                        // string setterName = identifier + "_Set";             PreProcess.hs:706

0x1F80  0x24 0x02       SYSCALL0 0x02  // String.New
0x1F82  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x1F84  0x37 0x88 0x03  PUSHIW 0x0388
0x1F87  0x1A 0x04       PUSHIB 0x04
0x1F89  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1F8B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x1F8D  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // < <string > > arguments;                             PreProcess.hs:708

0x1F8F  0x1A 0x19       PUSHIB 0x19
0x1F91  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // uint iDot;                                           PreProcess.hs:710

0x1F93  0x44            PUSHI0

                        // string typeName;                                     PreProcess.hs:711

0x1F94  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (setterName.IndexOf('.', ref iDot))               PreProcess.hs:712

0x1F96  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x1F98  0x1A 0x2E       PUSHIB 0x2E
0x1F9A  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
0x1F9C  0x34 0x07 0x01  CALLW 0x0107   // String.IndexOf
0x1F9F  0x31 0x84 0x00  JZW 0x2023 (+132)

                        // typeName = setterName.Substring(0, iDot);            PreProcess.hs:714

0x1FA2  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x1FA4  0x44            PUSHI0
0x1FA5  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x1FA7  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x1FA9  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // typeName = typeName.ToLower();                       PreProcess.hs:715

0x1FAB  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1FAD  0x34 0x13 0x01  CALLW 0x0113   // String.ToLower
0x1FB0  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // if (isThisType(typeName))                            PreProcess.hs:716

0x1FB2  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x1FB4  0x2C 0x0E       CALLB 0x0E     // PreProcess.isThisType
0x1FB6  0x2E 0x6D       JZB 0x2023 (+109)

                        // switch (typeName)                                    PreProcess.hs:718

0x1FB8  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)

                        // case "array":                                        PreProcess.hs:720

0x1FBA  0x37 0xFE 0x02  PUSHIW 0x02FE
0x1FBD  0x1A 0x05       PUSHIB 0x05
0x1FBF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FC1  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1FC3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1FC5  0x2F 0x0D       JNZB 0x1FD2 (+13)

                        // typeName = "V[]";                                    PreProcess.hs:722

0x1FC7  0x37 0x4E 0x03  PUSHIW 0x034E
0x1FCA  0x1A 0x03       PUSHIB 0x03
0x1FCC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FCE  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // }                                                    PreProcess.hs:723

0x1FD0  0x30 0x30       JB 0x2000 (+48)

                        // case "list":                                         PreProcess.hs:724

0x1FD2  0x37 0x51 0x03  PUSHIW 0x0351
0x1FD5  0x1A 0x04       PUSHIB 0x04
0x1FD7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FD9  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1FDB  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1FDD  0x2F 0x0D       JNZB 0x1FEA (+13)

                        // typeName = "<V>";                                    PreProcess.hs:726

0x1FDF  0x37 0x55 0x03  PUSHIW 0x0355
0x1FE2  0x1A 0x03       PUSHIB 0x03
0x1FE4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FE6  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // }                                                    PreProcess.hs:727

0x1FE8  0x30 0x18       JB 0x2000 (+24)

                        // case "dictionary":                                   PreProcess.hs:728

0x1FEA  0x37 0x58 0x03  PUSHIW 0x0358
0x1FED  0x1A 0x0A       PUSHIB 0x0A
0x1FEF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FF1  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x1FF3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x1FF5  0x2F 0x0B       JNZB 0x2000 (+11)

                        // typeName = "<K,V>";                                  PreProcess.hs:730

0x1FF7  0x37 0x62 0x03  PUSHIW 0x0362
0x1FFA  0x1A 0x05       PUSHIB 0x05
0x1FFC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x1FFE  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // }                                                    PreProcess.hs:732

0x2000  0x28 0x02       DECSP 0x02

                        // <string> thisargument;                               PreProcess.hs:733

0x2002  0x1A 0x0F       PUSHIB 0x0F
0x2004  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // thisargument.Append(""); // not "ref"                PreProcess.hs:734

0x2006  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2008  0x24 0x02       SYSCALL0 0x02  // String.New
0x200A  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // thisargument.Append(typeName);                       PreProcess.hs:735

0x200C  0x56 0x12 0x10  PUSHLOCALBB 0x1012
0x200F  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // thisargument.Append("this");                         PreProcess.hs:736

0x2011  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2013  0x37 0x67 0x03  PUSHIW 0x0367
0x2016  0x1A 0x04       PUSHIB 0x04
0x2018  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x201A  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // arguments.Append(thisargument);                      PreProcess.hs:737

0x201C  0x56 0x0C 0x12  PUSHLOCALBB 0x120C
0x201F  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    PreProcess.hs:738

0x2021  0x28 0x02       DECSP 0x02

                        // <string> argument;                                   PreProcess.hs:741

0x2023  0x1A 0x0F       PUSHIB 0x0F
0x2025  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // argument.Append(""); // not "ref"                    PreProcess.hs:742

0x2027  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2029  0x24 0x02       SYSCALL0 0x02  // String.New
0x202B  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // argument.Append(typeString);                         PreProcess.hs:743

0x202D  0x56 0x12 0xFE  PUSHLOCALBB 0xFE12
0x2030  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // argument.Append("value");                            PreProcess.hs:744

0x2032  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2034  0x37 0x16 0x03  PUSHIW 0x0316
0x2037  0x1A 0x05       PUSHIB 0x05
0x2039  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x203B  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // arguments.Append(argument);                          PreProcess.hs:745

0x203D  0x56 0x0C 0x12  PUSHLOCALBB 0x120C
0x2040  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // Symbols.AddMethod(setterName, arguments, blockPos);

0x2042  0x56 0x0A 0x0C  PUSHLOCALBB 0x0C0A
0x2045  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2047  0x2C 0xBC       CALLB 0xBC     // Symbols.AddMethod

                        // continue;                                            PreProcess.hs:749

0x2049  0x28 0x0C       DECSP 0x0C
0x204B  0x33 0x19 0xFE  JW 0x1E64 (-487)

                        // if (!hadGet && !hadSet)                              PreProcess.hs:753

0x204E  0x4E            PUSHLOCALB00
0x204F  0x41            BOOLNOT
0x2050  0x27 0x00       DUP 0x00
0x2052  0x2E 0x05       JZB 0x2057 (+5)
0x2054  0x4F            PUSHLOCALB02
0x2055  0x41            BOOLNOT
0x2056  0x0C            BOOLAND
0x2057  0x2E 0x0F       JZB 0x2066 (+15)

                        // Parser.ErrorAtCurrent("'get' or 'set' expected");

0x2059  0x37 0x8C 0x03  PUSHIW 0x038C
0x205C  0x1A 0x17       PUSHIB 0x17
0x205E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2060  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:756

0x2062  0x28 0x04       DECSP 0x04
0x2064  0x2A 0x08       RETB 0x08

                        // Parser.Consume(HopperToken.RBrace, "'}' expected");

0x2066  0x1A 0x13       PUSHIB 0x13
0x2068  0x37 0xA3 0x03  PUSHIW 0x03A3
0x206B  0x1A 0x0C       PUSHIB 0x0C
0x206D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x206F  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // break;                                               PreProcess.hs:760

0x2071  0x28 0x04       DECSP 0x04
0x2073  0x2A 0x08       RETB 0x08


// PreProcess.hs:532
// ####  PreProcess.methodDeclaration(..)  ####                                 0x000C

0x2075  0x49            ENTER

                        // string identifier;                                   PreProcess.hs:535

0x2076  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool public;                                         PreProcess.hs:536

0x2078  0x44            PUSHI0

                        // if (!normalizeIdentifier(idToken, ref identifier, ref public, false))

0x2079  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x207B  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x207D  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x207F  0x44            PUSHI0
0x2080  0x2C 0x01       CALLB 0x01     // PreProcess.normalizeIdentifier
0x2082  0x2F 0x06       JNZB 0x2088 (+6)

                        // break;                                               PreProcess.hs:539

0x2084  0x28 0x04       DECSP 0x04
0x2086  0x2A 0x04       RETB 0x04

                        // < <string > > arguments = argumentsDeclaration();

0x2088  0x1A 0x19       PUSHIB 0x19
0x208A  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x208C  0x2C 0x0B       CALLB 0x0B     // PreProcess.argumentsDeclaration
0x208E  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (HadError)                                        PreProcess.hs:542

0x2090  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x2092  0x2E 0x06       JZB 0x2098 (+6)

                        // break;                                               PreProcess.hs:544

0x2094  0x28 0x06       DECSP 0x06
0x2096  0x2A 0x04       RETB 0x04

                        // if (isDelegate)                                      PreProcess.hs:546

0x2098  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x209A  0x2E 0x1E       JZB 0x20B8 (+30)

                        // Parser.Consume(HopperToken.SemiColon, "';' expected");

0x209C  0x1A 0x0C       PUSHIB 0x0C
0x209E  0x37 0xCD 0x01  PUSHIW 0x01CD
0x20A1  0x1A 0x0C       PUSHIB 0x0C
0x20A3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20A5  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // if (HadError)                                        PreProcess.hs:549

0x20A7  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x20A9  0x2E 0x06       JZB 0x20AF (+6)

                        // break;                                               PreProcess.hs:551

0x20AB  0x28 0x06       DECSP 0x06
0x20AD  0x2A 0x04       RETB 0x04

                        // Symbols.AddMethodDelegate(identifier, arguments);

0x20AF  0x4E            PUSHLOCALB00
0x20B0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x20B2  0x2C 0xC0       CALLB 0xC0     // Symbols.AddMethodDelegate

                        // break;                                               PreProcess.hs:554

0x20B4  0x28 0x06       DECSP 0x06
0x20B6  0x2A 0x04       RETB 0x04

                        // <string> blockPos = walkBlock();                     PreProcess.hs:556

0x20B8  0x1A 0x0F       PUSHIB 0x0F
0x20BA  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x20BC  0x2C 0x04       CALLB 0x04     // PreProcess.walkBlock
0x20BE  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if (HadError)                                        PreProcess.hs:557

0x20C0  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x20C2  0x2E 0x06       JZB 0x20C8 (+6)

                        // break;                                               PreProcess.hs:559

0x20C4  0x28 0x08       DECSP 0x08
0x20C6  0x2A 0x04       RETB 0x04

                        // Symbols.AddMethod(identifier, arguments, blockPos);

0x20C8  0x4E            PUSHLOCALB00
0x20C9  0x56 0x04 0x06  PUSHLOCALBB 0x0604
0x20CC  0x2C 0xBC       CALLB 0xBC     // Symbols.AddMethod

                        // break;                                               PreProcess.hs:562

0x20CE  0x28 0x08       DECSP 0x08
0x20D0  0x2A 0x04       RETB 0x04


// PreProcess.hs:765
// ####  PreProcess.globalDeclaration(..)  ####                                 0x0010

0x20D2  0x49            ENTER

                        // string identifier;                                   PreProcess.hs:768

0x20D3  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool public;                                         PreProcess.hs:769

0x20D5  0x44            PUSHI0

                        // if (!normalizeIdentifier(idToken, ref identifier, ref public, true))

0x20D6  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x20D8  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x20DA  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x20DC  0x45            PUSHI1
0x20DD  0x2C 0x01       CALLB 0x01     // PreProcess.normalizeIdentifier
0x20DF  0x2F 0x06       JNZB 0x20E5 (+6)

                        // break;                                               PreProcess.hs:772

0x20E1  0x28 0x04       DECSP 0x04
0x20E3  0x2A 0x04       RETB 0x04

                        // if (public)                                          PreProcess.hs:774

0x20E5  0x4F            PUSHLOCALB02
0x20E6  0x2E 0x0F       JZB 0x20F5 (+15)

                        // Parser.ErrorAtCurrent("member variables must be private");

0x20E8  0x37 0xAF 0x03  PUSHIW 0x03AF
0x20EB  0x1A 0x20       PUSHIB 0x20
0x20ED  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x20EF  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:777

0x20F1  0x28 0x04       DECSP 0x04
0x20F3  0x2A 0x04       RETB 0x04

                        // <string> blockPos;                                   PreProcess.hs:779

0x20F5  0x1A 0x0F       PUSHIB 0x0F
0x20F7  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // if (Parser.Check(HopperToken.Assign))                PreProcess.hs:780

0x20F9  0x1A 0x2C       PUSHIB 0x2C
0x20FB  0x2C 0x80       CALLB 0x80     // Parser.Check
0x20FD  0x2E 0x52       JZB 0x214F (+82)

                        // <string,string> currentToken = Parser.CurrentToken;

0x20FF  0x1A 0x0F       PUSHIB 0x0F
0x2101  0x1A 0x0F       PUSHIB 0x0F
0x2103  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x2105  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x2107  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // long pos;                                            PreProcess.hs:783

0x2109  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (Token.TryParseLong(currentToken["pos"], ref pos))

0x210B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x210D  0x37 0xCF 0x03  PUSHIW 0x03CF
0x2110  0x1A 0x03       PUSHIB 0x03
0x2112  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2114  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2116  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x2118  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x211A  0x2E 0x02       JZB 0x211C (+2)

                        // Parser.Advance();                                    PreProcess.hs:788

0x211C  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // currentToken = Parser.CurrentToken;                  PreProcess.hs:790

0x211E  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x2120  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // pos = pos + 1; // one beyond '='                     PreProcess.hs:792

0x2122  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2124  0x45            PUSHI1
0x2125  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x2127  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x2129  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // blockPos.Append(pos.ToString());                     PreProcess.hs:794

0x212B  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x212E  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x2130  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // blockPos.Append(currentToken["line"]);               PreProcess.hs:795

0x2132  0x56 0x04 0x06  PUSHLOCALBB 0x0604
0x2135  0x37 0xD2 0x03  PUSHIW 0x03D2
0x2138  0x1A 0x04       PUSHIB 0x04
0x213A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x213C  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x213E  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // blockPos.Append(currentToken["source"]);             PreProcess.hs:796

0x2140  0x56 0x04 0x06  PUSHLOCALBB 0x0604
0x2143  0x1A 0xB9       PUSHIB 0xB9
0x2145  0x1A 0x06       PUSHIB 0x06
0x2147  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2149  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x214B  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    PreProcess.hs:797

0x214D  0x28 0x04       DECSP 0x04

                        // Symbols.AddGlobalMember(identifier, typeString, blockPos);

0x214F  0x4E            PUSHLOCALB00
0x2150  0x56 0xFE 0x04  PUSHLOCALBB 0x04FE
0x2153  0x2C 0xBA       CALLB 0xBA     // Symbols.AddGlobalMember

                        // if (Parser.Check(HopperToken.SemiColon))             PreProcess.hs:802

0x2155  0x1A 0x0C       PUSHIB 0x0C
0x2157  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2159  0x2E 0x06       JZB 0x215F (+6)

                        // Parser.Advance();                                    PreProcess.hs:804

0x215B  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // break;                                               PreProcess.hs:805

0x215D  0x30 0x12       JB 0x216F (+18)

                        // if (Parser.Check(HopperToken.EOF))                   PreProcess.hs:807

0x215F  0x1A 0x2D       PUSHIB 0x2D
0x2161  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2163  0x2E 0x08       JZB 0x216B (+8)

                        // Parser.ErrorAtCurrent(';');                          PreProcess.hs:809

0x2165  0x1A 0x3B       PUSHIB 0x3B
0x2167  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:810

0x2169  0x30 0x06       JB 0x216F (+6)

                        // Parser.Advance(); // gobble gobble                   PreProcess.hs:812

0x216B  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // } // loop                                            PreProcess.hs:813

0x216D  0x30 0xE8       JB 0x2155 (-24)

                        // break;                                               PreProcess.hs:814

0x216F  0x28 0x06       DECSP 0x06
0x2171  0x2A 0x04       RETB 0x04


// PreProcess.hs:190
// ####  PreProcess.walkBlock(..)  ####                                         0x0004

0x2173  0x49            ENTER

                        // <string> blockPos;                                   PreProcess.hs:191

0x2174  0x1A 0x0F       PUSHIB 0x0F
0x2176  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // bool isSystem = false;                               PreProcess.hs:194

0x2178  0x44            PUSHI0

                        // if (Parser.Check(HopperToken.Keyword, "system"))

0x2179  0x1A 0x05       PUSHIB 0x05
0x217B  0x37 0xD6 0x03  PUSHIW 0x03D6
0x217E  0x1A 0x06       PUSHIB 0x06
0x2180  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2182  0x2C 0x81       CALLB 0x81     // Parser.Check
0x2184  0x2E 0x06       JZB 0x218A (+6)

                        // isSystem = true;                                     PreProcess.hs:197

0x2186  0x45            PUSHI1
0x2187  0x4D            POPLOCALB02

                        // }                                                    PreProcess.hs:198

0x2188  0x30 0x11       JB 0x2199 (+17)

                        // else if (!Parser.Check(HopperToken.LBrace))

0x218A  0x1A 0x12       PUSHIB 0x12
0x218C  0x2C 0x80       CALLB 0x80     // Parser.Check
0x218E  0x2F 0x0B       JNZB 0x2199 (+11)

                        // Parser.ErrorAtCurrent('{');                          PreProcess.hs:201

0x2190  0x1A 0x7B       PUSHIB 0x7B
0x2192  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:202

0x2194  0x28 0x02       DECSP 0x02
0x2196  0x33 0x85 0x00  JW 0x221B (+133)

                        // <string,string> currentToken = Parser.CurrentToken;

0x2199  0x1A 0x0F       PUSHIB 0x0F
0x219B  0x1A 0x0F       PUSHIB 0x0F
0x219D  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x219F  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x21A1  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // long pos;                                            PreProcess.hs:205

0x21A3  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (Token.TryParseLong(currentToken["pos"], ref pos))

0x21A5  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x21A7  0x37 0xCF 0x03  PUSHIW 0x03CF
0x21AA  0x1A 0x03       PUSHIB 0x03
0x21AC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21AE  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x21B0  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x21B2  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x21B4  0x2E 0x02       JZB 0x21B6 (+2)

                        // if (isSystem)                                        PreProcess.hs:209

0x21B6  0x4F            PUSHLOCALB02
0x21B7  0x2F 0x24       JNZB 0x21DB (+36)

                        // blockPos.Append(pos.ToString());                     PreProcess.hs:215

0x21B9  0x4E            PUSHLOCALB00
0x21BA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x21BC  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x21BE  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // blockPos.Append(currentToken["line"]);               PreProcess.hs:216

0x21C0  0x4E            PUSHLOCALB00
0x21C1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x21C3  0x37 0xD2 0x03  PUSHIW 0x03D2
0x21C6  0x1A 0x04       PUSHIB 0x04
0x21C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21CA  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x21CC  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // blockPos.Append(currentToken["source"]);             PreProcess.hs:217

0x21CE  0x4E            PUSHLOCALB00
0x21CF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x21D1  0x1A 0xB9       PUSHIB 0xB9
0x21D3  0x1A 0x06       PUSHIB 0x06
0x21D5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21D7  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x21D9  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // Parser.Advance();                                    PreProcess.hs:219

0x21DB  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (isSystem)                                        PreProcess.hs:220

0x21DD  0x4F            PUSHLOCALB02
0x21DE  0x2E 0x11       JZB 0x21EF (+17)

                        // Parser.Consume(HopperToken.SemiColon, "';' expected");

0x21E0  0x1A 0x0C       PUSHIB 0x0C
0x21E2  0x37 0xCD 0x01  PUSHIW 0x01CD
0x21E5  0x1A 0x0C       PUSHIB 0x0C
0x21E7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x21E9  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // break;                                               PreProcess.hs:223

0x21EB  0x28 0x06       DECSP 0x06
0x21ED  0x30 0x2E       JB 0x221B (+46)

                        // int nested = 1;                                      PreProcess.hs:225

0x21EF  0x44            PUSHI0
0x21F0  0x45            PUSHI1
0x21F1  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // if (HadError)                                        PreProcess.hs:228

0x21F3  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x21F5  0x2E 0x08       JZB 0x21FD (+8)

                        // Parser.ErrorAtCurrent('}');                          PreProcess.hs:230

0x21F7  0x1A 0x7D       PUSHIB 0x7D
0x21F9  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:231

0x21FB  0x30 0x1E       JB 0x2219 (+30)

                        // if (Parser.Check(HopperToken.RBrace))                PreProcess.hs:233

0x21FD  0x1A 0x13       PUSHIB 0x13
0x21FF  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2201  0x2E 0x0C       JZB 0x220D (+12)

                        // Parser.Advance(); // }                               PreProcess.hs:235

0x2203  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // nested--;                                            PreProcess.hs:236

0x2205  0x23 0x08       DECLOCALB 0x08 (BP+8)

                        // if (nested == 0)                                     PreProcess.hs:237

0x2207  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2209  0x2F 0xEA       JNZB 0x21F3 (-22)

                        // break;                                               PreProcess.hs:239

0x220B  0x30 0x0E       JB 0x2219 (+14)

                        // if (Parser.Check(HopperToken.LBrace))                PreProcess.hs:243

0x220D  0x1A 0x12       PUSHIB 0x12
0x220F  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2211  0x2E 0x04       JZB 0x2215 (+4)

                        // nested++;                                            PreProcess.hs:246

0x2213  0x22 0x08       INCLOCALB 0x08 (BP+8)

                        // Parser.Advance(); // anything else                   PreProcess.hs:248

0x2215  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    PreProcess.hs:249

0x2217  0x30 0xDC       JB 0x21F3 (-36)

                        // break;                                               PreProcess.hs:250

0x2219  0x28 0x08       DECSP 0x08

                        // return blockPos;                                     PreProcess.hs:252

0x221B  0x4E            PUSHLOCALB00
0x221C  0x2B 0x02       RETRETB 0x02


// PreProcess.hs:62
// ####  PreProcess.isValueType(..)  ####                                       0x0002


                        // bool found;                                          PreProcess.hs:63

0x221E  0x5F 0x01       ENTERB 0x01

                        // string valueTypes = "|bool|byte|char|uint|int|type|";

0x2220  0x24 0x02       SYSCALL0 0x02  // String.New
0x2222  0x37 0xDC 0x03  PUSHIW 0x03DC
0x2225  0x1A 0x1E       PUSHIB 0x1E
0x2227  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2229  0x5E            POPCOPYLOCALB02

                        // typeName = "|" + typeName + "|";                     PreProcess.hs:67

0x222A  0x1A 0x7C       PUSHIB 0x7C
0x222C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x222E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2230  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2232  0x1A 0x7C       PUSHIB 0x7C
0x2234  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2236  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2238  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // if (valueTypes.Contains(typeName))                   PreProcess.hs:68

0x223A  0x4F            PUSHLOCALB02
0x223B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x223D  0x34 0x04 0x01  CALLW 0x0104   // String.Contains
0x2240  0x2E 0x08       JZB 0x2248 (+8)

                        // found = true;                                        PreProcess.hs:70

0x2242  0x45            PUSHI1
0x2243  0x4C            POPLOCALB00

                        // break;                                               PreProcess.hs:71

0x2244  0x28 0x02       DECSP 0x02
0x2246  0x30 0x04       JB 0x224A (+4)

                        // break;                                               PreProcess.hs:73

0x2248  0x28 0x02       DECSP 0x02

                        // return found;                                        PreProcess.hs:75

0x224A  0x4E            PUSHLOCALB00
0x224B  0x2B 0x04       RETRETB 0x04


// PreProcess.hs:30
// ####  PreProcess.normalizeIdentifier(..)  ####                               0x0001


                        // bool success = false;                                PreProcess.hs:31

0x224D  0x5F 0x01       ENTERB 0x01

                        // identifier = idToken["lexeme"];                      PreProcess.hs:34

0x224F  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x2251  0x37 0x5B 0x01  PUSHIW 0x015B
0x2254  0x1A 0x06       PUSHIB 0x06
0x2256  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2258  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x225A  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (identifier.Contains('.'))                        PreProcess.hs:35

0x225C  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x225E  0x1A 0x2E       PUSHIB 0x2E
0x2260  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x2263  0x2E 0x0D       JZB 0x2270 (+13)

                        // Parser.ErrorAtCurrent("simple identifier expected");

0x2265  0x37 0xFA 0x03  PUSHIW 0x03FA
0x2268  0x1A 0x1A       PUSHIB 0x1A
0x226A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x226C  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:38

0x226E  0x30 0x4E       JB 0x22BC (+78)

                        // if (Token.IsReservedWord(identifier))                PreProcess.hs:40

0x2270  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2272  0x2C 0x4D       CALLB 0x4D     // Token.IsReservedWord
0x2274  0x2E 0x1A       JZB 0x228E (+26)

                        // Parser.ErrorAtCurrent("identifier '" + identifier + "' is a reserved word");

0x2276  0x37 0x14 0x04  PUSHIW 0x0414
0x2279  0x1A 0x0C       PUSHIB 0x0C
0x227B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x227D  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x227F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2281  0x37 0x20 0x04  PUSHIW 0x0420
0x2284  0x1A 0x14       PUSHIB 0x14
0x2286  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2288  0x24 0x03       SYSCALL0 0x03  // String.Append
0x228A  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:43

0x228C  0x30 0x30       JB 0x22BC (+48)

                        // public = Char.IsUpper(identifier[0]);                PreProcess.hs:45

0x228E  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2290  0x44            PUSHI0
0x2291  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2293  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x2295  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // identifier = currentUnit + "." + identifier; // append current namespace

0x2297  0x20 0x02       PUSHGLOBALB 0x02
0x2299  0x1A 0x2E       PUSHIB 0x2E
0x229B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x229D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x229F  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x22A1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x22A3  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (noDuplicates)                                    PreProcess.hs:47

0x22A5  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x22A7  0x2E 0x13       JZB 0x22BA (+19)

                        // if (Symbols.GlobalExists(identifier))                PreProcess.hs:49

0x22A9  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x22AB  0x2C 0x98       CALLB 0x98     // Symbols.GlobalExists
0x22AD  0x2E 0x0D       JZB 0x22BA (+13)

                        // Parser.ErrorAtCurrent("identifier already in use");

0x22AF  0x37 0x34 0x04  PUSHIW 0x0434
0x22B2  0x1A 0x19       PUSHIB 0x19
0x22B4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22B6  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:52

0x22B8  0x30 0x04       JB 0x22BC (+4)

                        // success = true;                                      PreProcess.hs:55

0x22BA  0x45            PUSHI1
0x22BB  0x4C            POPLOCALB00

                        // return success;                                      PreProcess.hs:58

0x22BC  0x4E            PUSHLOCALB00
0x22BD  0x2B 0x0A       RETRETB 0x0A


// PreProcess.hs:297
// ####  PreProcess.enumDeclaration(..)  ####                                   0x0006

0x22BF  0x49            ENTER

                        // Parser.Advance(); // enum | flags                    PreProcess.hs:300

0x22C0  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (!Parser.Check(HopperToken.Identifier) || Parser.Check(HopperToken.DottedIdentifier))

0x22C2  0x1A 0x03       PUSHIB 0x03
0x22C4  0x2C 0x80       CALLB 0x80     // Parser.Check
0x22C6  0x41            BOOLNOT
0x22C7  0x27 0x00       DUP 0x00
0x22C9  0x2F 0x07       JNZB 0x22D0 (+7)
0x22CB  0x1A 0x02       PUSHIB 0x02
0x22CD  0x2C 0x80       CALLB 0x80     // Parser.Check
0x22CF  0x0B            BOOLOR
0x22D0  0x2E 0x0D       JZB 0x22DD (+13)

                        // Parser.ErrorAtCurrent("identifier expected");

0x22D2  0x37 0x18 0x01  PUSHIW 0x0118
0x22D5  0x1A 0x13       PUSHIB 0x13
0x22D7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x22D9  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:305

0x22DB  0x2A 0x02       RETB 0x02

                        // <string,string> idToken = Parser.CurrentToken;

0x22DD  0x1A 0x0F       PUSHIB 0x0F
0x22DF  0x1A 0x0F       PUSHIB 0x0F
0x22E1  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x22E3  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x22E5  0x5D            POPCOPYLOCALB00

                        // string identifier;                                   PreProcess.hs:308

0x22E6  0x24 0x02       SYSCALL0 0x02  // String.New

                        // bool public;                                         PreProcess.hs:309

0x22E8  0x44            PUSHI0

                        // if (!normalizeIdentifier(idToken, ref identifier, ref public, true))

0x22E9  0x4E            PUSHLOCALB00
0x22EA  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x22EC  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x22EE  0x45            PUSHI1
0x22EF  0x2C 0x01       CALLB 0x01     // PreProcess.normalizeIdentifier
0x22F1  0x2F 0x06       JNZB 0x22F7 (+6)

                        // break;                                               PreProcess.hs:312

0x22F3  0x28 0x06       DECSP 0x06
0x22F5  0x2A 0x02       RETB 0x02

                        // Parser.Advance(); // identifier                      PreProcess.hs:315

0x22F7  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (!Parser.Check(HopperToken.LBrace))               PreProcess.hs:318

0x22F9  0x1A 0x12       PUSHIB 0x12
0x22FB  0x2C 0x80       CALLB 0x80     // Parser.Check
0x22FD  0x2F 0x0A       JNZB 0x2307 (+10)

                        // Parser.ErrorAtCurrent('{');                          PreProcess.hs:320

0x22FF  0x1A 0x7B       PUSHIB 0x7B
0x2301  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:321

0x2303  0x28 0x06       DECSP 0x06
0x2305  0x2A 0x02       RETB 0x02

                        // Parser.Advance(); // {                               PreProcess.hs:323

0x2307  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // <string,uint> values;                                PreProcess.hs:324

0x2309  0x1A 0x0F       PUSHIB 0x0F
0x230B  0x1A 0x04       PUSHIB 0x04
0x230D  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint currentValue = 0;                               PreProcess.hs:325

0x230F  0x44            PUSHI0

                        // if (Parser.Check(HopperToken.RBrace))                PreProcess.hs:328

0x2310  0x1A 0x13       PUSHIB 0x13
0x2312  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2314  0x2E 0x07       JZB 0x231B (+7)

                        // Parser.Advance(); // }                               PreProcess.hs:330

0x2316  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // break;                                               PreProcess.hs:331

0x2318  0x33 0xCE 0x00  JW 0x23E6 (+206)

                        // if (Parser.Check(HopperToken.EOF))                   PreProcess.hs:333

0x231B  0x1A 0x2D       PUSHIB 0x2D
0x231D  0x2C 0x80       CALLB 0x80     // Parser.Check
0x231F  0x2E 0x0E       JZB 0x232D (+14)

                        // Parser.ErrorAtCurrent("unexpected end of file in enum/flags declaration");

0x2321  0x37 0x4D 0x04  PUSHIW 0x044D
0x2324  0x1A 0x30       PUSHIB 0x30
0x2326  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2328  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:336

0x232A  0x33 0xBC 0x00  JW 0x23E6 (+188)

                        // if (!Parser.Check(HopperToken.Identifier))           PreProcess.hs:339

0x232D  0x1A 0x03       PUSHIB 0x03
0x232F  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2331  0x2F 0x0E       JNZB 0x233F (+14)

                        // Parser.ErrorAtCurrent("identifier expected");

0x2333  0x37 0x18 0x01  PUSHIW 0x0118
0x2336  0x1A 0x13       PUSHIB 0x13
0x2338  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x233A  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:342

0x233C  0x33 0xAA 0x00  JW 0x23E6 (+170)

                        // <string,string> entryToken = Parser.CurrentToken;

0x233F  0x1A 0x0F       PUSHIB 0x0F
0x2341  0x1A 0x0F       PUSHIB 0x0F
0x2343  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x2345  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x2347  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // string qualifiedName = identifier + "." + entryToken["lexeme"];

0x2349  0x24 0x02       SYSCALL0 0x02  // String.New
0x234B  0x4F            PUSHLOCALB02
0x234C  0x1A 0x2E       PUSHIB 0x2E
0x234E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2350  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2352  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2354  0x37 0x5B 0x01  PUSHIW 0x015B
0x2357  0x1A 0x06       PUSHIB 0x06
0x2359  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x235B  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x235D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x235F  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // string valueString;                                  PreProcess.hs:347

0x2361  0x24 0x02       SYSCALL0 0x02  // String.New

                        // Parser.Advance();                                    PreProcess.hs:348

0x2363  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (Parser.Check(HopperToken.Assign))                PreProcess.hs:349

0x2365  0x1A 0x2C       PUSHIB 0x2C
0x2367  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2369  0x2E 0x53       JZB 0x23BC (+83)

                        // Parser.Advance(); // =                               PreProcess.hs:351

0x236B  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (!Parser.Check(HopperToken.Integer))              PreProcess.hs:352

0x236D  0x1A 0x09       PUSHIB 0x09
0x236F  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2371  0x2F 0x0F       JNZB 0x2380 (+15)

                        // Parser.ErrorAtCurrent("integer expected");           PreProcess.hs:354

0x2373  0x37 0x7D 0x04  PUSHIW 0x047D
0x2376  0x1A 0x10       PUSHIB 0x10
0x2378  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x237A  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:355

0x237C  0x28 0x06       DECSP 0x06
0x237E  0x30 0x68       JB 0x23E6 (+104)

                        // <string,string> valueToken = Parser.CurrentToken;

0x2380  0x1A 0x0F       PUSHIB 0x0F
0x2382  0x1A 0x0F       PUSHIB 0x0F
0x2384  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x2386  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x2388  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // valueString = valueToken["lexeme"];                  PreProcess.hs:358

0x238A  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x238C  0x37 0x5B 0x01  PUSHIW 0x015B
0x238F  0x1A 0x06       PUSHIB 0x06
0x2391  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2393  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2395  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // if (Token.TryParseUInt(valueString, ref currentValue))

0x2397  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2399  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x239B  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x239D  0x2F 0x1B       JNZB 0x23B8 (+27)

                        // else if (Token.TryParseHex(valueString, ref currentValue))

0x239F  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x23A1  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x23A3  0x2C 0x52       CALLB 0x52     // Token.TryParseHex
0x23A5  0x2F 0x13       JNZB 0x23B8 (+19)

                        // else if (Token.TryParseBinary(valueString, ref currentValue))

0x23A7  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x23A9  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x23AB  0x2C 0x54       CALLB 0x54     // Token.TryParseBinary
0x23AD  0x2F 0x0B       JNZB 0x23B8 (+11)

                        // Parser.ErrorAtCurrent("'uint' constant expected");

0x23AF  0x37 0x8D 0x04  PUSHIW 0x048D
0x23B2  0x1A 0x18       PUSHIB 0x18
0x23B4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x23B6  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // Advance();                                           PreProcess.hs:375

0x23B8  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    PreProcess.hs:376

0x23BA  0x28 0x02       DECSP 0x02

                        // values[qualifiedName] = currentValue;                PreProcess.hs:378

0x23BC  0x56 0x06 0x0C  PUSHLOCALBB 0x0C06
0x23BF  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x23C1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // currentValue++;                                      PreProcess.hs:379

0x23C3  0x22 0x08       INCLOCALB 0x08 (BP+8)

                        // bool expectComma = false;                            PreProcess.hs:380

0x23C5  0x44            PUSHI0

                        // if (!Parser.Check(HopperToken.RBrace))               PreProcess.hs:381

0x23C6  0x1A 0x13       PUSHIB 0x13
0x23C8  0x2C 0x80       CALLB 0x80     // Parser.Check
0x23CA  0x2F 0x05       JNZB 0x23CF (+5)

                        // expectComma = true;                                  PreProcess.hs:383

0x23CC  0x45            PUSHI1
0x23CD  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // if (Parser.Check(HopperToken.Comma))                 PreProcess.hs:385

0x23CF  0x1A 0x0D       PUSHIB 0x0D
0x23D1  0x2C 0x80       CALLB 0x80     // Parser.Check
0x23D3  0x2E 0x06       JZB 0x23D9 (+6)

                        // Parser.Advance(); // ,                               PreProcess.hs:387

0x23D5  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    PreProcess.hs:388

0x23D7  0x30 0x0A       JB 0x23E1 (+10)

                        // else if (expectComma)                                PreProcess.hs:389

0x23D9  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x23DB  0x2E 0x06       JZB 0x23E1 (+6)

                        // Parser.ErrorAtCurrent(',');                          PreProcess.hs:391

0x23DD  0x1A 0x2C       PUSHIB 0x2C
0x23DF  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // }                                                    PreProcess.hs:393

0x23E1  0x28 0x08       DECSP 0x08
0x23E3  0x33 0x2D 0xFF  JW 0x2310 (-211)

                        // if (HadError)                                        PreProcess.hs:395

0x23E6  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x23E8  0x2E 0x06       JZB 0x23EE (+6)

                        // break;                                               PreProcess.hs:397

0x23EA  0x28 0x0A       DECSP 0x0A
0x23EC  0x2A 0x02       RETB 0x02

                        // if (isFlags)                                         PreProcess.hs:399

0x23EE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x23F0  0x2E 0x09       JZB 0x23F9 (+9)

                        // Symbols.AddFlags(identifier, values);                PreProcess.hs:401

0x23F2  0x4F            PUSHLOCALB02
0x23F3  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x23F5  0x2C 0xBE       CALLB 0xBE     // Symbols.AddFlags

                        // }                                                    PreProcess.hs:402

0x23F7  0x30 0x07       JB 0x23FE (+7)

                        // Symbols.AddEnum(identifier, values);                 PreProcess.hs:405

0x23F9  0x4F            PUSHLOCALB02
0x23FA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x23FC  0x2C 0xBD       CALLB 0xBD     // Symbols.AddEnum

                        // break;                                               PreProcess.hs:407

0x23FE  0x28 0x0A       DECSP 0x0A
0x2400  0x2A 0x02       RETB 0x02


// PreProcess.hs:467
// ####  PreProcess.argumentsDeclaration(..)  ####                              0x000B

0x2402  0x49            ENTER

                        // < < string > > arguments;                            PreProcess.hs:468

0x2403  0x1A 0x19       PUSHIB 0x19
0x2405  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // <string> argumentNames;                              PreProcess.hs:469

0x2407  0x1A 0x0F       PUSHIB 0x0F
0x2409  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // Parser.Advance(); // (                               PreProcess.hs:471

0x240B  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (Parser.Check(HopperToken.RParen))                PreProcess.hs:474

0x240D  0x1A 0x11       PUSHIB 0x11
0x240F  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2411  0x2E 0x07       JZB 0x2418 (+7)

                        // Parser.Advance(); // )                               PreProcess.hs:476

0x2413  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // break; // done                                       PreProcess.hs:477

0x2415  0x33 0xE1 0x00  JW 0x24F6 (+225)

                        // if (arguments.Length != 0)                           PreProcess.hs:479

0x2418  0x4E            PUSHLOCALB00
0x2419  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x241B  0x2E 0x11       JZB 0x242C (+17)

                        // if (!Parser.Check(HopperToken.Comma))                PreProcess.hs:481

0x241D  0x1A 0x0D       PUSHIB 0x0D
0x241F  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2421  0x2F 0x09       JNZB 0x242A (+9)

                        // Parser.ErrorAtCurrent(',');                          PreProcess.hs:483

0x2423  0x1A 0x2C       PUSHIB 0x2C
0x2425  0x2C 0x7A       CALLB 0x7A     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:484

0x2427  0x33 0xCF 0x00  JW 0x24F6 (+207)

                        // Parser.Advance();                                    PreProcess.hs:486

0x242A  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // string isReference = "";                             PreProcess.hs:488

0x242C  0x24 0x02       SYSCALL0 0x02  // String.New
0x242E  0x24 0x02       SYSCALL0 0x02  // String.New
0x2430  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (Parser.Check(HopperToken.Keyword, "ref"))

0x2432  0x1A 0x05       PUSHIB 0x05
0x2434  0x37 0xA5 0x04  PUSHIW 0x04A5
0x2437  0x1A 0x03       PUSHIB 0x03
0x2439  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x243B  0x2C 0x81       CALLB 0x81     // Parser.Check
0x243D  0x2E 0x0D       JZB 0x244A (+13)

                        // Parser.Advance(); // ref                             PreProcess.hs:491

0x243F  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // isReference = "ref";                                 PreProcess.hs:492

0x2441  0x37 0xA5 0x04  PUSHIW 0x04A5
0x2444  0x1A 0x03       PUSHIB 0x03
0x2446  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2448  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // string typeString;                                   PreProcess.hs:494

0x244A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (!tryParseTypeString(ref typeString))             PreProcess.hs:495

0x244C  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x244E  0x2C 0x03       CALLB 0x03     // PreProcess.tryParseTypeString
0x2450  0x2F 0x14       JNZB 0x2464 (+20)

                        // if (!HadError)                                       PreProcess.hs:497

0x2452  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x2454  0x2F 0x0B       JNZB 0x245F (+11)

                        // Parser.ErrorAtCurrent("type expected");              PreProcess.hs:499

0x2456  0x37 0x51 0x02  PUSHIW 0x0251
0x2459  0x1A 0x0D       PUSHIB 0x0D
0x245B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x245D  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:501

0x245F  0x28 0x04       DECSP 0x04
0x2461  0x33 0x95 0x00  JW 0x24F6 (+149)

                        // if (!Parser.Check(HopperToken.Identifier))           PreProcess.hs:503

0x2464  0x1A 0x03       PUSHIB 0x03
0x2466  0x2C 0x80       CALLB 0x80     // Parser.Check
0x2468  0x2F 0x10       JNZB 0x2478 (+16)

                        // Parser.ErrorAtCurrent("identifier expected");

0x246A  0x37 0x18 0x01  PUSHIW 0x0118
0x246D  0x1A 0x13       PUSHIB 0x13
0x246F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2471  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:506

0x2473  0x28 0x04       DECSP 0x04
0x2475  0x33 0x81 0x00  JW 0x24F6 (+129)

                        // <string,string> currentToken = CurrentToken;

0x2478  0x1A 0x0F       PUSHIB 0x0F
0x247A  0x1A 0x0F       PUSHIB 0x0F
0x247C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x247E  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x2480  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // string identifier = currentToken["lexeme"];

0x2482  0x24 0x02       SYSCALL0 0x02  // String.New
0x2484  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2486  0x37 0x5B 0x01  PUSHIW 0x015B
0x2489  0x1A 0x06       PUSHIB 0x06
0x248B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x248D  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x248F  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (argumentNames.Contains(identifier))              PreProcess.hs:510

0x2491  0x4F            PUSHLOCALB02
0x2492  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2494  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x2496  0x2E 0x1C       JZB 0x24B2 (+28)

                        // Parser.ErrorAtCurrent("argument '" + identifier + "' already exists");

0x2498  0x37 0xA8 0x04  PUSHIW 0x04A8
0x249B  0x1A 0x0A       PUSHIB 0x0A
0x249D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x249F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x24A1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x24A3  0x37 0xB2 0x04  PUSHIW 0x04B2
0x24A6  0x1A 0x10       PUSHIB 0x10
0x24A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24AA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x24AC  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:513

0x24AE  0x28 0x08       DECSP 0x08
0x24B0  0x30 0x46       JB 0x24F6 (+70)

                        // if (Token.IsReservedWord(identifier))                PreProcess.hs:515

0x24B2  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x24B4  0x2C 0x4D       CALLB 0x4D     // Token.IsReservedWord
0x24B6  0x2E 0x1C       JZB 0x24D2 (+28)

                        // Parser.ErrorAtCurrent("identifier '" + identifier + "' is a reserved word");

0x24B8  0x37 0x14 0x04  PUSHIW 0x0414
0x24BB  0x1A 0x0C       PUSHIB 0x0C
0x24BD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24BF  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x24C1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x24C3  0x37 0x20 0x04  PUSHIW 0x0420
0x24C6  0x1A 0x14       PUSHIB 0x14
0x24C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x24CA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x24CC  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               PreProcess.hs:518

0x24CE  0x28 0x08       DECSP 0x08
0x24D0  0x30 0x26       JB 0x24F6 (+38)

                        // argumentNames.Append(identifier);                    PreProcess.hs:520

0x24D2  0x4F            PUSHLOCALB02
0x24D3  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x24D5  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // <string> argument;                                   PreProcess.hs:521

0x24D7  0x1A 0x0F       PUSHIB 0x0F
0x24D9  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // argument.Append(isReference);                        PreProcess.hs:522

0x24DB  0x56 0x0C 0x04  PUSHLOCALBB 0x040C
0x24DE  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // argument.Append(typeString);                         PreProcess.hs:523

0x24E0  0x56 0x0C 0x06  PUSHLOCALBB 0x060C
0x24E3  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // argument.Append(identifier);                         PreProcess.hs:524

0x24E5  0x56 0x0C 0x0A  PUSHLOCALBB 0x0A0C
0x24E8  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // arguments.Append(argument);                          PreProcess.hs:525

0x24EA  0x4E            PUSHLOCALB00
0x24EB  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x24ED  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // Parser.Advance();                                    PreProcess.hs:526

0x24EF  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    PreProcess.hs:527

0x24F1  0x28 0x0A       DECSP 0x0A
0x24F3  0x33 0x1A 0xFF  JW 0x240D (-230)

                        // return arguments;                                    PreProcess.hs:528

0x24F6  0x4E            PUSHLOCALB00
0x24F7  0x2B 0x04       RETRETB 0x04


// PreProcess.hs:603
// ####  PreProcess.isThisType(..)  ####                                        0x000E


                        // bool found;                                          PreProcess.hs:604

0x24F9  0x5F 0x01       ENTERB 0x01

                        // string valueTypes = "|array|dictionary|list|string|bool|byte|char|uint|int|long|float|type|file|directory|";

0x24FB  0x24 0x02       SYSCALL0 0x02  // String.New
0x24FD  0x37 0xC2 0x04  PUSHIW 0x04C2
0x2500  0x1A 0x55       PUSHIB 0x55
0x2502  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2504  0x5E            POPCOPYLOCALB02

                        // typeName = "|" + typeName + "|";                     PreProcess.hs:608

0x2505  0x1A 0x7C       PUSHIB 0x7C
0x2507  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2509  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x250B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x250D  0x1A 0x7C       PUSHIB 0x7C
0x250F  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2511  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2513  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // if (valueTypes.Contains(typeName))                   PreProcess.hs:609

0x2515  0x4F            PUSHLOCALB02
0x2516  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2518  0x34 0x04 0x01  CALLW 0x0104   // String.Contains
0x251B  0x2E 0x08       JZB 0x2523 (+8)

                        // found = true;                                        PreProcess.hs:611

0x251D  0x45            PUSHI1
0x251E  0x4C            POPLOCALB00

                        // break;                                               PreProcess.hs:612

0x251F  0x28 0x02       DECSP 0x02
0x2521  0x30 0x04       JB 0x2525 (+4)

                        // break;                                               PreProcess.hs:614

0x2523  0x28 0x02       DECSP 0x02

                        // return found;                                        PreProcess.hs:616

0x2525  0x4E            PUSHLOCALB00
0x2526  0x2B 0x04       RETRETB 0x04


// /source/system/string.hs:489
// ####  String.ToLower(..)  ####                                               0x0113


                        // uint i;                                              string.hs:490

0x2528  0x5F 0x03       ENTERB 0x03

                        // string result;                                       string.hs:493

0x252A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // length = this.Length;                                string.hs:494

0x252C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x252E  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2530  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // for (; i < length; i++)                              string.hs:495

0x2532  0x4E            PUSHLOCALB00
0x2533  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2535  0x08            LT
0x2536  0x2E 0x13       JZB 0x2549 (+19)

                        // c = this[i];                                         string.hs:497

0x2538  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x253A  0x4E            PUSHLOCALB00
0x253B  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x253D  0x4D            POPLOCALB02

                        // Build(ref result, c.ToLower());                      string.hs:498

0x253E  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x2540  0x4F            PUSHLOCALB02
0x2541  0x2C 0xDC       CALLB 0xDC     // Char.ToLower
0x2543  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // }                                                    string.hs:499

0x2545  0x22 0x00       INCLOCALB 0x00 (BP+0)
0x2547  0x30 0xEB       JB 0x2532 (-21)

                        // return result;                                       string.hs:500

0x2549  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x254B  0x2B 0x0A       RETRETB 0x0A


// /source/system/string.hs:281
// ####  String.IndexOf(..)  ####                                               0x0107


                        // uint i;                                              string.hs:282

0x254D  0x5F 0x02       ENTERB 0x02

                        // length = this.Length;                                string.hs:284

0x254F  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x2551  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2553  0x4D            POPLOCALB02

                        // for ( ; i < length; i++)                             string.hs:285

0x2554  0x4E            PUSHLOCALB00
0x2555  0x4F            PUSHLOCALB02
0x2556  0x08            LT
0x2557  0x2E 0x16       JZB 0x256D (+22)

                        // if (this[i] == pattern)                              string.hs:287

0x2559  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x255B  0x4E            PUSHLOCALB00
0x255C  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x255E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2560  0x05            EQ
0x2561  0x2E 0x08       JZB 0x2569 (+8)

                        // index = i;                                           string.hs:289

0x2563  0x4E            PUSHLOCALB00
0x2564  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         string.hs:290

0x2566  0x45            PUSHI1
0x2567  0x2B 0x0A       RETRETB 0x0A

                        // }                                                    string.hs:292

0x2569  0x22 0x00       INCLOCALB 0x00 (BP+0)
0x256B  0x30 0xE9       JB 0x2554 (-23)

                        // return false;                                        string.hs:293

0x256D  0x44            PUSHI0
0x256E  0x2B 0x0A       RETRETB 0x0A


// /source/system/string.hs:254
// ####  String.Contains(..)  ####                                              0x0104


                        // uint index;                                          string.hs:255

0x2570  0x5F 0x01       ENTERB 0x01

                        // return IndexOf(this, needle, ref index);             string.hs:256

0x2572  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
0x2575  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x2577  0x34 0x0C 0x01  CALLW 0x010C   // String.IndexOf
0x257A  0x2B 0x06       RETRETB 0x06


// /source/system/string.hs:237
// ####  String.Contains(..)  ####                                              0x0103

0x257C  0x49            ENTER

                        // string result;                                       string.hs:238

0x257D  0x24 0x02       SYSCALL0 0x02  // String.New

                        // char ch;                                             string.hs:239

0x257F  0x44            PUSHI0

                        // uint i;                                              string.hs:240

0x2580  0x44            PUSHI0

                        // uint length;                                         string.hs:241

0x2581  0x44            PUSHI0

                        // length = this.Length;                                string.hs:242

0x2582  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2584  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2586  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // for ( ; i < length; i++)                             string.hs:243

0x2588  0x56 0x04 0x06  PUSHLOCALBB 0x0604
0x258B  0x08            LT
0x258C  0x2E 0x15       JZB 0x25A1 (+21)

                        // ch = this[i];                                        string.hs:245

0x258E  0x56 0xFC 0x04  PUSHLOCALBB 0x04FC
0x2591  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2593  0x4D            POPLOCALB02

                        // if (ch == needle)                                    string.hs:246

0x2594  0x4F            PUSHLOCALB02
0x2595  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2597  0x05            EQ
0x2598  0x2E 0x05       JZB 0x259D (+5)

                        // return true;                                         string.hs:248

0x259A  0x45            PUSHI1
0x259B  0x2B 0x0C       RETRETB 0x0C

                        // }                                                    string.hs:250

0x259D  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x259F  0x30 0xE9       JB 0x2588 (-23)

                        // return false;                                        string.hs:251

0x25A1  0x44            PUSHI0
0x25A2  0x2B 0x0C       RETRETB 0x0C


// /source/system/string.hs:326
// ####  String.IndexOf(..)  ####                                               0x010C


                        // bool found;                                          string.hs:327

0x25A4  0x5F 0x05       ENTERB 0x05

                        // length = this.Length;                                string.hs:332

0x25A6  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x25A8  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x25AA  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // pLength = pattern.Length;                            string.hs:333

0x25AC  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x25AE  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x25B0  0x4D            POPLOCALB02

                        // if (pIndex + pLength > length)                       string.hs:336

0x25B1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x25B3  0x4F            PUSHLOCALB02
0x25B4  0x00            ADD
0x25B5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x25B7  0x07            GT
0x25B8  0x2F 0x32       JNZB 0x25EA (+50)

                        // found = true;                                        string.hs:340

0x25BA  0x45            PUSHI1
0x25BB  0x4C            POPLOCALB00

                        // for (i=0; i < pLength; i++)                          string.hs:341

0x25BC  0x44            PUSHI0
0x25BD  0x1B 0x08       POPLOCALB 0x08 (BP+8)
0x25BF  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x25C1  0x4F            PUSHLOCALB02
0x25C2  0x08            LT
0x25C3  0x2E 0x1A       JZB 0x25DD (+26)

                        // if (this[i+pIndex] != pattern[i])                    string.hs:343

0x25C5  0x56 0xFA 0x08  PUSHLOCALBB 0x08FA
0x25C8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x25CA  0x00            ADD
0x25CB  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x25CD  0x56 0xFC 0x08  PUSHLOCALBB 0x08FC
0x25D0  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x25D2  0x06            NE
0x25D3  0x2E 0x06       JZB 0x25D9 (+6)

                        // found = false;                                       string.hs:345

0x25D5  0x44            PUSHI0
0x25D6  0x4C            POPLOCALB00

                        // break;                                               string.hs:346

0x25D7  0x30 0x06       JB 0x25DD (+6)

                        // }                                                    string.hs:348

0x25D9  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x25DB  0x30 0xE4       JB 0x25BF (-28)

                        // if (found)                                           string.hs:349

0x25DD  0x4E            PUSHLOCALB00
0x25DE  0x2E 0x08       JZB 0x25E6 (+8)

                        // index = pIndex;                                      string.hs:351

0x25E0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x25E2  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // break;                                               string.hs:352

0x25E4  0x30 0x06       JB 0x25EA (+6)

                        // pIndex++;                                            string.hs:354

0x25E6  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // }                                                    string.hs:355

0x25E8  0x30 0xC9       JB 0x25B1 (-55)

                        // return found;                                        string.hs:356

0x25EA  0x4E            PUSHLOCALB00
0x25EB  0x2B 0x10       RETRETB 0x10


// /source/compiler/tokens/token.hs:320
// ####  Token.TryParseUInt(..)  ####                                           0x0051


                        // bool success;                                        token.hs:321

0x25ED  0x5F 0x01       ENTERB 0x01

                        // long rv;                                             token.hs:322

0x25EF  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (TryParseLong(content, ref rv))                   token.hs:323

0x25F1  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x25F3  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x25F5  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x25F7  0x2E 0x1E       JZB 0x2615 (+30)

                        // if ((rv >= 0) && (rv <= 65535))                      token.hs:325

0x25F9  0x4F            PUSHLOCALB02
0x25FA  0x44            PUSHI0
0x25FB  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x25FD  0x24 0x48       SYSCALL0 0x48  // Long.GE
0x25FF  0x27 0x00       DUP 0x00
0x2601  0x2E 0x0B       JZB 0x260C (+11)
0x2603  0x4F            PUSHLOCALB02
0x2604  0x37 0xFF 0xFF  PUSHIW 0xFFFF
0x2607  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x2609  0x24 0x46       SYSCALL0 0x46  // Long.LE
0x260B  0x0C            BOOLAND
0x260C  0x2E 0x09       JZB 0x2615 (+9)

                        // returnValue = uint(rv);                              token.hs:327

0x260E  0x4F            PUSHLOCALB02
0x260F  0x24 0x3C       SYSCALL0 0x3C  // Long.ToUInt
0x2611  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // success = true;                                      token.hs:328

0x2613  0x45            PUSHI1
0x2614  0x4C            POPLOCALB00

                        // return success;                                      token.hs:331

0x2615  0x4E            PUSHLOCALB00
0x2616  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/token.hs:87
// ####  Token.GetType(..)  ####                                                0x0046

0x2618  0x49            ENTER

                        // string name = token["type"];                         token.hs:89

0x2619  0x24 0x02       SYSCALL0 0x02  // String.New
0x261B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x261D  0x37 0x51 0x02  PUSHIW 0x0251
0x2620  0x1A 0x04       PUSHIB 0x04
0x2622  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2624  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2626  0x5D            POPCOPYLOCALB00

                        // HopperToken tokenType = HopperToken.Undefined;

0x2627  0x44            PUSHI0
0x2628  0x44            PUSHI0
0x2629  0x4D            POPLOCALB02

                        // if (hopperTokenTypes.Contains(name))                 token.hs:91

0x262A  0x20 0x0E       PUSHGLOBALB 0x0E
0x262C  0x4E            PUSHLOCALB00
0x262D  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x262F  0x2E 0x0A       JZB 0x2639 (+10)

                        // tokenType = hopperTokenTypes[name];                  token.hs:93

0x2631  0x20 0x0E       PUSHGLOBALB 0x0E
0x2633  0x4E            PUSHLOCALB00
0x2634  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2636  0x4D            POPLOCALB02

                        // }                                                    token.hs:94

0x2637  0x30 0x0B       JB 0x2642 (+11)

                        // PrintLn("TODO : token not implemented in Token.GetType");

0x2639  0x37 0x17 0x05  PUSHIW 0x0517
0x263C  0x1A 0x2D       PUSHIB 0x2D
0x263E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2640  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // return tokenType;                                    token.hs:99

0x2642  0x4F            PUSHLOCALB02
0x2643  0x2B 0x06       RETRETB 0x06


// /source/compiler/tokens/token.hs:273
// ####  Token.TryParseLong(..)  ####                                           0x004F

0x2645  0x49            ENTER

                        // long result;                                         token.hs:274

0x2646  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // bool makeNegative;                                   token.hs:275

0x2648  0x44            PUSHI0

                        // if (content.Length < 1)                              token.hs:276

0x2649  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x264B  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x264D  0x45            PUSHI1
0x264E  0x08            LT
0x264F  0x2E 0x05       JZB 0x2654 (+5)

                        // return false;                                        token.hs:278

0x2651  0x44            PUSHI0
0x2652  0x2B 0x08       RETRETB 0x08

                        // if (content.StartsWith('+'))                         token.hs:280

0x2654  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2656  0x1A 0x2B       PUSHIB 0x2B
0x2658  0x34 0x05 0x01  CALLW 0x0105   // String.StartsWith
0x265B  0x2E 0x0B       JZB 0x2666 (+11)

                        // content = content.Substring(1);                      token.hs:282

0x265D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x265F  0x45            PUSHI1
0x2660  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2662  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // }                                                    token.hs:283

0x2664  0x30 0x14       JB 0x2678 (+20)

                        // else if (content.StartsWith('-'))                    token.hs:284

0x2666  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2668  0x1A 0x2D       PUSHIB 0x2D
0x266A  0x34 0x05 0x01  CALLW 0x0105   // String.StartsWith
0x266D  0x2E 0x0B       JZB 0x2678 (+11)

                        // content = content.Substring(1);                      token.hs:286

0x266F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2671  0x45            PUSHI1
0x2672  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2674  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // makeNegative = true;                                 token.hs:287

0x2676  0x45            PUSHI1
0x2677  0x4D            POPLOCALB02

                        // foreach (var c in content)                           token.hs:289

0x2678  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x267A  0x44            PUSHI0
0x267B  0x44            PUSHI0
0x267C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x267E  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2680  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2682  0x05            EQ
0x2683  0x2F 0x29       JNZB 0x26AC (+41)
0x2685  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x2688  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x268A  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // result = result * 10;                                token.hs:291

0x268C  0x4E            PUSHLOCALB00
0x268D  0x1A 0x0A       PUSHIB 0x0A
0x268F  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x2691  0x24 0x42       SYSCALL0 0x42  // Long.Mul
0x2693  0x5D            POPCOPYLOCALB00

                        // if (!c.IsDigit())                                    token.hs:292

0x2694  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2696  0x2C 0xD9       CALLB 0xD9     // Char.IsDigit
0x2698  0x2F 0x05       JNZB 0x269D (+5)

                        // return false;                                        token.hs:294

0x269A  0x44            PUSHI0
0x269B  0x2B 0x0E       RETRETB 0x0E

                        // result = result + (byte(c) - 48); // 48 is ASCII for '0'

0x269D  0x4E            PUSHLOCALB00
0x269E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x26A0  0x1A 0x30       PUSHIB 0x30
0x26A2  0x01            SUB
0x26A3  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x26A5  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x26A7  0x5D            POPCOPYLOCALB00

                        // }                                                    token.hs:297

0x26A8  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x26AA  0x30 0xD2       JB 0x267C (-46)
0x26AC  0x28 0x06       DECSP 0x06

                        // if (makeNegative)                                    token.hs:298

0x26AE  0x4F            PUSHLOCALB02
0x26AF  0x2E 0x06       JZB 0x26B5 (+6)

                        // result = -result;                                    token.hs:300

0x26B1  0x4E            PUSHLOCALB00
0x26B2  0x24 0x49       SYSCALL0 0x49  // Long.Negate
0x26B4  0x5D            POPCOPYLOCALB00

                        // returnValue = result;                                token.hs:302

0x26B5  0x4E            PUSHLOCALB00
0x26B6  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // return true;                                         token.hs:303

0x26B8  0x45            PUSHI1
0x26B9  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/token.hs:262
// ####  Token.IsReservedWord(..)  ####                                         0x004D

0x26BB  0x49            ENTER

                        // return typeKeywords.Contains(candidate)              token.hs:263

0x26BC  0x20 0x08       PUSHGLOBALB 0x08
0x26BE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x26C0  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x26C2  0x27 0x00       DUP 0x00
0x26C4  0x2F 0x14       JNZB 0x26D8 (+20)
0x26C6  0x20 0x0A       PUSHGLOBALB 0x0A
0x26C8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x26CA  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x26CC  0x0B            BOOLOR
0x26CD  0x27 0x00       DUP 0x00
0x26CF  0x2F 0x09       JNZB 0x26D8 (+9)
0x26D1  0x20 0x04       PUSHGLOBALB 0x04
0x26D3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x26D5  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x26D7  0x0B            BOOLOR
0x26D8  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/token.hs:334
// ####  Token.TryParseHex(..)  ####                                            0x0052


                        // bool success;                                        token.hs:335

0x26DA  0x5F 0x03       ENTERB 0x03

                        // returnValue = 0;                                     token.hs:339

0x26DC  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // if (!content.StartsWith("0x"))                       token.hs:340

0x26DE  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x26E0  0x37 0x30 0x78  PUSHIW 0x7830
0x26E3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x26E5  0x34 0x06 0x01  CALLW 0x0106   // String.StartsWith
0x26E8  0x2E 0x5F       JZB 0x2747 (+95)

                        // length = content.Length;                             token.hs:344

0x26EA  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x26EC  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x26EE  0x4D            POPLOCALB02

                        // if (length < 3)                                      token.hs:345

0x26EF  0x4F            PUSHLOCALB02
0x26F0  0x1A 0x03       PUSHIB 0x03
0x26F2  0x08            LT
0x26F3  0x2F 0x54       JNZB 0x2747 (+84)

                        // success = true;                                      token.hs:349

0x26F5  0x45            PUSHI1
0x26F6  0x4C            POPLOCALB00

                        // for (uint i=0; i < length-2; i++)                    token.hs:350

0x26F7  0x44            PUSHI0
0x26F8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x26FA  0x4F            PUSHLOCALB02
0x26FB  0x1A 0x02       PUSHIB 0x02
0x26FD  0x01            SUB
0x26FE  0x08            LT
0x26FF  0x2E 0x46       JZB 0x2745 (+70)

                        // returnValue = returnValue * 16;                      token.hs:352

0x2701  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x2703  0x1A 0x10       PUSHIB 0x10
0x2705  0x03            MUL
0x2706  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // char c = content.GetChar(i+2);                       token.hs:353

0x2708  0x44            PUSHI0
0x2709  0x56 0xFC 0x04  PUSHLOCALBB 0x04FC
0x270C  0x1A 0x02       PUSHIB 0x02
0x270E  0x00            ADD
0x270F  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2711  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (c.IsDigit())                                     token.hs:354

0x2713  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2715  0x2C 0xD9       CALLB 0xD9     // Char.IsDigit
0x2717  0x2E 0x0E       JZB 0x2725 (+14)

                        // returnValue = returnValue + (byte(c) - 48); // 48 is ASCII for '0'

0x2719  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x271B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x271D  0x1A 0x30       PUSHIB 0x30
0x271F  0x01            SUB
0x2720  0x00            ADD
0x2721  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // }                                                    token.hs:357

0x2723  0x30 0x1C       JB 0x273F (+28)

                        // else if (c.IsHexDigit())                             token.hs:358

0x2725  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2727  0x2C 0xDD       CALLB 0xDD     // Char.IsHexDigit
0x2729  0x2E 0x10       JZB 0x2739 (+16)

                        // returnValue = returnValue + (byte(c.ToLower()) - 87); // 97 is ASCII for 'a', -97+10 = -87

0x272B  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x272D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x272F  0x2C 0xDC       CALLB 0xDC     // Char.ToLower
0x2731  0x1A 0x57       PUSHIB 0x57
0x2733  0x01            SUB
0x2734  0x00            ADD
0x2735  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // }                                                    token.hs:361

0x2737  0x30 0x08       JB 0x273F (+8)

                        // success = false;                                     token.hs:364

0x2739  0x44            PUSHI0
0x273A  0x4C            POPLOCALB00

                        // break;                                               token.hs:365

0x273B  0x28 0x04       DECSP 0x04
0x273D  0x30 0x0A       JB 0x2747 (+10)

                        // }                                                    token.hs:367

0x273F  0x28 0x02       DECSP 0x02
0x2741  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x2743  0x30 0xB5       JB 0x26F8 (-75)
0x2745  0x28 0x02       DECSP 0x02

                        // return success;                                      token.hs:370

0x2747  0x4E            PUSHLOCALB00
0x2748  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/token.hs:414
// ####  Token.TryParseBinary(..)  ####                                         0x0054


                        // char c;                                              token.hs:415

0x274A  0x5F 0x04       ENTERB 0x04

                        // returnValue = 0;                                     token.hs:418

0x274C  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // if (!content.StartsWith("0b"))                       token.hs:419

0x274E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2750  0x37 0x30 0x62  PUSHIW 0x6230
0x2753  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2755  0x34 0x06 0x01  CALLW 0x0106   // String.StartsWith
0x2758  0x2F 0x05       JNZB 0x275D (+5)

                        // return false;                                        token.hs:421

0x275A  0x44            PUSHI0
0x275B  0x2B 0x0A       RETRETB 0x0A

                        // length = content.Length;                             token.hs:423

0x275D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x275F  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2761  0x4D            POPLOCALB02

                        // if (length < 3)                                      token.hs:424

0x2762  0x4F            PUSHLOCALB02
0x2763  0x1A 0x03       PUSHIB 0x03
0x2765  0x08            LT
0x2766  0x2E 0x05       JZB 0x276B (+5)

                        // return false;                                        token.hs:426

0x2768  0x44            PUSHI0
0x2769  0x2B 0x0A       RETRETB 0x0A

                        // for ( ; i < length-2; i++)                           token.hs:428

0x276B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x276D  0x4F            PUSHLOCALB02
0x276E  0x1A 0x02       PUSHIB 0x02
0x2770  0x01            SUB
0x2771  0x08            LT
0x2772  0x2E 0x22       JZB 0x2794 (+34)

                        // returnValue = returnValue * 2;                       token.hs:430

0x2774  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x2776  0x1A 0x02       PUSHIB 0x02
0x2778  0x03            MUL
0x2779  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // c = content.GetChar(i+2);                            token.hs:431

0x277B  0x56 0xFC 0x04  PUSHLOCALBB 0x04FC
0x277E  0x1A 0x02       PUSHIB 0x02
0x2780  0x00            ADD
0x2781  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2783  0x4C            POPLOCALB00

                        // if (c == '1')                                        token.hs:432

0x2784  0x4E            PUSHLOCALB00
0x2785  0x1A 0x31       PUSHIB 0x31
0x2787  0x05            EQ
0x2788  0x2E 0x08       JZB 0x2790 (+8)

                        // returnValue = returnValue + 1;                       token.hs:434

0x278A  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x278C  0x45            PUSHI1
0x278D  0x00            ADD
0x278E  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // }                                                    token.hs:436

0x2790  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x2792  0x30 0xD9       JB 0x276B (-39)

                        // return true;                                         token.hs:437

0x2794  0x45            PUSHI1
0x2795  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/tokens/parser.hs:27
// ####  Parser.SetInteractive(..)  ####                                        0x006B

0x2797  0x49            ENTER

                        // tickColumn = column;                                 parser.hs:28

0x2798  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x279A  0x1F 0x3C       POPGLOBALB 0x3C

                        // tickRow = row;                                       parser.hs:29

0x279C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x279E  0x1F 0x3A       POPGLOBALB 0x3A

                        // interactive = true;                                  parser.hs:30

0x27A0  0x45            PUSHI1
0x27A1  0x1F 0x32       POPGLOBALB 0x32

                        // File.Delete(errorPath);                              parser.hs:31

0x27A3  0x37 0x44 0x05  PUSHIW 0x0544
0x27A6  0x1A 0x10       PUSHIB 0x10
0x27A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x27AA  0x24 0x68       SYSCALL0 0x68  // File.Delete

                        // errorFile = File.Create(errorPath);                  parser.hs:32

0x27AC  0x37 0x44 0x05  PUSHIW 0x0544
0x27AF  0x1A 0x10       PUSHIB 0x10
0x27B1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x27B3  0x24 0x62       SYSCALL0 0x62  // File.Create
0x27B5  0x59 0x36       POPCOPYGLOBALB 0x36

                        // currentTick = 0;                                     parser.hs:33

0x27B7  0x44            PUSHI0
0x27B8  0x1F 0x38       POPGLOBALB 0x38

                        // Diagnostics.SetError(0x00);                          parser.hs:34

0x27BA  0x44            PUSHI0
0x27BB  0x24 0x7D       SYSCALL0 0x7D  // Diagnostics.SetError

                        // }                                                    parser.hs:35

0x27BD  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:37
// ####  Parser.IsInteractive(..)  ####                                         0x006C

0x27BF  0x49            ENTER

                        // return interactive;                                  parser.hs:38

0x27C0  0x20 0x32       PUSHGLOBALB 0x32
0x27C2  0x4A            RET0


// /source/compiler/tokens/parser.hs:74
// ####  Parser.ProgressDone(..)  ####                                          0x006F

0x27C3  0x49            ENTER

                        // if (IsInteractive())                                 parser.hs:75

0x27C4  0x2C 0x6C       CALLB 0x6C     // Parser.IsInteractive
0x27C6  0x2E 0x0F       JZB 0x27D5 (+15)

                        // DrawChar(tickColumn, tickRow, ' ', Color.ProgressText, Color.ProgressFace);

0x27C8  0x52 0x3C 0x3A  PUSHGLOBALBB 0x3A3C
0x27CB  0x1A 0x20       PUSHIB 0x20
0x27CD  0x34 0x64 0x01  CALLW 0x0164   // Color.ProgressText_Get
0x27D0  0x34 0x65 0x01  CALLW 0x0165   // Color.ProgressFace_Get
0x27D3  0x24 0x33       SYSCALL0 0x33  // Screen.DrawChar

                        // }                                                    parser.hs:79

0x27D5  0x4A            RET0


// /source/compiler/tokens/parser.hs:103
// ####  Parser.Reset(..)  ####                                                 0x0075

0x27D6  0x49            ENTER

                        // <string, string> empty;                              parser.hs:104

0x27D7  0x1A 0x0F       PUSHIB 0x0F
0x27D9  0x1A 0x0F       PUSHIB 0x0F
0x27DB  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // previousToken = empty;                               parser.hs:105

0x27DD  0x4E            PUSHLOCALB00
0x27DE  0x59 0x2C       POPCOPYGLOBALB 0x2C

                        // currentToken = empty;                                parser.hs:106

0x27E0  0x4E            PUSHLOCALB00
0x27E1  0x59 0x2E       POPCOPYGLOBALB 0x2E

                        // hadError = false;                                    parser.hs:107

0x27E3  0x44            PUSHI0
0x27E4  0x1F 0x30       POPGLOBALB 0x30

                        // }                                                    parser.hs:108

0x27E6  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:162
// ####  Parser.Advance(..)  ####                                               0x007C

0x27E8  0x49            ENTER

                        // previousToken = currentToken;                        parser.hs:163

0x27E9  0x20 0x2E       PUSHGLOBALB 0x2E
0x27EB  0x59 0x2C       POPCOPYGLOBALB 0x2C

                        // nextToken();                                         parser.hs:166

0x27ED  0x2C 0x76       CALLB 0x76     // Parser.nextToken

                        // HopperToken ttype = Token.GetType(currentToken);

0x27EF  0x44            PUSHI0
0x27F0  0x20 0x2E       PUSHGLOBALB 0x2E
0x27F2  0x2C 0x46       CALLB 0x46     // Token.GetType
0x27F4  0x4C            POPLOCALB00

                        // if (ttype != HopperToken.Error)                      parser.hs:168

0x27F5  0x4E            PUSHLOCALB00
0x27F6  0x45            PUSHI1
0x27F7  0x06            NE
0x27F8  0x2E 0x05       JZB 0x27FD (+5)

                        // break;                                               parser.hs:170

0x27FA  0x28 0x02       DECSP 0x02
0x27FC  0x4A            RET0

                        // ErrorAtCurrent(currentToken["lexeme"]);              parser.hs:172

0x27FD  0x20 0x2E       PUSHGLOBALB 0x2E
0x27FF  0x37 0x5B 0x01  PUSHIW 0x015B
0x2802  0x1A 0x06       PUSHIB 0x06
0x2804  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2806  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2808  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               parser.hs:173

0x280A  0x28 0x02       DECSP 0x02
0x280C  0x4A            RET0


// /source/compiler/tokens/parser.hs:185
// ####  Parser.Consume(..)  ####                                               0x007F

0x280D  0x49            ENTER

                        // if (HadError)                                        parser.hs:188

0x280E  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x2810  0x2E 0x04       JZB 0x2814 (+4)

                        // break;                                               parser.hs:190

0x2812  0x2A 0x06       RETB 0x06

                        // HopperToken ttype = Token.GetType(currentToken);

0x2814  0x44            PUSHI0
0x2815  0x20 0x2E       PUSHGLOBALB 0x2E
0x2817  0x2C 0x46       CALLB 0x46     // Token.GetType
0x2819  0x4C            POPLOCALB00

                        // if (ttype == consumeType)                            parser.hs:193

0x281A  0x4E            PUSHLOCALB00
0x281B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x281D  0x05            EQ
0x281E  0x2E 0x4A       JZB 0x2868 (+74)

                        // if (ttype == HopperToken.Keyword)                    parser.hs:195

0x2820  0x4E            PUSHLOCALB00
0x2821  0x1A 0x05       PUSHIB 0x05
0x2823  0x05            EQ
0x2824  0x2E 0x3E       JZB 0x2862 (+62)

                        // keyword = "|" + keyword + "|";                       parser.hs:197

0x2826  0x1A 0x7C       PUSHIB 0x7C
0x2828  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x282A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x282C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x282E  0x1A 0x7C       PUSHIB 0x7C
0x2830  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2832  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2834  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // string search = "|" + currentToken["lexeme"] + "|";

0x2836  0x24 0x02       SYSCALL0 0x02  // String.New
0x2838  0x1A 0x7C       PUSHIB 0x7C
0x283A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x283C  0x20 0x2E       PUSHGLOBALB 0x2E
0x283E  0x37 0x5B 0x01  PUSHIW 0x015B
0x2841  0x1A 0x06       PUSHIB 0x06
0x2843  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2845  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2847  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2849  0x1A 0x7C       PUSHIB 0x7C
0x284B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x284D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x284F  0x5E            POPCOPYLOCALB02

                        // if (keyword.Contains(search))                        parser.hs:199

0x2850  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2852  0x4F            PUSHLOCALB02
0x2853  0x34 0x04 0x01  CALLW 0x0104   // String.Contains
0x2856  0x2E 0x08       JZB 0x285E (+8)

                        // Advance();                                           parser.hs:201

0x2858  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // break;                                               parser.hs:202

0x285A  0x28 0x04       DECSP 0x04
0x285C  0x2A 0x06       RETB 0x06

                        // }                                                    parser.hs:204

0x285E  0x28 0x02       DECSP 0x02
0x2860  0x30 0x08       JB 0x2868 (+8)

                        // Advance();                                           parser.hs:207

0x2862  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // break;                                               parser.hs:208

0x2864  0x28 0x02       DECSP 0x02
0x2866  0x2A 0x06       RETB 0x06

                        // ErrorAtCurrent(message);                             parser.hs:211

0x2868  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x286A  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               parser.hs:212

0x286C  0x28 0x02       DECSP 0x02
0x286E  0x2A 0x06       RETB 0x06


// /source/compiler/tokens/parser.hs:181
// ####  Parser.Consume(..)  ####                                               0x007E

0x2870  0x49            ENTER

                        // Consume(consumeType, "", message);                   parser.hs:182

0x2871  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2873  0x24 0x02       SYSCALL0 0x02  // String.New
0x2875  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2877  0x2C 0x7F       CALLB 0x7F     // Parser.Consume

                        // }                                                    parser.hs:183

0x2879  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:81
// ####  Parser.HadError_Get(..)  ####                                          0x0070

0x287B  0x49            ENTER

                        // bool HadError { get { return hadError; } }           parser.hs:81

0x287C  0x20 0x30       PUSHGLOBALB 0x30
0x287E  0x4A            RET0


// /source/compiler/tokens/parser.hs:84
// ####  Parser.PreviousToken_Get(..)  ####                                     0x0072

0x287F  0x49            ENTER

                        // <string, string> PreviousToken { get { return previousToken; }}

0x2880  0x20 0x2C       PUSHGLOBALB 0x2C
0x2882  0x4A            RET0


// /source/compiler/tokens/parser.hs:177
// ####  Parser.Consume(..)  ####                                               0x007D

0x2883  0x49            ENTER

                        // Consume(consumeType, "", "'" + ch + "' expected");

0x2884  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2886  0x24 0x02       SYSCALL0 0x02  // String.New
0x2888  0x1A 0x27       PUSHIB 0x27
0x288A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x288C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x288E  0x25 0x03       SYSCALL1 0x03  // String.Append
0x2890  0x37 0x01 0x01  PUSHIW 0x0101
0x2893  0x1A 0x0A       PUSHIB 0x0A
0x2895  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2897  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2899  0x2C 0x7F       CALLB 0x7F     // Parser.Consume

                        // }                                                    parser.hs:179

0x289B  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:216
// ####  Parser.Check(..)  ####                                                 0x0080

0x289D  0x49            ENTER

                        // return Check(checkType, "");                         parser.hs:217

0x289E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x28A0  0x24 0x02       SYSCALL0 0x02  // String.New
0x28A2  0x2C 0x81       CALLB 0x81     // Parser.Check
0x28A4  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/parser.hs:57
// ####  Parser.ProgressTick(..)  ####                                          0x006E

0x28A6  0x49            ENTER

                        // if (IsInteractive())                                 parser.hs:58

0x28A7  0x2C 0x6C       CALLB 0x6C     // Parser.IsInteractive
0x28A9  0x2E 0x26       JZB 0x28CF (+38)

                        // char c = progressTicks[currentTick];                 parser.hs:60

0x28AB  0x44            PUSHI0
0x28AC  0x52 0x34 0x38  PUSHGLOBALBB 0x3834
0x28AF  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x28B1  0x4C            POPLOCALB00

                        // DrawChar(tickColumn, tickRow, c, Color.StatusText, Color.StatusFace);

0x28B2  0x52 0x3C 0x3A  PUSHGLOBALBB 0x3A3C
0x28B5  0x4E            PUSHLOCALB00
0x28B6  0x34 0x76 0x01  CALLW 0x0176   // Color.StatusText_Get
0x28B9  0x34 0x75 0x01  CALLW 0x0175   // Color.StatusFace_Get
0x28BC  0x24 0x33       SYSCALL0 0x33  // Screen.DrawChar

                        // currentTick++;                                       parser.hs:62

0x28BE  0x53 0x38       INCGLOBALB 0x38

                        // if (currentTick == progressTicks.Length)             parser.hs:63

0x28C0  0x52 0x38 0x34  PUSHGLOBALBB 0x3438
0x28C3  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x28C5  0x05            EQ
0x28C6  0x2E 0x05       JZB 0x28CB (+5)

                        // currentTick = 0;                                     parser.hs:65

0x28C8  0x44            PUSHI0
0x28C9  0x1F 0x38       POPGLOBALB 0x38

                        // }                                                    parser.hs:67

0x28CB  0x28 0x02       DECSP 0x02
0x28CD  0x2A 0x02       RETB 0x02

                        // Print(str, Color.ProgressTick, Color.ProgressBackground);

0x28CF  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x28D1  0x34 0x62 0x01  CALLW 0x0162   // Color.ProgressTick_Get
0x28D4  0x34 0x63 0x01  CALLW 0x0163   // Color.ProgressBackground_Get
0x28D7  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // }                                                    parser.hs:72

0x28D9  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:145
// ####  Parser.Error(..)  ####                                                 0x0078

0x28DB  0x49            ENTER

                        // ErrorAt(previousToken, "'" + ch + "' expected");

0x28DC  0x20 0x2C       PUSHGLOBALB 0x2C
0x28DE  0x1A 0x27       PUSHIB 0x27
0x28E0  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x28E2  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x28E4  0x25 0x03       SYSCALL1 0x03  // String.Append
0x28E6  0x37 0x01 0x01  PUSHIW 0x0101
0x28E9  0x1A 0x0A       PUSHIB 0x0A
0x28EB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x28ED  0x24 0x03       SYSCALL0 0x03  // String.Append
0x28EF  0x2C 0x77       CALLB 0x77     // Parser.ErrorAt

                        // }                                                    parser.hs:147

0x28F1  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:149
// ####  Parser.Error(..)  ####                                                 0x0079

0x28F3  0x49            ENTER

                        // ErrorAt(previousToken, message);                     parser.hs:150

0x28F4  0x20 0x2C       PUSHGLOBALB 0x2C
0x28F6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x28F8  0x2C 0x77       CALLB 0x77     // Parser.ErrorAt

                        // }                                                    parser.hs:151

0x28FA  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:157
// ####  Parser.ErrorAtCurrent(..)  ####                                        0x007B

0x28FC  0x49            ENTER

                        // ErrorAt(currentToken, message);                      parser.hs:158

0x28FD  0x20 0x2E       PUSHGLOBALB 0x2E
0x28FF  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2901  0x2C 0x77       CALLB 0x77     // Parser.ErrorAt

                        // }                                                    parser.hs:159

0x2903  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:220
// ####  Parser.Check(..)  ####                                                 0x0081


                        // bool result = false;                                 parser.hs:221

0x2905  0x5F 0x02       ENTERB 0x02

                        // HopperToken ttype = Token.GetType(currentToken);

0x2907  0x20 0x2E       PUSHGLOBALB 0x2E
0x2909  0x2C 0x46       CALLB 0x46     // Token.GetType
0x290B  0x4D            POPLOCALB02

                        // result = (checkType == ttype);                       parser.hs:225

0x290C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x290E  0x4F            PUSHLOCALB02
0x290F  0x05            EQ
0x2910  0x4C            POPLOCALB00

                        // if (!result)                                         parser.hs:226

0x2911  0x4E            PUSHLOCALB00
0x2912  0x2F 0x07       JNZB 0x2919 (+7)

                        // break;                                               parser.hs:228

0x2914  0x28 0x02       DECSP 0x02
0x2916  0x33 0x8C 0x00  JW 0x29A2 (+140)

                        // if (checkType == HopperToken.Keyword)                parser.hs:230

0x2919  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x291B  0x1A 0x05       PUSHIB 0x05
0x291D  0x05            EQ
0x291E  0x2E 0x38       JZB 0x2956 (+56)

                        // keyword = "|" + keyword + "|";                       parser.hs:232

0x2920  0x1A 0x7C       PUSHIB 0x7C
0x2922  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2924  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2926  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2928  0x1A 0x7C       PUSHIB 0x7C
0x292A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x292C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x292E  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // string search = "|" + currentToken["lexeme"] + "|";

0x2930  0x24 0x02       SYSCALL0 0x02  // String.New
0x2932  0x1A 0x7C       PUSHIB 0x7C
0x2934  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2936  0x20 0x2E       PUSHGLOBALB 0x2E
0x2938  0x37 0x5B 0x01  PUSHIW 0x015B
0x293B  0x1A 0x06       PUSHIB 0x06
0x293D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x293F  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2941  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2943  0x1A 0x7C       PUSHIB 0x7C
0x2945  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2947  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2949  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // result = keyword.Contains(search);                   parser.hs:234

0x294B  0x56 0xFE 0x04  PUSHLOCALBB 0x04FE
0x294E  0x34 0x04 0x01  CALLW 0x0104   // String.Contains
0x2951  0x4C            POPLOCALB00

                        // }                                                    parser.hs:235

0x2952  0x28 0x02       DECSP 0x02
0x2954  0x30 0x4C       JB 0x29A0 (+76)

                        // else if ((checkType == HopperToken.Identifier) && (keyword.Length != 0))

0x2956  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2958  0x1A 0x03       PUSHIB 0x03
0x295A  0x05            EQ
0x295B  0x27 0x00       DUP 0x00
0x295D  0x2E 0x09       JZB 0x2966 (+9)
0x295F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2961  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2963  0x44            PUSHI0
0x2964  0x06            NE
0x2965  0x0C            BOOLAND
0x2966  0x2E 0x16       JZB 0x297C (+22)

                        // result = keyword == currentToken["lexeme"];

0x2968  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x296A  0x20 0x2E       PUSHGLOBALB 0x2E
0x296C  0x37 0x5B 0x01  PUSHIW 0x015B
0x296F  0x1A 0x06       PUSHIB 0x06
0x2971  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2973  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2975  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2977  0x44            PUSHI0
0x2978  0x05            EQ
0x2979  0x4C            POPLOCALB00

                        // }                                                    parser.hs:239

0x297A  0x30 0x26       JB 0x29A0 (+38)

                        // else if ((checkType == HopperToken.Directive) && (keyword.Length != 0))

0x297C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x297E  0x1A 0x06       PUSHIB 0x06
0x2980  0x05            EQ
0x2981  0x27 0x00       DUP 0x00
0x2983  0x2E 0x09       JZB 0x298C (+9)
0x2985  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2987  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2989  0x44            PUSHI0
0x298A  0x06            NE
0x298B  0x0C            BOOLAND
0x298C  0x2E 0x14       JZB 0x29A0 (+20)

                        // result = keyword == currentToken["lexeme"];

0x298E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2990  0x20 0x2E       PUSHGLOBALB 0x2E
0x2992  0x37 0x5B 0x01  PUSHIW 0x015B
0x2995  0x1A 0x06       PUSHIB 0x06
0x2997  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2999  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x299B  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x299D  0x44            PUSHI0
0x299E  0x05            EQ
0x299F  0x4C            POPLOCALB00

                        // break;                                               parser.hs:244

0x29A0  0x28 0x02       DECSP 0x02

                        // return result;                                       parser.hs:246

0x29A2  0x4E            PUSHLOCALB00
0x29A3  0x2B 0x06       RETRETB 0x06


// /source/compiler/tokens/parser.hs:250
// ####  Parser.Peek(..)  ####                                                  0x0082

0x29A5  0x49            ENTER

                        // <string,string> peek = Scanner.Peek();               parser.hs:251

0x29A6  0x1A 0x0F       PUSHIB 0x0F
0x29A8  0x1A 0x0F       PUSHIB 0x0F
0x29AA  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x29AC  0x2C 0x6A       CALLB 0x6A     // Scanner.Peek
0x29AE  0x5D            POPCOPYLOCALB00

                        // return peek;                                         parser.hs:252

0x29AF  0x4E            PUSHLOCALB00
0x29B0  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/parser.hs:83
// ####  Parser.CurrentToken_Get(..)  ####                                      0x0071

0x29B2  0x49            ENTER

                        // <string, string> CurrentToken { get { return currentToken; }}

0x29B3  0x20 0x2E       PUSHGLOBALB 0x2E
0x29B5  0x4A            RET0


// /source/compiler/tokens/parser.hs:153
// ####  Parser.ErrorAtCurrent(..)  ####                                        0x007A

0x29B6  0x49            ENTER

                        // ErrorAt(currentToken, "'" + ch + "' expected");

0x29B7  0x20 0x2E       PUSHGLOBALB 0x2E
0x29B9  0x1A 0x27       PUSHIB 0x27
0x29BB  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x29BD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x29BF  0x25 0x03       SYSCALL1 0x03  // String.Append
0x29C1  0x37 0x01 0x01  PUSHIW 0x0101
0x29C4  0x1A 0x0A       PUSHIB 0x0A
0x29C6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x29C8  0x24 0x03       SYSCALL0 0x03  // String.Append
0x29CA  0x2C 0x77       CALLB 0x77     // Parser.ErrorAt

                        // }                                                    parser.hs:155

0x29CC  0x2A 0x02       RETB 0x02


// /source/compiler/tokens/parser.hs:111
// ####  Parser.nextToken(..)  ####                                             0x0076

0x29CE  0x49            ENTER

                        // currentToken = Scanner.Next();                       parser.hs:112

0x29CF  0x2C 0x69       CALLB 0x69     // Scanner.Next
0x29D1  0x59 0x2E       POPCOPYGLOBALB 0x2E

                        // }                                                    parser.hs:113

0x29D3  0x4A            RET0


// /source/compiler/tokens/parser.hs:115
// ####  Parser.ErrorAt(..)  ####                                               0x0077

0x29D4  0x49            ENTER

                        // if (!hadError)                                       parser.hs:116

0x29D5  0x20 0x30       PUSHGLOBALB 0x30
0x29D7  0x32 0xA6 0x00  JNZW 0x2A7D (+166)

                        // string errorMessage;                                 parser.hs:118

0x29DA  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string lexeme = token["lexeme"];                     parser.hs:119

0x29DC  0x24 0x02       SYSCALL0 0x02  // String.New
0x29DE  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x29E0  0x37 0x5B 0x01  PUSHIW 0x015B
0x29E3  0x1A 0x06       PUSHIB 0x06
0x29E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x29E7  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x29E9  0x5E            POPCOPYLOCALB02

                        // if (token.Contains("line"))                          parser.hs:120

0x29EA  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x29EC  0x37 0xD2 0x03  PUSHIW 0x03D2
0x29EF  0x1A 0x04       PUSHIB 0x04
0x29F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x29F3  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x29F5  0x2E 0x3A       JZB 0x2A2F (+58)

                        // string ln = token["line"];                           parser.hs:122

0x29F7  0x24 0x02       SYSCALL0 0x02  // String.New
0x29F9  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x29FB  0x37 0xD2 0x03  PUSHIW 0x03D2
0x29FE  0x1A 0x04       PUSHIB 0x04
0x2A00  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2A02  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2A04  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // string path = token["source"];                       parser.hs:123

0x2A06  0x24 0x02       SYSCALL0 0x02  // String.New
0x2A08  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2A0A  0x1A 0xB9       PUSHIB 0xB9
0x2A0C  0x1A 0x06       PUSHIB 0x06
0x2A0E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2A10  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2A12  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // errorMessage = "[" + path + ":" + ln + "]";

0x2A14  0x1A 0x5B       PUSHIB 0x5B
0x2A16  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2A18  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2A1A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A1C  0x1A 0x3A       PUSHIB 0x3A
0x2A1E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2A20  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A22  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2A24  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A26  0x1A 0x5D       PUSHIB 0x5D
0x2A28  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2A2A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A2C  0x5D            POPCOPYLOCALB00

                        // }                                                    parser.hs:125

0x2A2D  0x28 0x04       DECSP 0x04

                        // HopperToken ttype = Token.GetType(token);            parser.hs:126

0x2A2F  0x44            PUSHI0
0x2A30  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2A32  0x2C 0x46       CALLB 0x46     // Token.GetType
0x2A34  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (ttype == HopperToken.EOF)                        parser.hs:127

0x2A36  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2A38  0x1A 0x2D       PUSHIB 0x2D
0x2A3A  0x05            EQ
0x2A3B  0x2E 0x0F       JZB 0x2A4A (+15)

                        // errorMessage = errorMessage + " Error at end";

0x2A3D  0x4E            PUSHLOCALB00
0x2A3E  0x37 0x54 0x05  PUSHIW 0x0554
0x2A41  0x1A 0x0D       PUSHIB 0x0D
0x2A43  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2A45  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A47  0x5D            POPCOPYLOCALB00

                        // }                                                    parser.hs:130

0x2A48  0x30 0x23       JB 0x2A6B (+35)

                        // else if (ttype == HopperToken.Error)                 parser.hs:131

0x2A4A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2A4C  0x45            PUSHI1
0x2A4D  0x05            EQ
0x2A4E  0x2F 0x1D       JNZB 0x2A6B (+29)

                        // else if (lexeme.Length > 0)                          parser.hs:135

0x2A50  0x4F            PUSHLOCALB02
0x2A51  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2A53  0x44            PUSHI0
0x2A54  0x07            GT
0x2A55  0x2E 0x16       JZB 0x2A6B (+22)

                        // errorMessage = errorMessage + " Error at '" + lexeme + "'";

0x2A57  0x4E            PUSHLOCALB00
0x2A58  0x37 0x61 0x05  PUSHIW 0x0561
0x2A5B  0x1A 0x0B       PUSHIB 0x0B
0x2A5D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2A5F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A61  0x4F            PUSHLOCALB02
0x2A62  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A64  0x1A 0x27       PUSHIB 0x27
0x2A66  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2A68  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A6A  0x5D            POPCOPYLOCALB00

                        // errorMessage = errorMessage + ": " + message;

0x2A6B  0x4E            PUSHLOCALB00
0x2A6C  0x37 0x3A 0x20  PUSHIW 0x203A
0x2A6F  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2A71  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A73  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2A75  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A77  0x5D            POPCOPYLOCALB00

                        // EmitError(errorMessage);                             parser.hs:140

0x2A78  0x4E            PUSHLOCALB00
0x2A79  0x2C 0x6D       CALLB 0x6D     // Parser.EmitError

                        // }                                                    parser.hs:141

0x2A7B  0x28 0x06       DECSP 0x06

                        // hadError = true;                                     parser.hs:142

0x2A7D  0x45            PUSHI1
0x2A7E  0x1F 0x30       POPGLOBALB 0x30

                        // }                                                    parser.hs:143

0x2A80  0x2A 0x04       RETB 0x04


// /source/compiler/tokens/parser.hs:42
// ####  Parser.EmitError(..)  ####                                             0x006D

0x2A82  0x49            ENTER

                        // if (IsInteractive())                                 parser.hs:43

0x2A83  0x2C 0x6C       CALLB 0x6C     // Parser.IsInteractive
0x2A85  0x2E 0x22       JZB 0x2AA7 (+34)

                        // ProgressDone();                                      parser.hs:45

0x2A87  0x2C 0x6F       CALLB 0x6F     // Parser.ProgressDone

                        // string eol = "" + char(0x0A);                        parser.hs:46

0x2A89  0x24 0x02       SYSCALL0 0x02  // String.New
0x2A8B  0x24 0x02       SYSCALL0 0x02  // String.New
0x2A8D  0x1A 0x0A       PUSHIB 0x0A
0x2A8F  0x25 0x03       SYSCALL1 0x03  // String.Append
0x2A91  0x5D            POPCOPYLOCALB00

                        // errorFile.Append(errorMessage + eol);                parser.hs:47

0x2A92  0x20 0x36       PUSHGLOBALB 0x36
0x2A94  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2A96  0x4E            PUSHLOCALB00
0x2A97  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2A99  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // errorFile.Flush();                                   parser.hs:48

0x2A9B  0x20 0x36       PUSHGLOBALB 0x36
0x2A9D  0x24 0x67       SYSCALL0 0x67  // File.Flush

                        // Diagnostics.SetError(0x0E);                          parser.hs:49

0x2A9F  0x1A 0x0E       PUSHIB 0x0E
0x2AA1  0x24 0x7D       SYSCALL0 0x7D  // Diagnostics.SetError

                        // }                                                    parser.hs:50

0x2AA3  0x28 0x02       DECSP 0x02
0x2AA5  0x2A 0x02       RETB 0x02

                        // PrintLn(errorMessage);                               parser.hs:53

0x2AA7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2AA9  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // }                                                    parser.hs:55

0x2AAB  0x2A 0x02       RETB 0x02


// /source/system/file.hs:18
// ####  File.Exists(..)  ####                                                  0x0137

0x2AAD  0x49            ENTER

                        // if (!File.Exists(filePath))                          file.hs:19

0x2AAE  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2AB0  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x2AB2  0x2F 0x4C       JNZB 0x2AFE (+76)

                        // string rawPath = filePath;                           file.hs:21

0x2AB4  0x24 0x02       SYSCALL0 0x02  // String.New
0x2AB6  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2AB8  0x5D            POPCOPYLOCALB00

                        // string ext = Path.GetExtension(rawPath);             file.hs:22

0x2AB9  0x24 0x02       SYSCALL0 0x02  // String.New
0x2ABB  0x4E            PUSHLOCALB00
0x2ABC  0x34 0x3C 0x01  CALLW 0x013C   // Path.GetExtension
0x2ABF  0x5E            POPCOPYLOCALB02

                        // if (ext == ".")                                      file.hs:23

0x2AC0  0x4F            PUSHLOCALB02
0x2AC1  0x1A 0x2E       PUSHIB 0x2E
0x2AC3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2AC5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2AC7  0x2F 0x24       JNZB 0x2AEB (+36)

                        // filePath = rawPath + extension;                      file.hs:26

0x2AC9  0x4E            PUSHLOCALB00
0x2ACA  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x2ACC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2ACE  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (!File.Exists(filePath))                          file.hs:27

0x2AD0  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2AD2  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x2AD4  0x2F 0x28       JNZB 0x2AFC (+40)

                        // filePath = Path.Combine(searchFolder, rawPath + extension);

0x2AD6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2AD8  0x4E            PUSHLOCALB00
0x2AD9  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x2ADB  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2ADD  0x34 0x3B 0x01  CALLW 0x013B   // Path.Combine
0x2AE0  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (!File.Exists(filePath))                          file.hs:31

0x2AE2  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2AE4  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x2AE6  0x2F 0x16       JNZB 0x2AFC (+22)

                        // return false;                                        file.hs:33

0x2AE8  0x44            PUSHI0
0x2AE9  0x2B 0x0A       RETRETB 0x0A

                        // filePath = Path.Combine(searchFolder, rawPath);

0x2AEB  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2AED  0x4E            PUSHLOCALB00
0x2AEE  0x34 0x3B 0x01  CALLW 0x013B   // Path.Combine
0x2AF1  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // if (!File.Exists(filePath))                          file.hs:41

0x2AF3  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2AF5  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x2AF7  0x2F 0x05       JNZB 0x2AFC (+5)

                        // return false;                                        file.hs:43

0x2AF9  0x44            PUSHI0
0x2AFA  0x2B 0x0A       RETRETB 0x0A

                        // }                                                    file.hs:46

0x2AFC  0x28 0x04       DECSP 0x04

                        // extension = Path.GetExtension(filePath);             file.hs:47

0x2AFE  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x2B00  0x34 0x3C 0x01  CALLW 0x013C   // Path.GetExtension
0x2B03  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // return true;                                         file.hs:48

0x2B05  0x45            PUSHI1
0x2B06  0x2B 0x06       RETRETB 0x06


// /source/system/path.hs:94
// ####  Path.GetExtension(..)  ####                                            0x013C


                        // uint iDot;                                           path.hs:95

0x2B08  0x5F 0x02       ENTERB 0x02

                        // string extension;                                    path.hs:98

0x2B0A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // extension = "."; // empty "."                        path.hs:101

0x2B0C  0x1A 0x2E       PUSHIB 0x2E
0x2B0E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2B10  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (path.LastIndexOf('.', ref iDot))                 path.hs:102

0x2B12  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B14  0x1A 0x2E       PUSHIB 0x2E
0x2B16  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x2B18  0x34 0x0E 0x01  CALLW 0x010E   // String.LastIndexOf
0x2B1B  0x2E 0x19       JZB 0x2B34 (+25)

                        // if (path.LastIndexOf('/', ref iSlash))               path.hs:104

0x2B1D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B1F  0x1A 0x2F       PUSHIB 0x2F
0x2B21  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x2B23  0x34 0x0E 0x01  CALLW 0x010E   // String.LastIndexOf
0x2B26  0x2E 0x07       JZB 0x2B2D (+7)

                        // if (iSlash > iDot)                                   path.hs:106

0x2B28  0x4F            PUSHLOCALB02
0x2B29  0x4E            PUSHLOCALB00
0x2B2A  0x07            GT
0x2B2B  0x2F 0x09       JNZB 0x2B34 (+9)

                        // extension = path.Substring(iDot);                    path.hs:111

0x2B2D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B2F  0x4E            PUSHLOCALB00
0x2B30  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2B32  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // return extension;                                    path.hs:115

0x2B34  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2B36  0x2B 0x08       RETRETB 0x08


// /source/system/path.hs:24
// ####  Path.GetFileName(..)  ####                                             0x0139


                        // uint iSlash;                                         path.hs:25

0x2B38  0x5F 0x01       ENTERB 0x01

                        // if (path.LastIndexOf('/', ref iSlash))               path.hs:26

0x2B3A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B3C  0x1A 0x2F       PUSHIB 0x2F
0x2B3E  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x2B40  0x34 0x0E 0x01  CALLW 0x010E   // String.LastIndexOf
0x2B43  0x2E 0x0B       JZB 0x2B4E (+11)

                        // path = path.Substring(iSlash+1);                     path.hs:28

0x2B45  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B47  0x4E            PUSHLOCALB00
0x2B48  0x45            PUSHI1
0x2B49  0x00            ADD
0x2B4A  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2B4C  0x57 0xFE       POPCOPYLOCALB 0xFE (BP-2)

                        // return path;                                         path.hs:30

0x2B4E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B50  0x2B 0x04       RETRETB 0x04


// /source/system/path.hs:66
// ####  Path.Combine(..)  ####                                                 0x013B


                        // uint length;                                         path.hs:67

0x2B52  0x5F 0x01       ENTERB 0x01

                        // string resultPath;                                   path.hs:68

0x2B54  0x24 0x02       SYSCALL0 0x02  // String.New

                        // resultPath = partOne;                                path.hs:69

0x2B56  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x2B58  0x5E            POPCOPYLOCALB02

                        // length = resultPath.Length;                          path.hs:70

0x2B59  0x4F            PUSHLOCALB02
0x2B5A  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2B5C  0x4C            POPLOCALB00

                        // if ((length > 0) && (resultPath[length - 1] == '/'))

0x2B5D  0x4E            PUSHLOCALB00
0x2B5E  0x44            PUSHI0
0x2B5F  0x07            GT
0x2B60  0x27 0x00       DUP 0x00
0x2B62  0x2E 0x0C       JZB 0x2B6E (+12)
0x2B64  0x4F            PUSHLOCALB02
0x2B65  0x4E            PUSHLOCALB00
0x2B66  0x45            PUSHI1
0x2B67  0x01            SUB
0x2B68  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2B6A  0x1A 0x2F       PUSHIB 0x2F
0x2B6C  0x05            EQ
0x2B6D  0x0C            BOOLAND
0x2B6E  0x2F 0x08       JNZB 0x2B76 (+8)

                        // resultPath = resultPath + '/'; // append trailing slash

0x2B70  0x4F            PUSHLOCALB02
0x2B71  0x1A 0x2F       PUSHIB 0x2F
0x2B73  0x25 0x03       SYSCALL1 0x03  // String.Append
0x2B75  0x5E            POPCOPYLOCALB02

                        // if ((0 != partTwo.Length) && (partTwo[0] == '/'))

0x2B76  0x44            PUSHI0
0x2B77  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B79  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2B7B  0x06            NE
0x2B7C  0x27 0x00       DUP 0x00
0x2B7E  0x2E 0x0B       JZB 0x2B89 (+11)
0x2B80  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B82  0x44            PUSHI0
0x2B83  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x2B85  0x1A 0x2F       PUSHIB 0x2F
0x2B87  0x05            EQ
0x2B88  0x0C            BOOLAND
0x2B89  0x2E 0x15       JZB 0x2B9E (+21)

                        // if (partTwo.Length > 1)                              path.hs:82

0x2B8B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B8D  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2B8F  0x45            PUSHI1
0x2B90  0x07            GT
0x2B91  0x2E 0x13       JZB 0x2BA4 (+19)

                        // resultPath = resultPath + partTwo.Substring(1);

0x2B93  0x4F            PUSHLOCALB02
0x2B94  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2B96  0x45            PUSHI1
0x2B97  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x2B99  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2B9B  0x5E            POPCOPYLOCALB02

                        // }                                                    path.hs:86

0x2B9C  0x30 0x08       JB 0x2BA4 (+8)

                        // resultPath = resultPath + partTwo;                   path.hs:89

0x2B9E  0x4F            PUSHLOCALB02
0x2B9F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x2BA1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2BA3  0x5E            POPCOPYLOCALB02

                        // return resultPath;                                   path.hs:91

0x2BA4  0x4F            PUSHLOCALB02
0x2BA5  0x2B 0x08       RETRETB 0x08


// /source/compiler/symbols.hs:849
// ####  Symbols.DeferredValidation(..)  ####                                   0x00AA


                        // bool success = true;                                 symbols.hs:850

0x2BA7  0x5F 0x01       ENTERB 0x01

                        // bool success = true;                                 symbols.hs:850

0x2BA9  0x45            PUSHI1
0x2BAA  0x4C            POPLOCALB00

                        // foreach (var token in deferredTypes)                 symbols.hs:851

0x2BAB  0x20 0x8E       PUSHGLOBALB 0x8E
0x2BAD  0x44            PUSHI0
0x2BAE  0x44            PUSHI0
0x2BAF  0x4F            PUSHLOCALB02
0x2BB0  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x2BB2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2BB4  0x05            EQ
0x2BB5  0x2F 0x19       JNZB 0x2BCE (+25)
0x2BB7  0x4F            PUSHLOCALB02
0x2BB8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2BBA  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2BBC  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (!IsNamedType(token))                             symbols.hs:853

0x2BBE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2BC0  0x2C 0xA8       CALLB 0xA8     // Symbols.IsNamedType
0x2BC2  0x2F 0x08       JNZB 0x2BCA (+8)

                        // success = false;                                     symbols.hs:855

0x2BC4  0x44            PUSHI0
0x2BC5  0x4C            POPLOCALB00

                        // break;                                               symbols.hs:856

0x2BC6  0x28 0x06       DECSP 0x06
0x2BC8  0x30 0x08       JB 0x2BD0 (+8)

                        // }                                                    symbols.hs:858

0x2BCA  0x22 0x06       INCLOCALB 0x06 (BP+6)
0x2BCC  0x30 0xE3       JB 0x2BAF (-29)
0x2BCE  0x28 0x06       DECSP 0x06

                        // return success;                                      symbols.hs:859

0x2BD0  0x4E            PUSHLOCALB00
0x2BD1  0x2B 0x02       RETRETB 0x02


// /source/compiler/symbols.hs:1419
// ####  Symbols.Export(..)  ####                                               0x00C3


                        // bool success = true;                                 symbols.hs:1420

0x2BD3  0x5F 0x01       ENTERB 0x01

                        // bool success = true;                                 symbols.hs:1420

0x2BD5  0x45            PUSHI1
0x2BD6  0x4C            POPLOCALB00

                        // <string, variant> dict;                              symbols.hs:1423

0x2BD7  0x1A 0x0F       PUSHIB 0x0F
0x2BD9  0x1A 0x14       PUSHIB 0x14
0x2BDB  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // dict["units"]   = nameSpaces;                        symbols.hs:1425

0x2BDD  0x4F            PUSHLOCALB02
0x2BDE  0x37 0x6C 0x05  PUSHIW 0x056C
0x2BE1  0x1A 0x05       PUSHIB 0x05
0x2BE3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BE5  0x20 0x8C       PUSHGLOBALB 0x8C
0x2BE7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // dict["symbols"]   = pdValues;                        symbols.hs:1426

0x2BE9  0x4F            PUSHLOCALB02
0x2BEA  0x37 0x71 0x05  PUSHIW 0x0571
0x2BED  0x1A 0x07       PUSHIB 0x07
0x2BEF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BF1  0x20 0x88       PUSHGLOBALB 0x88
0x2BF3  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // dict["constants"] = cValues;                         symbols.hs:1427

0x2BF5  0x4F            PUSHLOCALB02
0x2BF6  0x37 0x78 0x05  PUSHIW 0x0578
0x2BF9  0x1A 0x09       PUSHIB 0x09
0x2BFB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2BFD  0x20 0x8A       PUSHGLOBALB 0x8A
0x2BFF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <string, <string, variant> > edict;                  symbols.hs:1429

0x2C01  0x1A 0x0F       PUSHIB 0x0F
0x2C03  0x1A 0x13       PUSHIB 0x13
0x2C05  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // foreach (var en in eIndex)                           symbols.hs:1430

0x2C07  0x20 0x7A       PUSHGLOBALB 0x7A
0x2C09  0x1A 0x0F       PUSHIB 0x0F
0x2C0B  0x1A 0x0F       PUSHIB 0x0F
0x2C0D  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x2C0F  0x44            PUSHI0
0x2C10  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x2C13  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x2C15  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
0x2C17  0x1B 0x08       POPLOCALB 0x08 (BP+8)
0x2C19  0x2E 0x2D       JZB 0x2C46 (+45)

                        // <string, variant> eentry;                            symbols.hs:1432

0x2C1B  0x1A 0x0F       PUSHIB 0x0F
0x2C1D  0x1A 0x14       PUSHIB 0x14
0x2C1F  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint index = en.value;                               symbols.hs:1433

0x2C21  0x44            PUSHI0
0x2C22  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2C24  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x2C26  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // eentry["members"] = eMembers[index];                 symbols.hs:1434

0x2C28  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x2C2A  0x37 0x81 0x05  PUSHIW 0x0581
0x2C2D  0x1A 0x07       PUSHIB 0x07
0x2C2F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C31  0x20 0x7C       PUSHGLOBALB 0x7C
0x2C33  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2C35  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2C37  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // edict[en.key] = eentry;                              symbols.hs:1435

0x2C39  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x2C3C  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x2C3E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x2C40  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1436

0x2C42  0x28 0x04       DECSP 0x04
0x2C44  0x30 0xCC       JB 0x2C10 (-52)
0x2C46  0x28 0x06       DECSP 0x06

                        // if (edict.Count > 0)                                 symbols.hs:1437

0x2C48  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2C4A  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2C4C  0x44            PUSHI0
0x2C4D  0x07            GT
0x2C4E  0x2E 0x0E       JZB 0x2C5C (+14)

                        // dict["enums"] = edict;                               symbols.hs:1439

0x2C50  0x4F            PUSHLOCALB02
0x2C51  0x37 0x88 0x05  PUSHIW 0x0588
0x2C54  0x1A 0x05       PUSHIB 0x05
0x2C56  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C58  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x2C5A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <string, <string, variant> > fldict;                 symbols.hs:1442

0x2C5C  0x1A 0x0F       PUSHIB 0x0F
0x2C5E  0x1A 0x13       PUSHIB 0x13
0x2C60  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // foreach (var fl in flIndex)                          symbols.hs:1443

0x2C62  0x20 0x80       PUSHGLOBALB 0x80
0x2C64  0x1A 0x0F       PUSHIB 0x0F
0x2C66  0x1A 0x0F       PUSHIB 0x0F
0x2C68  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x2C6A  0x44            PUSHI0
0x2C6B  0x56 0x08 0x0C  PUSHLOCALBB 0x0C08
0x2C6E  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x2C70  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
0x2C72  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
0x2C74  0x2E 0x2D       JZB 0x2CA1 (+45)

                        // <string, variant> flentry;                           symbols.hs:1445

0x2C76  0x1A 0x0F       PUSHIB 0x0F
0x2C78  0x1A 0x14       PUSHIB 0x14
0x2C7A  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint index = fl.value;                               symbols.hs:1446

0x2C7C  0x44            PUSHI0
0x2C7D  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2C7F  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x2C81  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // flentry["members"] = flMembers[index];               symbols.hs:1447

0x2C83  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2C85  0x37 0x81 0x05  PUSHIW 0x0581
0x2C88  0x1A 0x07       PUSHIB 0x07
0x2C8A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2C8C  0x20 0x82       PUSHGLOBALB 0x82
0x2C8E  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2C90  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2C92  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fldict[fl.key] = flentry;                            symbols.hs:1448

0x2C94  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x2C97  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x2C99  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2C9B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1449

0x2C9D  0x28 0x04       DECSP 0x04
0x2C9F  0x30 0xCC       JB 0x2C6B (-52)
0x2CA1  0x28 0x06       DECSP 0x06

                        // if (fldict.Count > 0)                                symbols.hs:1450

0x2CA3  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2CA5  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2CA7  0x44            PUSHI0
0x2CA8  0x07            GT
0x2CA9  0x2E 0x0E       JZB 0x2CB7 (+14)

                        // dict["flags"] = fldict;                              symbols.hs:1452

0x2CAB  0x4F            PUSHLOCALB02
0x2CAC  0x37 0xBD 0x01  PUSHIW 0x01BD
0x2CAF  0x1A 0x05       PUSHIB 0x05
0x2CB1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2CB3  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x2CB5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <string, <string, variant> > gdict;                  symbols.hs:1455

0x2CB7  0x1A 0x0F       PUSHIB 0x0F
0x2CB9  0x1A 0x13       PUSHIB 0x13
0x2CBB  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // foreach (var g in gIndex)                            symbols.hs:1456

0x2CBD  0x20 0x42       PUSHGLOBALB 0x42
0x2CBF  0x1A 0x0F       PUSHIB 0x0F
0x2CC1  0x1A 0x0F       PUSHIB 0x0F
0x2CC3  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x2CC5  0x44            PUSHI0
0x2CC6  0x56 0x0A 0x0E  PUSHLOCALBB 0x0E0A
0x2CC9  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x2CCB  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
0x2CCD  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
0x2CCF  0x2E 0x6B       JZB 0x2D3A (+107)

                        // <string, variant> gentry;                            symbols.hs:1458

0x2CD1  0x1A 0x0F       PUSHIB 0x0F
0x2CD3  0x1A 0x14       PUSHIB 0x14
0x2CD5  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint index = g.value;                                symbols.hs:1459

0x2CD7  0x44            PUSHI0
0x2CD8  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x2CDA  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x2CDC  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // gentry["type"] = gTypes[index];                      symbols.hs:1460

0x2CDE  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2CE0  0x37 0x51 0x02  PUSHIW 0x0251
0x2CE3  0x1A 0x04       PUSHIB 0x04
0x2CE5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2CE7  0x20 0x44       PUSHGLOBALB 0x44
0x2CE9  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2CEB  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2CED  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // if (gStartPos.Contains(index))                       symbols.hs:1461

0x2CEF  0x20 0x46       PUSHGLOBALB 0x46
0x2CF1  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2CF3  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2CF5  0x2E 0x38       JZB 0x2D2D (+56)

                        // gentry["pos"]    = gStartPos[index];                 symbols.hs:1463

0x2CF7  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2CF9  0x37 0xCF 0x03  PUSHIW 0x03CF
0x2CFC  0x1A 0x03       PUSHIB 0x03
0x2CFE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D00  0x20 0x46       PUSHGLOBALB 0x46
0x2D02  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2D04  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2D06  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // gentry["line"]   = gStartLine[index];                symbols.hs:1464

0x2D08  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2D0A  0x37 0xD2 0x03  PUSHIW 0x03D2
0x2D0D  0x1A 0x04       PUSHIB 0x04
0x2D0F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D11  0x20 0x48       PUSHGLOBALB 0x48
0x2D13  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2D15  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2D17  0x1A 0x04       PUSHIB 0x04
0x2D19  0x24 0x27       SYSCALL0 0x27  // Variant.Box
0x2D1B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // gentry["source"] = gSourcePath[index];               symbols.hs:1465

0x2D1D  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2D1F  0x1A 0xB9       PUSHIB 0xB9
0x2D21  0x1A 0x06       PUSHIB 0x06
0x2D23  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D25  0x20 0x4A       PUSHGLOBALB 0x4A
0x2D27  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2D29  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2D2B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // gdict[g.key] = gentry;                               symbols.hs:1467

0x2D2D  0x56 0x08 0x0C  PUSHLOCALBB 0x0C08
0x2D30  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x2D32  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2D34  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1468

0x2D36  0x28 0x04       DECSP 0x04
0x2D38  0x30 0x8E       JB 0x2CC6 (-114)
0x2D3A  0x28 0x06       DECSP 0x06

                        // if (gdict.Count > 0)                                 symbols.hs:1469

0x2D3C  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2D3E  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2D40  0x44            PUSHI0
0x2D41  0x07            GT
0x2D42  0x2E 0x0E       JZB 0x2D50 (+14)

                        // dict["globals"] = gdict;                             symbols.hs:1471

0x2D44  0x4F            PUSHLOCALB02
0x2D45  0x37 0x8D 0x05  PUSHIW 0x058D
0x2D48  0x1A 0x07       PUSHIB 0x07
0x2D4A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2D4C  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x2D4E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <string, <string, variant> > fddict;                 symbols.hs:1474

0x2D50  0x1A 0x0F       PUSHIB 0x0F
0x2D52  0x1A 0x13       PUSHIB 0x13
0x2D54  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // foreach (var fd in fdIndex)                          symbols.hs:1475

0x2D56  0x20 0x6E       PUSHGLOBALB 0x6E
0x2D58  0x1A 0x0F       PUSHIB 0x0F
0x2D5A  0x1A 0x0F       PUSHIB 0x0F
0x2D5C  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x2D5E  0x44            PUSHI0
0x2D5F  0x56 0x0C 0x10  PUSHLOCALBB 0x100C
0x2D62  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x2D64  0x1B 0x10       POPLOCALB 0x10 (BP+16)
0x2D66  0x1B 0x0E       POPLOCALB 0x0E (BP+14)
0x2D68  0x31 0x1A 0x01  JZW 0x2E82 (+282)

                        // <string, variant> fdentry;                           symbols.hs:1477

0x2D6B  0x1A 0x0F       PUSHIB 0x0F
0x2D6D  0x1A 0x14       PUSHIB 0x14
0x2D6F  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint index = fd.value;                               symbols.hs:1478

0x2D71  0x44            PUSHI0
0x2D72  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x2D74  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x2D76  0x1B 0x14       POPLOCALB 0x14 (BP+20)

                        // <uint> overloads = fdOverloads[index];               symbols.hs:1480

0x2D78  0x1A 0x04       PUSHIB 0x04
0x2D7A  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x2D7C  0x20 0x70       PUSHGLOBALB 0x70
0x2D7E  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x2D80  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2D82  0x57 0x16       POPCOPYLOCALB 0x16 (BP+22)

                        // foreach (var overload in overloads)                  symbols.hs:1481

0x2D84  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x2D86  0x44            PUSHI0
0x2D87  0x44            PUSHI0
0x2D88  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x2D8A  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x2D8C  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2D8E  0x05            EQ
0x2D8F  0x32 0xE3 0x00  JNZW 0x2E72 (+227)
0x2D92  0x56 0x18 0x1C  PUSHLOCALBB 0x1C18
0x2D95  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2D97  0x1B 0x1A       POPLOCALB 0x1A (BP+26)

                        // <string, variant> odict;                             symbols.hs:1483

0x2D99  0x1A 0x0F       PUSHIB 0x0F
0x2D9B  0x1A 0x14       PUSHIB 0x14
0x2D9D  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // if (fdReturnTypes.Contains(overload))                symbols.hs:1485

0x2D9F  0x20 0x72       PUSHGLOBALB 0x72
0x2DA1  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2DA3  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2DA5  0x2E 0x28       JZB 0x2DCD (+40)

                        // string rt = fdReturnTypes[overload];                 symbols.hs:1487

0x2DA7  0x24 0x02       SYSCALL0 0x02  // String.New
0x2DA9  0x20 0x72       PUSHGLOBALB 0x72
0x2DAB  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2DAD  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2DAF  0x57 0x20       POPCOPYLOCALB 0x20 (BP+32)

                        // if (rt != "void")                                    symbols.hs:1488

0x2DB1  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2DB3  0x37 0x94 0x05  PUSHIW 0x0594
0x2DB6  0x1A 0x04       PUSHIB 0x04
0x2DB8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2DBA  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2DBC  0x2E 0x0F       JZB 0x2DCB (+15)

                        // odict["returntype"] = rt;                            symbols.hs:1490

0x2DBE  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2DC0  0x37 0x98 0x05  PUSHIW 0x0598
0x2DC3  0x1A 0x0A       PUSHIB 0x0A
0x2DC5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2DC7  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2DC9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1492

0x2DCB  0x28 0x02       DECSP 0x02

                        // if (fdArgumentNamesAndTypes.Contains(overload))

0x2DCD  0x20 0x74       PUSHGLOBALB 0x74
0x2DCF  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2DD1  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2DD3  0x31 0x8F 0x00  JZW 0x2E62 (+143)

                        // <string, string> args;                               symbols.hs:1495

0x2DD6  0x1A 0x0F       PUSHIB 0x0F
0x2DD8  0x1A 0x0F       PUSHIB 0x0F
0x2DDA  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint ai = 0;                                         symbols.hs:1496

0x2DDC  0x44            PUSHI0

                        // foreach (var arg in fdArgumentNamesAndTypes[overload])

0x2DDD  0x20 0x74       PUSHGLOBALB 0x74
0x2DDF  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2DE1  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2DE3  0x44            PUSHI0
0x2DE4  0x44            PUSHI0
0x2DE5  0x1C 0x24       PUSHLOCALB 0x24 (BP+36)
0x2DE7  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x2DE9  0x1C 0x28       PUSHLOCALB 0x28 (BP+40)
0x2DEB  0x05            EQ
0x2DEC  0x2F 0x5E       JNZB 0x2E4A (+94)
0x2DEE  0x56 0x24 0x28  PUSHLOCALBB 0x2824
0x2DF1  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2DF3  0x57 0x26       POPCOPYLOCALB 0x26 (BP+38)

                        // <string> ls = arg;                                   symbols.hs:1500

0x2DF5  0x1A 0x0F       PUSHIB 0x0F
0x2DF7  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x2DF9  0x1C 0x26       PUSHLOCALB 0x26 (BP+38)
0x2DFB  0x57 0x2A       POPCOPYLOCALB 0x2A (BP+42)

                        // string rf = ls[0];                                   symbols.hs:1501

0x2DFD  0x24 0x02       SYSCALL0 0x02  // String.New
0x2DFF  0x1C 0x2A       PUSHLOCALB 0x2A (BP+42)
0x2E01  0x44            PUSHI0
0x2E02  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2E04  0x57 0x2C       POPCOPYLOCALB 0x2C (BP+44)

                        // string tp = ls[1];                                   symbols.hs:1502

0x2E06  0x24 0x02       SYSCALL0 0x02  // String.New
0x2E08  0x1C 0x2A       PUSHLOCALB 0x2A (BP+42)
0x2E0A  0x45            PUSHI1
0x2E0B  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2E0D  0x57 0x2E       POPCOPYLOCALB 0x2E (BP+46)

                        // string nm = ls[2];                                   symbols.hs:1503

0x2E0F  0x24 0x02       SYSCALL0 0x02  // String.New
0x2E11  0x1C 0x2A       PUSHLOCALB 0x2A (BP+42)
0x2E13  0x1A 0x02       PUSHIB 0x02
0x2E15  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2E17  0x57 0x30       POPCOPYLOCALB 0x30 (BP+48)

                        // if (rf.Length > 0)                                   symbols.hs:1504

0x2E19  0x1C 0x2C       PUSHLOCALB 0x2C (BP+44)
0x2E1B  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2E1D  0x44            PUSHI0
0x2E1E  0x07            GT
0x2E1F  0x2E 0x10       JZB 0x2E2F (+16)

                        // tp = rf + " " + tp;                                  symbols.hs:1506

0x2E21  0x1C 0x2C       PUSHLOCALB 0x2C (BP+44)
0x2E23  0x1A 0x20       PUSHIB 0x20
0x2E25  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2E27  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2E29  0x1C 0x2E       PUSHLOCALB 0x2E (BP+46)
0x2E2B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2E2D  0x57 0x2E       POPCOPYLOCALB 0x2E (BP+46)

                        // args[ai.ToString() + ":" + nm] = tp;                 symbols.hs:1508

0x2E2F  0x56 0x20 0x22  PUSHLOCALBB 0x2220
0x2E32  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x2E34  0x1A 0x3A       PUSHIB 0x3A
0x2E36  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2E38  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2E3A  0x1C 0x30       PUSHLOCALB 0x30 (BP+48)
0x2E3C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2E3E  0x1C 0x2E       PUSHLOCALB 0x2E (BP+46)
0x2E40  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // ai++;                                                symbols.hs:1509

0x2E42  0x22 0x22       INCLOCALB 0x22 (BP+34)

                        // }                                                    symbols.hs:1510

0x2E44  0x28 0x08       DECSP 0x08
0x2E46  0x22 0x28       INCLOCALB 0x28 (BP+40)
0x2E48  0x30 0x9D       JB 0x2DE5 (-99)
0x2E4A  0x28 0x06       DECSP 0x06

                        // if (args.Count > 0)                                  symbols.hs:1511

0x2E4C  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2E4E  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2E50  0x44            PUSHI0
0x2E51  0x07            GT
0x2E52  0x2E 0x0E       JZB 0x2E60 (+14)

                        // odict["arguments"] = args;                           symbols.hs:1513

0x2E54  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2E56  0x1A 0x8B       PUSHIB 0x8B
0x2E58  0x1A 0x09       PUSHIB 0x09
0x2E5A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2E5C  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2E5E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1515

0x2E60  0x28 0x04       DECSP 0x04

                        // fdentry[overload.ToString()] = odict;                symbols.hs:1516

0x2E62  0x56 0x12 0x1A  PUSHLOCALBB 0x1A12
0x2E65  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x2E67  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2E69  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1517

0x2E6B  0x28 0x02       DECSP 0x02
0x2E6D  0x22 0x1C       INCLOCALB 0x1C (BP+28)
0x2E6F  0x33 0x19 0xFF  JW 0x2D88 (-231)
0x2E72  0x28 0x06       DECSP 0x06

                        // fddict[fd.key] = fdentry;                            symbols.hs:1518

0x2E74  0x56 0x0A 0x0E  PUSHLOCALBB 0x0E0A
0x2E77  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x2E79  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x2E7B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1519

0x2E7D  0x28 0x06       DECSP 0x06
0x2E7F  0x33 0xE0 0xFE  JW 0x2D5F (-288)
0x2E82  0x28 0x06       DECSP 0x06

                        // if (fddict.Count > 0)                                symbols.hs:1520

0x2E84  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2E86  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2E88  0x44            PUSHI0
0x2E89  0x07            GT
0x2E8A  0x2E 0x0E       JZB 0x2E98 (+14)

                        // dict["delegates"] = fddict;                          symbols.hs:1522

0x2E8C  0x4F            PUSHLOCALB02
0x2E8D  0x37 0xA2 0x05  PUSHIW 0x05A2
0x2E90  0x1A 0x09       PUSHIB 0x09
0x2E92  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2E94  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x2E96  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <string, <string, variant> > fdict;                  symbols.hs:1525

0x2E98  0x1A 0x0F       PUSHIB 0x0F
0x2E9A  0x1A 0x13       PUSHIB 0x13
0x2E9C  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // foreach (var f in fIndex)                            symbols.hs:1526

0x2E9E  0x20 0x4E       PUSHGLOBALB 0x4E
0x2EA0  0x1A 0x0F       PUSHIB 0x0F
0x2EA2  0x1A 0x0F       PUSHIB 0x0F
0x2EA4  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x2EA6  0x44            PUSHI0
0x2EA7  0x56 0x0E 0x12  PUSHLOCALBB 0x120E
0x2EAA  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x2EAC  0x1B 0x12       POPLOCALB 0x12 (BP+18)
0x2EAE  0x1B 0x10       POPLOCALB 0x10 (BP+16)
0x2EB0  0x31 0x8A 0x01  JZW 0x303A (+394)

                        // <string, variant> fentry;                            symbols.hs:1528

0x2EB3  0x1A 0x0F       PUSHIB 0x0F
0x2EB5  0x1A 0x14       PUSHIB 0x14
0x2EB7  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint index = f.value;                                symbols.hs:1529

0x2EB9  0x44            PUSHI0
0x2EBA  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x2EBC  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x2EBE  0x1B 0x16       POPLOCALB 0x16 (BP+22)

                        // <uint> overloads = fOverloads[index];                symbols.hs:1531

0x2EC0  0x1A 0x04       PUSHIB 0x04
0x2EC2  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x2EC4  0x20 0x50       PUSHGLOBALB 0x50
0x2EC6  0x1C 0x16       PUSHLOCALB 0x16 (BP+22)
0x2EC8  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2ECA  0x57 0x18       POPCOPYLOCALB 0x18 (BP+24)

                        // foreach (var overload in overloads)                  symbols.hs:1532

0x2ECC  0x1C 0x18       PUSHLOCALB 0x18 (BP+24)
0x2ECE  0x44            PUSHI0
0x2ECF  0x44            PUSHI0
0x2ED0  0x1C 0x1A       PUSHLOCALB 0x1A (BP+26)
0x2ED2  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x2ED4  0x1C 0x1E       PUSHLOCALB 0x1E (BP+30)
0x2ED6  0x05            EQ
0x2ED7  0x32 0x53 0x01  JNZW 0x302A (+339)
0x2EDA  0x56 0x1A 0x1E  PUSHLOCALBB 0x1E1A
0x2EDD  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2EDF  0x1B 0x1C       POPLOCALB 0x1C (BP+28)

                        // <string, variant> odict;                             symbols.hs:1534

0x2EE1  0x1A 0x0F       PUSHIB 0x0F
0x2EE3  0x1A 0x14       PUSHIB 0x14
0x2EE5  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // if (fReturnTypes.Contains(overload))                 symbols.hs:1536

0x2EE7  0x20 0x52       PUSHGLOBALB 0x52
0x2EE9  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2EEB  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2EED  0x2E 0x28       JZB 0x2F15 (+40)

                        // string rt = fReturnTypes[overload];                  symbols.hs:1538

0x2EEF  0x24 0x02       SYSCALL0 0x02  // String.New
0x2EF1  0x20 0x52       PUSHGLOBALB 0x52
0x2EF3  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2EF5  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2EF7  0x57 0x22       POPCOPYLOCALB 0x22 (BP+34)

                        // if (rt != "void")                                    symbols.hs:1539

0x2EF9  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x2EFB  0x37 0x94 0x05  PUSHIW 0x0594
0x2EFE  0x1A 0x04       PUSHIB 0x04
0x2F00  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2F02  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x2F04  0x2E 0x0F       JZB 0x2F13 (+15)

                        // odict["returntype"] = rt;                            symbols.hs:1541

0x2F06  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2F08  0x37 0x98 0x05  PUSHIW 0x0598
0x2F0B  0x1A 0x0A       PUSHIB 0x0A
0x2F0D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2F0F  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x2F11  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1543

0x2F13  0x28 0x02       DECSP 0x02

                        // if (fArgumentNamesAndTypes.Contains(overload))

0x2F15  0x20 0x54       PUSHGLOBALB 0x54
0x2F17  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2F19  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2F1B  0x31 0x8F 0x00  JZW 0x2FAA (+143)

                        // <string, string> args;                               symbols.hs:1546

0x2F1E  0x1A 0x0F       PUSHIB 0x0F
0x2F20  0x1A 0x0F       PUSHIB 0x0F
0x2F22  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint ai = 0;                                         symbols.hs:1547

0x2F24  0x44            PUSHI0

                        // foreach (var arg in fArgumentNamesAndTypes[overload])

0x2F25  0x20 0x54       PUSHGLOBALB 0x54
0x2F27  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2F29  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2F2B  0x44            PUSHI0
0x2F2C  0x44            PUSHI0
0x2F2D  0x1C 0x26       PUSHLOCALB 0x26 (BP+38)
0x2F2F  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x2F31  0x1C 0x2A       PUSHLOCALB 0x2A (BP+42)
0x2F33  0x05            EQ
0x2F34  0x2F 0x5E       JNZB 0x2F92 (+94)
0x2F36  0x56 0x26 0x2A  PUSHLOCALBB 0x2A26
0x2F39  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2F3B  0x57 0x28       POPCOPYLOCALB 0x28 (BP+40)

                        // <string> ls = arg;                                   symbols.hs:1551

0x2F3D  0x1A 0x0F       PUSHIB 0x0F
0x2F3F  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x2F41  0x1C 0x28       PUSHLOCALB 0x28 (BP+40)
0x2F43  0x57 0x2C       POPCOPYLOCALB 0x2C (BP+44)

                        // string rf = ls[0];                                   symbols.hs:1552

0x2F45  0x24 0x02       SYSCALL0 0x02  // String.New
0x2F47  0x1C 0x2C       PUSHLOCALB 0x2C (BP+44)
0x2F49  0x44            PUSHI0
0x2F4A  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2F4C  0x57 0x2E       POPCOPYLOCALB 0x2E (BP+46)

                        // string tp = ls[1];                                   symbols.hs:1553

0x2F4E  0x24 0x02       SYSCALL0 0x02  // String.New
0x2F50  0x1C 0x2C       PUSHLOCALB 0x2C (BP+44)
0x2F52  0x45            PUSHI1
0x2F53  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2F55  0x57 0x30       POPCOPYLOCALB 0x30 (BP+48)

                        // string nm = ls[2];                                   symbols.hs:1554

0x2F57  0x24 0x02       SYSCALL0 0x02  // String.New
0x2F59  0x1C 0x2C       PUSHLOCALB 0x2C (BP+44)
0x2F5B  0x1A 0x02       PUSHIB 0x02
0x2F5D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x2F5F  0x57 0x32       POPCOPYLOCALB 0x32 (BP+50)

                        // if (rf.Length > 0)                                   symbols.hs:1555

0x2F61  0x1C 0x2E       PUSHLOCALB 0x2E (BP+46)
0x2F63  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x2F65  0x44            PUSHI0
0x2F66  0x07            GT
0x2F67  0x2E 0x10       JZB 0x2F77 (+16)

                        // tp = rf + " " + tp;                                  symbols.hs:1557

0x2F69  0x1C 0x2E       PUSHLOCALB 0x2E (BP+46)
0x2F6B  0x1A 0x20       PUSHIB 0x20
0x2F6D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2F6F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2F71  0x1C 0x30       PUSHLOCALB 0x30 (BP+48)
0x2F73  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2F75  0x57 0x30       POPCOPYLOCALB 0x30 (BP+48)

                        // args[ai.ToString() + ":" + nm] = tp;                 symbols.hs:1559

0x2F77  0x56 0x22 0x24  PUSHLOCALBB 0x2422
0x2F7A  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x2F7C  0x1A 0x3A       PUSHIB 0x3A
0x2F7E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x2F80  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2F82  0x1C 0x32       PUSHLOCALB 0x32 (BP+50)
0x2F84  0x24 0x03       SYSCALL0 0x03  // String.Append
0x2F86  0x1C 0x30       PUSHLOCALB 0x30 (BP+48)
0x2F88  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // ai++;                                                symbols.hs:1560

0x2F8A  0x22 0x24       INCLOCALB 0x24 (BP+36)

                        // }                                                    symbols.hs:1561

0x2F8C  0x28 0x08       DECSP 0x08
0x2F8E  0x22 0x2A       INCLOCALB 0x2A (BP+42)
0x2F90  0x30 0x9D       JB 0x2F2D (-99)
0x2F92  0x28 0x06       DECSP 0x06

                        // if (args.Count > 0)                                  symbols.hs:1562

0x2F94  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x2F96  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x2F98  0x44            PUSHI0
0x2F99  0x07            GT
0x2F9A  0x2E 0x0E       JZB 0x2FA8 (+14)

                        // odict["arguments"] = args;                           symbols.hs:1564

0x2F9C  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2F9E  0x1A 0x8B       PUSHIB 0x8B
0x2FA0  0x1A 0x09       PUSHIB 0x09
0x2FA2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FA4  0x1C 0x22       PUSHLOCALB 0x22 (BP+34)
0x2FA6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1566

0x2FA8  0x28 0x04       DECSP 0x04

                        // if (fStartPos.Contains(overload))                    symbols.hs:1567

0x2FAA  0x20 0x58       PUSHGLOBALB 0x58
0x2FAC  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2FAE  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2FB0  0x2E 0x38       JZB 0x2FE8 (+56)

                        // odict["pos"]    = fStartPos[overload];               symbols.hs:1569

0x2FB2  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2FB4  0x37 0xCF 0x03  PUSHIW 0x03CF
0x2FB7  0x1A 0x03       PUSHIB 0x03
0x2FB9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FBB  0x20 0x58       PUSHGLOBALB 0x58
0x2FBD  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2FBF  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2FC1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // odict["line"]   = fStartLine[overload];              symbols.hs:1570

0x2FC3  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2FC5  0x37 0xD2 0x03  PUSHIW 0x03D2
0x2FC8  0x1A 0x04       PUSHIB 0x04
0x2FCA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FCC  0x20 0x5A       PUSHGLOBALB 0x5A
0x2FCE  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2FD0  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2FD2  0x1A 0x04       PUSHIB 0x04
0x2FD4  0x24 0x27       SYSCALL0 0x27  // Variant.Box
0x2FD6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // odict["source"] = fSourcePath[overload];             symbols.hs:1571

0x2FD8  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2FDA  0x1A 0xB9       PUSHIB 0xB9
0x2FDC  0x1A 0x06       PUSHIB 0x06
0x2FDE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FE0  0x20 0x5C       PUSHGLOBALB 0x5C
0x2FE2  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2FE4  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2FE6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // if (fSysCall.Contains(overload))                     symbols.hs:1573

0x2FE8  0x20 0x5E       PUSHGLOBALB 0x5E
0x2FEA  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2FEC  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x2FEE  0x2E 0x2C       JZB 0x301A (+44)

                        // odict["syscall"]         = fSysCall[overload];

0x2FF0  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x2FF2  0x37 0xAB 0x05  PUSHIW 0x05AB
0x2FF5  0x1A 0x07       PUSHIB 0x07
0x2FF7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x2FF9  0x20 0x5E       PUSHGLOBALB 0x5E
0x2FFB  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x2FFD  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x2FFF  0x1A 0x03       PUSHIB 0x03
0x3001  0x24 0x27       SYSCALL0 0x27  // Variant.Box
0x3003  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // odict["overload"] = fSysCallOverload[overload];

0x3005  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x3007  0x37 0xB2 0x05  PUSHIW 0x05B2
0x300A  0x1A 0x08       PUSHIB 0x08
0x300C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x300E  0x20 0x60       PUSHGLOBALB 0x60
0x3010  0x1C 0x1C       PUSHLOCALB 0x1C (BP+28)
0x3012  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x3014  0x1A 0x03       PUSHIB 0x03
0x3016  0x24 0x27       SYSCALL0 0x27  // Variant.Box
0x3018  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fentry[overload.ToString()] = odict;                 symbols.hs:1578

0x301A  0x56 0x14 0x1C  PUSHLOCALBB 0x1C14
0x301D  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x301F  0x1C 0x20       PUSHLOCALB 0x20 (BP+32)
0x3021  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1579

0x3023  0x28 0x02       DECSP 0x02
0x3025  0x22 0x1E       INCLOCALB 0x1E (BP+30)
0x3027  0x33 0xA9 0xFE  JW 0x2ED0 (-343)
0x302A  0x28 0x06       DECSP 0x06

                        // fdict[f.key] = fentry;                               symbols.hs:1580

0x302C  0x56 0x0C 0x10  PUSHLOCALBB 0x100C
0x302F  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x3031  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x3033  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1581

0x3035  0x28 0x06       DECSP 0x06
0x3037  0x33 0x70 0xFE  JW 0x2EA7 (-400)
0x303A  0x28 0x06       DECSP 0x06

                        // if (fdict.Count > 0)                                 symbols.hs:1582

0x303C  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x303E  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x3040  0x44            PUSHI0
0x3041  0x07            GT
0x3042  0x2E 0x0E       JZB 0x3050 (+14)

                        // dict["functions"] = fdict;                           symbols.hs:1584

0x3044  0x4F            PUSHLOCALB02
0x3045  0x37 0xBA 0x05  PUSHIW 0x05BA
0x3048  0x1A 0x09       PUSHIB 0x09
0x304A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x304C  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x304E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // if (!JSON.Write(jsonPath, dict))                     symbols.hs:1586

0x3050  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3052  0x4F            PUSHLOCALB02
0x3053  0x34 0x89 0x01  CALLW 0x0189   // JSON.Write
0x3056  0x2F 0x04       JNZB 0x305A (+4)

                        // success = false;                                     symbols.hs:1588

0x3058  0x44            PUSHI0
0x3059  0x4C            POPLOCALB00

                        // break;                                               symbols.hs:1590

0x305A  0x28 0x0C       DECSP 0x0C

                        // return success;                                      symbols.hs:1592

0x305C  0x4E            PUSHLOCALB00
0x305D  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:80
// ####  Symbols.New(..)  ####                                                  0x0089

0x305F  0x49            ENTER

                        // fNames.Clear();                                      symbols.hs:82

0x3060  0x20 0x4C       PUSHGLOBALB 0x4C
0x3062  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // fIndex.Clear();                                      symbols.hs:83

0x3064  0x20 0x4E       PUSHGLOBALB 0x4E
0x3066  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fOverloads.Clear();                                  symbols.hs:84

0x3068  0x20 0x50       PUSHGLOBALB 0x50
0x306A  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fReturnTypes.Clear();                                symbols.hs:85

0x306C  0x20 0x52       PUSHGLOBALB 0x52
0x306E  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fArgumentNamesAndTypes.Clear();                      symbols.hs:86

0x3070  0x20 0x54       PUSHGLOBALB 0x54
0x3072  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fLocalNamesAndTypes.Clear();                         symbols.hs:87

0x3074  0x20 0x56       PUSHGLOBALB 0x56
0x3076  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fStartPos.Clear();                                   symbols.hs:88

0x3078  0x20 0x58       PUSHGLOBALB 0x58
0x307A  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fStartLine.Clear();                                  symbols.hs:89

0x307C  0x20 0x5A       PUSHGLOBALB 0x5A
0x307E  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fSourcePath.Clear();                                 symbols.hs:90

0x3080  0x20 0x5C       PUSHGLOBALB 0x5C
0x3082  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fCodeStream.Clear();                                 symbols.hs:91

0x3084  0x20 0x64       PUSHGLOBALB 0x64
0x3086  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fDebugInfo.Clear();                                  symbols.hs:92

0x3088  0x20 0x66       PUSHGLOBALB 0x66
0x308A  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fCalls.Clear();                                      symbols.hs:93

0x308C  0x20 0x68       PUSHGLOBALB 0x68
0x308E  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fTouches.Clear();                                    symbols.hs:94

0x3090  0x20 0x94       PUSHGLOBALB 0x94
0x3092  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fSysCall.Clear();                                    symbols.hs:96

0x3094  0x20 0x5E       PUSHGLOBALB 0x5E
0x3096  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fSysCallOverload.Clear();                            symbols.hs:97

0x3098  0x20 0x60       PUSHGLOBALB 0x60
0x309A  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fSysCallCount.Clear();                               symbols.hs:98

0x309C  0x20 0x62       PUSHGLOBALB 0x62
0x309E  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // iNextOverload = 1;                                   symbols.hs:100

0x30A0  0x45            PUSHI1
0x30A1  0x1F 0x6A       POPGLOBALB 0x6A

                        // pdValues.Clear();                                    symbols.hs:102

0x30A3  0x20 0x88       PUSHGLOBALB 0x88
0x30A5  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // cValues.Clear();                                     symbols.hs:103

0x30A7  0x20 0x8A       PUSHGLOBALB 0x8A
0x30A9  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // gNames.Clear();                                      symbols.hs:105

0x30AB  0x20 0x40       PUSHGLOBALB 0x40
0x30AD  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // gIndex.Clear();                                      symbols.hs:106

0x30AF  0x20 0x42       PUSHGLOBALB 0x42
0x30B1  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // gTypes.Clear();                                      symbols.hs:107

0x30B3  0x20 0x44       PUSHGLOBALB 0x44
0x30B5  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // gStartPos.Clear();                                   symbols.hs:108

0x30B7  0x20 0x46       PUSHGLOBALB 0x46
0x30B9  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // gStartLine.Clear();                                  symbols.hs:109

0x30BB  0x20 0x48       PUSHGLOBALB 0x48
0x30BD  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // gSourcePath.Clear();                                 symbols.hs:110

0x30BF  0x20 0x4A       PUSHGLOBALB 0x4A
0x30C1  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // nameSpaces.Clear();                                  symbols.hs:112

0x30C3  0x20 0x8C       PUSHGLOBALB 0x8C
0x30C5  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // fdNames.Clear();                                     symbols.hs:114

0x30C7  0x20 0x6C       PUSHGLOBALB 0x6C
0x30C9  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // fdIndex.Clear();                                     symbols.hs:115

0x30CB  0x20 0x6E       PUSHGLOBALB 0x6E
0x30CD  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fdOverloads.Clear();                                 symbols.hs:116

0x30CF  0x20 0x70       PUSHGLOBALB 0x70
0x30D1  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fdReturnTypes.Clear();                               symbols.hs:117

0x30D3  0x20 0x72       PUSHGLOBALB 0x72
0x30D5  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // fdArgumentNamesAndTypes.Clear();                     symbols.hs:118

0x30D7  0x20 0x74       PUSHGLOBALB 0x74
0x30D9  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // idNextOverload = 0;                                  symbols.hs:119

0x30DB  0x44            PUSHI0
0x30DC  0x1F 0x76       POPGLOBALB 0x76

                        // eValues.Clear();                                     symbols.hs:121

0x30DE  0x20 0x78       PUSHGLOBALB 0x78
0x30E0  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // eIndex.Clear();                                      symbols.hs:122

0x30E2  0x20 0x7A       PUSHGLOBALB 0x7A
0x30E4  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // eMembers.Clear();                                    symbols.hs:123

0x30E6  0x20 0x7C       PUSHGLOBALB 0x7C
0x30E8  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // flValues.Clear();                                    symbols.hs:125

0x30EA  0x20 0x7E       PUSHGLOBALB 0x7E
0x30EC  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // flIndex.Clear();                                     symbols.hs:126

0x30EE  0x20 0x80       PUSHGLOBALB 0x80
0x30F0  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // flMembers.Clear();                                   symbols.hs:127

0x30F2  0x20 0x82       PUSHGLOBALB 0x82
0x30F4  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // flMembersReversed.Clear();                           symbols.hs:128

0x30F6  0x20 0x84       PUSHGLOBALB 0x84
0x30F8  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // flMembersSorted.Clear();                             symbols.hs:129

0x30FA  0x20 0x86       PUSHGLOBALB 0x86
0x30FC  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // overloadsCompiled.Clear();                           symbols.hs:131

0x30FE  0x20 0x92       PUSHGLOBALB 0x92
0x3100  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // }                                                    symbols.hs:133

0x3102  0x4A            RET0


// /source/compiler/symbols.hs:288
// ####  Symbols.AddNameSpace(..)  ####                                         0x0091

0x3103  0x49            ENTER

                        // if (!nameSpaces.Contains(name))                      symbols.hs:289

0x3104  0x20 0x8C       PUSHGLOBALB 0x8C
0x3106  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3108  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x310A  0x2F 0x08       JNZB 0x3112 (+8)

                        // nameSpaces.Append(name);                             symbols.hs:291

0x310C  0x20 0x8C       PUSHGLOBALB 0x8C
0x310E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3110  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    symbols.hs:293

0x3112  0x2A 0x02       RETB 0x02


// /source/compiler/symbols.hs:863
// ####  Symbols.GetFunctionIndex(..)  ####                                     0x00AB


                        // bool found = false;                                  symbols.hs:865

0x3114  0x5F 0x01       ENTERB 0x01

                        // if (fNames.Contains(name))                           symbols.hs:866

0x3116  0x20 0x4C       PUSHGLOBALB 0x4C
0x3118  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x311A  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x311C  0x2E 0x2D       JZB 0x3149 (+45)

                        // uint length = fNames.Length;                         symbols.hs:868

0x311E  0x44            PUSHI0
0x311F  0x20 0x4C       PUSHGLOBALB 0x4C
0x3121  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x3123  0x4D            POPLOCALB02

                        // for (uint i=0; i < length; i++)                      symbols.hs:869

0x3124  0x44            PUSHI0
0x3125  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3127  0x4F            PUSHLOCALB02
0x3128  0x08            LT
0x3129  0x2E 0x1C       JZB 0x3145 (+28)

                        // if (name == fNames[i])                               symbols.hs:871

0x312B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x312D  0x20 0x4C       PUSHGLOBALB 0x4C
0x312F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3131  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x3133  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3135  0x2F 0x0C       JNZB 0x3141 (+12)

                        // index = i;                                           symbols.hs:873

0x3137  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3139  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // found = true;                                        symbols.hs:874

0x313B  0x45            PUSHI1
0x313C  0x4C            POPLOCALB00

                        // break;                                               symbols.hs:875

0x313D  0x28 0x02       DECSP 0x02
0x313F  0x30 0x08       JB 0x3147 (+8)

                        // }                                                    symbols.hs:877

0x3141  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x3143  0x30 0xE2       JB 0x3125 (-30)
0x3145  0x28 0x02       DECSP 0x02

                        // }                                                    symbols.hs:878

0x3147  0x28 0x02       DECSP 0x02

                        // if (!found && !name.Contains('.'))                   symbols.hs:879

0x3149  0x4E            PUSHLOCALB00
0x314A  0x41            BOOLNOT
0x314B  0x27 0x00       DUP 0x00
0x314D  0x2E 0x0B       JZB 0x3158 (+11)
0x314F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3151  0x1A 0x2E       PUSHIB 0x2E
0x3153  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x3156  0x41            BOOLNOT
0x3157  0x0C            BOOLAND
0x3158  0x2E 0x3A       JZB 0x3192 (+58)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:881

0x315A  0x20 0x8C       PUSHGLOBALB 0x8C
0x315C  0x44            PUSHI0
0x315D  0x44            PUSHI0
0x315E  0x4F            PUSHLOCALB02
0x315F  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x3161  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3163  0x05            EQ
0x3164  0x2F 0x2C       JNZB 0x3190 (+44)
0x3166  0x4F            PUSHLOCALB02
0x3167  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3169  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x316B  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // string candidate = nameSpace + "." + name;           symbols.hs:883

0x316D  0x24 0x02       SYSCALL0 0x02  // String.New
0x316F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3171  0x1A 0x2E       PUSHIB 0x2E
0x3173  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3175  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3177  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3179  0x24 0x03       SYSCALL0 0x03  // String.Append
0x317B  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (GetFunctionIndex(candidate, ref index))

0x317D  0x56 0x08 0xFE  PUSHLOCALBB 0xFE08
0x3180  0x2C 0xAB       CALLB 0xAB     // Symbols.GetFunctionIndex
0x3182  0x2E 0x08       JZB 0x318A (+8)

                        // found = true;                                        symbols.hs:886

0x3184  0x45            PUSHI1
0x3185  0x4C            POPLOCALB00

                        // break;                                               symbols.hs:887

0x3186  0x28 0x08       DECSP 0x08
0x3188  0x30 0x0A       JB 0x3192 (+10)

                        // }                                                    symbols.hs:889

0x318A  0x28 0x02       DECSP 0x02
0x318C  0x22 0x06       INCLOCALB 0x06 (BP+6)
0x318E  0x30 0xD0       JB 0x315E (-48)
0x3190  0x28 0x06       DECSP 0x06

                        // return found;                                        symbols.hs:891

0x3192  0x4E            PUSHLOCALB00
0x3193  0x2B 0x06       RETRETB 0x06


// /source/compiler/symbols.hs:1150
// ####  Symbols.AddMethod(..)  ####                                            0x00BC

0x3195  0x49            ENTER

                        // AddFunction(methodName, arguments, "void", blockPos); // 'void' is only used internally

0x3196  0x56 0xFA 0xFC  PUSHLOCALBB 0xFCFA
0x3199  0x37 0x94 0x05  PUSHIW 0x0594
0x319C  0x1A 0x04       PUSHIB 0x04
0x319E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x31A0  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x31A2  0x2C 0xBB       CALLB 0xBB     // Symbols.AddFunction

                        // }                                                    symbols.hs:1152

0x31A4  0x2A 0x06       RETB 0x06


// /source/compiler/symbols.hs:337
// ####  Symbols.AddConstant(..)  ####                                          0x0097

0x31A6  0x49            ENTER

                        // cValues[name] = value;                               symbols.hs:338

0x31A7  0x20 0x8A       PUSHGLOBALB 0x8A
0x31A9  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
0x31AC  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:339

0x31AE  0x2A 0x04       RETB 0x04


// /source/compiler/symbols.hs:844
// ####  Symbols.DeferValidation(..)  ####                                      0x00A9

0x31B0  0x49            ENTER

                        // deferredTypes.Append(token);                         symbols.hs:845

0x31B1  0x20 0x8E       PUSHGLOBALB 0x8E
0x31B3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x31B5  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    symbols.hs:846

0x31B7  0x2A 0x02       RETB 0x02


// /source/compiler/symbols.hs:1203
// ####  Symbols.AddFunctionDelegate(..)  ####                                  0x00BF


                        // uint index = 0;                                      symbols.hs:1213

0x31B9  0x5F 0x01       ENTERB 0x01

                        // if (!GetFunctionDelegateIndex(name, ref index))

0x31BB  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x31BD  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x31BF  0x2C 0xB8       CALLB 0xB8     // Symbols.GetFunctionDelegateIndex
0x31C1  0x2F 0x16       JNZB 0x31D7 (+22)

                        // fdNames.Append(name);                                symbols.hs:1216

0x31C3  0x20 0x6C       PUSHGLOBALB 0x6C
0x31C5  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x31C7  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // index = fdNames.Length-1;                            symbols.hs:1217

0x31C9  0x20 0x6C       PUSHGLOBALB 0x6C
0x31CB  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x31CD  0x45            PUSHI1
0x31CE  0x01            SUB
0x31CF  0x4C            POPLOCALB00

                        // fdIndex[name] = index;                               symbols.hs:1218

0x31D0  0x20 0x6E       PUSHGLOBALB 0x6E
0x31D2  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x31D4  0x4E            PUSHLOCALB00
0x31D5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <uint> overloads;                                    symbols.hs:1220

0x31D7  0x1A 0x04       PUSHIB 0x04
0x31D9  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // if (fdOverloads.Contains(index))                     symbols.hs:1222

0x31DB  0x20 0x70       PUSHGLOBALB 0x70
0x31DD  0x4E            PUSHLOCALB00
0x31DE  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x31E0  0x2E 0x08       JZB 0x31E8 (+8)

                        // overloads = fdOverloads[index];                      symbols.hs:1224

0x31E2  0x20 0x70       PUSHGLOBALB 0x70
0x31E4  0x4E            PUSHLOCALB00
0x31E5  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x31E7  0x5E            POPCOPYLOCALB02

                        // foreach (var overload in overloads)                  symbols.hs:1229

0x31E8  0x4F            PUSHLOCALB02
0x31E9  0x44            PUSHI0
0x31EA  0x44            PUSHI0
0x31EB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x31ED  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x31EF  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x31F1  0x05            EQ
0x31F2  0x2F 0x40       JNZB 0x3232 (+64)
0x31F4  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x31F7  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x31F9  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (Types.ArgumentsEqual(fdArgumentNamesAndTypes[overload], arguments, false, false))

0x31FB  0x20 0x74       PUSHGLOBALB 0x74
0x31FD  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x31FF  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x3201  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3203  0x44            PUSHI0
0x3204  0x44            PUSHI0
0x3205  0x34 0xAD 0x01  CALLW 0x01AD   // Types.ArgumentsEqual
0x3208  0x2E 0x26       JZB 0x322E (+38)

                        // if (fdReturnTypes[overload] == returnType)           symbols.hs:1233

0x320A  0x20 0x72       PUSHGLOBALB 0x72
0x320C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x320E  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x3210  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3212  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3214  0x2F 0x0D       JNZB 0x3221 (+13)

                        // Parser.Error("duplicate delegate definition");

0x3216  0x37 0xC3 0x05  PUSHIW 0x05C3
0x3219  0x1A 0x1D       PUSHIB 0x1D
0x321B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x321D  0x2C 0x79       CALLB 0x79     // Parser.Error

                        // }                                                    symbols.hs:1236

0x321F  0x30 0x0B       JB 0x322A (+11)

                        // Parser.Error("delegate definitions differ only by return type");

0x3221  0x37 0xE0 0x05  PUSHIW 0x05E0
0x3224  0x1A 0x2F       PUSHIB 0x2F
0x3226  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3228  0x2C 0x79       CALLB 0x79     // Parser.Error

                        // break;                                               symbols.hs:1241

0x322A  0x28 0x06       DECSP 0x06
0x322C  0x30 0x08       JB 0x3234 (+8)

                        // }                                                    symbols.hs:1243

0x322E  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x3230  0x30 0xBB       JB 0x31EB (-69)
0x3232  0x28 0x06       DECSP 0x06

                        // overloads.Append(idNextOverload);                    symbols.hs:1244

0x3234  0x4F            PUSHLOCALB02
0x3235  0x20 0x76       PUSHGLOBALB 0x76
0x3237  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // fdArgumentNamesAndTypes[idNextOverload] = arguments;

0x3239  0x52 0x74 0x76  PUSHGLOBALBB 0x7674
0x323C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x323E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fdReturnTypes[idNextOverload] = returnType;

0x3240  0x52 0x72 0x76  PUSHGLOBALBB 0x7672
0x3243  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3245  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fdOverloads[index] = overloads;                      symbols.hs:1248

0x3247  0x20 0x70       PUSHGLOBALB 0x70
0x3249  0x4E            PUSHLOCALB00
0x324A  0x4F            PUSHLOCALB02
0x324B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // idNextOverload++;                                    symbols.hs:1249

0x324D  0x53 0x76       INCGLOBALB 0x76

                        // break;                                               symbols.hs:1250

0x324F  0x2A 0x0A       RETB 0x0A


// /source/compiler/symbols.hs:1046
// ####  Symbols.AddFunction(..)  ####                                          0x00BB


                        // uint index = 0;                                      symbols.hs:1062

0x3251  0x5F 0x01       ENTERB 0x01

                        // if (!GetFunctionIndex(name, ref index))              symbols.hs:1064

0x3253  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x3255  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x3257  0x2C 0xAB       CALLB 0xAB     // Symbols.GetFunctionIndex
0x3259  0x2F 0x16       JNZB 0x326F (+22)

                        // fNames.Append(name);                                 symbols.hs:1066

0x325B  0x20 0x4C       PUSHGLOBALB 0x4C
0x325D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x325F  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // index = fNames.Length-1;                             symbols.hs:1067

0x3261  0x20 0x4C       PUSHGLOBALB 0x4C
0x3263  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x3265  0x45            PUSHI1
0x3266  0x01            SUB
0x3267  0x4C            POPLOCALB00

                        // fIndex[name] = index;                                symbols.hs:1068

0x3268  0x20 0x4E       PUSHGLOBALB 0x4E
0x326A  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x326C  0x4E            PUSHLOCALB00
0x326D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // bool isMain = name.EndsWith(".main");                symbols.hs:1070

0x326F  0x44            PUSHI0
0x3270  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x3272  0x37 0x45 0x02  PUSHIW 0x0245
0x3275  0x1A 0x05       PUSHIB 0x05
0x3277  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3279  0x25 0x07       SYSCALL1 0x07  // String.EndsWith
0x327B  0x4D            POPLOCALB02

                        // <uint> overloads;                                    symbols.hs:1072

0x327C  0x1A 0x04       PUSHIB 0x04
0x327E  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // if (fOverloads.Contains(index))                      symbols.hs:1074

0x3280  0x20 0x50       PUSHGLOBALB 0x50
0x3282  0x4E            PUSHLOCALB00
0x3283  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3285  0x2E 0x09       JZB 0x328E (+9)

                        // overloads = fOverloads[index];                       symbols.hs:1076

0x3287  0x20 0x50       PUSHGLOBALB 0x50
0x3289  0x4E            PUSHLOCALB00
0x328A  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x328C  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // foreach (var overload in overloads)                  symbols.hs:1081

0x328E  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3290  0x44            PUSHI0
0x3291  0x44            PUSHI0
0x3292  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3294  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x3296  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3298  0x05            EQ
0x3299  0x2F 0x40       JNZB 0x32D9 (+64)
0x329B  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x329E  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x32A0  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // if (Types.ArgumentsEqual(fArgumentNamesAndTypes[overload], arguments, false, false))

0x32A2  0x20 0x54       PUSHGLOBALB 0x54
0x32A4  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x32A6  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x32A8  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x32AA  0x44            PUSHI0
0x32AB  0x44            PUSHI0
0x32AC  0x34 0xAD 0x01  CALLW 0x01AD   // Types.ArgumentsEqual
0x32AF  0x2E 0x26       JZB 0x32D5 (+38)

                        // if (fReturnTypes[overload] == returnType)            symbols.hs:1085

0x32B1  0x20 0x52       PUSHGLOBALB 0x52
0x32B3  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x32B5  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x32B7  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x32B9  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x32BB  0x2F 0x0D       JNZB 0x32C8 (+13)

                        // Parser.ErrorAtCurrent("duplicate function definition");

0x32BD  0x37 0x0F 0x06  PUSHIW 0x060F
0x32C0  0x1A 0x1D       PUSHIB 0x1D
0x32C2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x32C4  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // }                                                    symbols.hs:1088

0x32C6  0x30 0x0B       JB 0x32D1 (+11)

                        // Parser.ErrorAtCurrent("function definitions differ only by return type");

0x32C8  0x37 0x2C 0x06  PUSHIW 0x062C
0x32CB  0x1A 0x2F       PUSHIB 0x2F
0x32CD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x32CF  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               symbols.hs:1093

0x32D1  0x28 0x06       DECSP 0x06
0x32D3  0x30 0x08       JB 0x32DB (+8)

                        // }                                                    symbols.hs:1095

0x32D5  0x22 0x0A       INCLOCALB 0x0A (BP+10)
0x32D7  0x30 0xBB       JB 0x3292 (-69)
0x32D9  0x28 0x06       DECSP 0x06

                        // uint iCurrentOverload = 0;                           symbols.hs:1096

0x32DB  0x44            PUSHI0

                        // if (!isMain)                                         symbols.hs:1097

0x32DC  0x4F            PUSHLOCALB02
0x32DD  0x2F 0x0F       JNZB 0x32EC (+15)

                        // if (iNextOverload == 0)                              symbols.hs:1099

0x32DF  0x20 0x6A       PUSHGLOBALB 0x6A
0x32E1  0x2F 0x05       JNZB 0x32E6 (+5)

                        // iNextOverload = 1;                                   symbols.hs:1101

0x32E3  0x45            PUSHI1
0x32E4  0x1F 0x6A       POPGLOBALB 0x6A

                        // iCurrentOverload = iNextOverload;                    symbols.hs:1103

0x32E6  0x20 0x6A       PUSHGLOBALB 0x6A
0x32E8  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // iNextOverload++;                                     symbols.hs:1104

0x32EA  0x53 0x6A       INCGLOBALB 0x6A

                        // overloads.Append(iCurrentOverload);                  symbols.hs:1107

0x32EC  0x56 0x04 0x06  PUSHLOCALBB 0x0604
0x32EF  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // fArgumentNamesAndTypes[iCurrentOverload] = arguments;

0x32F1  0x20 0x54       PUSHGLOBALB 0x54
0x32F3  0x56 0x06 0xFA  PUSHLOCALBB 0xFA06
0x32F6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fReturnTypes[iCurrentOverload] = returnType;

0x32F8  0x20 0x52       PUSHGLOBALB 0x52
0x32FA  0x56 0x06 0xFC  PUSHLOCALBB 0xFC06
0x32FD  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // if (blockPos.Length > 0) // not system               symbols.hs:1111

0x32FF  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3301  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x3303  0x44            PUSHI0
0x3304  0x07            GT
0x3305  0x2E 0x38       JZB 0x333D (+56)

                        // long startPos;                                       symbols.hs:1113

0x3307  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // uint startLine;                                      symbols.hs:1114

0x3309  0x44            PUSHI0

                        // if (Token.TryParseLong(blockPos[0], ref startPos))

0x330A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x330C  0x44            PUSHI0
0x330D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x330F  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x3311  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x3313  0x2E 0x09       JZB 0x331C (+9)

                        // fStartPos[iCurrentOverload] = startPos; // location of method block '{'

0x3315  0x20 0x58       PUSHGLOBALB 0x58
0x3317  0x56 0x06 0x08  PUSHLOCALBB 0x0806
0x331A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // if (Token.TryParseUInt(blockPos[1], ref startLine))

0x331C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x331E  0x45            PUSHI1
0x331F  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x3321  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x3323  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x3325  0x2E 0x09       JZB 0x332E (+9)

                        // fStartLine[iCurrentOverload] = startLine; // location of method block '{'

0x3327  0x20 0x5A       PUSHGLOBALB 0x5A
0x3329  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x332C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fSourcePath[iCurrentOverload] = blockPos[2];

0x332E  0x20 0x5C       PUSHGLOBALB 0x5C
0x3330  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
0x3333  0x1A 0x02       PUSHIB 0x02
0x3335  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x3337  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1124

0x3339  0x28 0x04       DECSP 0x04
0x333B  0x30 0x53       JB 0x338E (+83)

                        // byte iSysCall;                                       symbols.hs:1127

0x333D  0x44            PUSHI0

                        // if (!SysCalls.TryParseSysCall(name, ref iSysCall))

0x333E  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x3340  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x3342  0x2C 0x86       CALLB 0x86     // SysCalls.TryParseSysCall
0x3344  0x2F 0x19       JNZB 0x335D (+25)

                        // Parser.Error("undefined 'system' method '" + name + "'");

0x3346  0x37 0x5B 0x06  PUSHIW 0x065B
0x3349  0x1A 0x1B       PUSHIB 0x1B
0x334B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x334D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x334F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3351  0x1A 0x27       PUSHIB 0x27
0x3353  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3355  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3357  0x2C 0x79       CALLB 0x79     // Parser.Error

                        // break;                                               symbols.hs:1131

0x3359  0x28 0x04       DECSP 0x04
0x335B  0x2A 0x0E       RETB 0x0E

                        // if (!fSysCallCount.Contains(name))                   symbols.hs:1134

0x335D  0x20 0x62       PUSHGLOBALB 0x62
0x335F  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x3361  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3363  0x2F 0x09       JNZB 0x336C (+9)

                        // fSysCallCount[name] = 0;                             symbols.hs:1136

0x3365  0x20 0x62       PUSHGLOBALB 0x62
0x3367  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x3369  0x44            PUSHI0
0x336A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // byte iSysCallOverload = fSysCallCount[name];

0x336C  0x44            PUSHI0
0x336D  0x20 0x62       PUSHGLOBALB 0x62
0x336F  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x3371  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x3373  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // fSysCallCount[name] = iSysCallOverload+1;            symbols.hs:1139

0x3375  0x20 0x62       PUSHGLOBALB 0x62
0x3377  0x56 0xF8 0x0A  PUSHLOCALBB 0x0AF8
0x337A  0x45            PUSHI1
0x337B  0x00            ADD
0x337C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fSysCall[iCurrentOverload] = iSysCall;               symbols.hs:1140

0x337E  0x20 0x5E       PUSHGLOBALB 0x5E
0x3380  0x56 0x06 0x08  PUSHLOCALBB 0x0806
0x3383  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // fSysCallOverload[iCurrentOverload] = iSysCallOverload;

0x3385  0x20 0x60       PUSHGLOBALB 0x60
0x3387  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x338A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1142

0x338C  0x28 0x04       DECSP 0x04

                        // fOverloads[index] = overloads;                       symbols.hs:1143

0x338E  0x20 0x50       PUSHGLOBALB 0x50
0x3390  0x4E            PUSHLOCALB00
0x3391  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3393  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // break;                                               symbols.hs:1145

0x3395  0x28 0x02       DECSP 0x02
0x3397  0x2A 0x0E       RETB 0x0E


// /source/compiler/symbols.hs:1256
// ####  Symbols.AddMethodDelegate(..)  ####                                    0x00C0

0x3399  0x49            ENTER

                        // AddFunctionDelegate(methodName, arguments, "void"); // 'void' is only used internally

0x339A  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
0x339D  0x37 0x94 0x05  PUSHIW 0x0594
0x33A0  0x1A 0x04       PUSHIB 0x04
0x33A2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x33A4  0x2C 0xBF       CALLB 0xBF     // Symbols.AddFunctionDelegate

                        // }                                                    symbols.hs:1258

0x33A6  0x2A 0x04       RETB 0x04


// /source/compiler/symbols.hs:1007
// ####  Symbols.AddGlobalMember(..)  ####                                      0x00BA

0x33A8  0x49            ENTER

                        // if (gNames.Contains(name))                           symbols.hs:1018

0x33A9  0x20 0x40       PUSHGLOBALB 0x40
0x33AB  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x33AD  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x33AF  0x2E 0x0D       JZB 0x33BC (+13)

                        // Parser.Error("duplicate global member definition");

0x33B1  0x37 0x76 0x06  PUSHIW 0x0676
0x33B4  0x1A 0x22       PUSHIB 0x22
0x33B6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x33B8  0x2C 0x79       CALLB 0x79     // Parser.Error

                        // break;                                               symbols.hs:1021

0x33BA  0x2A 0x06       RETB 0x06

                        // gNames.Append(name);                                 symbols.hs:1023

0x33BC  0x20 0x40       PUSHGLOBALB 0x40
0x33BE  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x33C0  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // uint iGlobal = gNames.Length-1;                      symbols.hs:1024

0x33C2  0x44            PUSHI0
0x33C3  0x20 0x40       PUSHGLOBALB 0x40
0x33C5  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x33C7  0x45            PUSHI1
0x33C8  0x01            SUB
0x33C9  0x4C            POPLOCALB00

                        // gIndex[name] = iGlobal;                              symbols.hs:1025

0x33CA  0x20 0x42       PUSHGLOBALB 0x42
0x33CC  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x33CE  0x4E            PUSHLOCALB00
0x33CF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // gTypes[iGlobal] = typeString;                        symbols.hs:1026

0x33D1  0x20 0x44       PUSHGLOBALB 0x44
0x33D3  0x4E            PUSHLOCALB00
0x33D4  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x33D6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // if (blockPos.Length > 0) // has initialization code?

0x33D8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x33DA  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x33DC  0x44            PUSHI0
0x33DD  0x07            GT
0x33DE  0x2E 0x35       JZB 0x3413 (+53)

                        // long startPos;                                       symbols.hs:1029

0x33E0  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // uint startLine;                                      symbols.hs:1030

0x33E2  0x44            PUSHI0

                        // if (Token.TryParseLong(blockPos[0], ref startPos))

0x33E3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x33E5  0x44            PUSHI0
0x33E6  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x33E8  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x33EA  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x33EC  0x2E 0x08       JZB 0x33F4 (+8)

                        // gStartPos[iGlobal] = startPos; // location of method block '{'

0x33EE  0x20 0x46       PUSHGLOBALB 0x46
0x33F0  0x4E            PUSHLOCALB00
0x33F1  0x4F            PUSHLOCALB02
0x33F2  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // if (Token.TryParseUInt(blockPos[1], ref startLine))

0x33F4  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x33F6  0x45            PUSHI1
0x33F7  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x33F9  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x33FB  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x33FD  0x2E 0x09       JZB 0x3406 (+9)

                        // gStartLine[iGlobal] = startLine; // location of method block '{'

0x33FF  0x20 0x48       PUSHGLOBALB 0x48
0x3401  0x4E            PUSHLOCALB00
0x3402  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3404  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // gSourcePath[iGlobal] = blockPos[2];                  symbols.hs:1039

0x3406  0x20 0x4A       PUSHGLOBALB 0x4A
0x3408  0x4E            PUSHLOCALB00
0x3409  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x340B  0x1A 0x02       PUSHIB 0x02
0x340D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x340F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1040

0x3411  0x28 0x04       DECSP 0x04

                        // break;                                               symbols.hs:1041

0x3413  0x28 0x02       DECSP 0x02
0x3415  0x2A 0x06       RETB 0x06


// /source/compiler/symbols.hs:342
// ####  Symbols.GlobalExists(..)  ####                                         0x0098


                        // bool exists = true;                                  symbols.hs:343

0x3417  0x5F 0x01       ENTERB 0x01

                        // bool exists = true;                                  symbols.hs:343

0x3419  0x45            PUSHI1
0x341A  0x4C            POPLOCALB00

                        // if (fNames.Contains(name))                           symbols.hs:346

0x341B  0x20 0x4C       PUSHGLOBALB 0x4C
0x341D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x341F  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x3421  0x2F 0x24       JNZB 0x3445 (+36)

                        // if (gNames.Contains(name))                           symbols.hs:350

0x3423  0x20 0x40       PUSHGLOBALB 0x40
0x3425  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3427  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x3429  0x2F 0x1C       JNZB 0x3445 (+28)

                        // if (eIndex.Contains(name))                           symbols.hs:354

0x342B  0x20 0x7A       PUSHGLOBALB 0x7A
0x342D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x342F  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3431  0x2F 0x14       JNZB 0x3445 (+20)

                        // if (flIndex.Contains(name))                          symbols.hs:358

0x3433  0x20 0x80       PUSHGLOBALB 0x80
0x3435  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3437  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3439  0x2F 0x0C       JNZB 0x3445 (+12)

                        // if (cValues.Contains(name))                          symbols.hs:362

0x343B  0x20 0x8A       PUSHGLOBALB 0x8A
0x343D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x343F  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3441  0x2F 0x04       JNZB 0x3445 (+4)

                        // exists = false;                                      symbols.hs:366

0x3443  0x44            PUSHI0
0x3444  0x4C            POPLOCALB00

                        // return exists;                                       symbols.hs:369

0x3445  0x4E            PUSHLOCALB00
0x3446  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:1165
// ####  Symbols.AddFlags(..)  ####                                             0x00BE

0x3448  0x49            ENTER

                        // <string, uint> values;                               symbols.hs:1167

0x3449  0x1A 0x0F       PUSHIB 0x0F
0x344B  0x1A 0x04       PUSHIB 0x04
0x344D  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // flValues[identifier] = values;                       symbols.hs:1168

0x344F  0x20 0x7E       PUSHGLOBALB 0x7E
0x3451  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3453  0x4E            PUSHLOCALB00
0x3454  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // uint iNext = flIndex.Count;                          symbols.hs:1169

0x3456  0x44            PUSHI0
0x3457  0x20 0x80       PUSHGLOBALB 0x80
0x3459  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x345B  0x4D            POPLOCALB02

                        // flIndex[identifier] = iNext;                         symbols.hs:1170

0x345C  0x20 0x80       PUSHGLOBALB 0x80
0x345E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3460  0x4F            PUSHLOCALB02
0x3461  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // flMembers[iNext] = members;                          symbols.hs:1171

0x3463  0x20 0x82       PUSHGLOBALB 0x82
0x3465  0x4F            PUSHLOCALB02
0x3466  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3468  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <uint, string> membersReversed;                      symbols.hs:1172

0x346A  0x1A 0x04       PUSHIB 0x04
0x346C  0x1A 0x0F       PUSHIB 0x0F
0x346E  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // <uint> membersSorted;                                symbols.hs:1173

0x3470  0x1A 0x04       PUSHIB 0x04
0x3472  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // foreach (var kv in members)                          symbols.hs:1174

0x3474  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3476  0x1A 0x0F       PUSHIB 0x0F
0x3478  0x1A 0x0F       PUSHIB 0x0F
0x347A  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x347C  0x44            PUSHI0
0x347D  0x56 0x08 0x0C  PUSHLOCALBB 0x0C08
0x3480  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x3482  0x1B 0x0C       POPLOCALB 0x0C (BP+12)
0x3484  0x1B 0x0A       POPLOCALB 0x0A (BP+10)
0x3486  0x2E 0x52       JZB 0x34D8 (+82)

                        // uint   key = kv.value;                               symbols.hs:1176

0x3488  0x44            PUSHI0
0x3489  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x348B  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x348D  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // string value = kv.key;                               symbols.hs:1177

0x348F  0x24 0x02       SYSCALL0 0x02  // String.New
0x3491  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3493  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x3495  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // membersReversed[key] = value;                        symbols.hs:1178

0x3497  0x56 0x04 0x0E  PUSHLOCALBB 0x0E04
0x349A  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x349C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // uint slength = membersSorted.Length;                 symbols.hs:1179

0x349E  0x44            PUSHI0
0x349F  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x34A1  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x34A3  0x1B 0x12       POPLOCALB 0x12 (BP+18)

                        // bool inserted = false;                               symbols.hs:1181

0x34A5  0x44            PUSHI0

                        // for (uint i=0; i < slength; i++)                     symbols.hs:1182

0x34A6  0x44            PUSHI0
0x34A7  0x56 0x16 0x12  PUSHLOCALBB 0x1216
0x34AA  0x08            LT
0x34AB  0x2E 0x1E       JZB 0x34C9 (+30)

                        // if (membersSorted[i] < key)                          symbols.hs:1184

0x34AD  0x56 0x06 0x16  PUSHLOCALBB 0x1606
0x34B0  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x34B2  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x34B4  0x08            LT
0x34B5  0x2E 0x10       JZB 0x34C5 (+16)

                        // membersSorted.Insert(i, key);                        symbols.hs:1186

0x34B7  0x56 0x06 0x16  PUSHLOCALBB 0x1606
0x34BA  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x34BC  0x24 0x12       SYSCALL0 0x12  // List.Insert

                        // inserted = true;                                     symbols.hs:1187

0x34BE  0x45            PUSHI1
0x34BF  0x1B 0x14       POPLOCALB 0x14 (BP+20)

                        // break;                                               symbols.hs:1188

0x34C1  0x28 0x02       DECSP 0x02
0x34C3  0x30 0x08       JB 0x34CB (+8)

                        // }                                                    symbols.hs:1190

0x34C5  0x22 0x16       INCLOCALB 0x16 (BP+22)
0x34C7  0x30 0xE0       JB 0x34A7 (-32)
0x34C9  0x28 0x02       DECSP 0x02

                        // if (!inserted)                                       symbols.hs:1191

0x34CB  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x34CD  0x2F 0x07       JNZB 0x34D4 (+7)

                        // membersSorted.Append(key);                           symbols.hs:1193

0x34CF  0x56 0x06 0x0E  PUSHLOCALBB 0x0E06
0x34D2  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    symbols.hs:1195

0x34D4  0x28 0x08       DECSP 0x08
0x34D6  0x30 0xA7       JB 0x347D (-89)
0x34D8  0x28 0x06       DECSP 0x06

                        // flMembersReversed[iNext] = membersReversed;

0x34DA  0x20 0x84       PUSHGLOBALB 0x84
0x34DC  0x4F            PUSHLOCALB02
0x34DD  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x34DF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // flMembersSorted[iNext] = membersSorted;              symbols.hs:1198

0x34E1  0x20 0x86       PUSHGLOBALB 0x86
0x34E3  0x4F            PUSHLOCALB02
0x34E4  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x34E6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1199

0x34E8  0x2A 0x0C       RETB 0x0C


// /source/compiler/symbols.hs:1155
// ####  Symbols.AddEnum(..)  ####                                              0x00BD

0x34EA  0x49            ENTER

                        // <string, uint> values;                               symbols.hs:1157

0x34EB  0x1A 0x0F       PUSHIB 0x0F
0x34ED  0x1A 0x04       PUSHIB 0x04
0x34EF  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // eValues[identifier] = values;                        symbols.hs:1158

0x34F1  0x20 0x78       PUSHGLOBALB 0x78
0x34F3  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x34F5  0x4E            PUSHLOCALB00
0x34F6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // uint iNext = eIndex.Count;                           symbols.hs:1159

0x34F8  0x44            PUSHI0
0x34F9  0x20 0x7A       PUSHGLOBALB 0x7A
0x34FB  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x34FD  0x4D            POPLOCALB02

                        // eIndex[identifier] = iNext;                          symbols.hs:1160

0x34FE  0x20 0x7A       PUSHGLOBALB 0x7A
0x3500  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3502  0x4F            PUSHLOCALB02
0x3503  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // eMembers[iNext] = members;                           symbols.hs:1161

0x3505  0x20 0x7C       PUSHGLOBALB 0x7C
0x3507  0x4F            PUSHLOCALB02
0x3508  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x350A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1162

0x350C  0x2A 0x08       RETB 0x08


// /source/compiler/symbols.hs:792
// ####  Symbols.IsNamedType(..)  ####                                          0x00A8

0x350E  0x49            ENTER

                        // string name = token["lexeme"];                       symbols.hs:793

0x350F  0x24 0x02       SYSCALL0 0x02  // String.New
0x3511  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3513  0x37 0x5B 0x01  PUSHIW 0x015B
0x3516  0x1A 0x06       PUSHIB 0x06
0x3518  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x351A  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x351C  0x5D            POPCOPYLOCALB00

                        // uint winner = 0;                                     symbols.hs:795

0x351D  0x44            PUSHI0

                        // if (!name.Contains('.'))                             symbols.hs:798

0x351E  0x4E            PUSHLOCALB00
0x351F  0x1A 0x2E       PUSHIB 0x2E
0x3521  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x3524  0x2F 0x4D       JNZB 0x3571 (+77)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:800

0x3526  0x20 0x8C       PUSHGLOBALB 0x8C
0x3528  0x44            PUSHI0
0x3529  0x44            PUSHI0
0x352A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x352C  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x352E  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x3530  0x05            EQ
0x3531  0x2F 0x3C       JNZB 0x356D (+60)
0x3533  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x3536  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x3538  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // string candidate = nameSpace + "." + name;           symbols.hs:802

0x353A  0x24 0x02       SYSCALL0 0x02  // String.New
0x353C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x353E  0x1A 0x2E       PUSHIB 0x2E
0x3540  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3542  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3544  0x4E            PUSHLOCALB00
0x3545  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3547  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (eIndex.Contains(candidate))                      symbols.hs:803

0x3549  0x20 0x7A       PUSHGLOBALB 0x7A
0x354B  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x354D  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x354F  0x2E 0x04       JZB 0x3553 (+4)

                        // winner++;                                            symbols.hs:805

0x3551  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(candidate))                     symbols.hs:807

0x3553  0x20 0x80       PUSHGLOBALB 0x80
0x3555  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3557  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3559  0x2E 0x04       JZB 0x355D (+4)

                        // winner++;                                            symbols.hs:809

0x355B  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(candidate))                     symbols.hs:811

0x355D  0x20 0x6C       PUSHGLOBALB 0x6C
0x355F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3561  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x3563  0x2E 0x04       JZB 0x3567 (+4)

                        // winner++;                                            symbols.hs:813

0x3565  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // }                                                    symbols.hs:815

0x3567  0x28 0x02       DECSP 0x02
0x3569  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x356B  0x30 0xBF       JB 0x352A (-65)
0x356D  0x28 0x06       DECSP 0x06

                        // break;                                               symbols.hs:816

0x356F  0x30 0x1D       JB 0x358C (+29)

                        // if (eIndex.Contains(name))                           symbols.hs:818

0x3571  0x20 0x7A       PUSHGLOBALB 0x7A
0x3573  0x4E            PUSHLOCALB00
0x3574  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x3576  0x2E 0x04       JZB 0x357A (+4)

                        // winner++;                                            symbols.hs:820

0x3578  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(name))                          symbols.hs:822

0x357A  0x20 0x80       PUSHGLOBALB 0x80
0x357C  0x4E            PUSHLOCALB00
0x357D  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x357F  0x2E 0x04       JZB 0x3583 (+4)

                        // winner++;                                            symbols.hs:824

0x3581  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(name))                          symbols.hs:826

0x3583  0x20 0x6C       PUSHGLOBALB 0x6C
0x3585  0x4E            PUSHLOCALB00
0x3586  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x3588  0x2E 0x04       JZB 0x358C (+4)

                        // winner++;                                            symbols.hs:828

0x358A  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (winner > 1)                                      symbols.hs:832

0x358C  0x4F            PUSHLOCALB02
0x358D  0x45            PUSHI1
0x358E  0x07            GT
0x358F  0x2E 0x16       JZB 0x35A5 (+22)

                        // Parser.ErrorAt(token, "ambiguous named type '" + name + "'");

0x3591  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3593  0x37 0x98 0x06  PUSHIW 0x0698
0x3596  0x1A 0x16       PUSHIB 0x16
0x3598  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x359A  0x4E            PUSHLOCALB00
0x359B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x359D  0x1A 0x27       PUSHIB 0x27
0x359F  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x35A1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x35A3  0x2C 0x77       CALLB 0x77     // Parser.ErrorAt

                        // if (winner == 0)                                     symbols.hs:836

0x35A5  0x4F            PUSHLOCALB02
0x35A6  0x2F 0x0D       JNZB 0x35B3 (+13)

                        // Parser.ErrorAt(token, "unrecognized type name");

0x35A8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x35AA  0x37 0xAE 0x06  PUSHIW 0x06AE
0x35AD  0x1A 0x16       PUSHIB 0x16
0x35AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x35B1  0x2C 0x77       CALLB 0x77     // Parser.ErrorAt

                        // return (winner == 1);                                symbols.hs:840

0x35B3  0x4F            PUSHLOCALB02
0x35B4  0x45            PUSHI1
0x35B5  0x05            EQ
0x35B6  0x2B 0x06       RETRETB 0x06


// /source/compiler/symbols.hs:970
// ####  Symbols.GetFunctionDelegateIndex(..)  ####                             0x00B8


                        // bool found = false;                                  symbols.hs:972

0x35B8  0x5F 0x01       ENTERB 0x01

                        // if (fdNames.Contains(name))                          symbols.hs:973

0x35BA  0x20 0x6C       PUSHGLOBALB 0x6C
0x35BC  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x35BE  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x35C0  0x2E 0x2D       JZB 0x35ED (+45)

                        // uint length = fdNames.Length;                        symbols.hs:975

0x35C2  0x44            PUSHI0
0x35C3  0x20 0x6C       PUSHGLOBALB 0x6C
0x35C5  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x35C7  0x4D            POPLOCALB02

                        // for (uint i=0; i < length; i++)                      symbols.hs:976

0x35C8  0x44            PUSHI0
0x35C9  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x35CB  0x4F            PUSHLOCALB02
0x35CC  0x08            LT
0x35CD  0x2E 0x1C       JZB 0x35E9 (+28)

                        // if (name == fdNames[i])                              symbols.hs:978

0x35CF  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x35D1  0x20 0x6C       PUSHGLOBALB 0x6C
0x35D3  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x35D5  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x35D7  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x35D9  0x2F 0x0C       JNZB 0x35E5 (+12)

                        // index = i;                                           symbols.hs:980

0x35DB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x35DD  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // found = true;                                        symbols.hs:981

0x35DF  0x45            PUSHI1
0x35E0  0x4C            POPLOCALB00

                        // break;                                               symbols.hs:982

0x35E1  0x28 0x02       DECSP 0x02
0x35E3  0x30 0x08       JB 0x35EB (+8)

                        // }                                                    symbols.hs:984

0x35E5  0x22 0x04       INCLOCALB 0x04 (BP+4)
0x35E7  0x30 0xE2       JB 0x35C9 (-30)
0x35E9  0x28 0x02       DECSP 0x02

                        // }                                                    symbols.hs:985

0x35EB  0x28 0x02       DECSP 0x02

                        // if (!found && !name.Contains('.'))                   symbols.hs:986

0x35ED  0x4E            PUSHLOCALB00
0x35EE  0x41            BOOLNOT
0x35EF  0x27 0x00       DUP 0x00
0x35F1  0x2E 0x0B       JZB 0x35FC (+11)
0x35F3  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x35F5  0x1A 0x2E       PUSHIB 0x2E
0x35F7  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x35FA  0x41            BOOLNOT
0x35FB  0x0C            BOOLAND
0x35FC  0x2E 0x3A       JZB 0x3636 (+58)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:988

0x35FE  0x20 0x8C       PUSHGLOBALB 0x8C
0x3600  0x44            PUSHI0
0x3601  0x44            PUSHI0
0x3602  0x4F            PUSHLOCALB02
0x3603  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x3605  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3607  0x05            EQ
0x3608  0x2F 0x2C       JNZB 0x3634 (+44)
0x360A  0x4F            PUSHLOCALB02
0x360B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x360D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x360F  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // string candidate = nameSpace + "." + name;           symbols.hs:990

0x3611  0x24 0x02       SYSCALL0 0x02  // String.New
0x3613  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3615  0x1A 0x2E       PUSHIB 0x2E
0x3617  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3619  0x24 0x03       SYSCALL0 0x03  // String.Append
0x361B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x361D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x361F  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (GetFunctionDelegateIndex(candidate, ref index))

0x3621  0x56 0x08 0xFE  PUSHLOCALBB 0xFE08
0x3624  0x2C 0xB8       CALLB 0xB8     // Symbols.GetFunctionDelegateIndex
0x3626  0x2E 0x08       JZB 0x362E (+8)

                        // found = true;                                        symbols.hs:993

0x3628  0x45            PUSHI1
0x3629  0x4C            POPLOCALB00

                        // break;                                               symbols.hs:994

0x362A  0x28 0x08       DECSP 0x08
0x362C  0x30 0x0A       JB 0x3636 (+10)

                        // }                                                    symbols.hs:996

0x362E  0x28 0x02       DECSP 0x02
0x3630  0x22 0x06       INCLOCALB 0x06 (BP+6)
0x3632  0x30 0xD0       JB 0x3602 (-48)
0x3634  0x28 0x06       DECSP 0x06

                        // return found;                                        symbols.hs:998

0x3636  0x4E            PUSHLOCALB00
0x3637  0x2B 0x06       RETRETB 0x06


// /source/system/screen.hs:60
// ####  Screen.PrintLn(..)  ####                                               0x0038

0x3639  0x49            ENTER

                        // Print(s, Color.MatrixGreen, Color.Black);            screen.hs:61

0x363A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x363C  0x34 0x5E 0x01  CALLW 0x015E   // Color.MatrixGreen_Get
0x363F  0x34 0x46 0x01  CALLW 0x0146   // Color.Black_Get
0x3642  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // PrintLn();                                           screen.hs:62

0x3644  0x24 0x2A       SYSCALL0 0x2A  // Screen.PrintLn

                        // }                                                    screen.hs:63

0x3646  0x2A 0x02       RETB 0x02


// /source/system/screen.hs:39
// ####  Screen.PrintLn(..)  ####                                               0x0034

0x3648  0x49            ENTER

                        // Print(s, foreColour, backColour);                    screen.hs:40

0x3649  0x56 0xFA 0xFC  PUSHLOCALBB 0xFCFA
0x364C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x364E  0x25 0x29       SYSCALL1 0x29  // Screen.Print

                        // PrintLn();                                           screen.hs:41

0x3650  0x24 0x2A       SYSCALL0 0x2A  // Screen.PrintLn

                        // }                                                    screen.hs:42

0x3652  0x2A 0x06       RETB 0x06


// /source/system/color.hs:42
// ####  Color.ProgressText_Get(..)  ####                                       0x0164

0x3654  0x49            ENTER

                        // uint ProgressText        { get { return 0x006; } }

0x3655  0x1A 0x06       PUSHIB 0x06
0x3657  0x4A            RET0


// /source/system/color.hs:43
// ####  Color.ProgressFace_Get(..)  ####                                       0x0165

0x3658  0x49            ENTER

                        // uint ProgressFace        { get { return 0xDCB; } }

0x3659  0x37 0xCB 0x0D  PUSHIW 0x0DCB
0x365C  0x4A            RET0


// /source/system/color.hs:44
// ####  Color.ProgressHighlight_Get(..)  ####                                  0x0166

0x365D  0x49            ENTER

                        // uint ProgressHighlight   { get { return 0x3A8; }}

0x365E  0x37 0xA8 0x03  PUSHIW 0x03A8
0x3661  0x4A            RET0


// /source/system/color.hs:66
// ####  Color.StatusText_Get(..)  ####                                         0x0176

0x3662  0x49            ENTER

                        // uint StatusText   { get { return 0x006; } }

0x3663  0x1A 0x06       PUSHIB 0x06
0x3665  0x4A            RET0


// /source/system/color.hs:65
// ####  Color.StatusFace_Get(..)  ####                                         0x0175

0x3666  0x49            ENTER

                        // uint StatusFace   { get { return 0xDCB; } }

0x3667  0x37 0xCB 0x0D  PUSHIW 0x0DCB
0x366A  0x4A            RET0


// /source/system/color.hs:40
// ####  Color.ProgressTick_Get(..)  ####                                       0x0162

0x366B  0x49            ENTER

                        // uint ProgressTick        { get { return 0x258; } }

0x366C  0x37 0x58 0x02  PUSHIW 0x0258
0x366F  0x4A            RET0


// /source/system/color.hs:41
// ####  Color.ProgressBackground_Get(..)  ####                                 0x0163

0x3670  0x49            ENTER

                        // uint ProgressBackground  { get { return 0x68A; } }

0x3671  0x37 0x8A 0x06  PUSHIW 0x068A
0x3674  0x4A            RET0


// /source/system/color.hs:34
// ####  Color.MatrixGreen_Get(..)  ####                                        0x015E

0x3675  0x49            ENTER

                        // uint MatrixGreen         { get { return 0x7F7; } }

0x3676  0x37 0xF7 0x07  PUSHIW 0x07F7
0x3679  0x4A            RET0


// /source/system/color.hs:4
// ####  Color.Black_Get(..)  ####                                              0x0146


                        // uint Black        { get { return 0x000; } }

0x367A  0x5F 0x01       ENTERB 0x01

                        // uint Black        { get { return 0x000; } }

0x367C  0x4A            RET0


// /source/compiler/tokens/scanner.hs:32
// ####  Scanner.New(..)  ####                                                  0x0058

0x367D  0x49            ENTER

                        // sourceLines.Clear();                                 scanner.hs:33

0x367E  0x20 0x12       PUSHGLOBALB 0x12
0x3680  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // Token.Initialize();                                  scanner.hs:34

0x3682  0x2C 0x47       CALLB 0x47     // Token.Initialize

                        // }                                                    scanner.hs:35

0x3684  0x4A            RET0


// /source/compiler/tokens/scanner.hs:38
// ####  Scanner.Load(..)  ####                                                 0x0059


                        // byte b;                                              scanner.hs:39

0x3685  0x5F 0x01       ENTERB 0x01

                        // string ln;                                           scanner.hs:40

0x3687  0x24 0x02       SYSCALL0 0x02  // String.New

                        // sourceLines.Clear();                                 scanner.hs:42

0x3689  0x20 0x12       PUSHGLOBALB 0x12
0x368B  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // sourceLength = 0;                                    scanner.hs:43

0x368D  0x44            PUSHI0
0x368E  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3690  0x59 0x18       POPCOPYGLOBALB 0x18

                        // file sourceFile = File.Open(sourcePath);             scanner.hs:44

0x3692  0x24 0x60       SYSCALL0 0x60  // File.New
0x3694  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3696  0x24 0x61       SYSCALL0 0x61  // File.Open
0x3698  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // uint progress = 0;                                   scanner.hs:45

0x369A  0x44            PUSHI0

                        // if (sourceFile.IsValid())                            scanner.hs:46

0x369B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x369D  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x369F  0x2E 0x65       JZB 0x3704 (+101)

                        // String.Build(ref ln); // clear                       scanner.hs:50

0x36A1  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x36A3  0x1A 0x02       PUSHIB 0x02
0x36A5  0x26 0x83       SYSCALL 0x83  // String.Build

                        // b = sourceFile.Read();                               scanner.hs:53

0x36A7  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x36A9  0x24 0x64       SYSCALL0 0x64  // File.Read
0x36AB  0x4C            POPLOCALB00

                        // if (b == 0)                                          scanner.hs:54

0x36AC  0x4E            PUSHLOCALB00
0x36AD  0x2E 0x0D       JZB 0x36BA (+13)

                        // Build(ref ln, char(b));                              scanner.hs:58

0x36AF  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x36B1  0x4E            PUSHLOCALB00
0x36B2  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // if (b == 0x0A)                                       scanner.hs:59

0x36B4  0x4E            PUSHLOCALB00
0x36B5  0x1A 0x0A       PUSHIB 0x0A
0x36B7  0x05            EQ
0x36B8  0x2E 0xEF       JZB 0x36A7 (-17)

                        // if ((ln.Length == 0) && !sourceFile.IsValid())

0x36BA  0x4F            PUSHLOCALB02
0x36BB  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x36BD  0x44            PUSHI0
0x36BE  0x05            EQ
0x36BF  0x27 0x00       DUP 0x00
0x36C1  0x2E 0x08       JZB 0x36C9 (+8)
0x36C3  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x36C5  0x24 0x65       SYSCALL0 0x65  // File.IsValid
0x36C7  0x41            BOOLNOT
0x36C8  0x0C            BOOLAND
0x36C9  0x2F 0x2D       JNZB 0x36F6 (+45)

                        // sourceLength = sourceLength + ln.Length;             scanner.hs:68

0x36CB  0x20 0x18       PUSHGLOBALB 0x18
0x36CD  0x4F            PUSHLOCALB02
0x36CE  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x36D0  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x36D2  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x36D4  0x59 0x18       POPCOPYGLOBALB 0x18

                        // sourceLines.Append(ln);                              scanner.hs:69

0x36D6  0x20 0x12       PUSHGLOBALB 0x12
0x36D8  0x4F            PUSHLOCALB02
0x36D9  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // progress = progress + ln.Length;                     scanner.hs:71

0x36DB  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x36DD  0x4F            PUSHLOCALB02
0x36DE  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x36E0  0x00            ADD
0x36E1  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (progress > 10240)                                scanner.hs:72

0x36E3  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x36E5  0x37 0x00 0x28  PUSHIW 0x2800
0x36E8  0x07            GT
0x36E9  0x2E 0xB8       JZB 0x36A1 (-72)

                        // Parser.ProgressTick("+");                            scanner.hs:74

0x36EB  0x1A 0x2B       PUSHIB 0x2B
0x36ED  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x36EF  0x2C 0x6E       CALLB 0x6E     // Parser.ProgressTick

                        // progress = 0;                                        scanner.hs:75

0x36F1  0x44            PUSHI0
0x36F2  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // } // loop                                            scanner.hs:77

0x36F4  0x30 0xAD       JB 0x36A1 (-83)

                        // if (progress > 2560)                                 scanner.hs:78

0x36F6  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x36F8  0x37 0x00 0x0A  PUSHIW 0x0A00
0x36FB  0x07            GT
0x36FC  0x2E 0x08       JZB 0x3704 (+8)

                        // Parser.ProgressTick("+");                            scanner.hs:80

0x36FE  0x1A 0x2B       PUSHIB 0x2B
0x3700  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3702  0x2C 0x6E       CALLB 0x6E     // Parser.ProgressTick

                        // currentSourcePath = sourcePath;                      scanner.hs:83

0x3704  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3706  0x59 0x1E       POPCOPYGLOBALB 0x1E

                        // }                                                    scanner.hs:84

0x3708  0x2A 0x0A       RETB 0x0A


// /source/compiler/tokens/scanner.hs:86
// ####  Scanner.Reset(..)  ####                                                0x005A

0x370A  0x49            ENTER

                        // if (sourcePath != currentSourcePath)                 scanner.hs:87

0x370B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x370D  0x20 0x1E       PUSHGLOBALB 0x1E
0x370F  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3711  0x2E 0x06       JZB 0x3717 (+6)

                        // Load(sourcePath);                                    scanner.hs:89

0x3713  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3715  0x2C 0x59       CALLB 0x59     // Scanner.Load

                        // currentPos = pos;                                    scanner.hs:91

0x3717  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x3719  0x59 0x14       POPCOPYGLOBALB 0x14

                        // currentLine = ln;                                    scanner.hs:92

0x371B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x371D  0x1F 0x16       POPGLOBALB 0x16

                        // <string,string> empty;                               scanner.hs:93

0x371F  0x1A 0x0F       PUSHIB 0x0F
0x3721  0x1A 0x0F       PUSHIB 0x0F
0x3723  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // peekedToken = empty;                                 scanner.hs:94

0x3725  0x4E            PUSHLOCALB00
0x3726  0x59 0x28       POPCOPYGLOBALB 0x28

                        // isPeekedToken = false;                               scanner.hs:95

0x3728  0x44            PUSHI0
0x3729  0x1F 0x2A       POPGLOBALB 0x2A

                        // iCurrentSourceLine = 0;                              scanner.hs:98

0x372B  0x44            PUSHI0
0x372C  0x1F 0x1A       POPGLOBALB 0x1A

                        // currentStartPos = 0;                                 scanner.hs:99

0x372E  0x44            PUSHI0
0x372F  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3731  0x59 0x1C       POPCOPYGLOBALB 0x1C

                        // lastPos = 0;                                         scanner.hs:100

0x3733  0x44            PUSHI0
0x3734  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3736  0x59 0x22       POPCOPYGLOBALB 0x22

                        // lastPosSet = false;                                  scanner.hs:101

0x3738  0x44            PUSHI0
0x3739  0x1F 0x24       POPGLOBALB 0x24

                        // }                                                    scanner.hs:102

0x373B  0x2A 0x08       RETB 0x08


// /source/compiler/tokens/scanner.hs:641
// ####  Scanner.Peek(..)  ####                                                 0x006A

0x373D  0x49            ENTER

                        // if (!isPeekedToken)                                  scanner.hs:642

0x373E  0x20 0x2A       PUSHGLOBALB 0x2A
0x3740  0x2F 0x09       JNZB 0x3749 (+9)

                        // peekedToken = Next();                                scanner.hs:644

0x3742  0x2C 0x69       CALLB 0x69     // Scanner.Next
0x3744  0x59 0x28       POPCOPYGLOBALB 0x28

                        // isPeekedToken = true;                                scanner.hs:645

0x3746  0x45            PUSHI1
0x3747  0x1F 0x2A       POPGLOBALB 0x2A

                        // return peekedToken;                                  scanner.hs:647

0x3749  0x20 0x28       PUSHGLOBALB 0x28
0x374B  0x4A            RET0


// /source/compiler/tokens/scanner.hs:505
// ####  Scanner.Next(..)  ####                                                 0x0069

0x374C  0x49            ENTER

                        // <string,string> token = Token.New(HopperToken.Undefined, "", currentLine, currentPos, currentSourcePath);

0x374D  0x1A 0x0F       PUSHIB 0x0F
0x374F  0x1A 0x0F       PUSHIB 0x0F
0x3751  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x3753  0x44            PUSHI0
0x3754  0x24 0x02       SYSCALL0 0x02  // String.New
0x3756  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x3759  0x20 0x1E       PUSHGLOBALB 0x1E
0x375B  0x2C 0x56       CALLB 0x56     // Token.New
0x375D  0x5D            POPCOPYLOCALB00

                        // if (isPeekedToken)                                   scanner.hs:509

0x375E  0x20 0x2A       PUSHGLOBALB 0x2A
0x3760  0x2E 0x0B       JZB 0x376B (+11)

                        // token = peekedToken;                                 scanner.hs:511

0x3762  0x20 0x28       PUSHGLOBALB 0x28
0x3764  0x5D            POPCOPYLOCALB00

                        // isPeekedToken = false;                               scanner.hs:512

0x3765  0x44            PUSHI0
0x3766  0x1F 0x2A       POPGLOBALB 0x2A

                        // break;                                               scanner.hs:513

0x3768  0x33 0x46 0x02  JW 0x39AE (+582)

                        // if (isAtEnd())                                       scanner.hs:515

0x376B  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x376D  0x2E 0x11       JZB 0x377E (+17)

                        // token = Token.New(HopperToken.EOF, "", currentLine, currentPos, currentSourcePath);

0x376F  0x1A 0x2D       PUSHIB 0x2D
0x3771  0x24 0x02       SYSCALL0 0x02  // String.New
0x3773  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x3776  0x20 0x1E       PUSHGLOBALB 0x1E
0x3778  0x2C 0x56       CALLB 0x56     // Token.New
0x377A  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:518

0x377B  0x33 0x33 0x02  JW 0x39AE (+563)

                        // skipWhitespace();                                    scanner.hs:522

0x377E  0x2C 0x64       CALLB 0x64     // Scanner.skipWhitespace

                        // char c = advance();                                  scanner.hs:523

0x3780  0x44            PUSHI0
0x3781  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3783  0x4D            POPLOCALB02

                        // if (c.IsDigit())                                     scanner.hs:524

0x3784  0x4F            PUSHLOCALB02
0x3785  0x2C 0xD9       CALLB 0xD9     // Char.IsDigit
0x3787  0x2E 0x0B       JZB 0x3792 (+11)

                        // token = scanNumber(c);                               scanner.hs:526

0x3789  0x4F            PUSHLOCALB02
0x378A  0x2C 0x67       CALLB 0x67     // Scanner.scanNumber
0x378C  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:527

0x378D  0x28 0x02       DECSP 0x02
0x378F  0x33 0x1F 0x02  JW 0x39AE (+543)

                        // if (c.IsLetter() || (c == '#'))                      scanner.hs:529

0x3792  0x4F            PUSHLOCALB02
0x3793  0x2C 0xDE       CALLB 0xDE     // Char.IsLetter
0x3795  0x27 0x00       DUP 0x00
0x3797  0x2F 0x07       JNZB 0x379E (+7)
0x3799  0x4F            PUSHLOCALB02
0x379A  0x1A 0x23       PUSHIB 0x23
0x379C  0x05            EQ
0x379D  0x0B            BOOLOR
0x379E  0x2E 0x0B       JZB 0x37A9 (+11)

                        // token = scanIdentifier(c);                           scanner.hs:531

0x37A0  0x4F            PUSHLOCALB02
0x37A1  0x2C 0x68       CALLB 0x68     // Scanner.scanIdentifier
0x37A3  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:532

0x37A4  0x28 0x02       DECSP 0x02
0x37A6  0x33 0x08 0x02  JW 0x39AE (+520)

                        // HopperToken htoken = HopperToken.Undefined;

0x37A9  0x44            PUSHI0
0x37AA  0x44            PUSHI0
0x37AB  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // switch (c)                                           scanner.hs:535

0x37AD  0x4F            PUSHLOCALB02

                        // case '(': { htoken = HopperToken.LParen; }           scanner.hs:537

0x37AE  0x1A 0x28       PUSHIB 0x28
0x37B0  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x37B2  0x05            EQ
0x37B3  0x2E 0x09       JZB 0x37BC (+9)
0x37B5  0x1A 0x10       PUSHIB 0x10
0x37B7  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x37B9  0x33 0xE1 0x01  JW 0x399A (+481)

                        // case ')': { htoken = HopperToken.RParen; }           scanner.hs:538

0x37BC  0x1A 0x29       PUSHIB 0x29
0x37BE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x37C0  0x05            EQ
0x37C1  0x2E 0x09       JZB 0x37CA (+9)
0x37C3  0x1A 0x11       PUSHIB 0x11
0x37C5  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x37C7  0x33 0xD3 0x01  JW 0x399A (+467)

                        // case '{': { htoken = HopperToken.LBrace; }           scanner.hs:539

0x37CA  0x1A 0x7B       PUSHIB 0x7B
0x37CC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x37CE  0x05            EQ
0x37CF  0x2E 0x09       JZB 0x37D8 (+9)
0x37D1  0x1A 0x12       PUSHIB 0x12
0x37D3  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x37D5  0x33 0xC5 0x01  JW 0x399A (+453)

                        // case '}': { htoken = HopperToken.RBrace; }           scanner.hs:540

0x37D8  0x1A 0x7D       PUSHIB 0x7D
0x37DA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x37DC  0x05            EQ
0x37DD  0x2E 0x09       JZB 0x37E6 (+9)
0x37DF  0x1A 0x13       PUSHIB 0x13
0x37E1  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x37E3  0x33 0xB7 0x01  JW 0x399A (+439)

                        // case '[': { htoken = HopperToken.LBracket; }

0x37E6  0x1A 0x5B       PUSHIB 0x5B
0x37E8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x37EA  0x05            EQ
0x37EB  0x2E 0x09       JZB 0x37F4 (+9)
0x37ED  0x1A 0x14       PUSHIB 0x14
0x37EF  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x37F1  0x33 0xA9 0x01  JW 0x399A (+425)

                        // case ']': { htoken = HopperToken.RBracket; }

0x37F4  0x1A 0x5D       PUSHIB 0x5D
0x37F6  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x37F8  0x05            EQ
0x37F9  0x2E 0x09       JZB 0x3802 (+9)
0x37FB  0x1A 0x15       PUSHIB 0x15
0x37FD  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x37FF  0x33 0x9B 0x01  JW 0x399A (+411)

                        // case ';': { htoken = HopperToken.SemiColon; }

0x3802  0x1A 0x3B       PUSHIB 0x3B
0x3804  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3806  0x05            EQ
0x3807  0x2E 0x09       JZB 0x3810 (+9)
0x3809  0x1A 0x0C       PUSHIB 0x0C
0x380B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x380D  0x33 0x8D 0x01  JW 0x399A (+397)

                        // case ':': { htoken = HopperToken.Colon; }            scanner.hs:544

0x3810  0x1A 0x3A       PUSHIB 0x3A
0x3812  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3814  0x05            EQ
0x3815  0x2E 0x09       JZB 0x381E (+9)
0x3817  0x1A 0x0E       PUSHIB 0x0E
0x3819  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x381B  0x33 0x7F 0x01  JW 0x399A (+383)

                        // case ',': { htoken = HopperToken.Comma; }            scanner.hs:545

0x381E  0x1A 0x2C       PUSHIB 0x2C
0x3820  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3822  0x05            EQ
0x3823  0x2E 0x09       JZB 0x382C (+9)
0x3825  0x1A 0x0D       PUSHIB 0x0D
0x3827  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3829  0x33 0x71 0x01  JW 0x399A (+369)

                        // case '.': { htoken = HopperToken.Dot; }              scanner.hs:546

0x382C  0x1A 0x2E       PUSHIB 0x2E
0x382E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3830  0x05            EQ
0x3831  0x2E 0x09       JZB 0x383A (+9)
0x3833  0x1A 0x04       PUSHIB 0x04
0x3835  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3837  0x33 0x63 0x01  JW 0x399A (+355)

                        // case '*': { htoken = HopperToken.Multiply; }

0x383A  0x1A 0x2A       PUSHIB 0x2A
0x383C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x383E  0x05            EQ
0x383F  0x2E 0x09       JZB 0x3848 (+9)
0x3841  0x1A 0x27       PUSHIB 0x27
0x3843  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3845  0x33 0x55 0x01  JW 0x399A (+341)

                        // case '/': { htoken = HopperToken.Divide; }           scanner.hs:548

0x3848  0x1A 0x2F       PUSHIB 0x2F
0x384A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x384C  0x05            EQ
0x384D  0x2E 0x09       JZB 0x3856 (+9)
0x384F  0x1A 0x28       PUSHIB 0x28
0x3851  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3853  0x33 0x47 0x01  JW 0x399A (+327)

                        // case '%': { htoken = HopperToken.Modulus; }

0x3856  0x1A 0x25       PUSHIB 0x25
0x3858  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x385A  0x05            EQ
0x385B  0x2E 0x09       JZB 0x3864 (+9)
0x385D  0x1A 0x29       PUSHIB 0x29
0x385F  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3861  0x33 0x39 0x01  JW 0x399A (+313)

                        // case '~': { htoken = HopperToken.BitNot; }           scanner.hs:550

0x3864  0x1A 0x7E       PUSHIB 0x7E
0x3866  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3868  0x05            EQ
0x3869  0x2E 0x09       JZB 0x3872 (+9)
0x386B  0x1A 0x23       PUSHIB 0x23
0x386D  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x386F  0x33 0x2B 0x01  JW 0x399A (+299)

                        // case '-':                                            scanner.hs:552

0x3872  0x1A 0x2D       PUSHIB 0x2D
0x3874  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3876  0x05            EQ
0x3877  0x2E 0x15       JZB 0x388C (+21)

                        // if (match('-'))                                      scanner.hs:554

0x3879  0x1A 0x2D       PUSHIB 0x2D
0x387B  0x2C 0x63       CALLB 0x63     // Scanner.match
0x387D  0x2E 0x08       JZB 0x3885 (+8)

                        // { htoken = HopperToken.Decrement; }                  scanner.hs:555

0x387F  0x1A 0x2B       PUSHIB 0x2B
0x3881  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3883  0x30 0x06       JB 0x3889 (+6)

                        // { htoken = HopperToken.Subtract; }                   scanner.hs:557

0x3885  0x1A 0x26       PUSHIB 0x26
0x3887  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:558

0x3889  0x33 0x11 0x01  JW 0x399A (+273)

                        // case '+':                                            scanner.hs:559

0x388C  0x1A 0x2B       PUSHIB 0x2B
0x388E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3890  0x05            EQ
0x3891  0x2E 0x15       JZB 0x38A6 (+21)

                        // if (match('+'))                                      scanner.hs:561

0x3893  0x1A 0x2B       PUSHIB 0x2B
0x3895  0x2C 0x63       CALLB 0x63     // Scanner.match
0x3897  0x2E 0x08       JZB 0x389F (+8)

                        // { htoken = HopperToken.Increment; }                  scanner.hs:562

0x3899  0x1A 0x2A       PUSHIB 0x2A
0x389B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x389D  0x30 0x06       JB 0x38A3 (+6)

                        // { htoken = HopperToken.Add; }                        scanner.hs:564

0x389F  0x1A 0x25       PUSHIB 0x25
0x38A1  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:565

0x38A3  0x33 0xF7 0x00  JW 0x399A (+247)

                        // case '!':                                            scanner.hs:566

0x38A6  0x1A 0x21       PUSHIB 0x21
0x38A8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x38AA  0x05            EQ
0x38AB  0x2E 0x15       JZB 0x38C0 (+21)

                        // if (match('='))                                      scanner.hs:568

0x38AD  0x1A 0x3D       PUSHIB 0x3D
0x38AF  0x2C 0x63       CALLB 0x63     // Scanner.match
0x38B1  0x2E 0x08       JZB 0x38B9 (+8)

                        // { htoken = HopperToken.NE; }                         scanner.hs:569

0x38B3  0x1A 0x1B       PUSHIB 0x1B
0x38B5  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x38B7  0x30 0x06       JB 0x38BD (+6)

                        // { htoken = HopperToken.BooleanNot; }                 scanner.hs:571

0x38B9  0x1A 0x20       PUSHIB 0x20
0x38BB  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:572

0x38BD  0x33 0xDD 0x00  JW 0x399A (+221)

                        // case '=':                                            scanner.hs:573

0x38C0  0x1A 0x3D       PUSHIB 0x3D
0x38C2  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x38C4  0x05            EQ
0x38C5  0x2E 0x15       JZB 0x38DA (+21)

                        // if (match('='))                                      scanner.hs:575

0x38C7  0x1A 0x3D       PUSHIB 0x3D
0x38C9  0x2C 0x63       CALLB 0x63     // Scanner.match
0x38CB  0x2E 0x08       JZB 0x38D3 (+8)

                        // { htoken = HopperToken.EQ; }                         scanner.hs:576

0x38CD  0x1A 0x18       PUSHIB 0x18
0x38CF  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x38D1  0x30 0x06       JB 0x38D7 (+6)

                        // { htoken = HopperToken.Assign; }                     scanner.hs:578

0x38D3  0x1A 0x2C       PUSHIB 0x2C
0x38D5  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:579

0x38D7  0x33 0xC3 0x00  JW 0x399A (+195)

                        // case '<':                                            scanner.hs:580

0x38DA  0x1A 0x3C       PUSHIB 0x3C
0x38DC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x38DE  0x05            EQ
0x38DF  0x2E 0x21       JZB 0x3900 (+33)

                        // if (match('='))                                      scanner.hs:582

0x38E1  0x1A 0x3D       PUSHIB 0x3D
0x38E3  0x2C 0x63       CALLB 0x63     // Scanner.match
0x38E5  0x2E 0x08       JZB 0x38ED (+8)

                        // { htoken = HopperToken.LE; }                         scanner.hs:583

0x38E7  0x1A 0x19       PUSHIB 0x19
0x38E9  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x38EB  0x30 0x12       JB 0x38FD (+18)

                        // else if (match('<'))                                 scanner.hs:584

0x38ED  0x1A 0x3C       PUSHIB 0x3C
0x38EF  0x2C 0x63       CALLB 0x63     // Scanner.match
0x38F1  0x2E 0x08       JZB 0x38F9 (+8)

                        // { htoken = HopperToken.ShiftLeft; }                  scanner.hs:585

0x38F3  0x1A 0x1C       PUSHIB 0x1C
0x38F5  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x38F7  0x30 0x06       JB 0x38FD (+6)

                        // { htoken = HopperToken.LT; }                         scanner.hs:587

0x38F9  0x1A 0x16       PUSHIB 0x16
0x38FB  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:588

0x38FD  0x33 0x9D 0x00  JW 0x399A (+157)

                        // case '>':                                            scanner.hs:589

0x3900  0x1A 0x3E       PUSHIB 0x3E
0x3902  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3904  0x05            EQ
0x3905  0x2E 0x21       JZB 0x3926 (+33)

                        // if (match('='))                                      scanner.hs:591

0x3907  0x1A 0x3D       PUSHIB 0x3D
0x3909  0x2C 0x63       CALLB 0x63     // Scanner.match
0x390B  0x2E 0x08       JZB 0x3913 (+8)

                        // { htoken = HopperToken.GE; }                         scanner.hs:592

0x390D  0x1A 0x1A       PUSHIB 0x1A
0x390F  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3911  0x30 0x12       JB 0x3923 (+18)

                        // else if (match('>'))                                 scanner.hs:593

0x3913  0x1A 0x3E       PUSHIB 0x3E
0x3915  0x2C 0x63       CALLB 0x63     // Scanner.match
0x3917  0x2E 0x08       JZB 0x391F (+8)

                        // { htoken = HopperToken.ShiftRight; }                 scanner.hs:594

0x3919  0x1A 0x1D       PUSHIB 0x1D
0x391B  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x391D  0x30 0x7D       JB 0x399A (+125)

                        // { htoken = HopperToken.GT; }                         scanner.hs:596

0x391F  0x1A 0x17       PUSHIB 0x17
0x3921  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:597

0x3923  0x33 0x77 0x00  JW 0x399A (+119)

                        // case '|':                                            scanner.hs:598

0x3926  0x1A 0x7C       PUSHIB 0x7C
0x3928  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x392A  0x05            EQ
0x392B  0x2E 0x14       JZB 0x393F (+20)

                        // if (match('|'))                                      scanner.hs:600

0x392D  0x1A 0x7C       PUSHIB 0x7C
0x392F  0x2C 0x63       CALLB 0x63     // Scanner.match
0x3931  0x2E 0x08       JZB 0x3939 (+8)

                        // { htoken = HopperToken.BooleanOr; }                  scanner.hs:601

0x3933  0x1A 0x1F       PUSHIB 0x1F
0x3935  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3937  0x30 0x63       JB 0x399A (+99)

                        // { htoken = HopperToken.BitOr; }                      scanner.hs:603

0x3939  0x1A 0x22       PUSHIB 0x22
0x393B  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:604

0x393D  0x30 0x5D       JB 0x399A (+93)

                        // case '&':                                            scanner.hs:605

0x393F  0x1A 0x26       PUSHIB 0x26
0x3941  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3943  0x05            EQ
0x3944  0x2E 0x14       JZB 0x3958 (+20)

                        // if (match('&'))                                      scanner.hs:607

0x3946  0x1A 0x26       PUSHIB 0x26
0x3948  0x2C 0x63       CALLB 0x63     // Scanner.match
0x394A  0x2E 0x08       JZB 0x3952 (+8)

                        // { htoken = HopperToken.BooleanAnd; }                 scanner.hs:608

0x394C  0x1A 0x1E       PUSHIB 0x1E
0x394E  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x3950  0x30 0x4A       JB 0x399A (+74)

                        // { htoken = HopperToken.BitAnd; }                     scanner.hs:610

0x3952  0x1A 0x21       PUSHIB 0x21
0x3954  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:611

0x3956  0x30 0x44       JB 0x399A (+68)

                        // case '"':                                            scanner.hs:612

0x3958  0x1A 0x22       PUSHIB 0x22
0x395A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x395C  0x05            EQ
0x395D  0x2E 0x07       JZB 0x3964 (+7)

                        // token = scanString();                                scanner.hs:614

0x395F  0x2C 0x65       CALLB 0x65     // Scanner.scanString
0x3961  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:615

0x3962  0x30 0x38       JB 0x399A (+56)

                        // case '\'':                                           scanner.hs:616

0x3964  0x1A 0x27       PUSHIB 0x27
0x3966  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3968  0x05            EQ
0x3969  0x2E 0x07       JZB 0x3970 (+7)

                        // token = scanChar();                                  scanner.hs:618

0x396B  0x2C 0x66       CALLB 0x66     // Scanner.scanChar
0x396D  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:619

0x396E  0x30 0x2C       JB 0x399A (+44)

                        // uint ui = uint(c);                                   scanner.hs:622

0x3970  0x44            PUSHI0
0x3971  0x4F            PUSHLOCALB02
0x3972  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // token = errorToken("unexpected character: '" + c + "' (0x" + ui.ToHexString(2) + ")");

0x3974  0x37 0xC4 0x06  PUSHIW 0x06C4
0x3977  0x1A 0x17       PUSHIB 0x17
0x3979  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x397B  0x4F            PUSHLOCALB02
0x397C  0x25 0x03       SYSCALL1 0x03  // String.Append
0x397E  0x37 0xDB 0x06  PUSHIW 0x06DB
0x3981  0x1A 0x05       PUSHIB 0x05
0x3983  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3985  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3987  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x3989  0x1A 0x02       PUSHIB 0x02
0x398B  0x2C 0xEA       CALLB 0xEA     // UInt.ToHexString
0x398D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x398F  0x1A 0x29       PUSHIB 0x29
0x3991  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3993  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3995  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3997  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:624

0x3998  0x28 0x02       DECSP 0x02

                        // }                                                    scanner.hs:625

0x399A  0x28 0x02       DECSP 0x02

                        // if (htoken != HopperToken.Undefined)                 scanner.hs:626

0x399C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x399E  0x2E 0x0E       JZB 0x39AC (+14)

                        // token = Token.New(htoken, "", currentLine, currentPos, currentSourcePath);

0x39A0  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x39A2  0x24 0x02       SYSCALL0 0x02  // String.New
0x39A4  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x39A7  0x20 0x1E       PUSHGLOBALB 0x1E
0x39A9  0x2C 0x56       CALLB 0x56     // Token.New
0x39AB  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:630

0x39AC  0x28 0x04       DECSP 0x04

                        // if (dumpTokens)                                      scanner.hs:634

0x39AE  0x20 0x26       PUSHGLOBALB 0x26
0x39B0  0x2E 0x14       JZB 0x39C4 (+20)

                        // PrintLn("  " + Token.ToString(token), Color.Red, Color.Black);

0x39B2  0x37 0x20 0x20  PUSHIW 0x2020
0x39B5  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x39B7  0x4E            PUSHLOCALB00
0x39B8  0x2C 0x57       CALLB 0x57     // Token.ToString
0x39BA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x39BC  0x34 0x55 0x01  CALLW 0x0155   // Color.Red_Get
0x39BF  0x34 0x46 0x01  CALLW 0x0146   // Color.Black_Get
0x39C2  0x2C 0x34       CALLB 0x34     // Screen.PrintLn

                        // return token;                                        scanner.hs:638

0x39C4  0x4E            PUSHLOCALB00
0x39C5  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:127
// ####  Scanner.isAtEnd(..)  ####                                              0x005D

0x39C7  0x49            ENTER

                        // return (currentPos == sourceLength);                 scanner.hs:129

0x39C8  0x52 0x14 0x18  PUSHGLOBALBB 0x1814
0x39CB  0x24 0x44       SYSCALL0 0x44  // Long.EQ
0x39CD  0x4A            RET0


// /source/compiler/tokens/scanner.hs:231
// ####  Scanner.skipWhitespace(..)  ####                                       0x0064

0x39CE  0x49            ENTER

                        // char c = peek();                                     scanner.hs:234

0x39CF  0x44            PUSHI0
0x39D0  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x39D2  0x4C            POPLOCALB00

                        // if ((c == ' ') || (c == char(0x0D)) || (c == char(0x09)))

0x39D3  0x4E            PUSHLOCALB00
0x39D4  0x1A 0x20       PUSHIB 0x20
0x39D6  0x05            EQ
0x39D7  0x27 0x00       DUP 0x00
0x39D9  0x2F 0x10       JNZB 0x39E9 (+16)
0x39DB  0x4E            PUSHLOCALB00
0x39DC  0x1A 0x0D       PUSHIB 0x0D
0x39DE  0x05            EQ
0x39DF  0x0B            BOOLOR
0x39E0  0x27 0x00       DUP 0x00
0x39E2  0x2F 0x07       JNZB 0x39E9 (+7)
0x39E4  0x4E            PUSHLOCALB00
0x39E5  0x1A 0x09       PUSHIB 0x09
0x39E7  0x05            EQ
0x39E8  0x0B            BOOLOR
0x39E9  0x2E 0x08       JZB 0x39F1 (+8)

                        // c = advance();                                       scanner.hs:237

0x39EB  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x39ED  0x4C            POPLOCALB00

                        // }                                                    scanner.hs:238

0x39EE  0x33 0x97 0x00  JW 0x3A85 (+151)

                        // else if (c == char(0x0A))                            scanner.hs:239

0x39F1  0x4E            PUSHLOCALB00
0x39F2  0x1A 0x0A       PUSHIB 0x0A
0x39F4  0x05            EQ
0x39F5  0x2E 0x0A       JZB 0x39FF (+10)

                        // currentLine++;                                       scanner.hs:241

0x39F7  0x53 0x16       INCGLOBALB 0x16

                        // c = advance();                                       scanner.hs:242

0x39F9  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x39FB  0x4C            POPLOCALB00

                        // }                                                    scanner.hs:243

0x39FC  0x33 0x89 0x00  JW 0x3A85 (+137)

                        // else if (c == '/')                                   scanner.hs:244

0x39FF  0x4E            PUSHLOCALB00
0x3A00  0x1A 0x2F       PUSHIB 0x2F
0x3A02  0x05            EQ
0x3A03  0x31 0x7F 0x00  JZW 0x3A82 (+127)

                        // char n = peekNext();                                 scanner.hs:246

0x3A06  0x44            PUSHI0
0x3A07  0x2C 0x62       CALLB 0x62     // Scanner.peekNext
0x3A09  0x4D            POPLOCALB02

                        // if (n == '/')                                        scanner.hs:247

0x3A0A  0x4F            PUSHLOCALB02
0x3A0B  0x1A 0x2F       PUSHIB 0x2F
0x3A0D  0x05            EQ
0x3A0E  0x2E 0x1F       JZB 0x3A2D (+31)

                        // c = peek();                                          scanner.hs:252

0x3A10  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3A12  0x4C            POPLOCALB00

                        // if ((c == char(0)) || (c == char(0x0A)) || isAtEnd())

0x3A13  0x4E            PUSHLOCALB00
0x3A14  0x44            PUSHI0
0x3A15  0x05            EQ
0x3A16  0x27 0x00       DUP 0x00
0x3A18  0x2F 0x0E       JNZB 0x3A26 (+14)
0x3A1A  0x4E            PUSHLOCALB00
0x3A1B  0x1A 0x0A       PUSHIB 0x0A
0x3A1D  0x05            EQ
0x3A1E  0x0B            BOOLOR
0x3A1F  0x27 0x00       DUP 0x00
0x3A21  0x2F 0x05       JNZB 0x3A26 (+5)
0x3A23  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x3A25  0x0B            BOOLOR
0x3A26  0x2F 0x58       JNZB 0x3A7E (+88)

                        // c = advance(); // gobble gobble                      scanner.hs:257

0x3A28  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3A2A  0x4C            POPLOCALB00

                        // }                                                    scanner.hs:258

0x3A2B  0x30 0xE5       JB 0x3A10 (-27)

                        // else if (n == '*')                                   scanner.hs:260

0x3A2D  0x4F            PUSHLOCALB02
0x3A2E  0x1A 0x2A       PUSHIB 0x2A
0x3A30  0x05            EQ
0x3A31  0x2E 0x4A       JZB 0x3A7B (+74)

                        // c = advance();                                       scanner.hs:264

0x3A33  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3A35  0x4C            POPLOCALB00

                        // c = advance();                                       scanner.hs:265

0x3A36  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3A38  0x4C            POPLOCALB00

                        // c = peek();                                          scanner.hs:268

0x3A39  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3A3B  0x4C            POPLOCALB00

                        // if ((c == char(0)) || isAtEnd())                     scanner.hs:269

0x3A3C  0x4E            PUSHLOCALB00
0x3A3D  0x44            PUSHI0
0x3A3E  0x05            EQ
0x3A3F  0x27 0x00       DUP 0x00
0x3A41  0x2F 0x05       JNZB 0x3A46 (+5)
0x3A43  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x3A45  0x0B            BOOLOR
0x3A46  0x2F 0x38       JNZB 0x3A7E (+56)

                        // n = peekNext();                                      scanner.hs:273

0x3A48  0x2C 0x62       CALLB 0x62     // Scanner.peekNext
0x3A4A  0x4D            POPLOCALB02

                        // if ((n == char(0)) || isAtEnd())                     scanner.hs:274

0x3A4B  0x4F            PUSHLOCALB02
0x3A4C  0x44            PUSHI0
0x3A4D  0x05            EQ
0x3A4E  0x27 0x00       DUP 0x00
0x3A50  0x2F 0x05       JNZB 0x3A55 (+5)
0x3A52  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x3A54  0x0B            BOOLOR
0x3A55  0x2F 0x29       JNZB 0x3A7E (+41)

                        // if ((c == '*') && (n == '/'))                        scanner.hs:278

0x3A57  0x4E            PUSHLOCALB00
0x3A58  0x1A 0x2A       PUSHIB 0x2A
0x3A5A  0x05            EQ
0x3A5B  0x27 0x00       DUP 0x00
0x3A5D  0x2E 0x07       JZB 0x3A64 (+7)
0x3A5F  0x4F            PUSHLOCALB02
0x3A60  0x1A 0x2F       PUSHIB 0x2F
0x3A62  0x05            EQ
0x3A63  0x0C            BOOLAND
0x3A64  0x2E 0x0A       JZB 0x3A6E (+10)

                        // c = advance();                                       scanner.hs:281

0x3A66  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3A68  0x4C            POPLOCALB00

                        // c = advance();                                       scanner.hs:282

0x3A69  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3A6B  0x4C            POPLOCALB00

                        // break;                                               scanner.hs:283

0x3A6C  0x30 0x12       JB 0x3A7E (+18)

                        // c = advance(); // gobble gobble                      scanner.hs:285

0x3A6E  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3A70  0x4C            POPLOCALB00

                        // if (c == char(0x0A))                                 scanner.hs:286

0x3A71  0x4E            PUSHLOCALB00
0x3A72  0x1A 0x0A       PUSHIB 0x0A
0x3A74  0x05            EQ
0x3A75  0x2E 0xC4       JZB 0x3A39 (-60)

                        // currentLine++;                                       scanner.hs:288

0x3A77  0x53 0x16       INCGLOBALB 0x16

                        // }                                                    scanner.hs:290

0x3A79  0x30 0xC0       JB 0x3A39 (-64)

                        // break; // just a single '/'                          scanner.hs:294

0x3A7B  0x28 0x04       DECSP 0x04
0x3A7D  0x4A            RET0

                        // }                                                    scanner.hs:296

0x3A7E  0x28 0x02       DECSP 0x02
0x3A80  0x30 0x05       JB 0x3A85 (+5)

                        // break;                                               scanner.hs:299

0x3A82  0x28 0x02       DECSP 0x02
0x3A84  0x4A            RET0

                        // }                                                    scanner.hs:301

0x3A85  0x28 0x02       DECSP 0x02
0x3A87  0x33 0x48 0xFF  JW 0x39CF (-184)


// /source/compiler/tokens/scanner.hs:199
// ####  Scanner.advance(..)  ####                                              0x0060


                        // char c = sourceGetFromPos(currentPos, true);

0x3A8A  0x5F 0x01       ENTERB 0x01

                        // char c = sourceGetFromPos(currentPos, true);

0x3A8C  0x20 0x14       PUSHGLOBALB 0x14
0x3A8E  0x45            PUSHI1
0x3A8F  0x2C 0x5F       CALLB 0x5F     // Scanner.sourceGetFromPos
0x3A91  0x4C            POPLOCALB00

                        // currentPos = currentPos + 1;                         scanner.hs:201

0x3A92  0x20 0x14       PUSHGLOBALB 0x14
0x3A94  0x45            PUSHI1
0x3A95  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3A97  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3A99  0x59 0x14       POPCOPYGLOBALB 0x14

                        // return c;                                            scanner.hs:202

0x3A9B  0x4E            PUSHLOCALB00
0x3A9C  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:355
// ####  Scanner.scanNumber(..)  ####                                           0x0067

0x3A9E  0x49            ENTER

                        // <string,string> token;                               scanner.hs:356

0x3A9F  0x1A 0x0F       PUSHIB 0x0F
0x3AA1  0x1A 0x0F       PUSHIB 0x0F
0x3AA3  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // string value = c.ToString();                         scanner.hs:357

0x3AA5  0x24 0x02       SYSCALL0 0x02  // String.New
0x3AA7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3AA9  0x2C 0xDF       CALLB 0xDF     // Char.ToString
0x3AAB  0x5E            POPCOPYLOCALB02

                        // bool hexOk = false;                                  scanner.hs:358

0x3AAC  0x44            PUSHI0

                        // bool binaryOk = false;                               scanner.hs:359

0x3AAD  0x44            PUSHI0

                        // bool floatOk = false;                                scanner.hs:360

0x3AAE  0x44            PUSHI0

                        // HopperToken ttype = HopperToken.Integer;             scanner.hs:362

0x3AAF  0x44            PUSHI0
0x3AB0  0x1A 0x09       PUSHIB 0x09
0x3AB2  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // c = peek();                                          scanner.hs:367

0x3AB4  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3AB6  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // if ((c == 'x') && (value == "0"))                    scanner.hs:368

0x3AB8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3ABA  0x1A 0x78       PUSHIB 0x78
0x3ABC  0x05            EQ
0x3ABD  0x27 0x00       DUP 0x00
0x3ABF  0x2E 0x0C       JZB 0x3ACB (+12)
0x3AC1  0x4F            PUSHLOCALB02
0x3AC2  0x1A 0x30       PUSHIB 0x30
0x3AC4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3AC6  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3AC8  0x44            PUSHI0
0x3AC9  0x05            EQ
0x3ACA  0x0C            BOOLAND
0x3ACB  0x2E 0x0D       JZB 0x3AD8 (+13)

                        // hexOk = true;                                        scanner.hs:370

0x3ACD  0x45            PUSHI1
0x3ACE  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // value = value + advance();                           scanner.hs:371

0x3AD0  0x4F            PUSHLOCALB02
0x3AD1  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3AD3  0x25 0x03       SYSCALL1 0x03  // String.Append
0x3AD5  0x5E            POPCOPYLOCALB02

                        // continue;                                            scanner.hs:372

0x3AD6  0x30 0xDE       JB 0x3AB4 (-34)

                        // if ((c == 'b') && (value == "0"))                    scanner.hs:374

0x3AD8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3ADA  0x1A 0x62       PUSHIB 0x62
0x3ADC  0x05            EQ
0x3ADD  0x27 0x00       DUP 0x00
0x3ADF  0x2E 0x0C       JZB 0x3AEB (+12)
0x3AE1  0x4F            PUSHLOCALB02
0x3AE2  0x1A 0x30       PUSHIB 0x30
0x3AE4  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3AE6  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3AE8  0x44            PUSHI0
0x3AE9  0x05            EQ
0x3AEA  0x0C            BOOLAND
0x3AEB  0x2E 0x0D       JZB 0x3AF8 (+13)

                        // binaryOk = true;                                     scanner.hs:376

0x3AED  0x45            PUSHI1
0x3AEE  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // value = value + advance();                           scanner.hs:377

0x3AF0  0x4F            PUSHLOCALB02
0x3AF1  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3AF3  0x25 0x03       SYSCALL1 0x03  // String.Append
0x3AF5  0x5E            POPCOPYLOCALB02

                        // continue;                                            scanner.hs:378

0x3AF6  0x30 0xBE       JB 0x3AB4 (-66)

                        // if (hexOk && c.IsHexDigit())                         scanner.hs:380

0x3AF8  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3AFA  0x27 0x00       DUP 0x00
0x3AFC  0x2E 0x07       JZB 0x3B03 (+7)
0x3AFE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3B00  0x2C 0xDD       CALLB 0xDD     // Char.IsHexDigit
0x3B02  0x0C            BOOLAND
0x3B03  0x2F 0x3E       JNZB 0x3B41 (+62)

                        // else if (binaryOk && ((c == '0') || (c == '1')))

0x3B05  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3B07  0x27 0x00       DUP 0x00
0x3B09  0x2E 0x12       JZB 0x3B1B (+18)
0x3B0B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3B0D  0x1A 0x30       PUSHIB 0x30
0x3B0F  0x05            EQ
0x3B10  0x27 0x00       DUP 0x00
0x3B12  0x2F 0x08       JNZB 0x3B1A (+8)
0x3B14  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3B16  0x1A 0x31       PUSHIB 0x31
0x3B18  0x05            EQ
0x3B19  0x0B            BOOLOR
0x3B1A  0x0C            BOOLAND
0x3B1B  0x2F 0x26       JNZB 0x3B41 (+38)

                        // else if ((c == '.') && !floatOk && (value.Length > 0))

0x3B1D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3B1F  0x1A 0x2E       PUSHIB 0x2E
0x3B21  0x05            EQ
0x3B22  0x27 0x00       DUP 0x00
0x3B24  0x2E 0x10       JZB 0x3B34 (+16)
0x3B26  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x3B28  0x41            BOOLNOT
0x3B29  0x0C            BOOLAND
0x3B2A  0x27 0x00       DUP 0x00
0x3B2C  0x2E 0x08       JZB 0x3B34 (+8)
0x3B2E  0x4F            PUSHLOCALB02
0x3B2F  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3B31  0x44            PUSHI0
0x3B32  0x07            GT
0x3B33  0x0C            BOOLAND
0x3B34  0x2E 0x07       JZB 0x3B3B (+7)

                        // floatOk = true;                                      scanner.hs:390

0x3B36  0x45            PUSHI1
0x3B37  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // }                                                    scanner.hs:391

0x3B39  0x30 0x08       JB 0x3B41 (+8)

                        // else if (!c.IsDigit())                               scanner.hs:392

0x3B3B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3B3D  0x2C 0xD9       CALLB 0xD9     // Char.IsDigit
0x3B3F  0x2E 0x0B       JZB 0x3B4A (+11)

                        // value = value + advance();                           scanner.hs:396

0x3B41  0x4F            PUSHLOCALB02
0x3B42  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3B44  0x25 0x03       SYSCALL1 0x03  // String.Append
0x3B46  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:397

0x3B47  0x33 0x6D 0xFF  JW 0x3AB4 (-147)

                        // if (hexOk)                                           scanner.hs:398

0x3B4A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3B4C  0x2E 0x38       JZB 0x3B84 (+56)

                        // if (value.Length < 3)                                scanner.hs:400

0x3B4E  0x4F            PUSHLOCALB02
0x3B4F  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3B51  0x1A 0x03       PUSHIB 0x03
0x3B53  0x08            LT
0x3B54  0x2E 0x0F       JZB 0x3B63 (+15)

                        // token = errorToken("invalid hex integer literal");

0x3B56  0x37 0xE0 0x06  PUSHIW 0x06E0
0x3B59  0x1A 0x1B       PUSHIB 0x1B
0x3B5B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B5D  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3B5F  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:403

0x3B60  0x33 0xAD 0x00  JW 0x3C0D (+173)

                        // uint hexValue = 0;                                   scanner.hs:405

0x3B63  0x44            PUSHI0

                        // if (!Token.TryParseHex(value, ref hexValue))

0x3B64  0x4F            PUSHLOCALB02
0x3B65  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x3B67  0x2C 0x52       CALLB 0x52     // Token.TryParseHex
0x3B69  0x2F 0x11       JNZB 0x3B7A (+17)

                        // token = errorToken("invalid hex integer literal");

0x3B6B  0x37 0xE0 0x06  PUSHIW 0x06E0
0x3B6E  0x1A 0x1B       PUSHIB 0x1B
0x3B70  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B72  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3B74  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:409

0x3B75  0x28 0x02       DECSP 0x02
0x3B77  0x33 0x96 0x00  JW 0x3C0D (+150)

                        // value = hexValue.ToString();                         scanner.hs:411

0x3B7A  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3B7C  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x3B7E  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:412

0x3B7F  0x28 0x02       DECSP 0x02
0x3B81  0x33 0x81 0x00  JW 0x3C02 (+129)

                        // else if (binaryOk)                                   scanner.hs:413

0x3B84  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3B86  0x2E 0x36       JZB 0x3BBC (+54)

                        // if (value.Length < 3)                                scanner.hs:415

0x3B88  0x4F            PUSHLOCALB02
0x3B89  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3B8B  0x1A 0x03       PUSHIB 0x03
0x3B8D  0x08            LT
0x3B8E  0x2E 0x0F       JZB 0x3B9D (+15)

                        // token = errorToken("invalid binary integer literal");

0x3B90  0x37 0xFB 0x06  PUSHIW 0x06FB
0x3B93  0x1A 0x1E       PUSHIB 0x1E
0x3B95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3B97  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3B99  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:418

0x3B9A  0x33 0x73 0x00  JW 0x3C0D (+115)

                        // uint binaryValue = 0;                                scanner.hs:420

0x3B9D  0x44            PUSHI0

                        // if (!Token.TryParseBinary(value, ref binaryValue))

0x3B9E  0x4F            PUSHLOCALB02
0x3B9F  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x3BA1  0x2C 0x54       CALLB 0x54     // Token.TryParseBinary
0x3BA3  0x2F 0x10       JNZB 0x3BB3 (+16)

                        // token = errorToken("invalid binary integer literal");

0x3BA5  0x37 0xFB 0x06  PUSHIW 0x06FB
0x3BA8  0x1A 0x1E       PUSHIB 0x1E
0x3BAA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BAC  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3BAE  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:424

0x3BAF  0x28 0x02       DECSP 0x02
0x3BB1  0x30 0x5C       JB 0x3C0D (+92)

                        // value = binaryValue.ToString();                      scanner.hs:426

0x3BB3  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3BB5  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x3BB7  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:427

0x3BB8  0x28 0x02       DECSP 0x02
0x3BBA  0x30 0x48       JB 0x3C02 (+72)

                        // else if (floatOk)                                    scanner.hs:428

0x3BBC  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x3BBE  0x2E 0x26       JZB 0x3BE4 (+38)

                        // float f;                                             scanner.hs:430

0x3BC0  0x24 0x4C       SYSCALL0 0x4C  // Float.New

                        // if (!Token.TryParseFloat(value, ref f))              scanner.hs:431

0x3BC2  0x4F            PUSHLOCALB02
0x3BC3  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x3BC5  0x2C 0x55       CALLB 0x55     // Token.TryParseFloat
0x3BC7  0x2F 0x10       JNZB 0x3BD7 (+16)

                        // token = errorToken("invalid float literal");

0x3BC9  0x37 0x19 0x07  PUSHIW 0x0719
0x3BCC  0x1A 0x15       PUSHIB 0x15
0x3BCE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BD0  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3BD2  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:434

0x3BD3  0x28 0x02       DECSP 0x02
0x3BD5  0x30 0x38       JB 0x3C0D (+56)

                        // value = f.ToString();                                scanner.hs:436

0x3BD7  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3BD9  0x24 0x4A       SYSCALL0 0x4A  // Float.ToString
0x3BDB  0x5E            POPCOPYLOCALB02

                        // ttype = HopperToken.Float;                           scanner.hs:437

0x3BDC  0x1A 0x0A       PUSHIB 0x0A
0x3BDE  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // }                                                    scanner.hs:438

0x3BE0  0x28 0x02       DECSP 0x02
0x3BE2  0x30 0x20       JB 0x3C02 (+32)

                        // long l;                                              scanner.hs:441

0x3BE4  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (!Token.TryParseLong(value, ref l))               scanner.hs:442

0x3BE6  0x4F            PUSHLOCALB02
0x3BE7  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x3BE9  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x3BEB  0x2F 0x10       JNZB 0x3BFB (+16)

                        // token = errorToken("invalid integer literal");

0x3BED  0x37 0x2E 0x07  PUSHIW 0x072E
0x3BF0  0x1A 0x17       PUSHIB 0x17
0x3BF2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3BF4  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3BF6  0x5D            POPCOPYLOCALB00

                        // break;                                               scanner.hs:445

0x3BF7  0x28 0x02       DECSP 0x02
0x3BF9  0x30 0x14       JB 0x3C0D (+20)

                        // value = l.ToString();                                scanner.hs:447

0x3BFB  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3BFD  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x3BFF  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:448

0x3C00  0x28 0x02       DECSP 0x02

                        // token = Token.New(ttype, value, currentLine, currentPos, currentSourcePath);

0x3C02  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3C04  0x4F            PUSHLOCALB02
0x3C05  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x3C08  0x20 0x1E       PUSHGLOBALB 0x1E
0x3C0A  0x2C 0x56       CALLB 0x56     // Token.New
0x3C0C  0x5D            POPCOPYLOCALB00

                        // return token;                                        scanner.hs:453

0x3C0D  0x4E            PUSHLOCALB00
0x3C0E  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/tokens/scanner.hs:456
// ####  Scanner.scanIdentifier(..)  ####                                       0x0068


                        // uint dotSeen = 0;                                    scanner.hs:457

0x3C10  0x5F 0x01       ENTERB 0x01

                        // string value = c.ToString();                         scanner.hs:458

0x3C12  0x24 0x02       SYSCALL0 0x02  // String.New
0x3C14  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3C16  0x2C 0xDF       CALLB 0xDF     // Char.ToString
0x3C18  0x5E            POPCOPYLOCALB02

                        // HopperToken ttype = HopperToken.Identifier;

0x3C19  0x44            PUSHI0
0x3C1A  0x1A 0x03       PUSHIB 0x03
0x3C1C  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // c = peek();                                          scanner.hs:462

0x3C1E  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3C20  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // if (!c.IsLetter() && !c.IsDigit())                   scanner.hs:463

0x3C22  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3C24  0x2C 0xDE       CALLB 0xDE     // Char.IsLetter
0x3C26  0x41            BOOLNOT
0x3C27  0x27 0x00       DUP 0x00
0x3C29  0x2E 0x08       JZB 0x3C31 (+8)
0x3C2B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3C2D  0x2C 0xD9       CALLB 0xD9     // Char.IsDigit
0x3C2F  0x41            BOOLNOT
0x3C30  0x0C            BOOLAND
0x3C31  0x2E 0x0B       JZB 0x3C3C (+11)

                        // if (c == '.')                                        scanner.hs:465

0x3C33  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3C35  0x1A 0x2E       PUSHIB 0x2E
0x3C37  0x05            EQ
0x3C38  0x2E 0x0C       JZB 0x3C44 (+12)

                        // dotSeen++;                                           scanner.hs:467

0x3C3A  0x22 0x00       INCLOCALB 0x00 (BP+0)

                        // value = value + advance();                           scanner.hs:474

0x3C3C  0x4F            PUSHLOCALB02
0x3C3D  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3C3F  0x25 0x03       SYSCALL1 0x03  // String.Append
0x3C41  0x5E            POPCOPYLOCALB02

                        // }                                                    scanner.hs:475

0x3C42  0x30 0xDC       JB 0x3C1E (-36)

                        // if (dotSeen > 0)                                     scanner.hs:476

0x3C44  0x4E            PUSHLOCALB00
0x3C45  0x44            PUSHI0
0x3C46  0x07            GT
0x3C47  0x2E 0x06       JZB 0x3C4D (+6)

                        // ttype = HopperToken.DottedIdentifier;                scanner.hs:478

0x3C49  0x1A 0x02       PUSHIB 0x02
0x3C4B  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (Token.IsKeyword(value))                          scanner.hs:480

0x3C4D  0x4F            PUSHLOCALB02
0x3C4E  0x2C 0x4E       CALLB 0x4E     // Token.IsKeyword
0x3C50  0x2E 0x2F       JZB 0x3C7F (+47)

                        // switch (value)                                       scanner.hs:482

0x3C52  0x4F            PUSHLOCALB02

                        // case "true":                                         scanner.hs:484

0x3C53  0x37 0x45 0x07  PUSHIW 0x0745
0x3C56  0x1A 0x04       PUSHIB 0x04
0x3C58  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C5A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3C5C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3C5E  0x2F 0x08       JNZB 0x3C66 (+8)

                        // ttype = HopperToken.Bool;                            scanner.hs:486

0x3C60  0x1A 0x07       PUSHIB 0x07
0x3C62  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:487

0x3C64  0x30 0x19       JB 0x3C7D (+25)

                        // case "false":                                        scanner.hs:488

0x3C66  0x37 0x49 0x07  PUSHIW 0x0749
0x3C69  0x1A 0x05       PUSHIB 0x05
0x3C6B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3C6D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x3C6F  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x3C71  0x2F 0x08       JNZB 0x3C79 (+8)

                        // ttype = HopperToken.Bool;                            scanner.hs:490

0x3C73  0x1A 0x07       PUSHIB 0x07
0x3C75  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:491

0x3C77  0x30 0x06       JB 0x3C7D (+6)

                        // ttype = HopperToken.Keyword;                         scanner.hs:494

0x3C79  0x1A 0x05       PUSHIB 0x05
0x3C7B  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // }                                                    scanner.hs:496

0x3C7D  0x28 0x02       DECSP 0x02

                        // if (Token.IsDirectiveKeyword(value))                 scanner.hs:498

0x3C7F  0x4F            PUSHLOCALB02
0x3C80  0x2C 0x48       CALLB 0x48     // Token.IsDirectiveKeyword
0x3C82  0x2E 0x06       JZB 0x3C88 (+6)

                        // ttype = HopperToken.Directive;                       scanner.hs:500

0x3C84  0x1A 0x06       PUSHIB 0x06
0x3C86  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // return Token.New(ttype, value, currentLine, currentPos, currentSourcePath);

0x3C88  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3C8A  0x4F            PUSHLOCALB02
0x3C8B  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x3C8E  0x20 0x1E       PUSHGLOBALB 0x1E
0x3C90  0x2C 0x56       CALLB 0x56     // Token.New
0x3C92  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/scanner.hs:218
// ####  Scanner.match(..)  ####                                                0x0063

0x3C94  0x49            ENTER

                        // if (isAtEnd())                                       scanner.hs:219

0x3C95  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x3C97  0x2E 0x05       JZB 0x3C9C (+5)

                        // return false;                                        scanner.hs:221

0x3C99  0x44            PUSHI0
0x3C9A  0x2B 0x02       RETRETB 0x02

                        // if (sourceGetFromPos(currentPos, true) != expected)

0x3C9C  0x20 0x14       PUSHGLOBALB 0x14
0x3C9E  0x45            PUSHI1
0x3C9F  0x2C 0x5F       CALLB 0x5F     // Scanner.sourceGetFromPos
0x3CA1  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3CA3  0x06            NE
0x3CA4  0x2E 0x05       JZB 0x3CA9 (+5)

                        // return false;                                        scanner.hs:225

0x3CA6  0x44            PUSHI0
0x3CA7  0x2B 0x02       RETRETB 0x02

                        // currentPos = currentPos + 1;                         scanner.hs:227

0x3CA9  0x20 0x14       PUSHGLOBALB 0x14
0x3CAB  0x45            PUSHI1
0x3CAC  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3CAE  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3CB0  0x59 0x14       POPCOPYGLOBALB 0x14

                        // return true;                                         scanner.hs:228

0x3CB2  0x45            PUSHI1
0x3CB3  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:304
// ####  Scanner.scanString(..)  ####                                           0x0065

0x3CB5  0x49            ENTER

                        // string value;                                        scanner.hs:305

0x3CB6  0x24 0x02       SYSCALL0 0x02  // String.New

                        // while ((peek() != '"') && (peek() != char(0)))

0x3CB8  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3CBA  0x1A 0x22       PUSHIB 0x22
0x3CBC  0x06            NE
0x3CBD  0x27 0x00       DUP 0x00
0x3CBF  0x2E 0x07       JZB 0x3CC6 (+7)
0x3CC1  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3CC3  0x44            PUSHI0
0x3CC4  0x06            NE
0x3CC5  0x0C            BOOLAND
0x3CC6  0x2E 0x3B       JZB 0x3D01 (+59)

                        // if (peek() == char(0x0A))                            scanner.hs:308

0x3CC8  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3CCA  0x1A 0x0A       PUSHIB 0x0A
0x3CCC  0x05            EQ
0x3CCD  0x2E 0x0D       JZB 0x3CDA (+13)

                        // return errorToken("unexpected EOL in string");

0x3CCF  0x37 0x4E 0x07  PUSHIW 0x074E
0x3CD2  0x1A 0x18       PUSHIB 0x18
0x3CD4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3CD6  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3CD8  0x2B 0x02       RETRETB 0x02

                        // char c = advance();                                  scanner.hs:312

0x3CDA  0x44            PUSHI0
0x3CDB  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3CDD  0x4D            POPLOCALB02

                        // if (c == char(0x5C)) // \                            scanner.hs:313

0x3CDE  0x4F            PUSHLOCALB02
0x3CDF  0x1A 0x5C       PUSHIB 0x5C
0x3CE1  0x05            EQ
0x3CE2  0x2E 0x16       JZB 0x3CF8 (+22)

                        // if (   (peek() == '"') // \"                         scanner.hs:315

0x3CE4  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3CE6  0x1A 0x22       PUSHIB 0x22
0x3CE8  0x05            EQ
0x3CE9  0x27 0x00       DUP 0x00
0x3CEB  0x2F 0x08       JNZB 0x3CF3 (+8)
0x3CED  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3CEF  0x1A 0x5C       PUSHIB 0x5C
0x3CF1  0x05            EQ
0x3CF2  0x0B            BOOLOR
0x3CF3  0x2E 0x05       JZB 0x3CF8 (+5)

                        // c = advance(); // gooble the \                       scanner.hs:319

0x3CF5  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3CF7  0x4D            POPLOCALB02

                        // value = value + c;                                   scanner.hs:322

0x3CF8  0x4E            PUSHLOCALB00
0x3CF9  0x4F            PUSHLOCALB02
0x3CFA  0x25 0x03       SYSCALL1 0x03  // String.Append
0x3CFC  0x5D            POPCOPYLOCALB00

                        // }                                                    scanner.hs:323

0x3CFD  0x28 0x02       DECSP 0x02
0x3CFF  0x30 0xB9       JB 0x3CB8 (-71)

                        // if (isAtEnd())                                       scanner.hs:324

0x3D01  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x3D03  0x2E 0x25       JZB 0x3D28 (+37)

                        // if (value.Length > 80)                               scanner.hs:326

0x3D05  0x4E            PUSHLOCALB00
0x3D06  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3D08  0x1A 0x50       PUSHIB 0x50
0x3D0A  0x07            GT
0x3D0B  0x2E 0x09       JZB 0x3D14 (+9)

                        // value = value.Substring(0, 80);                      scanner.hs:328

0x3D0D  0x4E            PUSHLOCALB00
0x3D0E  0x44            PUSHI0
0x3D0F  0x1A 0x50       PUSHIB 0x50
0x3D11  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x3D13  0x5D            POPCOPYLOCALB00

                        // return errorToken("unterminated string: '" + value + "'");

0x3D14  0x37 0x66 0x07  PUSHIW 0x0766
0x3D17  0x1A 0x16       PUSHIB 0x16
0x3D19  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3D1B  0x4E            PUSHLOCALB00
0x3D1C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3D1E  0x1A 0x27       PUSHIB 0x27
0x3D20  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x3D22  0x24 0x03       SYSCALL0 0x03  // String.Append
0x3D24  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3D26  0x2B 0x02       RETRETB 0x02

                        // char c = advance(); // consume the '"'               scanner.hs:332

0x3D28  0x44            PUSHI0
0x3D29  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3D2B  0x4D            POPLOCALB02

                        // return Token.New(HopperToken.StringConstant, value, currentLine, currentPos, currentSourcePath);

0x3D2C  0x1A 0x0B       PUSHIB 0x0B
0x3D2E  0x4E            PUSHLOCALB00
0x3D2F  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x3D32  0x20 0x1E       PUSHGLOBALB 0x1E
0x3D34  0x2C 0x56       CALLB 0x56     // Token.New
0x3D36  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/scanner.hs:336
// ####  Scanner.scanChar(..)  ####                                             0x0066


                        // char c = advance();                                  scanner.hs:337

0x3D38  0x5F 0x01       ENTERB 0x01

                        // char c = advance();                                  scanner.hs:337

0x3D3A  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3D3C  0x4C            POPLOCALB00

                        // if (c == char(0x5C))                                 scanner.hs:338

0x3D3D  0x4E            PUSHLOCALB00
0x3D3E  0x1A 0x5C       PUSHIB 0x5C
0x3D40  0x05            EQ
0x3D41  0x2E 0x16       JZB 0x3D57 (+22)

                        // if (   (peek() == char(0x27)) // \'                  scanner.hs:340

0x3D43  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3D45  0x1A 0x27       PUSHIB 0x27
0x3D47  0x05            EQ
0x3D48  0x27 0x00       DUP 0x00
0x3D4A  0x2F 0x08       JNZB 0x3D52 (+8)
0x3D4C  0x2C 0x61       CALLB 0x61     // Scanner.peek
0x3D4E  0x1A 0x5C       PUSHIB 0x5C
0x3D50  0x05            EQ
0x3D51  0x0B            BOOLOR
0x3D52  0x2E 0x05       JZB 0x3D57 (+5)

                        // c = advance();         // gobble the \               scanner.hs:344

0x3D54  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3D56  0x4C            POPLOCALB00

                        // char d = advance();                                  scanner.hs:347

0x3D57  0x44            PUSHI0
0x3D58  0x2C 0x60       CALLB 0x60     // Scanner.advance
0x3D5A  0x4D            POPLOCALB02

                        // if (isAtEnd() || (d != char(0x27))) // '             scanner.hs:348

0x3D5B  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x3D5D  0x27 0x00       DUP 0x00
0x3D5F  0x2F 0x07       JNZB 0x3D66 (+7)
0x3D61  0x4F            PUSHLOCALB02
0x3D62  0x1A 0x27       PUSHIB 0x27
0x3D64  0x06            NE
0x3D65  0x0B            BOOLOR
0x3D66  0x2E 0x0D       JZB 0x3D73 (+13)

                        // return errorToken("' expected");                     scanner.hs:350

0x3D68  0x37 0x01 0x01  PUSHIW 0x0101
0x3D6B  0x1A 0x0A       PUSHIB 0x0A
0x3D6D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3D6F  0x2C 0x5E       CALLB 0x5E     // Scanner.errorToken
0x3D71  0x2B 0x04       RETRETB 0x04

                        // return Token.New(HopperToken.Char, c.ToString(), currentLine, currentPos, currentSourcePath);

0x3D73  0x1A 0x08       PUSHIB 0x08
0x3D75  0x4E            PUSHLOCALB00
0x3D76  0x2C 0xDF       CALLB 0xDF     // Char.ToString
0x3D78  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x3D7B  0x20 0x1E       PUSHGLOBALB 0x1E
0x3D7D  0x2C 0x56       CALLB 0x56     // Token.New
0x3D7F  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/scanner.hs:132
// ####  Scanner.errorToken(..)  ####                                           0x005E

0x3D81  0x49            ENTER

                        // <string,string> token = Token.New(HopperToken.Error, message, currentLine, currentPos, currentSourcePath);

0x3D82  0x1A 0x0F       PUSHIB 0x0F
0x3D84  0x1A 0x0F       PUSHIB 0x0F
0x3D86  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x3D88  0x45            PUSHI1
0x3D89  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3D8B  0x52 0x16 0x14  PUSHGLOBALBB 0x1416
0x3D8E  0x20 0x1E       PUSHGLOBALB 0x1E
0x3D90  0x2C 0x56       CALLB 0x56     // Token.New
0x3D92  0x5D            POPCOPYLOCALB00

                        // return token;                                        scanner.hs:134

0x3D93  0x4E            PUSHLOCALB00
0x3D94  0x2B 0x04       RETRETB 0x04


// /source/compiler/tokens/scanner.hs:205
// ####  Scanner.peek(..)  ####                                                 0x0061

0x3D96  0x49            ENTER

                        // return sourceGetFromPos(currentPos, true);           scanner.hs:206

0x3D97  0x20 0x14       PUSHGLOBALB 0x14
0x3D99  0x45            PUSHI1
0x3D9A  0x2C 0x5F       CALLB 0x5F     // Scanner.sourceGetFromPos
0x3D9C  0x4A            RET0


// /source/compiler/tokens/scanner.hs:209
// ####  Scanner.peekNext(..)  ####                                             0x0062

0x3D9D  0x49            ENTER

                        // if (isAtEnd())                                       scanner.hs:210

0x3D9E  0x2C 0x5D       CALLB 0x5D     // Scanner.isAtEnd
0x3DA0  0x2E 0x04       JZB 0x3DA4 (+4)

                        // return char(0);                                      scanner.hs:212

0x3DA2  0x44            PUSHI0
0x3DA3  0x4A            RET0

                        // long currentPlusOne = currentPos+1;                  scanner.hs:214

0x3DA4  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x3DA6  0x20 0x14       PUSHGLOBALB 0x14
0x3DA8  0x45            PUSHI1
0x3DA9  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3DAB  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3DAD  0x5D            POPCOPYLOCALB00

                        // return sourceGetFromPos(currentPlusOne, false);

0x3DAE  0x4E            PUSHLOCALB00
0x3DAF  0x44            PUSHI0
0x3DB0  0x2C 0x5F       CALLB 0x5F     // Scanner.sourceGetFromPos
0x3DB2  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/scanner.hs:137
// ####  Scanner.sourceGetFromPos(..)  ####                                     0x005F


                        // char c;                                              scanner.hs:138

0x3DB4  0x5F 0x05       ENTERB 0x05

                        // string ln;                                           scanner.hs:143

0x3DB6  0x24 0x02       SYSCALL0 0x02  // String.New

                        // long current;                                        scanner.hs:144

0x3DB8  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // long limit;                                          scanner.hs:145

0x3DBA  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // long index;                                          scanner.hs:146

0x3DBC  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (lastPosSet)                                      scanner.hs:150

0x3DBE  0x20 0x24       PUSHGLOBALB 0x24
0x3DC0  0x2E 0x10       JZB 0x3DD0 (+16)

                        // if (pos == lastPos)                                  scanner.hs:152

0x3DC2  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3DC4  0x20 0x22       PUSHGLOBALB 0x22
0x3DC6  0x24 0x44       SYSCALL0 0x44  // Long.EQ
0x3DC8  0x2E 0x08       JZB 0x3DD0 (+8)

                        // c = lastChar;                                        scanner.hs:154

0x3DCA  0x20 0x20       PUSHGLOBALB 0x20
0x3DCC  0x4C            POPLOCALB00

                        // break;                                               scanner.hs:155

0x3DCD  0x33 0x84 0x00  JW 0x3E51 (+132)

                        // if (pos < currentStartPos)                           scanner.hs:158

0x3DD0  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3DD2  0x20 0x1C       PUSHGLOBALB 0x1C
0x3DD4  0x24 0x45       SYSCALL0 0x45  // Long.LT
0x3DD6  0x2E 0x0A       JZB 0x3DE0 (+10)

                        // currentStartPos = 0;                                 scanner.hs:160

0x3DD8  0x44            PUSHI0
0x3DD9  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3DDB  0x59 0x1C       POPCOPYGLOBALB 0x1C

                        // iCurrentSourceLine = 0;                              scanner.hs:161

0x3DDD  0x44            PUSHI0
0x3DDE  0x1F 0x1A       POPGLOBALB 0x1A

                        // current = currentStartPos;                           scanner.hs:164

0x3DE0  0x20 0x1C       PUSHGLOBALB 0x1C
0x3DE2  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // iLine = iCurrentSourceLine;                          scanner.hs:165

0x3DE4  0x20 0x1A       PUSHGLOBALB 0x1A
0x3DE6  0x4D            POPLOCALB02

                        // maxLines = sourceLines.Length;                       scanner.hs:166

0x3DE7  0x20 0x12       PUSHGLOBALB 0x12
0x3DE9  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x3DEB  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // ln = sourceLines[iLine];                             scanner.hs:169

0x3DED  0x20 0x12       PUSHGLOBALB 0x12
0x3DEF  0x4F            PUSHLOCALB02
0x3DF0  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x3DF2  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // length = ln.Length;                                  scanner.hs:170

0x3DF4  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x3DF6  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x3DF8  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // limit = current+length;                              scanner.hs:171

0x3DFA  0x56 0x0C 0x06  PUSHLOCALBB 0x060C
0x3DFD  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3DFF  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3E01  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // if ((pos >= current) && (pos < limit))               scanner.hs:172

0x3E03  0x56 0xFC 0x0C  PUSHLOCALBB 0x0CFC
0x3E06  0x24 0x48       SYSCALL0 0x48  // Long.GE
0x3E08  0x27 0x00       DUP 0x00
0x3E0A  0x2E 0x08       JZB 0x3E12 (+8)
0x3E0C  0x56 0xFC 0x0E  PUSHLOCALBB 0x0EFC
0x3E0F  0x24 0x45       SYSCALL0 0x45  // Long.LT
0x3E11  0x0C            BOOLAND
0x3E12  0x2E 0x17       JZB 0x3E29 (+23)

                        // index = pos - current;                               scanner.hs:174

0x3E14  0x56 0xFC 0x0C  PUSHLOCALBB 0x0CFC
0x3E17  0x24 0x40       SYSCALL0 0x40  // Long.Sub
0x3E19  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // uindex = uint(index);                                scanner.hs:175

0x3E1B  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x3E1D  0x24 0x3C       SYSCALL0 0x3C  // Long.ToUInt
0x3E1F  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // c = ln[uindex];                                      scanner.hs:176

0x3E21  0x56 0x0A 0x08  PUSHLOCALBB 0x080A
0x3E24  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x3E26  0x4C            POPLOCALB00

                        // break;                                               scanner.hs:177

0x3E27  0x30 0x20       JB 0x3E47 (+32)

                        // current = current + length;                          scanner.hs:179

0x3E29  0x56 0x0C 0x06  PUSHLOCALBB 0x060C
0x3E2C  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x3E2E  0x24 0x3F       SYSCALL0 0x3F  // Long.Add
0x3E30  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // iLine = iLine + 1;                                   scanner.hs:180

0x3E32  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (iLine == maxLines)                               scanner.hs:181

0x3E34  0x4F            PUSHLOCALB02
0x3E35  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x3E37  0x05            EQ
0x3E38  0x2F 0x0F       JNZB 0x3E47 (+15)

                        // if (updateCache)                                     scanner.hs:185

0x3E3A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x3E3C  0x2E 0xB1       JZB 0x3DED (-79)

                        // currentStartPos = current;                           scanner.hs:187

0x3E3E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x3E40  0x59 0x1C       POPCOPYGLOBALB 0x1C

                        // iCurrentSourceLine = iLine;                          scanner.hs:188

0x3E42  0x4F            PUSHLOCALB02
0x3E43  0x1F 0x1A       POPGLOBALB 0x1A

                        // }                                                    scanner.hs:190

0x3E45  0x30 0xA8       JB 0x3DED (-88)

                        // lastPos = pos;                                       scanner.hs:191

0x3E47  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x3E49  0x59 0x22       POPCOPYGLOBALB 0x22

                        // lastChar = c;                                        scanner.hs:192

0x3E4B  0x4E            PUSHLOCALB00
0x3E4C  0x1F 0x20       POPGLOBALB 0x20

                        // lastPosSet = true;                                   scanner.hs:193

0x3E4E  0x45            PUSHI1
0x3E4F  0x1F 0x24       POPGLOBALB 0x24

                        // return c;                                            scanner.hs:196

0x3E51  0x4E            PUSHLOCALB00
0x3E52  0x2B 0x16       RETRETB 0x16


// /source/compiler/tokens/syscalls.hs:11
// ####  SysCalls.New(..)  ####                                                 0x0085

0x3E54  0x49            ENTER

                        // syscalls.Clear(); // in case called a 2nd time

0x3E55  0x20 0x3E       PUSHGLOBALB 0x3E
0x3E57  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // addEntry("String", "NewFromConstant");               syscalls.hs:14

0x3E59  0x37 0x7C 0x07  PUSHIW 0x077C
0x3E5C  0x1A 0x06       PUSHIB 0x06
0x3E5E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E60  0x37 0x82 0x07  PUSHIW 0x0782
0x3E63  0x1A 0x0F       PUSHIB 0x0F
0x3E65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E67  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "NewFromChar");                   syscalls.hs:15

0x3E69  0x37 0x7C 0x07  PUSHIW 0x077C
0x3E6C  0x1A 0x06       PUSHIB 0x06
0x3E6E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E70  0x37 0x91 0x07  PUSHIW 0x0791
0x3E73  0x1A 0x0B       PUSHIB 0x0B
0x3E75  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E77  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "New");                           syscalls.hs:16

0x3E79  0x37 0x7C 0x07  PUSHIW 0x077C
0x3E7C  0x1A 0x06       PUSHIB 0x06
0x3E7E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E80  0x37 0x82 0x07  PUSHIW 0x0782
0x3E83  0x1A 0x03       PUSHIB 0x03
0x3E85  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E87  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "Append");                        syscalls.hs:17

0x3E89  0x37 0x7C 0x07  PUSHIW 0x077C
0x3E8C  0x1A 0x06       PUSHIB 0x06
0x3E8E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E90  0x37 0x9C 0x07  PUSHIW 0x079C
0x3E93  0x1A 0x06       PUSHIB 0x06
0x3E95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3E97  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "InsertChar");                    syscalls.hs:18

0x3E99  0x37 0x7C 0x07  PUSHIW 0x077C
0x3E9C  0x1A 0x06       PUSHIB 0x06
0x3E9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EA0  0x37 0xA2 0x07  PUSHIW 0x07A2
0x3EA3  0x1A 0x0A       PUSHIB 0x0A
0x3EA5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EA7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "Compare");                       syscalls.hs:19

0x3EA9  0x37 0x7C 0x07  PUSHIW 0x077C
0x3EAC  0x1A 0x06       PUSHIB 0x06
0x3EAE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EB0  0x37 0xAC 0x07  PUSHIW 0x07AC
0x3EB3  0x1A 0x07       PUSHIB 0x07
0x3EB5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EB7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "Length_Get");                    syscalls.hs:20

0x3EB9  0x37 0x7C 0x07  PUSHIW 0x077C
0x3EBC  0x1A 0x06       PUSHIB 0x06
0x3EBE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EC0  0x37 0xB3 0x07  PUSHIW 0x07B3
0x3EC3  0x1A 0x0A       PUSHIB 0x0A
0x3EC5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EC7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "EndsWith");                      syscalls.hs:21

0x3EC9  0x37 0x7C 0x07  PUSHIW 0x077C
0x3ECC  0x1A 0x06       PUSHIB 0x06
0x3ECE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3ED0  0x37 0xBD 0x07  PUSHIW 0x07BD
0x3ED3  0x1A 0x08       PUSHIB 0x08
0x3ED5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3ED7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "Substring");                     syscalls.hs:22

0x3ED9  0x37 0x7C 0x07  PUSHIW 0x077C
0x3EDC  0x1A 0x06       PUSHIB 0x06
0x3EDE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EE0  0x37 0xC5 0x07  PUSHIW 0x07C5
0x3EE3  0x1A 0x09       PUSHIB 0x09
0x3EE5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EE7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "Replace");                       syscalls.hs:23

0x3EE9  0x37 0x7C 0x07  PUSHIW 0x077C
0x3EEC  0x1A 0x06       PUSHIB 0x06
0x3EEE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EF0  0x37 0xCE 0x07  PUSHIW 0x07CE
0x3EF3  0x1A 0x07       PUSHIB 0x07
0x3EF5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3EF7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "GetChar");                       syscalls.hs:24

0x3EF9  0x37 0x7C 0x07  PUSHIW 0x077C
0x3EFC  0x1A 0x06       PUSHIB 0x06
0x3EFE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F00  0x37 0xD5 0x07  PUSHIW 0x07D5
0x3F03  0x1A 0x07       PUSHIB 0x07
0x3F05  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F07  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Array", "New");                            syscalls.hs:26

0x3F09  0x37 0xAE 0x02  PUSHIW 0x02AE
0x3F0C  0x1A 0x05       PUSHIB 0x05
0x3F0E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F10  0x37 0x82 0x07  PUSHIW 0x0782
0x3F13  0x1A 0x03       PUSHIB 0x03
0x3F15  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F17  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Array", "Count_Get");                      syscalls.hs:27

0x3F19  0x37 0xAE 0x02  PUSHIW 0x02AE
0x3F1C  0x1A 0x05       PUSHIB 0x05
0x3F1E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F20  0x37 0xDC 0x07  PUSHIW 0x07DC
0x3F23  0x1A 0x09       PUSHIB 0x09
0x3F25  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F27  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Array", "GetItem");                        syscalls.hs:28

0x3F29  0x37 0xAE 0x02  PUSHIW 0x02AE
0x3F2C  0x1A 0x05       PUSHIB 0x05
0x3F2E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F30  0x37 0xE5 0x07  PUSHIW 0x07E5
0x3F33  0x1A 0x07       PUSHIB 0x07
0x3F35  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F37  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Array", "SetItem");                        syscalls.hs:29

0x3F39  0x37 0xAE 0x02  PUSHIW 0x02AE
0x3F3C  0x1A 0x05       PUSHIB 0x05
0x3F3E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F40  0x37 0xEC 0x07  PUSHIW 0x07EC
0x3F43  0x1A 0x07       PUSHIB 0x07
0x3F45  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F47  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "New");                             syscalls.hs:31

0x3F49  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3F4C  0x1A 0x04       PUSHIB 0x04
0x3F4E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F50  0x37 0x82 0x07  PUSHIW 0x0782
0x3F53  0x1A 0x03       PUSHIB 0x03
0x3F55  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F57  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "Length_Get");                      syscalls.hs:32

0x3F59  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3F5C  0x1A 0x04       PUSHIB 0x04
0x3F5E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F60  0x37 0xB3 0x07  PUSHIW 0x07B3
0x3F63  0x1A 0x0A       PUSHIB 0x0A
0x3F65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F67  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "Append");                          syscalls.hs:33

0x3F69  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3F6C  0x1A 0x04       PUSHIB 0x04
0x3F6E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F70  0x37 0x9C 0x07  PUSHIW 0x079C
0x3F73  0x1A 0x06       PUSHIB 0x06
0x3F75  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F77  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "Insert");                          syscalls.hs:34

0x3F79  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3F7C  0x1A 0x04       PUSHIB 0x04
0x3F7E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F80  0x37 0xA2 0x07  PUSHIW 0x07A2
0x3F83  0x1A 0x06       PUSHIB 0x06
0x3F85  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F87  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "GetItem");                         syscalls.hs:35

0x3F89  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3F8C  0x1A 0x04       PUSHIB 0x04
0x3F8E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F90  0x37 0xE5 0x07  PUSHIW 0x07E5
0x3F93  0x1A 0x07       PUSHIB 0x07
0x3F95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3F97  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "GetItemAsVariant");                syscalls.hs:36

0x3F99  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3F9C  0x1A 0x04       PUSHIB 0x04
0x3F9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FA0  0x37 0xF3 0x07  PUSHIW 0x07F3
0x3FA3  0x1A 0x10       PUSHIB 0x10
0x3FA5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FA7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "SetItem");                         syscalls.hs:37

0x3FA9  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3FAC  0x1A 0x04       PUSHIB 0x04
0x3FAE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FB0  0x37 0xEC 0x07  PUSHIW 0x07EC
0x3FB3  0x1A 0x07       PUSHIB 0x07
0x3FB5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FB7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "Clear");                           syscalls.hs:38

0x3FB9  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3FBC  0x1A 0x04       PUSHIB 0x04
0x3FBE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FC0  0x37 0x03 0x08  PUSHIW 0x0803
0x3FC3  0x1A 0x05       PUSHIB 0x05
0x3FC5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FC7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "Remove");                          syscalls.hs:39

0x3FC9  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3FCC  0x1A 0x04       PUSHIB 0x04
0x3FCE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FD0  0x37 0x08 0x08  PUSHIW 0x0808
0x3FD3  0x1A 0x06       PUSHIB 0x06
0x3FD5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FD7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("List", "Contains");                        syscalls.hs:40

0x3FD9  0x37 0xB3 0x02  PUSHIW 0x02B3
0x3FDC  0x1A 0x04       PUSHIB 0x04
0x3FDE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FE0  0x37 0x0E 0x08  PUSHIW 0x080E
0x3FE3  0x1A 0x08       PUSHIB 0x08
0x3FE5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FE7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "New");                       syscalls.hs:42

0x3FE9  0x37 0xA0 0x02  PUSHIW 0x02A0
0x3FEC  0x1A 0x0A       PUSHIB 0x0A
0x3FEE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FF0  0x37 0x82 0x07  PUSHIW 0x0782
0x3FF3  0x1A 0x03       PUSHIB 0x03
0x3FF5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x3FF7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "Count_Get");                 syscalls.hs:43

0x3FF9  0x37 0xA0 0x02  PUSHIW 0x02A0
0x3FFC  0x1A 0x0A       PUSHIB 0x0A
0x3FFE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4000  0x37 0xDC 0x07  PUSHIW 0x07DC
0x4003  0x1A 0x09       PUSHIB 0x09
0x4005  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4007  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "Set");                       syscalls.hs:44

0x4009  0x37 0xA0 0x02  PUSHIW 0x02A0
0x400C  0x1A 0x0A       PUSHIB 0x0A
0x400E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4010  0x37 0x89 0x03  PUSHIW 0x0389
0x4013  0x1A 0x03       PUSHIB 0x03
0x4015  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4017  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "Contains");                  syscalls.hs:45

0x4019  0x37 0xA0 0x02  PUSHIW 0x02A0
0x401C  0x1A 0x0A       PUSHIB 0x0A
0x401E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4020  0x37 0x0E 0x08  PUSHIW 0x080E
0x4023  0x1A 0x08       PUSHIB 0x08
0x4025  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4027  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "Get");                       syscalls.hs:46

0x4029  0x37 0xA0 0x02  PUSHIW 0x02A0
0x402C  0x1A 0x0A       PUSHIB 0x0A
0x402E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4030  0x37 0x4B 0x03  PUSHIW 0x034B
0x4033  0x1A 0x03       PUSHIB 0x03
0x4035  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4037  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "Next");                      syscalls.hs:47

0x4039  0x37 0xA0 0x02  PUSHIW 0x02A0
0x403C  0x1A 0x0A       PUSHIB 0x0A
0x403E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4040  0x37 0x16 0x08  PUSHIW 0x0816
0x4043  0x1A 0x04       PUSHIB 0x04
0x4045  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4047  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "Clear");                     syscalls.hs:48

0x4049  0x37 0xA0 0x02  PUSHIW 0x02A0
0x404C  0x1A 0x0A       PUSHIB 0x0A
0x404E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4050  0x37 0x03 0x08  PUSHIW 0x0803
0x4053  0x1A 0x05       PUSHIB 0x05
0x4055  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4057  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Pair", "New");                             syscalls.hs:50

0x4059  0x37 0xAA 0x02  PUSHIW 0x02AA
0x405C  0x1A 0x04       PUSHIB 0x04
0x405E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4060  0x37 0x82 0x07  PUSHIW 0x0782
0x4063  0x1A 0x03       PUSHIB 0x03
0x4065  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4067  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Pair", "Set");                             syscalls.hs:51

0x4069  0x37 0xAA 0x02  PUSHIW 0x02AA
0x406C  0x1A 0x04       PUSHIB 0x04
0x406E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4070  0x37 0x89 0x03  PUSHIW 0x0389
0x4073  0x1A 0x03       PUSHIB 0x03
0x4075  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4077  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Pair", "Key");                             syscalls.hs:52

0x4079  0x37 0xAA 0x02  PUSHIW 0x02AA
0x407C  0x1A 0x04       PUSHIB 0x04
0x407E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4080  0x37 0x1A 0x08  PUSHIW 0x081A
0x4083  0x1A 0x03       PUSHIB 0x03
0x4085  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4087  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Pair", "KeyType");                         syscalls.hs:53

0x4089  0x37 0xAA 0x02  PUSHIW 0x02AA
0x408C  0x1A 0x04       PUSHIB 0x04
0x408E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4090  0x37 0x1D 0x08  PUSHIW 0x081D
0x4093  0x1A 0x07       PUSHIB 0x07
0x4095  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4097  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Pair", "Value");                           syscalls.hs:54

0x4099  0x37 0xAA 0x02  PUSHIW 0x02AA
0x409C  0x1A 0x04       PUSHIB 0x04
0x409E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40A0  0x37 0x24 0x08  PUSHIW 0x0824
0x40A3  0x1A 0x05       PUSHIB 0x05
0x40A5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40A7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Pair", "ValueType");                       syscalls.hs:55

0x40A9  0x37 0xAA 0x02  PUSHIW 0x02AA
0x40AC  0x1A 0x04       PUSHIB 0x04
0x40AE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40B0  0x37 0x29 0x08  PUSHIW 0x0829
0x40B3  0x1A 0x09       PUSHIB 0x09
0x40B5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40B7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Variant", "Type");                         syscalls.hs:57

0x40B9  0x37 0xFC 0x07  PUSHIW 0x07FC
0x40BC  0x1A 0x07       PUSHIB 0x07
0x40BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40C0  0x37 0x40 0x05  PUSHIW 0x0540
0x40C3  0x1A 0x04       PUSHIB 0x04
0x40C5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40C7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Variant", "Box");                          syscalls.hs:58

0x40C9  0x37 0xFC 0x07  PUSHIW 0x07FC
0x40CC  0x1A 0x07       PUSHIB 0x07
0x40CE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40D0  0x37 0x32 0x08  PUSHIW 0x0832
0x40D3  0x1A 0x03       PUSHIB 0x03
0x40D5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40D7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Variant", "UnBox");                        syscalls.hs:59

0x40D9  0x37 0xFC 0x07  PUSHIW 0x07FC
0x40DC  0x1A 0x07       PUSHIB 0x07
0x40DE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40E0  0x37 0x35 0x08  PUSHIW 0x0835
0x40E3  0x1A 0x05       PUSHIB 0x05
0x40E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40E7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "Print");                         syscalls.hs:61

0x40E9  0x37 0x3A 0x08  PUSHIW 0x083A
0x40EC  0x1A 0x06       PUSHIB 0x06
0x40EE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40F0  0x37 0x40 0x08  PUSHIW 0x0840
0x40F3  0x1A 0x05       PUSHIB 0x05
0x40F5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x40F7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "PrintLn");                       syscalls.hs:62

0x40F9  0x37 0x3A 0x08  PUSHIW 0x083A
0x40FC  0x1A 0x06       PUSHIB 0x06
0x40FE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4100  0x37 0x45 0x08  PUSHIW 0x0845
0x4103  0x1A 0x07       PUSHIB 0x07
0x4105  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4107  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "Clear");                         syscalls.hs:63

0x4109  0x37 0x3A 0x08  PUSHIW 0x083A
0x410C  0x1A 0x06       PUSHIB 0x06
0x410E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4110  0x37 0x03 0x08  PUSHIW 0x0803
0x4113  0x1A 0x05       PUSHIB 0x05
0x4115  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4117  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "SetCursor");                     syscalls.hs:64

0x4119  0x37 0x3A 0x08  PUSHIW 0x083A
0x411C  0x1A 0x06       PUSHIB 0x06
0x411E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4120  0x37 0x4C 0x08  PUSHIW 0x084C
0x4123  0x1A 0x09       PUSHIB 0x09
0x4125  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4127  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "Columns_Get");                   syscalls.hs:65

0x4129  0x37 0x3A 0x08  PUSHIW 0x083A
0x412C  0x1A 0x06       PUSHIB 0x06
0x412E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4130  0x37 0x55 0x08  PUSHIW 0x0855
0x4133  0x1A 0x0B       PUSHIB 0x0B
0x4135  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4137  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "Rows_Get");                      syscalls.hs:66

0x4139  0x37 0x3A 0x08  PUSHIW 0x083A
0x413C  0x1A 0x06       PUSHIB 0x06
0x413E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4140  0x37 0x60 0x08  PUSHIW 0x0860
0x4143  0x1A 0x08       PUSHIB 0x08
0x4145  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4147  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "CursorX_Get");                   syscalls.hs:67

0x4149  0x37 0x3A 0x08  PUSHIW 0x083A
0x414C  0x1A 0x06       PUSHIB 0x06
0x414E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4150  0x37 0x68 0x08  PUSHIW 0x0868
0x4153  0x1A 0x0B       PUSHIB 0x0B
0x4155  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4157  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "CursorY_Get");                   syscalls.hs:68

0x4159  0x37 0x3A 0x08  PUSHIW 0x083A
0x415C  0x1A 0x06       PUSHIB 0x06
0x415E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4160  0x37 0x73 0x08  PUSHIW 0x0873
0x4163  0x1A 0x0B       PUSHIB 0x0B
0x4165  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4167  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "Suspend");                       syscalls.hs:69

0x4169  0x37 0x3A 0x08  PUSHIW 0x083A
0x416C  0x1A 0x06       PUSHIB 0x06
0x416E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4170  0x37 0x7E 0x08  PUSHIW 0x087E
0x4173  0x1A 0x07       PUSHIB 0x07
0x4175  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4177  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "Resume");                        syscalls.hs:70

0x4179  0x37 0x3A 0x08  PUSHIW 0x083A
0x417C  0x1A 0x06       PUSHIB 0x06
0x417E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4180  0x37 0x85 0x08  PUSHIW 0x0885
0x4183  0x1A 0x06       PUSHIB 0x06
0x4185  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4187  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Screen", "DrawChar");                      syscalls.hs:71

0x4189  0x37 0x3A 0x08  PUSHIW 0x083A
0x418C  0x1A 0x06       PUSHIB 0x06
0x418E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4190  0x37 0x8B 0x08  PUSHIW 0x088B
0x4193  0x1A 0x08       PUSHIB 0x08
0x4195  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4197  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Int", "ToFloat");                          syscalls.hs:73

0x4199  0x37 0x93 0x08  PUSHIW 0x0893
0x419C  0x1A 0x03       PUSHIB 0x03
0x419E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41A0  0x37 0x96 0x08  PUSHIW 0x0896
0x41A3  0x1A 0x07       PUSHIB 0x07
0x41A5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41A7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Int", "ToLong");                           syscalls.hs:74

0x41A9  0x37 0x93 0x08  PUSHIW 0x0893
0x41AC  0x1A 0x03       PUSHIB 0x03
0x41AE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41B0  0x37 0x9D 0x08  PUSHIW 0x089D
0x41B3  0x1A 0x06       PUSHIB 0x06
0x41B5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41B7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("UInt", "ToLong");                          syscalls.hs:76

0x41B9  0x37 0xA3 0x08  PUSHIW 0x08A3
0x41BC  0x1A 0x04       PUSHIB 0x04
0x41BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41C0  0x37 0x9D 0x08  PUSHIW 0x089D
0x41C3  0x1A 0x06       PUSHIB 0x06
0x41C5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41C7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("UInt", "ToInt");                           syscalls.hs:77

0x41C9  0x37 0xA3 0x08  PUSHIW 0x08A3
0x41CC  0x1A 0x04       PUSHIB 0x04
0x41CE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41D0  0x37 0xA7 0x08  PUSHIW 0x08A7
0x41D3  0x1A 0x05       PUSHIB 0x05
0x41D5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41D7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "ToString");                        syscalls.hs:79

0x41D9  0x37 0x9F 0x08  PUSHIW 0x089F
0x41DC  0x1A 0x04       PUSHIB 0x04
0x41DE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41E0  0x37 0xAC 0x08  PUSHIW 0x08AC
0x41E3  0x1A 0x08       PUSHIB 0x08
0x41E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41E7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "ToBytes");                         syscalls.hs:80

0x41E9  0x37 0x9F 0x08  PUSHIW 0x089F
0x41EC  0x1A 0x04       PUSHIB 0x04
0x41EE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41F0  0x37 0xB4 0x08  PUSHIW 0x08B4
0x41F3  0x1A 0x07       PUSHIB 0x07
0x41F5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x41F7  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "ToFloat");                         syscalls.hs:81

0x41F9  0x37 0x9F 0x08  PUSHIW 0x089F
0x41FC  0x1A 0x04       PUSHIB 0x04
0x41FE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4200  0x37 0x96 0x08  PUSHIW 0x0896
0x4203  0x1A 0x07       PUSHIB 0x07
0x4205  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4207  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "ToInt");                           syscalls.hs:82

0x4209  0x37 0x9F 0x08  PUSHIW 0x089F
0x420C  0x1A 0x04       PUSHIB 0x04
0x420E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4210  0x37 0xA7 0x08  PUSHIW 0x08A7
0x4213  0x1A 0x05       PUSHIB 0x05
0x4215  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4217  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "ToUInt");                          syscalls.hs:83

0x4219  0x37 0x9F 0x08  PUSHIW 0x089F
0x421C  0x1A 0x04       PUSHIB 0x04
0x421E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4220  0x37 0xBB 0x08  PUSHIW 0x08BB
0x4223  0x1A 0x06       PUSHIB 0x06
0x4225  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4227  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "New");                             syscalls.hs:84

0x4229  0x37 0x9F 0x08  PUSHIW 0x089F
0x422C  0x1A 0x04       PUSHIB 0x04
0x422E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4230  0x37 0x82 0x07  PUSHIW 0x0782
0x4233  0x1A 0x03       PUSHIB 0x03
0x4235  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4237  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "NewFromConstant");                 syscalls.hs:85

0x4239  0x37 0x9F 0x08  PUSHIW 0x089F
0x423C  0x1A 0x04       PUSHIB 0x04
0x423E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4240  0x37 0x82 0x07  PUSHIW 0x0782
0x4243  0x1A 0x0F       PUSHIB 0x0F
0x4245  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4247  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "Add");                             syscalls.hs:86

0x4249  0x37 0x9F 0x08  PUSHIW 0x089F
0x424C  0x1A 0x04       PUSHIB 0x04
0x424E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4250  0x37 0xC1 0x08  PUSHIW 0x08C1
0x4253  0x1A 0x03       PUSHIB 0x03
0x4255  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4257  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "Sub");                             syscalls.hs:87

0x4259  0x37 0x9F 0x08  PUSHIW 0x089F
0x425C  0x1A 0x04       PUSHIB 0x04
0x425E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4260  0x37 0xC5 0x07  PUSHIW 0x07C5
0x4263  0x1A 0x03       PUSHIB 0x03
0x4265  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4267  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "Div");                             syscalls.hs:88

0x4269  0x37 0x9F 0x08  PUSHIW 0x089F
0x426C  0x1A 0x04       PUSHIB 0x04
0x426E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4270  0x37 0xC4 0x08  PUSHIW 0x08C4
0x4273  0x1A 0x03       PUSHIB 0x03
0x4275  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4277  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "Mul");                             syscalls.hs:89

0x4279  0x37 0x9F 0x08  PUSHIW 0x089F
0x427C  0x1A 0x04       PUSHIB 0x04
0x427E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4280  0x37 0xC7 0x08  PUSHIW 0x08C7
0x4283  0x1A 0x03       PUSHIB 0x03
0x4285  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4287  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "Mod");                             syscalls.hs:90

0x4289  0x37 0x9F 0x08  PUSHIW 0x089F
0x428C  0x1A 0x04       PUSHIB 0x04
0x428E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4290  0x37 0xCA 0x08  PUSHIW 0x08CA
0x4293  0x1A 0x03       PUSHIB 0x03
0x4295  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4297  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "EQ");                              syscalls.hs:91

0x4299  0x37 0x9F 0x08  PUSHIW 0x089F
0x429C  0x1A 0x04       PUSHIB 0x04
0x429E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42A0  0x37 0x45 0x51  PUSHIW 0x5145
0x42A3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x42A5  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "LT");                              syscalls.hs:92

0x42A7  0x37 0x9F 0x08  PUSHIW 0x089F
0x42AA  0x1A 0x04       PUSHIB 0x04
0x42AC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42AE  0x37 0x4C 0x54  PUSHIW 0x544C
0x42B1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x42B3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "LE");                              syscalls.hs:93

0x42B5  0x37 0x9F 0x08  PUSHIW 0x089F
0x42B8  0x1A 0x04       PUSHIB 0x04
0x42BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42BC  0x37 0x4C 0x45  PUSHIW 0x454C
0x42BF  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x42C1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "GT");                              syscalls.hs:94

0x42C3  0x37 0x9F 0x08  PUSHIW 0x089F
0x42C6  0x1A 0x04       PUSHIB 0x04
0x42C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42CA  0x37 0x47 0x54  PUSHIW 0x5447
0x42CD  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x42CF  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "GE");                              syscalls.hs:95

0x42D1  0x37 0x9F 0x08  PUSHIW 0x089F
0x42D4  0x1A 0x04       PUSHIB 0x04
0x42D6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42D8  0x37 0x47 0x45  PUSHIW 0x4547
0x42DB  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x42DD  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Long", "Negate");                          syscalls.hs:96

0x42DF  0x37 0x9F 0x08  PUSHIW 0x089F
0x42E2  0x1A 0x04       PUSHIB 0x04
0x42E4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42E6  0x37 0xCD 0x08  PUSHIW 0x08CD
0x42E9  0x1A 0x06       PUSHIB 0x06
0x42EB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42ED  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "ToString");                       syscalls.hs:98

0x42EF  0x37 0x98 0x08  PUSHIW 0x0898
0x42F2  0x1A 0x05       PUSHIB 0x05
0x42F4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42F6  0x37 0xAC 0x08  PUSHIW 0x08AC
0x42F9  0x1A 0x08       PUSHIB 0x08
0x42FB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x42FD  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "ToBytes");                        syscalls.hs:99

0x42FF  0x37 0x98 0x08  PUSHIW 0x0898
0x4302  0x1A 0x05       PUSHIB 0x05
0x4304  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4306  0x37 0xB4 0x08  PUSHIW 0x08B4
0x4309  0x1A 0x07       PUSHIB 0x07
0x430B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x430D  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "New");                            syscalls.hs:100

0x430F  0x37 0x98 0x08  PUSHIW 0x0898
0x4312  0x1A 0x05       PUSHIB 0x05
0x4314  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4316  0x37 0x82 0x07  PUSHIW 0x0782
0x4319  0x1A 0x03       PUSHIB 0x03
0x431B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x431D  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "NewFromConstant");                syscalls.hs:101

0x431F  0x37 0x98 0x08  PUSHIW 0x0898
0x4322  0x1A 0x05       PUSHIB 0x05
0x4324  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4326  0x37 0x82 0x07  PUSHIW 0x0782
0x4329  0x1A 0x0F       PUSHIB 0x0F
0x432B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x432D  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "Add");                            syscalls.hs:102

0x432F  0x37 0x98 0x08  PUSHIW 0x0898
0x4332  0x1A 0x05       PUSHIB 0x05
0x4334  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4336  0x37 0xC1 0x08  PUSHIW 0x08C1
0x4339  0x1A 0x03       PUSHIB 0x03
0x433B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x433D  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "Sub");                            syscalls.hs:103

0x433F  0x37 0x98 0x08  PUSHIW 0x0898
0x4342  0x1A 0x05       PUSHIB 0x05
0x4344  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4346  0x37 0xC5 0x07  PUSHIW 0x07C5
0x4349  0x1A 0x03       PUSHIB 0x03
0x434B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x434D  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "Div");                            syscalls.hs:104

0x434F  0x37 0x98 0x08  PUSHIW 0x0898
0x4352  0x1A 0x05       PUSHIB 0x05
0x4354  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4356  0x37 0xC4 0x08  PUSHIW 0x08C4
0x4359  0x1A 0x03       PUSHIB 0x03
0x435B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x435D  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "Mul");                            syscalls.hs:105

0x435F  0x37 0x98 0x08  PUSHIW 0x0898
0x4362  0x1A 0x05       PUSHIB 0x05
0x4364  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4366  0x37 0xC7 0x08  PUSHIW 0x08C7
0x4369  0x1A 0x03       PUSHIB 0x03
0x436B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x436D  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "EQ");                             syscalls.hs:106

0x436F  0x37 0x98 0x08  PUSHIW 0x0898
0x4372  0x1A 0x05       PUSHIB 0x05
0x4374  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4376  0x37 0x45 0x51  PUSHIW 0x5145
0x4379  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x437B  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "LT");                             syscalls.hs:107

0x437D  0x37 0x98 0x08  PUSHIW 0x0898
0x4380  0x1A 0x05       PUSHIB 0x05
0x4382  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4384  0x37 0x4C 0x54  PUSHIW 0x544C
0x4387  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4389  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "LE");                             syscalls.hs:108

0x438B  0x37 0x98 0x08  PUSHIW 0x0898
0x438E  0x1A 0x05       PUSHIB 0x05
0x4390  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4392  0x37 0x4C 0x45  PUSHIW 0x454C
0x4395  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x4397  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "GT");                             syscalls.hs:109

0x4399  0x37 0x98 0x08  PUSHIW 0x0898
0x439C  0x1A 0x05       PUSHIB 0x05
0x439E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43A0  0x37 0x47 0x54  PUSHIW 0x5447
0x43A3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x43A5  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Float", "GE");                             syscalls.hs:110

0x43A7  0x37 0x98 0x08  PUSHIW 0x0898
0x43AA  0x1A 0x05       PUSHIB 0x05
0x43AC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43AE  0x37 0x47 0x45  PUSHIW 0x4547
0x43B1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x43B3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Time", "Millis_Get");                      syscalls.hs:112

0x43B5  0x37 0xD3 0x08  PUSHIW 0x08D3
0x43B8  0x1A 0x04       PUSHIB 0x04
0x43BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43BC  0x37 0xD7 0x08  PUSHIW 0x08D7
0x43BF  0x1A 0x0A       PUSHIB 0x0A
0x43C1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43C3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Time", "Micros_Get");                      syscalls.hs:113

0x43C5  0x37 0xD3 0x08  PUSHIW 0x08D3
0x43C8  0x1A 0x04       PUSHIB 0x04
0x43CA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43CC  0x37 0xE1 0x08  PUSHIW 0x08E1
0x43CF  0x1A 0x0A       PUSHIB 0x0A
0x43D1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43D3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "Arguments_Get");                 syscalls.hs:115

0x43D5  0x37 0xEB 0x08  PUSHIW 0x08EB
0x43D8  0x1A 0x06       PUSHIB 0x06
0x43DA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43DC  0x37 0xF1 0x08  PUSHIW 0x08F1
0x43DF  0x1A 0x0D       PUSHIB 0x0D
0x43E1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43E3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "CurrentDirectory_Get");

0x43E5  0x37 0xEB 0x08  PUSHIW 0x08EB
0x43E8  0x1A 0x06       PUSHIB 0x06
0x43EA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43EC  0x37 0xFE 0x08  PUSHIW 0x08FE
0x43EF  0x1A 0x14       PUSHIB 0x14
0x43F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43F3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "CurrentDirectory_Set");

0x43F5  0x37 0xEB 0x08  PUSHIW 0x08EB
0x43F8  0x1A 0x06       PUSHIB 0x06
0x43FA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x43FC  0x37 0x12 0x09  PUSHIW 0x0912
0x43FF  0x1A 0x14       PUSHIB 0x14
0x4401  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4403  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "Beep");                          syscalls.hs:118

0x4405  0x37 0xEB 0x08  PUSHIW 0x08EB
0x4408  0x1A 0x06       PUSHIB 0x06
0x440A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x440C  0x37 0x26 0x09  PUSHIW 0x0926
0x440F  0x1A 0x04       PUSHIB 0x04
0x4411  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4413  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "Execute");                       syscalls.hs:119

0x4415  0x37 0xEB 0x08  PUSHIW 0x08EB
0x4418  0x1A 0x06       PUSHIB 0x06
0x441A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x441C  0x37 0x2A 0x09  PUSHIW 0x092A
0x441F  0x1A 0x07       PUSHIB 0x07
0x4421  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4423  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "RegisterObject");                syscalls.hs:120

0x4425  0x37 0xEB 0x08  PUSHIW 0x08EB
0x4428  0x1A 0x06       PUSHIB 0x06
0x442A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x442C  0x37 0x31 0x09  PUSHIW 0x0931
0x442F  0x1A 0x0E       PUSHIB 0x0E
0x4431  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4433  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "Exists");                          syscalls.hs:122

0x4435  0x37 0x3F 0x09  PUSHIW 0x093F
0x4438  0x1A 0x04       PUSHIB 0x04
0x443A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x443C  0x37 0x43 0x09  PUSHIW 0x0943
0x443F  0x1A 0x06       PUSHIB 0x06
0x4441  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4443  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "New");                             syscalls.hs:123

0x4445  0x37 0x3F 0x09  PUSHIW 0x093F
0x4448  0x1A 0x04       PUSHIB 0x04
0x444A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x444C  0x37 0x82 0x07  PUSHIW 0x0782
0x444F  0x1A 0x03       PUSHIB 0x03
0x4451  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4453  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "Open");                            syscalls.hs:124

0x4455  0x37 0x3F 0x09  PUSHIW 0x093F
0x4458  0x1A 0x04       PUSHIB 0x04
0x445A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x445C  0x37 0x49 0x09  PUSHIW 0x0949
0x445F  0x1A 0x04       PUSHIB 0x04
0x4461  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4463  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "Create");                          syscalls.hs:125

0x4465  0x37 0x3F 0x09  PUSHIW 0x093F
0x4468  0x1A 0x04       PUSHIB 0x04
0x446A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x446C  0x37 0x4D 0x09  PUSHIW 0x094D
0x446F  0x1A 0x06       PUSHIB 0x06
0x4471  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4473  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "ReadLine");                        syscalls.hs:126

0x4475  0x37 0x3F 0x09  PUSHIW 0x093F
0x4478  0x1A 0x04       PUSHIB 0x04
0x447A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x447C  0x37 0x53 0x09  PUSHIW 0x0953
0x447F  0x1A 0x08       PUSHIB 0x08
0x4481  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4483  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "Read");                            syscalls.hs:127

0x4485  0x37 0x3F 0x09  PUSHIW 0x093F
0x4488  0x1A 0x04       PUSHIB 0x04
0x448A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x448C  0x37 0x53 0x09  PUSHIW 0x0953
0x448F  0x1A 0x04       PUSHIB 0x04
0x4491  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4493  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "IsValid");                         syscalls.hs:128

0x4495  0x37 0x3F 0x09  PUSHIW 0x093F
0x4498  0x1A 0x04       PUSHIB 0x04
0x449A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x449C  0x37 0x5B 0x09  PUSHIW 0x095B
0x449F  0x1A 0x07       PUSHIB 0x07
0x44A1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44A3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "Append");                          syscalls.hs:129

0x44A5  0x37 0x3F 0x09  PUSHIW 0x093F
0x44A8  0x1A 0x04       PUSHIB 0x04
0x44AA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44AC  0x37 0x9C 0x07  PUSHIW 0x079C
0x44AF  0x1A 0x06       PUSHIB 0x06
0x44B1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44B3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "Flush");                           syscalls.hs:130

0x44B5  0x37 0x3F 0x09  PUSHIW 0x093F
0x44B8  0x1A 0x04       PUSHIB 0x04
0x44BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44BC  0x37 0x62 0x09  PUSHIW 0x0962
0x44BF  0x1A 0x05       PUSHIB 0x05
0x44C1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44C3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "Delete");                          syscalls.hs:131

0x44C5  0x37 0x3F 0x09  PUSHIW 0x093F
0x44C8  0x1A 0x04       PUSHIB 0x04
0x44CA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44CC  0x37 0x67 0x09  PUSHIW 0x0967
0x44CF  0x1A 0x06       PUSHIB 0x06
0x44D1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44D3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("File", "GetSize");                         syscalls.hs:132

0x44D5  0x37 0x3F 0x09  PUSHIW 0x093F
0x44D8  0x1A 0x04       PUSHIB 0x04
0x44DA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44DC  0x37 0x6D 0x09  PUSHIW 0x096D
0x44DF  0x1A 0x07       PUSHIB 0x07
0x44E1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44E3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "Exists");                     syscalls.hs:134

0x44E5  0x37 0x05 0x09  PUSHIW 0x0905
0x44E8  0x1A 0x09       PUSHIB 0x09
0x44EA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44EC  0x37 0x43 0x09  PUSHIW 0x0943
0x44EF  0x1A 0x06       PUSHIB 0x06
0x44F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44F3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "New");                        syscalls.hs:135

0x44F5  0x37 0x05 0x09  PUSHIW 0x0905
0x44F8  0x1A 0x09       PUSHIB 0x09
0x44FA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x44FC  0x37 0x82 0x07  PUSHIW 0x0782
0x44FF  0x1A 0x03       PUSHIB 0x03
0x4501  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4503  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "IsValid");                    syscalls.hs:136

0x4505  0x37 0x05 0x09  PUSHIW 0x0905
0x4508  0x1A 0x09       PUSHIB 0x09
0x450A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x450C  0x37 0x5B 0x09  PUSHIW 0x095B
0x450F  0x1A 0x07       PUSHIB 0x07
0x4511  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4513  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "Open");                       syscalls.hs:137

0x4515  0x37 0x05 0x09  PUSHIW 0x0905
0x4518  0x1A 0x09       PUSHIB 0x09
0x451A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x451C  0x37 0x49 0x09  PUSHIW 0x0949
0x451F  0x1A 0x04       PUSHIB 0x04
0x4521  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4523  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "GetDirectoryCount");

0x4525  0x37 0x05 0x09  PUSHIW 0x0905
0x4528  0x1A 0x09       PUSHIB 0x09
0x452A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x452C  0x37 0x74 0x09  PUSHIW 0x0974
0x452F  0x1A 0x11       PUSHIB 0x11
0x4531  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4533  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "GetFileCount");               syscalls.hs:139

0x4535  0x37 0x05 0x09  PUSHIW 0x0905
0x4538  0x1A 0x09       PUSHIB 0x09
0x453A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x453C  0x37 0x85 0x09  PUSHIW 0x0985
0x453F  0x1A 0x0C       PUSHIB 0x0C
0x4541  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4543  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "GetFile");                    syscalls.hs:140

0x4545  0x37 0x05 0x09  PUSHIW 0x0905
0x4548  0x1A 0x09       PUSHIB 0x09
0x454A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x454C  0x37 0x85 0x09  PUSHIW 0x0985
0x454F  0x1A 0x07       PUSHIB 0x07
0x4551  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4553  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Directory", "GetDirectory");               syscalls.hs:141

0x4555  0x37 0x05 0x09  PUSHIW 0x0905
0x4558  0x1A 0x09       PUSHIB 0x09
0x455A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x455C  0x37 0x74 0x09  PUSHIW 0x0974
0x455F  0x1A 0x0C       PUSHIB 0x0C
0x4561  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4563  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "ReadKey");                     syscalls.hs:143

0x4565  0x37 0x91 0x09  PUSHIW 0x0991
0x4568  0x1A 0x08       PUSHIB 0x08
0x456A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x456C  0x37 0x99 0x09  PUSHIW 0x0999
0x456F  0x1A 0x07       PUSHIB 0x07
0x4571  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4573  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "IsAvailable_Get");             syscalls.hs:144

0x4575  0x37 0x91 0x09  PUSHIW 0x0991
0x4578  0x1A 0x08       PUSHIB 0x08
0x457A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x457C  0x37 0xA0 0x09  PUSHIW 0x09A0
0x457F  0x1A 0x0F       PUSHIB 0x0F
0x4581  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4583  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "ToKey");                       syscalls.hs:145

0x4585  0x37 0x91 0x09  PUSHIW 0x0991
0x4588  0x1A 0x08       PUSHIB 0x08
0x458A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x458C  0x37 0xAF 0x09  PUSHIW 0x09AF
0x458F  0x1A 0x05       PUSHIB 0x05
0x4591  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4593  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickX_Get");                  syscalls.hs:147

0x4595  0x37 0x91 0x09  PUSHIW 0x0991
0x4598  0x1A 0x08       PUSHIB 0x08
0x459A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x459C  0x37 0xB4 0x09  PUSHIW 0x09B4
0x459F  0x1A 0x0A       PUSHIB 0x0A
0x45A1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45A3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickY_Get");                  syscalls.hs:148

0x45A5  0x37 0x91 0x09  PUSHIW 0x0991
0x45A8  0x1A 0x08       PUSHIB 0x08
0x45AA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45AC  0x37 0xBE 0x09  PUSHIW 0x09BE
0x45AF  0x1A 0x0A       PUSHIB 0x0A
0x45B1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45B3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickUp_Get");                 syscalls.hs:149

0x45B5  0x37 0x91 0x09  PUSHIW 0x0991
0x45B8  0x1A 0x08       PUSHIB 0x08
0x45BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45BC  0x37 0xC8 0x09  PUSHIW 0x09C8
0x45BF  0x1A 0x0B       PUSHIB 0x0B
0x45C1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45C3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "ClickDouble_Get");             syscalls.hs:150

0x45C5  0x37 0x91 0x09  PUSHIW 0x0991
0x45C8  0x1A 0x08       PUSHIB 0x08
0x45CA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45CC  0x37 0xD3 0x09  PUSHIW 0x09D3
0x45CF  0x1A 0x0F       PUSHIB 0x0F
0x45D1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45D3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Keyboard", "ScrollDelta_Get");             syscalls.hs:151

0x45D5  0x37 0x91 0x09  PUSHIW 0x0991
0x45D8  0x1A 0x08       PUSHIB 0x08
0x45DA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45DC  0x37 0xE2 0x09  PUSHIW 0x09E2
0x45DF  0x1A 0x0F       PUSHIB 0x0F
0x45E1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45E3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Diagnostics", "OutputDebug");              syscalls.hs:153

0x45E5  0x37 0xF1 0x09  PUSHIW 0x09F1
0x45E8  0x1A 0x0B       PUSHIB 0x0B
0x45EA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45EC  0x37 0xFC 0x09  PUSHIW 0x09FC
0x45EF  0x1A 0x0B       PUSHIB 0x0B
0x45F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45F3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Diagnostics", "Assert");                   syscalls.hs:154

0x45F5  0x37 0xF1 0x09  PUSHIW 0x09F1
0x45F8  0x1A 0x0B       PUSHIB 0x0B
0x45FA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x45FC  0x37 0x07 0x0A  PUSHIW 0x0A07
0x45FF  0x1A 0x06       PUSHIB 0x06
0x4601  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4603  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Diagnostics", "Die");                      syscalls.hs:155

0x4605  0x37 0xF1 0x09  PUSHIW 0x09F1
0x4608  0x1A 0x0B       PUSHIB 0x0B
0x460A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x460C  0x37 0x0D 0x0A  PUSHIW 0x0A0D
0x460F  0x1A 0x03       PUSHIB 0x03
0x4611  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4613  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Diagnostics", "SetError");                 syscalls.hs:156

0x4615  0x37 0xF1 0x09  PUSHIW 0x09F1
0x4618  0x1A 0x0B       PUSHIB 0x0B
0x461A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x461C  0x37 0x10 0x0A  PUSHIW 0x0A10
0x461F  0x1A 0x08       PUSHIB 0x08
0x4621  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4623  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Types", "TypeOf");      // gives 'true' type (for instance, "variant" and not the boxed contents of a variant)

0x4625  0x37 0x18 0x0A  PUSHIW 0x0A18
0x4628  0x1A 0x05       PUSHIB 0x05
0x462A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x462C  0x37 0x1D 0x0A  PUSHIW 0x0A1D
0x462F  0x1A 0x06       PUSHIB 0x06
0x4631  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4633  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Types", "ValueTypeOf"); // if the type is a list, dictionary, pair or array, then return its value type

0x4635  0x37 0x18 0x0A  PUSHIW 0x0A18
0x4638  0x1A 0x05       PUSHIB 0x05
0x463A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x463C  0x37 0x23 0x0A  PUSHIW 0x0A23
0x463F  0x1A 0x0B       PUSHIB 0x0B
0x4641  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4643  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Types", "KeyTypeOf");   // if the type is a dictionary then return its key type

0x4645  0x37 0x18 0x0A  PUSHIW 0x0A18
0x4648  0x1A 0x05       PUSHIB 0x05
0x464A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x464C  0x37 0x2E 0x0A  PUSHIW 0x0A2E
0x464F  0x1A 0x09       PUSHIB 0x09
0x4651  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4653  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Types", "BoxTypeOf");   // regular "TypeOf" except for boxed variants where the boxed value type is returned (used for "typeof")

0x4655  0x37 0x18 0x0A  PUSHIW 0x0A18
0x4658  0x1A 0x05       PUSHIB 0x05
0x465A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x465C  0x37 0x37 0x0A  PUSHIW 0x0A37
0x465F  0x1A 0x09       PUSHIB 0x09
0x4661  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4663  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Types", "VerifyValueTypes");               syscalls.hs:162

0x4665  0x37 0x18 0x0A  PUSHIW 0x0A18
0x4668  0x1A 0x05       PUSHIB 0x05
0x466A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x466C  0x37 0x40 0x0A  PUSHIW 0x0A40
0x466F  0x1A 0x10       PUSHIB 0x10
0x4671  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4673  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "Build");                         syscalls.hs:164

0x4675  0x37 0x7C 0x07  PUSHIW 0x077C
0x4678  0x1A 0x06       PUSHIB 0x06
0x467A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x467C  0x37 0x50 0x0A  PUSHIW 0x0A50
0x467F  0x1A 0x05       PUSHIB 0x05
0x4681  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4683  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("WebServer", "Method_Get");                 syscalls.hs:166

0x4685  0x37 0x55 0x0A  PUSHIW 0x0A55
0x4688  0x1A 0x09       PUSHIB 0x09
0x468A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x468C  0x37 0x5E 0x0A  PUSHIW 0x0A5E
0x468F  0x1A 0x0A       PUSHIB 0x0A
0x4691  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4693  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("WebServer", "URL_Get");                    syscalls.hs:167

0x4695  0x37 0x55 0x0A  PUSHIW 0x0A55
0x4698  0x1A 0x09       PUSHIB 0x09
0x469A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x469C  0x37 0x68 0x0A  PUSHIW 0x0A68
0x469F  0x1A 0x07       PUSHIB 0x07
0x46A1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46A3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("WebServer", "Arguments_Get");              syscalls.hs:168

0x46A5  0x37 0x55 0x0A  PUSHIW 0x0A55
0x46A8  0x1A 0x09       PUSHIB 0x09
0x46AA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46AC  0x37 0xF1 0x08  PUSHIW 0x08F1
0x46AF  0x1A 0x0D       PUSHIB 0x0D
0x46B1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46B3  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("WebServer", "On");                         syscalls.hs:169

0x46B5  0x37 0x55 0x0A  PUSHIW 0x0A55
0x46B8  0x1A 0x09       PUSHIB 0x09
0x46BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46BC  0x37 0x4F 0x6E  PUSHIW 0x6E4F
0x46BF  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x46C1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("WebServer", "Send");                       syscalls.hs:170

0x46C3  0x37 0x55 0x0A  PUSHIW 0x0A55
0x46C6  0x1A 0x09       PUSHIB 0x09
0x46C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46CA  0x37 0x6F 0x0A  PUSHIW 0x0A6F
0x46CD  0x1A 0x04       PUSHIB 0x04
0x46CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46D1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("WebServer", "ClearHandlers");              syscalls.hs:171

0x46D3  0x37 0x55 0x0A  PUSHIW 0x0A55
0x46D6  0x1A 0x09       PUSHIB 0x09
0x46D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46DA  0x37 0x73 0x0A  PUSHIW 0x0A73
0x46DD  0x1A 0x0D       PUSHIB 0x0D
0x46DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46E1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("HttpClient", "GetRequest");                syscalls.hs:173

0x46E3  0x37 0x80 0x0A  PUSHIW 0x0A80
0x46E6  0x1A 0x0A       PUSHIB 0x0A
0x46E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46EA  0x37 0x8A 0x0A  PUSHIW 0x0A8A
0x46ED  0x1A 0x0A       PUSHIB 0x0A
0x46EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46F1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "Halted_Get");                   syscalls.hs:175

0x46F3  0x37 0x94 0x0A  PUSHIW 0x0A94
0x46F6  0x1A 0x07       PUSHIB 0x07
0x46F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x46FA  0x37 0x9B 0x0A  PUSHIW 0x0A9B
0x46FD  0x1A 0x0A       PUSHIB 0x0A
0x46FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4701  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "Halted_Set");                   syscalls.hs:176

0x4703  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4706  0x1A 0x07       PUSHIB 0x07
0x4708  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x470A  0x37 0xA5 0x0A  PUSHIW 0x0AA5
0x470D  0x1A 0x0A       PUSHIB 0x0A
0x470F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4711  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "Load");             // used by the windows shell debugger

0x4713  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4716  0x1A 0x07       PUSHIB 0x07
0x4718  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x471A  0x37 0xAF 0x0A  PUSHIW 0x0AAF
0x471D  0x1A 0x04       PUSHIB 0x04
0x471F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4721  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "BytesLoaded_Get");  // used by the windows shell debugger

0x4723  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4726  0x1A 0x07       PUSHIB 0x07
0x4728  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x472A  0x37 0xB3 0x0A  PUSHIW 0x0AB3
0x472D  0x1A 0x0F       PUSHIB 0x0F
0x472F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4731  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "Run");              // used by the windows shell debugger

0x4733  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4736  0x1A 0x07       PUSHIB 0x07
0x4738  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x473A  0x37 0x94 0x0A  PUSHIW 0x0A94
0x473D  0x1A 0x03       PUSHIB 0x03
0x473F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4741  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "SetVisibility");    // Windows shell debugger: debug child window visible?

0x4743  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4746  0x1A 0x07       PUSHIB 0x07
0x4748  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x474A  0x37 0xC2 0x0A  PUSHIW 0x0AC2
0x474D  0x1A 0x0D       PUSHIB 0x0D
0x474F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4751  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "SetStepping");                  syscalls.hs:181

0x4753  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4756  0x1A 0x07       PUSHIB 0x07
0x4758  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x475A  0x37 0xCF 0x0A  PUSHIW 0x0ACF
0x475D  0x1A 0x0B       PUSHIB 0x0B
0x475F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4761  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "StepInto");                     syscalls.hs:182

0x4763  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4766  0x1A 0x07       PUSHIB 0x07
0x4768  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x476A  0x37 0xDA 0x0A  PUSHIW 0x0ADA
0x476D  0x1A 0x08       PUSHIB 0x08
0x476F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4771  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "StepOver");                     syscalls.hs:183

0x4773  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4776  0x1A 0x07       PUSHIB 0x07
0x4778  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x477A  0x37 0xE2 0x0A  PUSHIW 0x0AE2
0x477D  0x1A 0x08       PUSHIB 0x08
0x477F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4781  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "StepRun");                      syscalls.hs:184

0x4783  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4786  0x1A 0x07       PUSHIB 0x07
0x4788  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x478A  0x37 0xEA 0x0A  PUSHIW 0x0AEA
0x478D  0x1A 0x07       PUSHIB 0x07
0x478F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4791  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "PC_Get");                       syscalls.hs:185

0x4793  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4796  0x1A 0x07       PUSHIB 0x07
0x4798  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x479A  0x37 0xF1 0x0A  PUSHIW 0x0AF1
0x479D  0x1A 0x06       PUSHIB 0x06
0x479F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47A1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "Waiting_Get");                  syscalls.hs:186

0x47A3  0x37 0x94 0x0A  PUSHIW 0x0A94
0x47A6  0x1A 0x07       PUSHIB 0x07
0x47A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47AA  0x37 0xF7 0x0A  PUSHIW 0x0AF7
0x47AD  0x1A 0x0B       PUSHIB 0x0B
0x47AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47B1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "ClearBreakpoints");             syscalls.hs:187

0x47B3  0x37 0x94 0x0A  PUSHIW 0x0A94
0x47B6  0x1A 0x07       PUSHIB 0x07
0x47B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47BA  0x37 0x02 0x0B  PUSHIW 0x0B02
0x47BD  0x1A 0x10       PUSHIB 0x10
0x47BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47C1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "ClearStatements");              syscalls.hs:188

0x47C3  0x37 0x94 0x0A  PUSHIW 0x0A94
0x47C6  0x1A 0x07       PUSHIB 0x07
0x47C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47CA  0x37 0x12 0x0B  PUSHIW 0x0B12
0x47CD  0x1A 0x0F       PUSHIB 0x0F
0x47CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47D1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "SetBreakpoint");                syscalls.hs:189

0x47D3  0x37 0x94 0x0A  PUSHIW 0x0A94
0x47D6  0x1A 0x07       PUSHIB 0x07
0x47D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47DA  0x37 0x21 0x0B  PUSHIW 0x0B21
0x47DD  0x1A 0x0D       PUSHIB 0x0D
0x47DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47E1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "SetStatement");                 syscalls.hs:190

0x47E3  0x37 0x94 0x0A  PUSHIW 0x0A94
0x47E6  0x1A 0x07       PUSHIB 0x07
0x47E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47EA  0x37 0x2E 0x0B  PUSHIW 0x0B2E
0x47ED  0x1A 0x0C       PUSHIB 0x0C
0x47EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47F1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "SP_Get");                       syscalls.hs:191

0x47F3  0x37 0x94 0x0A  PUSHIW 0x0A94
0x47F6  0x1A 0x07       PUSHIB 0x07
0x47F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x47FA  0x37 0x3A 0x0B  PUSHIW 0x0B3A
0x47FD  0x1A 0x06       PUSHIB 0x06
0x47FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4801  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "BP_Get");                       syscalls.hs:192

0x4803  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4806  0x1A 0x07       PUSHIB 0x07
0x4808  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x480A  0x37 0x40 0x0B  PUSHIW 0x0B40
0x480D  0x1A 0x06       PUSHIB 0x06
0x480F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4811  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "CSP_Get");                      syscalls.hs:193

0x4813  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4816  0x1A 0x07       PUSHIB 0x07
0x4818  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x481A  0x37 0x46 0x0B  PUSHIW 0x0B46
0x481D  0x1A 0x07       PUSHIB 0x07
0x481F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4821  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "GetStackWord");                 syscalls.hs:194

0x4823  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4826  0x1A 0x07       PUSHIB 0x07
0x4828  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x482A  0x37 0x4D 0x0B  PUSHIW 0x0B4D
0x482D  0x1A 0x0C       PUSHIB 0x0C
0x482F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4831  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "GetStackVariant");              syscalls.hs:195

0x4833  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4836  0x1A 0x07       PUSHIB 0x07
0x4838  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x483A  0x37 0x59 0x0B  PUSHIW 0x0B59
0x483D  0x1A 0x0F       PUSHIB 0x0F
0x483F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4841  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "GetStackType");                 syscalls.hs:196

0x4843  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4846  0x1A 0x07       PUSHIB 0x07
0x4848  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x484A  0x37 0x68 0x0B  PUSHIW 0x0B68
0x484D  0x1A 0x0C       PUSHIB 0x0C
0x484F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4851  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Runtime", "GetCallStackWord");             syscalls.hs:197

0x4853  0x37 0x94 0x0A  PUSHIW 0x0A94
0x4856  0x1A 0x07       PUSHIB 0x07
0x4858  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x485A  0x37 0x74 0x0B  PUSHIW 0x0B74
0x485D  0x1A 0x10       PUSHIB 0x10
0x485F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4861  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Serial", "Connect");                       syscalls.hs:199

0x4863  0x37 0x84 0x0B  PUSHIW 0x0B84
0x4866  0x1A 0x06       PUSHIB 0x06
0x4868  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x486A  0x37 0x8A 0x0B  PUSHIW 0x0B8A
0x486D  0x1A 0x07       PUSHIB 0x07
0x486F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4871  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Serial", "Close");                         syscalls.hs:200

0x4873  0x37 0x84 0x0B  PUSHIW 0x0B84
0x4876  0x1A 0x06       PUSHIB 0x06
0x4878  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x487A  0x37 0x91 0x0B  PUSHIW 0x0B91
0x487D  0x1A 0x05       PUSHIB 0x05
0x487F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4881  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Serial", "IsValid");                       syscalls.hs:201

0x4883  0x37 0x84 0x0B  PUSHIW 0x0B84
0x4886  0x1A 0x06       PUSHIB 0x06
0x4888  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x488A  0x37 0x5B 0x09  PUSHIW 0x095B
0x488D  0x1A 0x07       PUSHIB 0x07
0x488F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4891  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Serial", "IsAvailable_Get");               syscalls.hs:202

0x4893  0x37 0x84 0x0B  PUSHIW 0x0B84
0x4896  0x1A 0x06       PUSHIB 0x06
0x4898  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x489A  0x37 0xA0 0x09  PUSHIW 0x09A0
0x489D  0x1A 0x0F       PUSHIB 0x0F
0x489F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48A1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Serial", "ReadChar");                      syscalls.hs:203

0x48A3  0x37 0x84 0x0B  PUSHIW 0x0B84
0x48A6  0x1A 0x06       PUSHIB 0x06
0x48A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48AA  0x37 0x96 0x0B  PUSHIW 0x0B96
0x48AD  0x1A 0x08       PUSHIB 0x08
0x48AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48B1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Serial", "WriteChar");                     syscalls.hs:204

0x48B3  0x37 0x84 0x0B  PUSHIW 0x0B84
0x48B6  0x1A 0x06       PUSHIB 0x06
0x48B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48BA  0x37 0x9E 0x0B  PUSHIW 0x0B9E
0x48BD  0x1A 0x09       PUSHIB 0x09
0x48BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48C1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Hardware", "LED_Set");                     syscalls.hs:206

0x48C3  0x37 0xA7 0x0B  PUSHIW 0x0BA7
0x48C6  0x1A 0x08       PUSHIB 0x08
0x48C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48CA  0x37 0xAF 0x0B  PUSHIW 0x0BAF
0x48CD  0x1A 0x07       PUSHIB 0x07
0x48CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48D1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "ReadByte");                      syscalls.hs:208

0x48D3  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x48D6  0x1A 0x06       PUSHIB 0x06
0x48D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48DA  0x37 0xBC 0x0B  PUSHIW 0x0BBC
0x48DD  0x1A 0x08       PUSHIB 0x08
0x48DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48E1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "WriteByte");                     syscalls.hs:209

0x48E3  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x48E6  0x1A 0x06       PUSHIB 0x06
0x48E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48EA  0x37 0xC4 0x0B  PUSHIW 0x0BC4
0x48ED  0x1A 0x09       PUSHIB 0x09
0x48EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48F1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "Available");                     syscalls.hs:210

0x48F3  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x48F6  0x1A 0x06       PUSHIB 0x06
0x48F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x48FA  0x37 0xA2 0x09  PUSHIW 0x09A2
0x48FD  0x1A 0x09       PUSHIB 0x09
0x48FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4901  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "Maximum");                       syscalls.hs:211

0x4903  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x4906  0x1A 0x06       PUSHIB 0x06
0x4908  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x490A  0x37 0xCD 0x0B  PUSHIW 0x0BCD
0x490D  0x1A 0x07       PUSHIB 0x07
0x490F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4911  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "Allocate");                      syscalls.hs:212

0x4913  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x4916  0x1A 0x06       PUSHIB 0x06
0x4918  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x491A  0x37 0xD4 0x0B  PUSHIW 0x0BD4
0x491D  0x1A 0x08       PUSHIB 0x08
0x491F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4921  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "Free");                          syscalls.hs:213

0x4923  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x4926  0x1A 0x06       PUSHIB 0x06
0x4928  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x492A  0x37 0xDC 0x0B  PUSHIW 0x0BDC
0x492D  0x1A 0x04       PUSHIB 0x04
0x492F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4931  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "Trace_Set");                     syscalls.hs:215

0x4933  0x37 0xEB 0x08  PUSHIW 0x08EB
0x4936  0x1A 0x06       PUSHIB 0x06
0x4938  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x493A  0x37 0xE0 0x0B  PUSHIW 0x0BE0
0x493D  0x1A 0x09       PUSHIB 0x09
0x493F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4941  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "Trace_Get");                     syscalls.hs:216

0x4943  0x37 0xEB 0x08  PUSHIW 0x08EB
0x4946  0x1A 0x06       PUSHIB 0x06
0x4948  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x494A  0x37 0xE9 0x0B  PUSHIW 0x0BE9
0x494D  0x1A 0x09       PUSHIB 0x09
0x494F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4951  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Dictionary", "HashKey");                   syscalls.hs:218

0x4953  0x37 0xA0 0x02  PUSHIW 0x02A0
0x4956  0x1A 0x0A       PUSHIB 0x0A
0x4958  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x495A  0x37 0xF2 0x0B  PUSHIW 0x0BF2
0x495D  0x1A 0x07       PUSHIB 0x07
0x495F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4961  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Clipboard", "HasText_Get");                syscalls.hs:220

0x4963  0x37 0xF9 0x0B  PUSHIW 0x0BF9
0x4966  0x1A 0x09       PUSHIB 0x09
0x4968  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x496A  0x37 0x02 0x0C  PUSHIW 0x0C02
0x496D  0x1A 0x0B       PUSHIB 0x0B
0x496F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4971  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Clipboard", "GetText");                    syscalls.hs:221

0x4973  0x37 0xF9 0x0B  PUSHIW 0x0BF9
0x4976  0x1A 0x09       PUSHIB 0x09
0x4978  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x497A  0x37 0x0D 0x0C  PUSHIW 0x0C0D
0x497D  0x1A 0x07       PUSHIB 0x07
0x497F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4981  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Clipboard", "SetText");                    syscalls.hs:222

0x4983  0x37 0xF9 0x0B  PUSHIW 0x0BF9
0x4986  0x1A 0x09       PUSHIB 0x09
0x4988  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x498A  0x37 0x14 0x0C  PUSHIW 0x0C14
0x498D  0x1A 0x07       PUSHIB 0x07
0x498F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4991  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "BuildFront");                    syscalls.hs:224

0x4993  0x37 0x7C 0x07  PUSHIW 0x077C
0x4996  0x1A 0x06       PUSHIB 0x06
0x4998  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x499A  0x37 0x1B 0x0C  PUSHIW 0x0C1B
0x499D  0x1A 0x0A       PUSHIB 0x0A
0x499F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49A1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "ReadBit");                       syscalls.hs:226

0x49A3  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x49A6  0x1A 0x06       PUSHIB 0x06
0x49A8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49AA  0x37 0x25 0x0C  PUSHIW 0x0C25
0x49AD  0x1A 0x07       PUSHIB 0x07
0x49AF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49B1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Memory", "WriteBit");                      syscalls.hs:227

0x49B3  0x37 0xB6 0x0B  PUSHIW 0x0BB6
0x49B6  0x1A 0x06       PUSHIB 0x06
0x49B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49BA  0x37 0x2C 0x0C  PUSHIW 0x0C2C
0x49BD  0x1A 0x08       PUSHIB 0x08
0x49BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49C1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "ToUpper");                         syscalls.hs:229

0x49C3  0x37 0x98 0x07  PUSHIW 0x0798
0x49C6  0x1A 0x04       PUSHIB 0x04
0x49C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49CA  0x37 0x34 0x0C  PUSHIW 0x0C34
0x49CD  0x1A 0x07       PUSHIB 0x07
0x49CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49D1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "IsUpper");                         syscalls.hs:230

0x49D3  0x37 0x98 0x07  PUSHIW 0x0798
0x49D6  0x1A 0x04       PUSHIB 0x04
0x49D8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49DA  0x37 0x3B 0x0C  PUSHIW 0x0C3B
0x49DD  0x1A 0x07       PUSHIB 0x07
0x49DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49E1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "IsDigit");                         syscalls.hs:231

0x49E3  0x37 0x98 0x07  PUSHIW 0x0798
0x49E6  0x1A 0x04       PUSHIB 0x04
0x49E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49EA  0x37 0x42 0x0C  PUSHIW 0x0C42
0x49ED  0x1A 0x07       PUSHIB 0x07
0x49EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49F1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "IsLetterOrDigit");                 syscalls.hs:232

0x49F3  0x37 0x98 0x07  PUSHIW 0x0798
0x49F6  0x1A 0x04       PUSHIB 0x04
0x49F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x49FA  0x37 0x49 0x0C  PUSHIW 0x0C49
0x49FD  0x1A 0x0F       PUSHIB 0x0F
0x49FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A01  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "IsLower");                         syscalls.hs:233

0x4A03  0x37 0x98 0x07  PUSHIW 0x0798
0x4A06  0x1A 0x04       PUSHIB 0x04
0x4A08  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A0A  0x37 0x58 0x0C  PUSHIW 0x0C58
0x4A0D  0x1A 0x07       PUSHIB 0x07
0x4A0F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A11  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "ToDigit");                         syscalls.hs:234

0x4A13  0x37 0x98 0x07  PUSHIW 0x0798
0x4A16  0x1A 0x04       PUSHIB 0x04
0x4A18  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A1A  0x37 0x5F 0x0C  PUSHIW 0x0C5F
0x4A1D  0x1A 0x07       PUSHIB 0x07
0x4A1F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A21  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "ToHex");                           syscalls.hs:235

0x4A23  0x37 0x98 0x07  PUSHIW 0x0798
0x4A26  0x1A 0x04       PUSHIB 0x04
0x4A28  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A2A  0x37 0x66 0x0C  PUSHIW 0x0C66
0x4A2D  0x1A 0x05       PUSHIB 0x05
0x4A2F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A31  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "IsHexDigit");                      syscalls.hs:236

0x4A33  0x37 0x98 0x07  PUSHIW 0x0798
0x4A36  0x1A 0x04       PUSHIB 0x04
0x4A38  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A3A  0x37 0x6B 0x0C  PUSHIW 0x0C6B
0x4A3D  0x1A 0x0A       PUSHIB 0x0A
0x4A3F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A41  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Char", "ToLower");                         syscalls.hs:237

0x4A43  0x37 0x98 0x07  PUSHIW 0x0798
0x4A46  0x1A 0x04       PUSHIB 0x04
0x4A48  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A4A  0x37 0x75 0x0C  PUSHIW 0x0C75
0x4A4D  0x1A 0x07       PUSHIB 0x07
0x4A4F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A51  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "StartsWith");                    syscalls.hs:239

0x4A53  0x37 0x7C 0x07  PUSHIW 0x077C
0x4A56  0x1A 0x06       PUSHIB 0x06
0x4A58  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A5A  0x37 0x7C 0x0C  PUSHIW 0x0C7C
0x4A5D  0x1A 0x0A       PUSHIB 0x0A
0x4A5F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A61  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "Contains");                      syscalls.hs:240

0x4A63  0x37 0x7C 0x07  PUSHIW 0x077C
0x4A66  0x1A 0x06       PUSHIB 0x06
0x4A68  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A6A  0x37 0x0E 0x08  PUSHIW 0x080E
0x4A6D  0x1A 0x08       PUSHIB 0x08
0x4A6F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A71  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("String", "IndexOf");                       syscalls.hs:241

0x4A73  0x37 0x7C 0x07  PUSHIW 0x077C
0x4A76  0x1A 0x06       PUSHIB 0x06
0x4A78  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A7A  0x37 0x86 0x0C  PUSHIW 0x0C86
0x4A7D  0x1A 0x07       PUSHIB 0x07
0x4A7F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A81  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "Warp_Set");                      syscalls.hs:243

0x4A83  0x37 0xEB 0x08  PUSHIW 0x08EB
0x4A86  0x1A 0x06       PUSHIB 0x06
0x4A88  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A8A  0x37 0x8D 0x0C  PUSHIW 0x0C8D
0x4A8D  0x1A 0x08       PUSHIB 0x08
0x4A8F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A91  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("System", "Warp_Get");                      syscalls.hs:244

0x4A93  0x37 0xEB 0x08  PUSHIW 0x08EB
0x4A96  0x1A 0x06       PUSHIB 0x06
0x4A98  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4A9A  0x37 0x95 0x0C  PUSHIW 0x0C95
0x4A9D  0x1A 0x08       PUSHIB 0x08
0x4A9F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4AA1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // addEntry("Time", "Delay");                           syscalls.hs:246

0x4AA3  0x37 0xD3 0x08  PUSHIW 0x08D3
0x4AA6  0x1A 0x04       PUSHIB 0x04
0x4AA8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4AAA  0x37 0x9D 0x0C  PUSHIW 0x0C9D
0x4AAD  0x1A 0x05       PUSHIB 0x05
0x4AAF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4AB1  0x2C 0x84       CALLB 0x84     // SysCalls.addEntry

                        // }                                                    syscalls.hs:247

0x4AB3  0x4A            RET0


// /source/compiler/tokens/syscalls.hs:250
// ####  SysCalls.TryParseSysCall(..)  ####                                     0x0086


                        // bool success = false;                                syscalls.hs:251

0x4AB4  0x5F 0x01       ENTERB 0x01

                        // if (syscalls.Contains(name))                         syscalls.hs:252

0x4AB6  0x20 0x3E       PUSHGLOBALB 0x3E
0x4AB8  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4ABA  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x4ABC  0x2E 0x0C       JZB 0x4AC8 (+12)

                        // index = syscalls[name];                              syscalls.hs:254

0x4ABE  0x20 0x3E       PUSHGLOBALB 0x3E
0x4AC0  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4AC2  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4AC4  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // success = true;                                      syscalls.hs:255

0x4AC6  0x45            PUSHI1
0x4AC7  0x4C            POPLOCALB00

                        // return success;                                      syscalls.hs:257

0x4AC8  0x4E            PUSHLOCALB00
0x4AC9  0x2B 0x06       RETRETB 0x06


// /source/compiler/tokens/syscalls.hs:6
// ####  SysCalls.addEntry(..)  ####                                            0x0084

0x4ACB  0x49            ENTER

                        // syscalls[unitName + '.' + methodName] = byte(syscalls.Count);

0x4ACC  0x20 0x3E       PUSHGLOBALB 0x3E
0x4ACE  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x4AD0  0x1A 0x2E       PUSHIB 0x2E
0x4AD2  0x25 0x03       SYSCALL1 0x03  // String.Append
0x4AD4  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4AD6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4AD8  0x20 0x3E       PUSHGLOBALB 0x3E
0x4ADA  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x4ADC  0x51 0x03       CAST 0x03
0x4ADE  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    syscalls.hs:8

0x4AE0  0x2A 0x04       RETB 0x04


// /source/compiler/directives.hs:12
// ####  Directives.New(..)  ####                                               0x00CE

0x4AE2  0x49            ENTER

                        // defineNesting.Clear();                               directives.hs:13

0x4AE3  0x20 0x96       PUSHGLOBALB 0x96
0x4AE5  0x24 0x16       SYSCALL0 0x16  // List.Clear

                        // }                                                    directives.hs:14

0x4AE7  0x4A            RET0


// /source/compiler/directives.hs:16
// ####  Directives.IsStillOpen_Get(..)  ####                                   0x00CF

0x4AE8  0x49            ENTER

                        // bool IsStillOpen { get { return (defineNesting.Length > 0); }}

0x4AE9  0x20 0x96       PUSHGLOBALB 0x96
0x4AEB  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4AED  0x44            PUSHI0
0x4AEE  0x07            GT
0x4AEF  0x4A            RET0


// /source/compiler/directives.hs:68
// ####  Directives.Declaration(..)  ####                                       0x00D3

0x4AF0  0x49            ENTER

                        // <string,string> currentToken = Parser.CurrentToken;

0x4AF1  0x1A 0x0F       PUSHIB 0x0F
0x4AF3  0x1A 0x0F       PUSHIB 0x0F
0x4AF5  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x4AF7  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x4AF9  0x5D            POPCOPYLOCALB00

                        // string ln = currentToken["line"];                    directives.hs:70

0x4AFA  0x24 0x02       SYSCALL0 0x02  // String.New
0x4AFC  0x4E            PUSHLOCALB00
0x4AFD  0x37 0xD2 0x03  PUSHIW 0x03D2
0x4B00  0x1A 0x04       PUSHIB 0x04
0x4B02  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B04  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4B06  0x5E            POPCOPYLOCALB02

                        // Parser.Advance();                                    directives.hs:73

0x4B07  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // Parser.Consume(HopperToken.Identifier, "identifier expected");

0x4B09  0x1A 0x03       PUSHIB 0x03
0x4B0B  0x37 0x18 0x01  PUSHIW 0x0118
0x4B0E  0x1A 0x13       PUSHIB 0x13
0x4B10  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B12  0x2C 0x7E       CALLB 0x7E     // Parser.Consume

                        // if (Parser.HadError)                                 directives.hs:76

0x4B14  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x4B16  0x2E 0x04       JZB 0x4B1A (+4)

                        // break;                                               directives.hs:78

0x4B18  0x2A 0x04       RETB 0x04

                        // <string,string> idToken = Parser.PreviousToken;

0x4B1A  0x1A 0x0F       PUSHIB 0x0F
0x4B1C  0x1A 0x0F       PUSHIB 0x0F
0x4B1E  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x4B20  0x2C 0x72       CALLB 0x72     // Parser.PreviousToken_Get
0x4B22  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (idToken["line"] != ln)                           directives.hs:81

0x4B24  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4B26  0x37 0xD2 0x03  PUSHIW 0x03D2
0x4B29  0x1A 0x04       PUSHIB 0x04
0x4B2B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B2D  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4B2F  0x4F            PUSHLOCALB02
0x4B30  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4B32  0x2E 0x0F       JZB 0x4B41 (+15)

                        // Parser.ErrorAtCurrent("preprocessor directive must be on one line");

0x4B34  0x37 0xA2 0x0C  PUSHIW 0x0CA2
0x4B37  0x1A 0x2A       PUSHIB 0x2A
0x4B39  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B3B  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               directives.hs:84

0x4B3D  0x28 0x02       DECSP 0x02
0x4B3F  0x2A 0x04       RETB 0x04

                        // string value = "true"; // "defined"                  directives.hs:86

0x4B41  0x24 0x02       SYSCALL0 0x02  // String.New
0x4B43  0x37 0x45 0x07  PUSHIW 0x0745
0x4B46  0x1A 0x04       PUSHIB 0x04
0x4B48  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B4A  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // <string,string> nextToken = Parser.CurrentToken;

0x4B4C  0x1A 0x0F       PUSHIB 0x0F
0x4B4E  0x1A 0x0F       PUSHIB 0x0F
0x4B50  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x4B52  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x4B54  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (nextToken["line"] == ln)                         directives.hs:88

0x4B56  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4B58  0x37 0xD2 0x03  PUSHIW 0x03D2
0x4B5B  0x1A 0x04       PUSHIB 0x04
0x4B5D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B5F  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4B61  0x4F            PUSHLOCALB02
0x4B62  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4B64  0x2F 0x0F       JNZB 0x4B73 (+15)

                        // value = expression(ln);                              directives.hs:91

0x4B66  0x4F            PUSHLOCALB02
0x4B67  0x2C 0xD2       CALLB 0xD2     // Directives.expression
0x4B69  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if (Parser.HadError)                                 directives.hs:92

0x4B6B  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x4B6D  0x2E 0x06       JZB 0x4B73 (+6)

                        // break;                                               directives.hs:94

0x4B6F  0x28 0x06       DECSP 0x06
0x4B71  0x2A 0x04       RETB 0x04

                        // if (Symbols.DefineExists(idToken["lexeme"]))

0x4B73  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4B75  0x37 0x5B 0x01  PUSHIW 0x015B
0x4B78  0x1A 0x06       PUSHIB 0x06
0x4B7A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B7C  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4B7E  0x2C 0x92       CALLB 0x92     // Symbols.DefineExists
0x4B80  0x2E 0x0F       JZB 0x4B8F (+15)

                        // Parser.ErrorAtCurrent("preprocessor symbol can only be defined once");

0x4B82  0x37 0xCC 0x0C  PUSHIW 0x0CCC
0x4B85  0x1A 0x2C       PUSHIB 0x2C
0x4B87  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B89  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               directives.hs:100

0x4B8B  0x28 0x06       DECSP 0x06
0x4B8D  0x2A 0x04       RETB 0x04

                        // Symbols.AddDefine(idToken["lexeme"], value);

0x4B8F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4B91  0x37 0x5B 0x01  PUSHIW 0x015B
0x4B94  0x1A 0x06       PUSHIB 0x06
0x4B96  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4B98  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4B9A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4B9C  0x2C 0x94       CALLB 0x94     // Symbols.AddDefine

                        // break;                                               directives.hs:103

0x4B9E  0x28 0x06       DECSP 0x06
0x4BA0  0x2A 0x04       RETB 0x04


// /source/compiler/directives.hs:108
// ####  Directives.Directive(..)  ####                                         0x00D4

0x4BA2  0x49            ENTER

                        // <string,string> currentToken = Parser.CurrentToken;

0x4BA3  0x1A 0x0F       PUSHIB 0x0F
0x4BA5  0x1A 0x0F       PUSHIB 0x0F
0x4BA7  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x4BA9  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x4BAB  0x5D            POPCOPYLOCALB00

                        // string ln = currentToken["line"];                    directives.hs:110

0x4BAC  0x24 0x02       SYSCALL0 0x02  // String.New
0x4BAE  0x4E            PUSHLOCALB00
0x4BAF  0x37 0xD2 0x03  PUSHIW 0x03D2
0x4BB2  0x1A 0x04       PUSHIB 0x04
0x4BB4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4BB6  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4BB8  0x5E            POPCOPYLOCALB02

                        // string directive = currentToken["lexeme"];           directives.hs:111

0x4BB9  0x24 0x02       SYSCALL0 0x02  // String.New
0x4BBB  0x4E            PUSHLOCALB00
0x4BBC  0x37 0x5B 0x01  PUSHIW 0x015B
0x4BBF  0x1A 0x06       PUSHIB 0x06
0x4BC1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4BC3  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4BC5  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance(); // #ifdef, etc                     directives.hs:114

0x4BC7  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // if (directive == "#ifdef")                           directives.hs:115

0x4BC9  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4BCB  0x37 0xF8 0x0C  PUSHIW 0x0CF8
0x4BCE  0x1A 0x06       PUSHIB 0x06
0x4BD0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4BD2  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4BD4  0x2F 0x12       JNZB 0x4BE6 (+18)

                        // bool value = defined(ln);                            directives.hs:117

0x4BD6  0x44            PUSHI0
0x4BD7  0x4F            PUSHLOCALB02
0x4BD8  0x2C 0xD1       CALLB 0xD1     // Directives.defined
0x4BDA  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // defineNesting.Append(value);                         directives.hs:118

0x4BDC  0x20 0x96       PUSHGLOBALB 0x96
0x4BDE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4BE0  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    directives.hs:119

0x4BE2  0x28 0x02       DECSP 0x02
0x4BE4  0x2A 0x06       RETB 0x06

                        // else if (directive == "#ifndef")                     directives.hs:120

0x4BE6  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4BE8  0x37 0xFE 0x0C  PUSHIW 0x0CFE
0x4BEB  0x1A 0x07       PUSHIB 0x07
0x4BED  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4BEF  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4BF1  0x2F 0x13       JNZB 0x4C04 (+19)

                        // bool value = !defined(ln);                           directives.hs:122

0x4BF3  0x44            PUSHI0
0x4BF4  0x4F            PUSHLOCALB02
0x4BF5  0x2C 0xD1       CALLB 0xD1     // Directives.defined
0x4BF7  0x41            BOOLNOT
0x4BF8  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // defineNesting.Append(value);                         directives.hs:123

0x4BFA  0x20 0x96       PUSHGLOBALB 0x96
0x4BFC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4BFE  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // }                                                    directives.hs:124

0x4C00  0x28 0x02       DECSP 0x02
0x4C02  0x2A 0x06       RETB 0x06

                        // else if (directive == "#if")                         directives.hs:125

0x4C04  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4C06  0x37 0xF8 0x0C  PUSHIW 0x0CF8
0x4C09  0x1A 0x03       PUSHIB 0x03
0x4C0B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4C0D  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4C0F  0x2F 0x28       JNZB 0x4C37 (+40)

                        // string value = expression(ln);                       directives.hs:127

0x4C11  0x24 0x02       SYSCALL0 0x02  // String.New
0x4C13  0x4F            PUSHLOCALB02
0x4C14  0x2C 0xD2       CALLB 0xD2     // Directives.expression
0x4C16  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // defineNesting.Append(false); // TODO                 directives.hs:128

0x4C18  0x20 0x96       PUSHGLOBALB 0x96
0x4C1A  0x44            PUSHI0
0x4C1B  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // Parser.ErrorAtCurrent("preprocessorDirective '" + directive + "' not yet implemented");

0x4C1D  0x37 0x05 0x0D  PUSHIW 0x0D05
0x4C20  0x1A 0x17       PUSHIB 0x17
0x4C22  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4C24  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4C26  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4C28  0x37 0x1C 0x0D  PUSHIW 0x0D1C
0x4C2B  0x1A 0x15       PUSHIB 0x15
0x4C2D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4C2F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x4C31  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // }                                                    directives.hs:130

0x4C33  0x28 0x02       DECSP 0x02
0x4C35  0x2A 0x06       RETB 0x06

                        // else if (directive == "#else")                       directives.hs:131

0x4C37  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4C39  0x37 0x31 0x0D  PUSHIW 0x0D31
0x4C3C  0x1A 0x05       PUSHIB 0x05
0x4C3E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4C40  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4C42  0x2F 0x28       JNZB 0x4C6A (+40)

                        // if (defineNesting.Length == 0)                       directives.hs:133

0x4C44  0x20 0x96       PUSHGLOBALB 0x96
0x4C46  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4C48  0x2F 0x0D       JNZB 0x4C55 (+13)

                        // Parser.ErrorAtCurrent("unexpected '#else'");

0x4C4A  0x37 0x36 0x0D  PUSHIW 0x0D36
0x4C4D  0x1A 0x12       PUSHIB 0x12
0x4C4F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4C51  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               directives.hs:136

0x4C53  0x2A 0x06       RETB 0x06

                        // defineNesting.SetItem(defineNesting.Length-1, !defineNesting[defineNesting.Length-1]);

0x4C55  0x52 0x96 0x96  PUSHGLOBALBB 0x9696
0x4C58  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4C5A  0x45            PUSHI1
0x4C5B  0x01            SUB
0x4C5C  0x52 0x96 0x96  PUSHGLOBALBB 0x9696
0x4C5F  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4C61  0x45            PUSHI1
0x4C62  0x01            SUB
0x4C63  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x4C65  0x41            BOOLNOT
0x4C66  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // }                                                    directives.hs:139

0x4C68  0x2A 0x06       RETB 0x06

                        // else if (directive == "#endif")                      directives.hs:140

0x4C6A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4C6C  0x37 0x82 0x01  PUSHIW 0x0182
0x4C6F  0x1A 0x06       PUSHIB 0x06
0x4C71  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4C73  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4C75  0x2F 0x1E       JNZB 0x4C93 (+30)

                        // if (defineNesting.Length == 0)                       directives.hs:142

0x4C77  0x20 0x96       PUSHGLOBALB 0x96
0x4C79  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4C7B  0x2F 0x0D       JNZB 0x4C88 (+13)

                        // Parser.ErrorAtCurrent("unexpected '#endif'");

0x4C7D  0x37 0x48 0x0D  PUSHIW 0x0D48
0x4C80  0x1A 0x13       PUSHIB 0x13
0x4C82  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4C84  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               directives.hs:145

0x4C86  0x2A 0x06       RETB 0x06

                        // defineNesting.Remove(defineNesting.Length-1);

0x4C88  0x52 0x96 0x96  PUSHGLOBALBB 0x9696
0x4C8B  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4C8D  0x45            PUSHI1
0x4C8E  0x01            SUB
0x4C8F  0x24 0x17       SYSCALL0 0x17  // List.Remove

                        // break;                                               directives.hs:149

0x4C91  0x2A 0x06       RETB 0x06

                        // }                                                    directives.hs:151

0x4C93  0x2A 0x06       RETB 0x06


// /source/compiler/directives.hs:19
// ####  Directives.IsAllDefined(..)  ####                                      0x00D0


                        // bool allDefined = true;                              directives.hs:20

0x4C95  0x5F 0x01       ENTERB 0x01

                        // bool allDefined = true;                              directives.hs:20

0x4C97  0x45            PUSHI1
0x4C98  0x4C            POPLOCALB00

                        // if (defineNesting.Length > 0)                        directives.hs:21

0x4C99  0x20 0x96       PUSHGLOBALB 0x96
0x4C9B  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4C9D  0x44            PUSHI0
0x4C9E  0x07            GT
0x4C9F  0x2E 0x25       JZB 0x4CC4 (+37)

                        // foreach (var defined in defineNesting)               directives.hs:23

0x4CA1  0x20 0x96       PUSHGLOBALB 0x96
0x4CA3  0x44            PUSHI0
0x4CA4  0x44            PUSHI0
0x4CA5  0x4F            PUSHLOCALB02
0x4CA6  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x4CA8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4CAA  0x05            EQ
0x4CAB  0x2F 0x17       JNZB 0x4CC2 (+23)
0x4CAD  0x4F            PUSHLOCALB02
0x4CAE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4CB0  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x4CB2  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (!defined)                                        directives.hs:25

0x4CB4  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x4CB6  0x2F 0x08       JNZB 0x4CBE (+8)

                        // allDefined = false;                                  directives.hs:27

0x4CB8  0x44            PUSHI0
0x4CB9  0x4C            POPLOCALB00

                        // break;                                               directives.hs:28

0x4CBA  0x28 0x06       DECSP 0x06
0x4CBC  0x30 0x08       JB 0x4CC4 (+8)

                        // }                                                    directives.hs:30

0x4CBE  0x22 0x06       INCLOCALB 0x06 (BP+6)
0x4CC0  0x30 0xE5       JB 0x4CA5 (-27)
0x4CC2  0x28 0x06       DECSP 0x06

                        // return allDefined;                                   directives.hs:32

0x4CC4  0x4E            PUSHLOCALB00
0x4CC5  0x2B 0x02       RETRETB 0x02


// /source/compiler/directives.hs:58
// ####  Directives.expression(..)  ####                                        0x00D2

0x4CC7  0x49            ENTER

                        // string value;                                        directives.hs:59

0x4CC8  0x24 0x02       SYSCALL0 0x02  // String.New

                        // Parser.ErrorAtCurrent("preprocessorExpression not yet implemented");

0x4CCA  0x37 0x5B 0x0D  PUSHIW 0x0D5B
0x4CCD  0x1A 0x2A       PUSHIB 0x2A
0x4CCF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4CD1  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // return value;                                        directives.hs:65

0x4CD3  0x4E            PUSHLOCALB00
0x4CD4  0x2B 0x04       RETRETB 0x04


// /source/compiler/directives.hs:36
// ####  Directives.defined(..)  ####                                           0x00D1


                        // bool value;                                          directives.hs:37

0x4CD6  0x5F 0x01       ENTERB 0x01

                        // <string,string> idToken = Parser.CurrentToken;

0x4CD8  0x1A 0x0F       PUSHIB 0x0F
0x4CDA  0x1A 0x0F       PUSHIB 0x0F
0x4CDC  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x4CDE  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x4CE0  0x5E            POPCOPYLOCALB02

                        // if (idToken["line"] != ln)                           directives.hs:41

0x4CE1  0x4F            PUSHLOCALB02
0x4CE2  0x37 0xD2 0x03  PUSHIW 0x03D2
0x4CE5  0x1A 0x04       PUSHIB 0x04
0x4CE7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4CE9  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4CEB  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4CED  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4CEF  0x2E 0x0F       JZB 0x4CFE (+15)

                        // Parser.ErrorAtCurrent("preprocessor directive must be on one line");

0x4CF1  0x37 0xA2 0x0C  PUSHIW 0x0CA2
0x4CF4  0x1A 0x2A       PUSHIB 0x2A
0x4CF6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4CF8  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               directives.hs:44

0x4CFA  0x28 0x02       DECSP 0x02
0x4CFC  0x30 0x18       JB 0x4D14 (+24)

                        // value = false;                                       directives.hs:46

0x4CFE  0x44            PUSHI0
0x4CFF  0x4C            POPLOCALB00

                        // if (Symbols.DefineExists(idToken["lexeme"]))

0x4D00  0x4F            PUSHLOCALB02
0x4D01  0x37 0x5B 0x01  PUSHIW 0x015B
0x4D04  0x1A 0x06       PUSHIB 0x06
0x4D06  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D08  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4D0A  0x2C 0x92       CALLB 0x92     // Symbols.DefineExists
0x4D0C  0x2E 0x04       JZB 0x4D10 (+4)

                        // value = true;                                        directives.hs:49

0x4D0E  0x45            PUSHI1
0x4D0F  0x4C            POPLOCALB00

                        // Parser.Advance();                                    directives.hs:51

0x4D10  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // break;                                               directives.hs:52

0x4D12  0x28 0x02       DECSP 0x02

                        // return value;                                        directives.hs:54

0x4D14  0x4E            PUSHLOCALB00
0x4D15  0x2B 0x04       RETRETB 0x04


// /source/compiler/constant.hs:252
// ####  Constant.ParseConstantExpression(..)  ####                             0x00CD

0x4D17  0x49            ENTER

                        // return parseConstantPrimary(typeExpected);           constant.hs:253

0x4D18  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4D1A  0x2C 0xCC       CALLB 0xCC     // Constant.parseConstantPrimary
0x4D1C  0x2B 0x02       RETRETB 0x02


// /source/compiler/constant.hs:13
// ####  Constant.parseConstantPrimary(..)  ####                                0x00CC

0x4D1E  0x49            ENTER

                        // <string,string> currentToken = Parser.CurrentToken;

0x4D1F  0x1A 0x0F       PUSHIB 0x0F
0x4D21  0x1A 0x0F       PUSHIB 0x0F
0x4D23  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x4D25  0x2C 0x71       CALLB 0x71     // Parser.CurrentToken_Get
0x4D27  0x5D            POPCOPYLOCALB00

                        // string value;                                        constant.hs:15

0x4D28  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string actualType;                                   constant.hs:16

0x4D2A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // HopperToken ttype = Token.GetType(currentToken);

0x4D2C  0x44            PUSHI0
0x4D2D  0x4E            PUSHLOCALB00
0x4D2E  0x2C 0x46       CALLB 0x46     // Token.GetType
0x4D30  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (ttype == HopperToken.DottedIdentifier)           constant.hs:18

0x4D32  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x4D34  0x1A 0x02       PUSHIB 0x02
0x4D36  0x05            EQ
0x4D37  0x2E 0x06       JZB 0x4D3D (+6)

                        // ttype = HopperToken.Identifier;                      constant.hs:20

0x4D39  0x1A 0x03       PUSHIB 0x03
0x4D3B  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // switch(ttype)                                        constant.hs:24

0x4D3D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)

                        // case HopperToken.Bool:                               constant.hs:26

0x4D3F  0x1A 0x07       PUSHIB 0x07
0x4D41  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4D43  0x05            EQ
0x4D44  0x2E 0x5C       JZB 0x4DA0 (+92)

                        // if ((currentToken["lexeme"] == "true") || (currentToken["lexeme"] == "false"))

0x4D46  0x4E            PUSHLOCALB00
0x4D47  0x37 0x5B 0x01  PUSHIW 0x015B
0x4D4A  0x1A 0x06       PUSHIB 0x06
0x4D4C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D4E  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4D50  0x37 0x45 0x07  PUSHIW 0x0745
0x4D53  0x1A 0x04       PUSHIB 0x04
0x4D55  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D57  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4D59  0x44            PUSHI0
0x4D5A  0x05            EQ
0x4D5B  0x27 0x00       DUP 0x00
0x4D5D  0x2F 0x18       JNZB 0x4D75 (+24)
0x4D5F  0x4E            PUSHLOCALB00
0x4D60  0x37 0x5B 0x01  PUSHIW 0x015B
0x4D63  0x1A 0x06       PUSHIB 0x06
0x4D65  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D67  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4D69  0x37 0x49 0x07  PUSHIW 0x0749
0x4D6C  0x1A 0x05       PUSHIB 0x05
0x4D6E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D70  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4D72  0x44            PUSHI0
0x4D73  0x05            EQ
0x4D74  0x0B            BOOLOR
0x4D75  0x2E 0x11       JZB 0x4D86 (+17)

                        // value = currentToken["lexeme"];                      constant.hs:30

0x4D77  0x4E            PUSHLOCALB00
0x4D78  0x37 0x5B 0x01  PUSHIW 0x015B
0x4D7B  0x1A 0x06       PUSHIB 0x06
0x4D7D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D7F  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4D81  0x5E            POPCOPYLOCALB02

                        // Parser.Advance();                                    constant.hs:31

0x4D82  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    constant.hs:32

0x4D84  0x30 0x10       JB 0x4D94 (+16)

                        // Parser.ErrorAtCurrent("unexpected boolean literal");

0x4D86  0x37 0x85 0x0D  PUSHIW 0x0D85
0x4D89  0x1A 0x1A       PUSHIB 0x1A
0x4D8B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D8D  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:36

0x4D8F  0x28 0x02       DECSP 0x02
0x4D91  0x33 0x26 0x03  JW 0x50B7 (+806)

                        // actualType = "bool";                                 constant.hs:38

0x4D94  0x37 0xB8 0x02  PUSHIW 0x02B8
0x4D97  0x1A 0x04       PUSHIB 0x04
0x4D99  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4D9B  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:39

0x4D9D  0x33 0x18 0x03  JW 0x50B5 (+792)

                        // case HopperToken.StringConstant:                     constant.hs:40

0x4DA0  0x1A 0x0B       PUSHIB 0x0B
0x4DA2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4DA4  0x05            EQ
0x4DA5  0x2E 0x1B       JZB 0x4DC0 (+27)

                        // Parser.Advance();                                    constant.hs:42

0x4DA7  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // value = currentToken["lexeme"];                      constant.hs:43

0x4DA9  0x4E            PUSHLOCALB00
0x4DAA  0x37 0x5B 0x01  PUSHIW 0x015B
0x4DAD  0x1A 0x06       PUSHIB 0x06
0x4DAF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4DB1  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4DB3  0x5E            POPCOPYLOCALB02

                        // actualType = "string";                               constant.hs:44

0x4DB4  0x37 0x67 0x02  PUSHIW 0x0267
0x4DB7  0x1A 0x06       PUSHIB 0x06
0x4DB9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4DBB  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:45

0x4DBD  0x33 0xF8 0x02  JW 0x50B5 (+760)

                        // case HopperToken.Char:                               constant.hs:46

0x4DC0  0x1A 0x08       PUSHIB 0x08
0x4DC2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4DC4  0x05            EQ
0x4DC5  0x2E 0x1B       JZB 0x4DE0 (+27)

                        // Parser.Advance();                                    constant.hs:48

0x4DC7  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // value = currentToken["lexeme"];                      constant.hs:49

0x4DC9  0x4E            PUSHLOCALB00
0x4DCA  0x37 0x5B 0x01  PUSHIW 0x015B
0x4DCD  0x1A 0x06       PUSHIB 0x06
0x4DCF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4DD1  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4DD3  0x5E            POPCOPYLOCALB02

                        // actualType = "char";                                 constant.hs:50

0x4DD4  0x37 0xC2 0x02  PUSHIW 0x02C2
0x4DD7  0x1A 0x04       PUSHIB 0x04
0x4DD9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4DDB  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:51

0x4DDD  0x33 0xD8 0x02  JW 0x50B5 (+728)

                        // case HopperToken.Float:                              constant.hs:52

0x4DE0  0x1A 0x0A       PUSHIB 0x0A
0x4DE2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4DE4  0x05            EQ
0x4DE5  0x2E 0x3D       JZB 0x4E22 (+61)

                        // float f;                                             constant.hs:54

0x4DE7  0x24 0x4C       SYSCALL0 0x4C  // Float.New

                        // if (!Token.TryParseFloat(currentToken["lexeme"], ref f))

0x4DE9  0x4E            PUSHLOCALB00
0x4DEA  0x37 0x5B 0x01  PUSHIW 0x015B
0x4DED  0x1A 0x06       PUSHIB 0x06
0x4DEF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4DF1  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4DF3  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x4DF5  0x2C 0x55       CALLB 0x55     // Token.TryParseFloat
0x4DF7  0x2F 0x10       JNZB 0x4E07 (+16)

                        // Parser.ErrorAtCurrent("invalid float literal");

0x4DF9  0x37 0x19 0x07  PUSHIW 0x0719
0x4DFC  0x1A 0x15       PUSHIB 0x15
0x4DFE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E00  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:58

0x4E02  0x28 0x04       DECSP 0x04
0x4E04  0x33 0xB3 0x02  JW 0x50B7 (+691)

                        // actualType = "float";                                constant.hs:60

0x4E07  0x37 0x5E 0x02  PUSHIW 0x025E
0x4E0A  0x1A 0x05       PUSHIB 0x05
0x4E0C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E0E  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // value = currentToken["lexeme"];                      constant.hs:61

0x4E10  0x4E            PUSHLOCALB00
0x4E11  0x37 0x5B 0x01  PUSHIW 0x015B
0x4E14  0x1A 0x06       PUSHIB 0x06
0x4E16  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E18  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4E1A  0x5E            POPCOPYLOCALB02

                        // Parser.Advance();                                    constant.hs:62

0x4E1B  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    constant.hs:63

0x4E1D  0x28 0x02       DECSP 0x02
0x4E1F  0x33 0x96 0x02  JW 0x50B5 (+662)

                        // case HopperToken.Integer:                            constant.hs:64

0x4E22  0x1A 0x09       PUSHIB 0x09
0x4E24  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4E26  0x05            EQ
0x4E27  0x31 0x18 0x01  JZW 0x4F3F (+280)

                        // long l;                                              constant.hs:66

0x4E2A  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (!Token.TryParseLong(currentToken["lexeme"], ref l))

0x4E2C  0x4E            PUSHLOCALB00
0x4E2D  0x37 0x5B 0x01  PUSHIW 0x015B
0x4E30  0x1A 0x06       PUSHIB 0x06
0x4E32  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E34  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4E36  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x4E38  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x4E3A  0x2F 0x10       JNZB 0x4E4A (+16)

                        // Parser.ErrorAtCurrent("invalid integer literal");

0x4E3C  0x37 0x2E 0x07  PUSHIW 0x072E
0x4E3F  0x1A 0x17       PUSHIB 0x17
0x4E41  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E43  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:70

0x4E45  0x28 0x04       DECSP 0x04
0x4E47  0x33 0x70 0x02  JW 0x50B7 (+624)

                        // if (l >= 0)                                          constant.hs:72

0x4E4A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4E4C  0x44            PUSHI0
0x4E4D  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4E4F  0x24 0x48       SYSCALL0 0x48  // Long.GE
0x4E51  0x31 0xA0 0x00  JZW 0x4EF1 (+160)

                        // if (typeExpected == "byte")                          constant.hs:74

0x4E54  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4E56  0x37 0xBD 0x02  PUSHIW 0x02BD
0x4E59  0x1A 0x04       PUSHIB 0x04
0x4E5B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E5D  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4E5F  0x2F 0x25       JNZB 0x4E84 (+37)

                        // if (l > 255)                                         constant.hs:76

0x4E61  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4E63  0x1A 0xFF       PUSHIB 0xFF
0x4E65  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4E67  0x24 0x47       SYSCALL0 0x47  // Long.GT
0x4E69  0x2E 0x10       JZB 0x4E79 (+16)

                        // Parser.ErrorAtCurrent("'byte' constant out of range");

0x4E6B  0x37 0x9F 0x0D  PUSHIW 0x0D9F
0x4E6E  0x1A 0x1C       PUSHIB 0x1C
0x4E70  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E72  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:79

0x4E74  0x28 0x04       DECSP 0x04
0x4E76  0x33 0x41 0x02  JW 0x50B7 (+577)

                        // actualType = "byte";                                 constant.hs:81

0x4E79  0x37 0xBD 0x02  PUSHIW 0x02BD
0x4E7C  0x1A 0x04       PUSHIB 0x04
0x4E7E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E80  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:82

0x4E82  0x30 0x6D       JB 0x4EEF (+109)

                        // else if (typeExpected == "int")                      constant.hs:83

0x4E84  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4E86  0x37 0x7E 0x01  PUSHIW 0x017E
0x4E89  0x1A 0x03       PUSHIB 0x03
0x4E8B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4E8D  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4E8F  0x2F 0x26       JNZB 0x4EB5 (+38)

                        // if (l > 32767)                                       constant.hs:85

0x4E91  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4E93  0x37 0xFF 0x7F  PUSHIW 0x7FFF
0x4E96  0x24 0x35       SYSCALL0 0x35  // Int.ToLong
0x4E98  0x24 0x47       SYSCALL0 0x47  // Long.GT
0x4E9A  0x2E 0x10       JZB 0x4EAA (+16)

                        // Parser.ErrorAtCurrent("'int' constant out of range");

0x4E9C  0x37 0xBB 0x0D  PUSHIW 0x0DBB
0x4E9F  0x1A 0x1B       PUSHIB 0x1B
0x4EA1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4EA3  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:88

0x4EA5  0x28 0x04       DECSP 0x04
0x4EA7  0x33 0x10 0x02  JW 0x50B7 (+528)

                        // actualType = "int";                                  constant.hs:90

0x4EAA  0x37 0x7E 0x01  PUSHIW 0x017E
0x4EAD  0x1A 0x03       PUSHIB 0x03
0x4EAF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4EB1  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:91

0x4EB3  0x30 0x7A       JB 0x4F2D (+122)

                        // else if (typeExpected == "uint")                     constant.hs:92

0x4EB5  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4EB7  0x37 0xC7 0x02  PUSHIW 0x02C7
0x4EBA  0x1A 0x04       PUSHIB 0x04
0x4EBC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4EBE  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4EC0  0x2F 0x26       JNZB 0x4EE6 (+38)

                        // if (l > 0xFFFF)                                      constant.hs:94

0x4EC2  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4EC4  0x37 0xFF 0xFF  PUSHIW 0xFFFF
0x4EC7  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4EC9  0x24 0x47       SYSCALL0 0x47  // Long.GT
0x4ECB  0x2E 0x10       JZB 0x4EDB (+16)

                        // Parser.ErrorAtCurrent("'uint' constant out of range");

0x4ECD  0x37 0xD6 0x0D  PUSHIW 0x0DD6
0x4ED0  0x1A 0x1C       PUSHIB 0x1C
0x4ED2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4ED4  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:97

0x4ED6  0x28 0x04       DECSP 0x04
0x4ED8  0x33 0xDF 0x01  JW 0x50B7 (+479)

                        // actualType = "uint";                                 constant.hs:99

0x4EDB  0x37 0xC7 0x02  PUSHIW 0x02C7
0x4EDE  0x1A 0x04       PUSHIB 0x04
0x4EE0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4EE2  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:100

0x4EE4  0x30 0x49       JB 0x4F2D (+73)

                        // actualType = "long";                                 constant.hs:103

0x4EE6  0x37 0x63 0x02  PUSHIW 0x0263
0x4EE9  0x1A 0x04       PUSHIB 0x04
0x4EEB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4EED  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:105

0x4EEF  0x30 0x3E       JB 0x4F2D (+62)

                        // if (typeExpected == "int")                           constant.hs:108

0x4EF1  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x4EF3  0x37 0x7E 0x01  PUSHIW 0x017E
0x4EF6  0x1A 0x03       PUSHIB 0x03
0x4EF8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4EFA  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4EFC  0x2F 0x28       JNZB 0x4F24 (+40)

                        // if (l < -32768)                                      constant.hs:110

0x4EFE  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4F00  0x37 0x00 0x80  PUSHIW 0x8000
0x4F03  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x4F05  0x24 0x49       SYSCALL0 0x49  // Long.Negate
0x4F07  0x24 0x45       SYSCALL0 0x45  // Long.LT
0x4F09  0x2E 0x10       JZB 0x4F19 (+16)

                        // Parser.ErrorAtCurrent("'int' constant out of range");

0x4F0B  0x37 0xBB 0x0D  PUSHIW 0x0DBB
0x4F0E  0x1A 0x1B       PUSHIB 0x1B
0x4F10  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4F12  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:113

0x4F14  0x28 0x04       DECSP 0x04
0x4F16  0x33 0xA1 0x01  JW 0x50B7 (+417)

                        // actualType = "int";                                  constant.hs:115

0x4F19  0x37 0x7E 0x01  PUSHIW 0x017E
0x4F1C  0x1A 0x03       PUSHIB 0x03
0x4F1E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4F20  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    constant.hs:116

0x4F22  0x30 0x0B       JB 0x4F2D (+11)

                        // actualType = "long";                                 constant.hs:119

0x4F24  0x37 0x63 0x02  PUSHIW 0x0263
0x4F27  0x1A 0x04       PUSHIB 0x04
0x4F29  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4F2B  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // value = currentToken["lexeme"];                      constant.hs:122

0x4F2D  0x4E            PUSHLOCALB00
0x4F2E  0x37 0x5B 0x01  PUSHIW 0x015B
0x4F31  0x1A 0x06       PUSHIB 0x06
0x4F33  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4F35  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4F37  0x5E            POPCOPYLOCALB02

                        // Parser.Advance();                                    constant.hs:123

0x4F38  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    constant.hs:124

0x4F3A  0x28 0x02       DECSP 0x02
0x4F3C  0x33 0x79 0x01  JW 0x50B5 (+377)

                        // case HopperToken.Identifier:                         constant.hs:126

0x4F3F  0x1A 0x03       PUSHIB 0x03
0x4F41  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x4F43  0x05            EQ
0x4F44  0x31 0x1C 0x01  JZW 0x5060 (+284)

                        // string name = currentToken["lexeme"];                constant.hs:128

0x4F47  0x24 0x02       SYSCALL0 0x02  // String.New
0x4F49  0x4E            PUSHLOCALB00
0x4F4A  0x37 0x5B 0x01  PUSHIW 0x015B
0x4F4D  0x1A 0x06       PUSHIB 0x06
0x4F4F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4F51  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x4F53  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // string typeName;                                     constant.hs:130

0x4F55  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string valueName;                                    constant.hs:131

0x4F57  0x24 0x02       SYSCALL0 0x02  // String.New

                        // uint ivalue;                                         constant.hs:132

0x4F59  0x44            PUSHI0

                        // if (Types.EnumValue(name, ref typeName, ref valueName, ref ivalue))

0x4F5A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4F5C  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x4F5E  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
0x4F60  0x21 0x10       PUSHSTACKADDRB 0x10 (BP+16)
0x4F62  0x34 0x8F 0x01  CALLW 0x018F   // Types.EnumValue
0x4F65  0x2E 0x12       JZB 0x4F77 (+18)

                        // Parser.Advance();                                    constant.hs:135

0x4F67  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // actualType = typeName;                               constant.hs:136

0x4F69  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x4F6B  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // value = ivalue.ToString();                           constant.hs:137

0x4F6D  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x4F6F  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x4F71  0x5E            POPCOPYLOCALB02

                        // break;                                               constant.hs:138

0x4F72  0x28 0x0A       DECSP 0x0A
0x4F74  0x33 0x43 0x01  JW 0x50B7 (+323)

                        // if (Types.FlagsValue(name, ref typeName, ref valueName, ref ivalue))

0x4F77  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4F79  0x21 0x0C       PUSHSTACKADDRB 0x0C (BP+12)
0x4F7B  0x21 0x0E       PUSHSTACKADDRB 0x0E (BP+14)
0x4F7D  0x21 0x10       PUSHSTACKADDRB 0x10 (BP+16)
0x4F7F  0x34 0x90 0x01  CALLW 0x0190   // Types.FlagsValue
0x4F82  0x2E 0x12       JZB 0x4F94 (+18)

                        // Parser.Advance();                                    constant.hs:146

0x4F84  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // actualType = typeName;                               constant.hs:147

0x4F86  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x4F88  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // value = ivalue.ToString();                           constant.hs:148

0x4F8A  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x4F8C  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x4F8E  0x5E            POPCOPYLOCALB02

                        // break;                                               constant.hs:149

0x4F8F  0x28 0x0A       DECSP 0x0A
0x4F91  0x33 0x26 0x01  JW 0x50B7 (+294)

                        // if (!Symbols.ConstantExists(name))                   constant.hs:152

0x4F94  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4F96  0x2C 0x95       CALLB 0x95     // Symbols.ConstantExists
0x4F98  0x2F 0x10       JNZB 0x4FA8 (+16)

                        // Parser.ErrorAtCurrent("undefined identifier");

0x4F9A  0x37 0xF2 0x0D  PUSHIW 0x0DF2
0x4F9D  0x1A 0x14       PUSHIB 0x14
0x4F9F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4FA1  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:155

0x4FA3  0x28 0x0A       DECSP 0x0A
0x4FA5  0x33 0x12 0x01  JW 0x50B7 (+274)

                        // value = Symbols.GetConstantValue(name);              constant.hs:157

0x4FA8  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x4FAA  0x2C 0x96       CALLB 0x96     // Symbols.GetConstantValue
0x4FAC  0x5E            POPCOPYLOCALB02

                        // switch (typeExpected)                                constant.hs:158

0x4FAD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case "byte":                                         constant.hs:160

0x4FAF  0x37 0xBD 0x02  PUSHIW 0x02BD
0x4FB2  0x1A 0x04       PUSHIB 0x04
0x4FB4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4FB6  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x4FB8  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4FBA  0x2F 0x33       JNZB 0x4FED (+51)

                        // uint ui;                                             constant.hs:162

0x4FBC  0x44            PUSHI0

                        // if (!Token.TryParseUInt(value, ref ui) || (ui > 255))

0x4FBD  0x4F            PUSHLOCALB02
0x4FBE  0x21 0x14       PUSHSTACKADDRB 0x14 (BP+20)
0x4FC0  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x4FC2  0x41            BOOLNOT
0x4FC3  0x27 0x00       DUP 0x00
0x4FC5  0x2F 0x08       JNZB 0x4FCD (+8)
0x4FC7  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x4FC9  0x1A 0xFF       PUSHIB 0xFF
0x4FCB  0x07            GT
0x4FCC  0x0B            BOOLOR
0x4FCD  0x2E 0x10       JZB 0x4FDD (+16)

                        // Parser.ErrorAtCurrent("invalid identifier");

0x4FCF  0x37 0x06 0x0E  PUSHIW 0x0E06
0x4FD2  0x1A 0x12       PUSHIB 0x12
0x4FD4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4FD6  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:166

0x4FD8  0x28 0x0E       DECSP 0x0E
0x4FDA  0x33 0xDD 0x00  JW 0x50B7 (+221)

                        // actualType = "byte";                                 constant.hs:168

0x4FDD  0x37 0xBD 0x02  PUSHIW 0x02BD
0x4FE0  0x1A 0x04       PUSHIB 0x04
0x4FE2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4FE4  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance();                                    constant.hs:169

0x4FE6  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    constant.hs:170

0x4FE8  0x28 0x02       DECSP 0x02
0x4FEA  0x33 0x70 0x00  JW 0x505A (+112)

                        // case "uint":                                         constant.hs:171

0x4FED  0x37 0xC7 0x02  PUSHIW 0x02C7
0x4FF0  0x1A 0x04       PUSHIB 0x04
0x4FF2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x4FF4  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x4FF6  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x4FF8  0x2F 0x27       JNZB 0x501F (+39)

                        // uint ui;                                             constant.hs:173

0x4FFA  0x44            PUSHI0

                        // if (!Token.TryParseUInt(value, ref ui))              constant.hs:174

0x4FFB  0x4F            PUSHLOCALB02
0x4FFC  0x21 0x14       PUSHSTACKADDRB 0x14 (BP+20)
0x4FFE  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x5000  0x2F 0x10       JNZB 0x5010 (+16)

                        // Parser.ErrorAtCurrent("invalid identifier");

0x5002  0x37 0x06 0x0E  PUSHIW 0x0E06
0x5005  0x1A 0x12       PUSHIB 0x12
0x5007  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5009  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:177

0x500B  0x28 0x0E       DECSP 0x0E
0x500D  0x33 0xAA 0x00  JW 0x50B7 (+170)

                        // actualType = "uint";                                 constant.hs:179

0x5010  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5013  0x1A 0x04       PUSHIB 0x04
0x5015  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5017  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance();                                    constant.hs:180

0x5019  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    constant.hs:181

0x501B  0x28 0x02       DECSP 0x02
0x501D  0x30 0x3D       JB 0x505A (+61)

                        // case "int":                                          constant.hs:182

0x501F  0x37 0x7E 0x01  PUSHIW 0x017E
0x5022  0x1A 0x03       PUSHIB 0x03
0x5024  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5026  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x5028  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x502A  0x2F 0x27       JNZB 0x5051 (+39)

                        // int i;                                               constant.hs:184

0x502C  0x44            PUSHI0

                        // if (!Token.TryParseInt(value, ref i))                constant.hs:185

0x502D  0x4F            PUSHLOCALB02
0x502E  0x21 0x14       PUSHSTACKADDRB 0x14 (BP+20)
0x5030  0x2C 0x50       CALLB 0x50     // Token.TryParseInt
0x5032  0x2F 0x10       JNZB 0x5042 (+16)

                        // Parser.ErrorAtCurrent("invalid identifier");

0x5034  0x37 0x06 0x0E  PUSHIW 0x0E06
0x5037  0x1A 0x12       PUSHIB 0x12
0x5039  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x503B  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:188

0x503D  0x28 0x0E       DECSP 0x0E
0x503F  0x33 0x78 0x00  JW 0x50B7 (+120)

                        // actualType = "int";                                  constant.hs:190

0x5042  0x37 0x7E 0x01  PUSHIW 0x017E
0x5045  0x1A 0x03       PUSHIB 0x03
0x5047  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5049  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance();                                    constant.hs:191

0x504B  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    constant.hs:192

0x504D  0x28 0x02       DECSP 0x02
0x504F  0x30 0x0B       JB 0x505A (+11)

                        // Parser.ErrorAtCurrent("constant identifier case not implemented");

0x5051  0x37 0x18 0x0E  PUSHIW 0x0E18
0x5054  0x1A 0x28       PUSHIB 0x28
0x5056  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5058  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // }                                                    constant.hs:197

0x505A  0x28 0x02       DECSP 0x02

                        // }                                                    constant.hs:198

0x505C  0x28 0x08       DECSP 0x08
0x505E  0x30 0x57       JB 0x50B5 (+87)

                        // case HopperToken.Keyword:                            constant.hs:199

0x5060  0x1A 0x05       PUSHIB 0x05
0x5062  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5064  0x05            EQ
0x5065  0x2E 0x43       JZB 0x50A8 (+67)

                        // string name = currentToken["lexeme"];                constant.hs:201

0x5067  0x24 0x02       SYSCALL0 0x02  // String.New
0x5069  0x4E            PUSHLOCALB00
0x506A  0x37 0x5B 0x01  PUSHIW 0x015B
0x506D  0x1A 0x06       PUSHIB 0x06
0x506F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5071  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x5073  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (Token.IsTypeKeyword(name))                       constant.hs:202

0x5075  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5077  0x2C 0x4B       CALLB 0x4B     // Token.IsTypeKeyword
0x5079  0x2E 0x1E       JZB 0x5097 (+30)

                        // byte b = Types.ToByte(name);                         constant.hs:204

0x507B  0x44            PUSHI0
0x507C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x507E  0x34 0x9B 0x01  CALLW 0x019B   // Types.ToByte
0x5081  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // value = b.ToString();                                constant.hs:205

0x5083  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x5085  0x2C 0xE1       CALLB 0xE1     // Byte.ToString
0x5087  0x5E            POPCOPYLOCALB02

                        // actualType = "type";                                 constant.hs:206

0x5088  0x37 0x51 0x02  PUSHIW 0x0251
0x508B  0x1A 0x04       PUSHIB 0x04
0x508D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x508F  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // Parser.Advance();                                    constant.hs:207

0x5091  0x2C 0x7C       CALLB 0x7C     // Parser.Advance

                        // }                                                    constant.hs:208

0x5093  0x28 0x02       DECSP 0x02
0x5095  0x30 0x0F       JB 0x50A4 (+15)

                        // Parser.ErrorAtCurrent("constant expected");

0x5097  0x37 0x94 0x04  PUSHIW 0x0494
0x509A  0x1A 0x11       PUSHIB 0x11
0x509C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x509E  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:212

0x50A0  0x28 0x04       DECSP 0x04
0x50A2  0x30 0x15       JB 0x50B7 (+21)

                        // }                                                    constant.hs:214

0x50A4  0x28 0x02       DECSP 0x02
0x50A6  0x30 0x0F       JB 0x50B5 (+15)

                        // Parser.ErrorAtCurrent("constant expected");

0x50A8  0x37 0x94 0x04  PUSHIW 0x0494
0x50AB  0x1A 0x11       PUSHIB 0x11
0x50AD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x50AF  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // break;                                               constant.hs:218

0x50B1  0x28 0x02       DECSP 0x02
0x50B3  0x30 0x04       JB 0x50B7 (+4)

                        // } // switch                                          constant.hs:220

0x50B5  0x28 0x02       DECSP 0x02

                        // if (!HadError && (typeExpected != actualType))

0x50B7  0x2C 0x70       CALLB 0x70     // Parser.HadError_Get
0x50B9  0x41            BOOLNOT
0x50BA  0x27 0x00       DUP 0x00
0x50BC  0x2E 0x0A       JZB 0x50C6 (+10)
0x50BE  0x56 0xFE 0x04  PUSHLOCALBB 0x04FE
0x50C1  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x50C3  0x44            PUSHI0
0x50C4  0x06            NE
0x50C5  0x0C            BOOLAND
0x50C6  0x31 0xC2 0x00  JZW 0x5188 (+194)

                        // if (Types.IsFlags(typeExpected) && Types.IsFlags(actualType))

0x50C9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x50CB  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x50CE  0x27 0x00       DUP 0x00
0x50D0  0x2E 0x08       JZB 0x50D8 (+8)
0x50D2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x50D4  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x50D7  0x0C            BOOLAND
0x50D8  0x2E 0x40       JZB 0x5118 (+64)

                        // string flagsExpected = Types.QualifyFlags(typeExpected);

0x50DA  0x24 0x02       SYSCALL0 0x02  // String.New
0x50DC  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x50DE  0x34 0xA5 0x01  CALLW 0x01A5   // Types.QualifyFlags
0x50E1  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // string flagsActual = Types.QualifyFlags(actualType);

0x50E3  0x24 0x02       SYSCALL0 0x02  // String.New
0x50E5  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x50E7  0x34 0xA5 0x01  CALLW 0x01A5   // Types.QualifyFlags
0x50EA  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (flagsExpected != flagsActual)                    constant.hs:229

0x50EC  0x56 0x08 0x0A  PUSHLOCALBB 0x0A08
0x50EF  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x50F1  0x2E 0x23       JZB 0x5114 (+35)

                        // Parser.ErrorAtCurrent("expected '" + flagsExpected + "' flags constant, (was '" + flagsActual + "')");

0x50F3  0x37 0x38 0x0D  PUSHIW 0x0D38
0x50F6  0x1A 0x0A       PUSHIB 0x0A
0x50F8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x50FA  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x50FC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x50FE  0x37 0x40 0x0E  PUSHIW 0x0E40
0x5101  0x1A 0x18       PUSHIB 0x18
0x5103  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5105  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5107  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5109  0x24 0x03       SYSCALL0 0x03  // String.Append
0x510B  0x37 0x27 0x29  PUSHIW 0x2927
0x510E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5110  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5112  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // }                                                    constant.hs:233

0x5114  0x28 0x04       DECSP 0x04
0x5116  0x30 0x72       JB 0x5188 (+114)

                        // else if (Types.IsEnum(typeExpected) && Types.IsEnum(actualType))

0x5118  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x511A  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x511D  0x27 0x00       DUP 0x00
0x511F  0x2E 0x08       JZB 0x5127 (+8)
0x5121  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5123  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x5126  0x0C            BOOLAND
0x5127  0x2E 0x40       JZB 0x5167 (+64)

                        // string enumExpected = Types.QualifyEnum(typeExpected);

0x5129  0x24 0x02       SYSCALL0 0x02  // String.New
0x512B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x512D  0x34 0xA6 0x01  CALLW 0x01A6   // Types.QualifyEnum
0x5130  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // string enumActual = Types.QualifyEnum(actualType);

0x5132  0x24 0x02       SYSCALL0 0x02  // String.New
0x5134  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5136  0x34 0xA6 0x01  CALLW 0x01A6   // Types.QualifyEnum
0x5139  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (enumExpected != enumActual)                      constant.hs:238

0x513B  0x56 0x08 0x0A  PUSHLOCALBB 0x0A08
0x513E  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5140  0x2E 0x23       JZB 0x5163 (+35)

                        // Parser.ErrorAtCurrent("expected '" + enumExpected + "' enum constant, (was '" + enumActual + "')");

0x5142  0x37 0x38 0x0D  PUSHIW 0x0D38
0x5145  0x1A 0x0A       PUSHIB 0x0A
0x5147  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5149  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x514B  0x24 0x03       SYSCALL0 0x03  // String.Append
0x514D  0x37 0x58 0x0E  PUSHIW 0x0E58
0x5150  0x1A 0x17       PUSHIB 0x17
0x5152  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5154  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5156  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5158  0x24 0x03       SYSCALL0 0x03  // String.Append
0x515A  0x37 0x27 0x29  PUSHIW 0x2927
0x515D  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x515F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5161  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // }                                                    constant.hs:242

0x5163  0x28 0x04       DECSP 0x04
0x5165  0x30 0x23       JB 0x5188 (+35)

                        // Parser.ErrorAtCurrent("expected '" + typeExpected + "' constant expression, (was '" + actualType + "')");

0x5167  0x37 0x38 0x0D  PUSHIW 0x0D38
0x516A  0x1A 0x0A       PUSHIB 0x0A
0x516C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x516E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5170  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5172  0x37 0x6F 0x0E  PUSHIW 0x0E6F
0x5175  0x1A 0x1D       PUSHIB 0x1D
0x5177  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5179  0x24 0x03       SYSCALL0 0x03  // String.Append
0x517B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x517D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x517F  0x37 0x27 0x29  PUSHIW 0x2927
0x5182  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5184  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5186  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // return value;                                        constant.hs:248

0x5188  0x4F            PUSHLOCALB02
0x5189  0x2B 0x0A       RETRETB 0x0A


// /source/system/char.hs:15
// ####  Char.IsUpper(..)  ####                                                 0x00D5


                        // byte b;                                              char.hs:16

0x518B  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:17

0x518D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x518F  0x4C            POPLOCALB00

                        // return ((b >= 65) && (b <= 90));  // A..Z            char.hs:18

0x5190  0x4E            PUSHLOCALB00
0x5191  0x1A 0x41       PUSHIB 0x41
0x5193  0x09            GE
0x5194  0x27 0x00       DUP 0x00
0x5196  0x2E 0x07       JZB 0x519D (+7)
0x5198  0x4E            PUSHLOCALB00
0x5199  0x1A 0x5A       PUSHIB 0x5A
0x519B  0x0A            LE
0x519C  0x0C            BOOLAND
0x519D  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:68
// ####  Char.ToLower(..)  ####                                                 0x00DC


                        // byte b;                                              char.hs:69

0x519F  0x5F 0x01       ENTERB 0x01

                        // if (IsUpper(this))                                   char.hs:70

0x51A1  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51A3  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x51A5  0x2E 0x0E       JZB 0x51B3 (+14)

                        // b = byte(this) - 65 + 97; // -A + a;                 char.hs:72

0x51A7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51A9  0x1A 0x41       PUSHIB 0x41
0x51AB  0x01            SUB
0x51AC  0x1A 0x61       PUSHIB 0x61
0x51AE  0x00            ADD
0x51AF  0x4C            POPLOCALB00

                        // this = char(b);                                      char.hs:73

0x51B0  0x4E            PUSHLOCALB00
0x51B1  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // return this;                                         char.hs:75

0x51B3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51B5  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:42
// ####  Char.IsDigit(..)  ####                                                 0x00D9


                        // byte b;                                              char.hs:43

0x51B7  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:44

0x51B9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51BB  0x4C            POPLOCALB00

                        // return ((b >= 48) && (b <= 57)); // 0..9             char.hs:45

0x51BC  0x4E            PUSHLOCALB00
0x51BD  0x1A 0x30       PUSHIB 0x30
0x51BF  0x09            GE
0x51C0  0x27 0x00       DUP 0x00
0x51C2  0x2E 0x07       JZB 0x51C9 (+7)
0x51C4  0x4E            PUSHLOCALB00
0x51C5  0x1A 0x39       PUSHIB 0x39
0x51C7  0x0A            LE
0x51C8  0x0C            BOOLAND
0x51C9  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:78
// ####  Char.IsHexDigit(..)  ####                                              0x00DD


                        // byte b;                                              char.hs:79

0x51CB  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:80

0x51CD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x51CF  0x4C            POPLOCALB00

                        // return ((b >= 48) && (b <= 57)) || // 0..9           char.hs:81

0x51D0  0x4E            PUSHLOCALB00
0x51D1  0x1A 0x30       PUSHIB 0x30
0x51D3  0x09            GE
0x51D4  0x27 0x00       DUP 0x00
0x51D6  0x2E 0x07       JZB 0x51DD (+7)
0x51D8  0x4E            PUSHLOCALB00
0x51D9  0x1A 0x39       PUSHIB 0x39
0x51DB  0x0A            LE
0x51DC  0x0C            BOOLAND
0x51DD  0x27 0x00       DUP 0x00
0x51DF  0x2F 0x22       JNZB 0x5201 (+34)
0x51E1  0x4E            PUSHLOCALB00
0x51E2  0x1A 0x41       PUSHIB 0x41
0x51E4  0x09            GE
0x51E5  0x27 0x00       DUP 0x00
0x51E7  0x2E 0x07       JZB 0x51EE (+7)
0x51E9  0x4E            PUSHLOCALB00
0x51EA  0x1A 0x46       PUSHIB 0x46
0x51EC  0x0A            LE
0x51ED  0x0C            BOOLAND
0x51EE  0x0B            BOOLOR
0x51EF  0x27 0x00       DUP 0x00
0x51F1  0x2F 0x10       JNZB 0x5201 (+16)
0x51F3  0x4E            PUSHLOCALB00
0x51F4  0x1A 0x61       PUSHIB 0x61
0x51F6  0x09            GE
0x51F7  0x27 0x00       DUP 0x00
0x51F9  0x2E 0x07       JZB 0x5200 (+7)
0x51FB  0x4E            PUSHLOCALB00
0x51FC  0x1A 0x66       PUSHIB 0x66
0x51FE  0x0A            LE
0x51FF  0x0C            BOOLAND
0x5200  0x0B            BOOLOR
0x5201  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:89
// ####  Char.IsLetter(..)  ####                                                0x00DE


                        // byte b;                                              char.hs:90

0x5203  0x5F 0x01       ENTERB 0x01

                        // b = byte(this);                                      char.hs:91

0x5205  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5207  0x4C            POPLOCALB00

                        // return ((b >= 65) && (b <= 90))   // A..Z            char.hs:92

0x5208  0x4E            PUSHLOCALB00
0x5209  0x1A 0x41       PUSHIB 0x41
0x520B  0x09            GE
0x520C  0x27 0x00       DUP 0x00
0x520E  0x2E 0x07       JZB 0x5215 (+7)
0x5210  0x4E            PUSHLOCALB00
0x5211  0x1A 0x5A       PUSHIB 0x5A
0x5213  0x0A            LE
0x5214  0x0C            BOOLAND
0x5215  0x27 0x00       DUP 0x00
0x5217  0x2F 0x10       JNZB 0x5227 (+16)
0x5219  0x4E            PUSHLOCALB00
0x521A  0x1A 0x61       PUSHIB 0x61
0x521C  0x09            GE
0x521D  0x27 0x00       DUP 0x00
0x521F  0x2E 0x07       JZB 0x5226 (+7)
0x5221  0x4E            PUSHLOCALB00
0x5222  0x1A 0x7A       PUSHIB 0x7A
0x5224  0x0A            LE
0x5225  0x0C            BOOLAND
0x5226  0x0B            BOOLOR
0x5227  0x2B 0x04       RETRETB 0x04


// /source/system/char.hs:99
// ####  Char.ToString(..)  ####                                                0x00DF

0x5229  0x49            ENTER

                        // string result;                                       char.hs:100

0x522A  0x24 0x02       SYSCALL0 0x02  // String.New

                        // return result.Append(this);                          char.hs:101

0x522C  0x4E            PUSHLOCALB00
0x522D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x522F  0x25 0x03       SYSCALL1 0x03  // String.Append
0x5231  0x2B 0x04       RETRETB 0x04


// /source/system/string.hs:259
// ####  String.StartsWith(..)  ####                                            0x0105

0x5233  0x49            ENTER

                        // return (this.Length > 0) && (this[0] == pattern);

0x5234  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5236  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x5238  0x44            PUSHI0
0x5239  0x07            GT
0x523A  0x27 0x00       DUP 0x00
0x523C  0x2E 0x0B       JZB 0x5247 (+11)
0x523E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5240  0x44            PUSHI0
0x5241  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x5243  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5245  0x05            EQ
0x5246  0x0C            BOOLAND
0x5247  0x2B 0x04       RETRETB 0x04


// /source/system/string.hs:263
// ####  String.StartsWith(..)  ####                                            0x0106


                        // uint i;                                              string.hs:264

0x5249  0x5F 0x02       ENTERB 0x02

                        // length = pattern.Length;                             string.hs:266

0x524B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x524D  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x524F  0x4D            POPLOCALB02

                        // if (length <= this.Length)                           string.hs:267

0x5250  0x4F            PUSHLOCALB02
0x5251  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5253  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x5255  0x0A            LE
0x5256  0x2E 0x1E       JZB 0x5274 (+30)

                        // for ( ; i < length; i++)                             string.hs:269

0x5258  0x4E            PUSHLOCALB00
0x5259  0x4F            PUSHLOCALB02
0x525A  0x08            LT
0x525B  0x2E 0x16       JZB 0x5271 (+22)

                        // if (pattern[i] != this[i])                           string.hs:271

0x525D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x525F  0x4E            PUSHLOCALB00
0x5260  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x5262  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5264  0x4E            PUSHLOCALB00
0x5265  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x5267  0x06            NE
0x5268  0x2E 0x05       JZB 0x526D (+5)

                        // return false;                                        string.hs:273

0x526A  0x44            PUSHI0
0x526B  0x2B 0x08       RETRETB 0x08

                        // }                                                    string.hs:275

0x526D  0x22 0x00       INCLOCALB 0x00 (BP+0)
0x526F  0x30 0xE9       JB 0x5258 (-23)

                        // return true;                                         string.hs:276

0x5271  0x45            PUSHI1
0x5272  0x2B 0x08       RETRETB 0x08

                        // return false;                                        string.hs:278

0x5274  0x44            PUSHI0
0x5275  0x2B 0x08       RETRETB 0x08


// /source/system/string.hs:383
// ####  String.LastIndexOf(..)  ####                                           0x010E


                        // uint length;                                         string.hs:384

0x5277  0x5F 0x02       ENTERB 0x02

                        // length = this.Length;                                string.hs:388

0x5279  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x527B  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x527D  0x4C            POPLOCALB00

                        // if (length == 0)                                     string.hs:389

0x527E  0x4E            PUSHLOCALB00
0x527F  0x2E 0x1D       JZB 0x529C (+29)

                        // i = length-1;                                        string.hs:393

0x5281  0x4E            PUSHLOCALB00
0x5282  0x45            PUSHI1
0x5283  0x01            SUB
0x5284  0x4D            POPLOCALB02

                        // if (this[i] == pattern)                              string.hs:396

0x5285  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5287  0x4F            PUSHLOCALB02
0x5288  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x528A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x528C  0x05            EQ
0x528D  0x2E 0x08       JZB 0x5295 (+8)

                        // index = i;                                           string.hs:398

0x528F  0x4F            PUSHLOCALB02
0x5290  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         string.hs:399

0x5292  0x45            PUSHI1
0x5293  0x2B 0x0A       RETRETB 0x0A

                        // if (i == 0)                                          string.hs:401

0x5295  0x4F            PUSHLOCALB02
0x5296  0x2E 0x06       JZB 0x529C (+6)

                        // i--;                                                 string.hs:405

0x5298  0x23 0x02       DECLOCALB 0x02 (BP+2)

                        // }                                                    string.hs:406

0x529A  0x30 0xEB       JB 0x5285 (-21)

                        // return false;                                        string.hs:409

0x529C  0x44            PUSHI0
0x529D  0x2B 0x0A       RETRETB 0x0A


// /source/system/uint.hs:4
// ####  UInt.ToString(..)  ####                                                0x00E7


                        // uint digit;                                          uint.hs:5

0x529F  0x5F 0x02       ENTERB 0x02

                        // string result;                                       uint.hs:7

0x52A1  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (this == 0)                                       uint.hs:8

0x52A3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x52A5  0x2F 0x08       JNZB 0x52AD (+8)

                        // String.Build(ref result, '0');                       uint.hs:10

0x52A7  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x52A9  0x1A 0x30       PUSHIB 0x30
0x52AB  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // while (this != 0)                                    uint.hs:12

0x52AD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x52AF  0x2E 0x1F       JZB 0x52CE (+31)

                        // digit = this % 10;                                   uint.hs:14

0x52B1  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x52B3  0x1A 0x0A       PUSHIB 0x0A
0x52B5  0x04            MOD
0x52B6  0x4C            POPLOCALB00

                        // digit = digit + 48;                                  uint.hs:15

0x52B7  0x4E            PUSHLOCALB00
0x52B8  0x1A 0x30       PUSHIB 0x30
0x52BA  0x00            ADD
0x52BB  0x4C            POPLOCALB00

                        // c = char(digit);                                     uint.hs:16

0x52BC  0x4E            PUSHLOCALB00
0x52BD  0x51 0x03       CAST 0x03
0x52BF  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    uint.hs:17

0x52C0  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x52C2  0x4F            PUSHLOCALB02
0x52C3  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 10;                                    uint.hs:18

0x52C5  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x52C7  0x1A 0x0A       PUSHIB 0x0A
0x52C9  0x02            DIV
0x52CA  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    uint.hs:19

0x52CC  0x30 0xE1       JB 0x52AD (-31)

                        // return result;                                       uint.hs:20

0x52CE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x52D0  0x2B 0x08       RETRETB 0x08


// /source/system/uint.hs:43
// ####  UInt.ToHexString(..)  ####                                             0x00EA


                        // uint digit;                                          uint.hs:44

0x52D2  0x5F 0x03       ENTERB 0x03

                        // string result;                                       uint.hs:47

0x52D4  0x24 0x02       SYSCALL0 0x02  // String.New

                        // for (i = digits; i > 0; i--)                         uint.hs:48

0x52D6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x52D8  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x52DA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x52DC  0x44            PUSHI0
0x52DD  0x07            GT
0x52DE  0x2E 0x1E       JZB 0x52FC (+30)

                        // digit = this % 16;                                   uint.hs:50

0x52E0  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x52E2  0x1A 0x10       PUSHIB 0x10
0x52E4  0x04            MOD
0x52E5  0x4C            POPLOCALB00

                        // c = Char.ToHex(byte(digit));                         uint.hs:51

0x52E6  0x4E            PUSHLOCALB00
0x52E7  0x51 0x03       CAST 0x03
0x52E9  0x2C 0xDB       CALLB 0xDB     // Char.ToHex
0x52EB  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    uint.hs:52

0x52EC  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x52EE  0x4F            PUSHLOCALB02
0x52EF  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 16;                                    uint.hs:53

0x52F1  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x52F3  0x1A 0x10       PUSHIB 0x10
0x52F5  0x02            DIV
0x52F6  0x1B 0xFC       POPLOCALB 0xFC (BP-4)

                        // }                                                    uint.hs:54

0x52F8  0x23 0x04       DECLOCALB 0x04 (BP+4)
0x52FA  0x30 0xE0       JB 0x52DA (-32)

                        // return result;                                       uint.hs:55

0x52FC  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x52FE  0x2B 0x0C       RETRETB 0x0C


// /source/compiler/json/json.hs:206
// ####  JSON.Write(..)  ####                                                   0x0189

0x5300  0x49            ENTER

                        // if (File.Exists(path))                               json.hs:207

0x5301  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5303  0x24 0x5F       SYSCALL0 0x5F  // File.Exists
0x5305  0x2E 0x06       JZB 0x530B (+6)

                        // File.Delete(path);                                   json.hs:209

0x5307  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x5309  0x24 0x68       SYSCALL0 0x68  // File.Delete

                        // file jsonFile = File.Create(path);                   json.hs:211

0x530B  0x24 0x60       SYSCALL0 0x60  // File.New
0x530D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x530F  0x24 0x62       SYSCALL0 0x62  // File.Create
0x5311  0x5D            POPCOPYLOCALB00

                        // ExportDictionary(jsonFile, dict, 0);                 json.hs:212

0x5312  0x4E            PUSHLOCALB00
0x5313  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5315  0x44            PUSHI0
0x5316  0x34 0x88 0x01  CALLW 0x0188   // JSON.ExportDictionary

                        // jsonFile.Flush();                                    json.hs:213

0x5319  0x4E            PUSHLOCALB00
0x531A  0x24 0x67       SYSCALL0 0x67  // File.Flush

                        // return true;                                         json.hs:214

0x531C  0x45            PUSHI1
0x531D  0x2B 0x06       RETRETB 0x06


// /source/compiler/json/json.hs:102
// ####  JSON.ExportDictionary(..)  ####                                        0x0188

0x531F  0x49            ENTER

                        // string content = spaces(indent) + '{';               json.hs:103

0x5320  0x24 0x02       SYSCALL0 0x02  // String.New
0x5322  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5324  0x34 0x86 0x01  CALLW 0x0186   // JSON.spaces
0x5327  0x1A 0x7B       PUSHIB 0x7B
0x5329  0x25 0x03       SYSCALL1 0x03  // String.Append
0x532B  0x5D            POPCOPYLOCALB00

                        // jsonFile.Append(content + eol());                    json.hs:104

0x532C  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x532E  0x4E            PUSHLOCALB00
0x532F  0x34 0x85 0x01  CALLW 0x0185   // JSON.eol
0x5332  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5334  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // content = "";                                        json.hs:105

0x5336  0x24 0x02       SYSCALL0 0x02  // String.New
0x5338  0x5D            POPCOPYLOCALB00

                        // indent = indent + 2;                                 json.hs:107

0x5339  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x533B  0x1A 0x02       PUSHIB 0x02
0x533D  0x00            ADD
0x533E  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // string comma = "  ";                                 json.hs:108

0x5340  0x24 0x02       SYSCALL0 0x02  // String.New
0x5342  0x37 0x20 0x20  PUSHIW 0x2020
0x5345  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5347  0x5E            POPCOPYLOCALB02

                        // foreach (var kv in dict)                             json.hs:109

0x5348  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x534A  0x1A 0x0F       PUSHIB 0x0F
0x534C  0x1A 0x0F       PUSHIB 0x0F
0x534E  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x5350  0x44            PUSHI0
0x5351  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x5354  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x5356  0x1B 0x08       POPLOCALB 0x08 (BP+8)
0x5358  0x1B 0x06       POPLOCALB 0x06 (BP+6)
0x535A  0x31 0x17 0x02  JZW 0x5571 (+535)

                        // String.Build(ref content, spaces(indent));           json.hs:111

0x535D  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x535F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5361  0x34 0x86 0x01  CALLW 0x0186   // JSON.spaces
0x5364  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, comma);                    json.hs:112

0x5366  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x5368  0x4F            PUSHLOCALB02
0x5369  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, '"');                      json.hs:113

0x536B  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x536D  0x1A 0x22       PUSHIB 0x22
0x536F  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // String.Build(ref content, kv.key);                   json.hs:114

0x5371  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x5373  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5375  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x5377  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, "\": ");                   json.hs:115

0x5379  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x537B  0x37 0x8C 0x0E  PUSHIW 0x0E8C
0x537E  0x1A 0x03       PUSHIB 0x03
0x5380  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5382  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // switch(typeof(kv.value))                             json.hs:116

0x5384  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5386  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x5388  0x24 0x81       SYSCALL0 0x81  // Types.BoxTypeOf

                        // case int:                                            json.hs:119

0x538A  0x1A 0x02       PUSHIB 0x02
0x538C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x538E  0x05            EQ
0x538F  0x2E 0x21       JZB 0x53B0 (+33)

                        // int v = int(kv.value);                               json.hs:121

0x5391  0x44            PUSHI0
0x5392  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5394  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x5396  0x27 0x00       DUP 0x00
0x5398  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x539A  0x1A 0x14       PUSHIB 0x14
0x539C  0x05            EQ
0x539D  0x2E 0x04       JZB 0x53A1 (+4)
0x539F  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x53A1  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // String.Build(ref content, v.ToString());             json.hs:122

0x53A3  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x53A5  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x53A7  0x2C 0xE3       CALLB 0xE3     // Int.ToString
0x53A9  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:123

0x53AB  0x28 0x02       DECSP 0x02
0x53AD  0x33 0xA4 0x01  JW 0x5551 (+420)

                        // case uint:                                           json.hs:124

0x53B0  0x1A 0x04       PUSHIB 0x04
0x53B2  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x53B4  0x05            EQ
0x53B5  0x2E 0x21       JZB 0x53D6 (+33)

                        // uint v = uint(kv.value);                             json.hs:126

0x53B7  0x44            PUSHI0
0x53B8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x53BA  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x53BC  0x27 0x00       DUP 0x00
0x53BE  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x53C0  0x1A 0x14       PUSHIB 0x14
0x53C2  0x05            EQ
0x53C3  0x2E 0x04       JZB 0x53C7 (+4)
0x53C5  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x53C7  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // String.Build(ref content, v.ToString());             json.hs:127

0x53C9  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x53CB  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x53CD  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x53CF  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:128

0x53D1  0x28 0x02       DECSP 0x02
0x53D3  0x33 0x7E 0x01  JW 0x5551 (+382)

                        // case byte:                                           json.hs:129

0x53D6  0x1A 0x03       PUSHIB 0x03
0x53D8  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x53DA  0x05            EQ
0x53DB  0x2E 0x21       JZB 0x53FC (+33)

                        // byte v = byte(kv.value);                             json.hs:131

0x53DD  0x44            PUSHI0
0x53DE  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x53E0  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x53E2  0x27 0x00       DUP 0x00
0x53E4  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x53E6  0x1A 0x14       PUSHIB 0x14
0x53E8  0x05            EQ
0x53E9  0x2E 0x04       JZB 0x53ED (+4)
0x53EB  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x53ED  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // String.Build(ref content, v.ToString());             json.hs:132

0x53EF  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x53F1  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x53F3  0x2C 0xE1       CALLB 0xE1     // Byte.ToString
0x53F5  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:133

0x53F7  0x28 0x02       DECSP 0x02
0x53F9  0x33 0x58 0x01  JW 0x5551 (+344)

                        // case long:                                           json.hs:134

0x53FC  0x1A 0x0E       PUSHIB 0x0E
0x53FE  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5400  0x05            EQ
0x5401  0x2E 0x22       JZB 0x5423 (+34)

                        // long v = long(kv.value);                             json.hs:136

0x5403  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x5405  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5407  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x5409  0x27 0x00       DUP 0x00
0x540B  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x540D  0x1A 0x14       PUSHIB 0x14
0x540F  0x05            EQ
0x5410  0x2E 0x04       JZB 0x5414 (+4)
0x5412  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x5414  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // String.Build(ref content, v.ToString());             json.hs:137

0x5416  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x5418  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x541A  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x541C  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:138

0x541E  0x28 0x02       DECSP 0x02
0x5420  0x33 0x31 0x01  JW 0x5551 (+305)

                        // case float:                                          json.hs:139

0x5423  0x1A 0x0D       PUSHIB 0x0D
0x5425  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5427  0x05            EQ
0x5428  0x2E 0x22       JZB 0x544A (+34)

                        // float v = float(kv.value);                           json.hs:141

0x542A  0x24 0x4C       SYSCALL0 0x4C  // Float.New
0x542C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x542E  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x5430  0x27 0x00       DUP 0x00
0x5432  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x5434  0x1A 0x14       PUSHIB 0x14
0x5436  0x05            EQ
0x5437  0x2E 0x04       JZB 0x543B (+4)
0x5439  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x543B  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // String.Build(ref content, v.ToString());             json.hs:142

0x543D  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x543F  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x5441  0x24 0x4A       SYSCALL0 0x4A  // Float.ToString
0x5443  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:143

0x5445  0x28 0x02       DECSP 0x02
0x5447  0x33 0x0A 0x01  JW 0x5551 (+266)

                        // case string:                                         json.hs:144

0x544A  0x1A 0x0F       PUSHIB 0x0F
0x544C  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x544E  0x05            EQ
0x544F  0x2E 0x21       JZB 0x5470 (+33)

                        // string v = kv.value;                                 json.hs:146

0x5451  0x24 0x02       SYSCALL0 0x02  // String.New
0x5453  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5455  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x5457  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // String.Build(ref content, '"');                      json.hs:147

0x5459  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x545B  0x1A 0x22       PUSHIB 0x22
0x545D  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // String.Build(ref content, v);                        json.hs:148

0x545F  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x5461  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x5463  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, '"');                      json.hs:149

0x5465  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x5467  0x1A 0x22       PUSHIB 0x22
0x5469  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // }                                                    json.hs:150

0x546B  0x28 0x02       DECSP 0x02
0x546D  0x33 0xE4 0x00  JW 0x5551 (+228)

                        // case bool:                                           json.hs:151

0x5470  0x1A 0x06       PUSHIB 0x06
0x5472  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5474  0x05            EQ
0x5475  0x2E 0x35       JZB 0x54AA (+53)

                        // bool v = bool(kv.value);                             json.hs:153

0x5477  0x44            PUSHI0
0x5478  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x547A  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x547C  0x27 0x00       DUP 0x00
0x547E  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x5480  0x1A 0x14       PUSHIB 0x14
0x5482  0x05            EQ
0x5483  0x2E 0x04       JZB 0x5487 (+4)
0x5485  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x5487  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // if (v)                                               json.hs:154

0x5489  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x548B  0x2E 0x0F       JZB 0x549A (+15)

                        // String.Build(ref content, "true");                   json.hs:156

0x548D  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x548F  0x37 0x45 0x07  PUSHIW 0x0745
0x5492  0x1A 0x04       PUSHIB 0x04
0x5494  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5496  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:157

0x5498  0x30 0x0D       JB 0x54A5 (+13)

                        // String.Build(ref content, "false");                  json.hs:160

0x549A  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x549C  0x37 0x49 0x07  PUSHIW 0x0749
0x549F  0x1A 0x05       PUSHIB 0x05
0x54A1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x54A3  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:162

0x54A5  0x28 0x02       DECSP 0x02
0x54A7  0x33 0xAA 0x00  JW 0x5551 (+170)

                        // case list:                                           json.hs:163

0x54AA  0x1A 0x19       PUSHIB 0x19
0x54AC  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x54AE  0x05            EQ
0x54AF  0x2E 0x27       JZB 0x54D6 (+39)

                        // <variant> v = kv.value;                              json.hs:165

0x54B1  0x1A 0x14       PUSHIB 0x14
0x54B3  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x54B5  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x54B7  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x54B9  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // String.Build(ref content, char(0x0A));               json.hs:166

0x54BB  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x54BD  0x1A 0x0A       PUSHIB 0x0A
0x54BF  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // jsonFile.Append(content);                            json.hs:167

0x54C1  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x54C3  0x4E            PUSHLOCALB00
0x54C4  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // content = "";                                        json.hs:168

0x54C6  0x24 0x02       SYSCALL0 0x02  // String.New
0x54C8  0x5D            POPCOPYLOCALB00

                        // ExportList(jsonFile, v, indent);                     json.hs:169

0x54C9  0x56 0xFA 0x0C  PUSHLOCALBB 0x0CFA
0x54CC  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x54CE  0x34 0x87 0x01  CALLW 0x0187   // JSON.ExportList

                        // }                                                    json.hs:170

0x54D1  0x28 0x02       DECSP 0x02
0x54D3  0x33 0x7E 0x00  JW 0x5551 (+126)

                        // case dictionary:                                     json.hs:171

0x54D6  0x1A 0x13       PUSHIB 0x13
0x54D8  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x54DA  0x05            EQ
0x54DB  0x2E 0x28       JZB 0x5503 (+40)

                        // <string, variant> v = kv.value;                      json.hs:173

0x54DD  0x1A 0x0F       PUSHIB 0x0F
0x54DF  0x1A 0x14       PUSHIB 0x14
0x54E1  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x54E3  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x54E5  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x54E7  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // String.Build(ref content, char(0x0A));               json.hs:174

0x54E9  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x54EB  0x1A 0x0A       PUSHIB 0x0A
0x54ED  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // jsonFile.Append(content);                            json.hs:175

0x54EF  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x54F1  0x4E            PUSHLOCALB00
0x54F2  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // content = "";                                        json.hs:176

0x54F4  0x24 0x02       SYSCALL0 0x02  // String.New
0x54F6  0x5D            POPCOPYLOCALB00

                        // ExportDictionary(jsonFile, v, indent);               json.hs:177

0x54F7  0x56 0xFA 0x0C  PUSHLOCALBB 0x0CFA
0x54FA  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x54FC  0x34 0x88 0x01  CALLW 0x0188   // JSON.ExportDictionary

                        // }                                                    json.hs:178

0x54FF  0x28 0x02       DECSP 0x02
0x5501  0x30 0x50       JB 0x5551 (+80)

                        // type tt = typeof(kv.value);                          json.hs:182

0x5503  0x44            PUSHI0
0x5504  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5506  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x5508  0x24 0x81       SYSCALL0 0x81  // Types.BoxTypeOf
0x550A  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // uint ut = uint(tt);                                  json.hs:183

0x550C  0x44            PUSHI0
0x550D  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x550F  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // string ts = tt.ToString();                           json.hs:184

0x5511  0x24 0x02       SYSCALL0 0x02  // String.New
0x5513  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x5515  0x34 0x45 0x01  CALLW 0x0145   // Type.ToString
0x5518  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // content = content + "unsupported '" + ts + "' (0x" + ut.ToHexString(2) + ") in <string, variant>, (key=" + kv.key + ")";

0x551A  0x4E            PUSHLOCALB00
0x551B  0x37 0x8F 0x0E  PUSHIW 0x0E8F
0x551E  0x1A 0x0D       PUSHIB 0x0D
0x5520  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5522  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5524  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x5526  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5528  0x37 0xDB 0x06  PUSHIW 0x06DB
0x552B  0x1A 0x05       PUSHIB 0x05
0x552D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x552F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5531  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x5533  0x1A 0x02       PUSHIB 0x02
0x5535  0x2C 0xEA       CALLB 0xEA     // UInt.ToHexString
0x5537  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5539  0x37 0x9C 0x0E  PUSHIW 0x0E9C
0x553C  0x1A 0x1D       PUSHIB 0x1D
0x553E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5540  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5542  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x5544  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x5546  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5548  0x1A 0x29       PUSHIB 0x29
0x554A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x554C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x554E  0x5D            POPCOPYLOCALB00

                        // }                                                    json.hs:187

0x554F  0x28 0x06       DECSP 0x06

                        // }                                                    json.hs:188

0x5551  0x28 0x02       DECSP 0x02

                        // if (content.Length > 0)                              json.hs:189

0x5553  0x4E            PUSHLOCALB00
0x5554  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x5556  0x44            PUSHI0
0x5557  0x07            GT
0x5558  0x2E 0x10       JZB 0x5568 (+16)

                        // String.Build(ref content, char(0x0A));               json.hs:191

0x555A  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x555C  0x1A 0x0A       PUSHIB 0x0A
0x555E  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // jsonFile.Append(content);                            json.hs:192

0x5560  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5562  0x4E            PUSHLOCALB00
0x5563  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // content = "";                                        json.hs:193

0x5565  0x24 0x02       SYSCALL0 0x02  // String.New
0x5567  0x5D            POPCOPYLOCALB00

                        // comma = ", ";                                        json.hs:195

0x5568  0x37 0x2C 0x20  PUSHIW 0x202C
0x556B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x556D  0x5E            POPCOPYLOCALB02

                        // }                                                    json.hs:196

0x556E  0x33 0xE3 0xFD  JW 0x5351 (-541)
0x5571  0x28 0x06       DECSP 0x06

                        // indent = indent - 2;                                 json.hs:197

0x5573  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5575  0x1A 0x02       PUSHIB 0x02
0x5577  0x01            SUB
0x5578  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // String.Build(ref content, spaces(indent));           json.hs:198

0x557A  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x557C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x557E  0x34 0x86 0x01  CALLW 0x0186   // JSON.spaces
0x5581  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, '}');                      json.hs:199

0x5583  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x5585  0x1A 0x7D       PUSHIB 0x7D
0x5587  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // String.Build(ref content, char(0x0A));               json.hs:200

0x5589  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x558B  0x1A 0x0A       PUSHIB 0x0A
0x558D  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // jsonFile.Append(content);                            json.hs:201

0x558F  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5591  0x4E            PUSHLOCALB00
0x5592  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    json.hs:202

0x5594  0x2A 0x0A       RETB 0x0A


// /source/compiler/json/json.hs:12
// ####  JSON.spaces(..)  ####                                                  0x0186

0x5596  0x49            ENTER

                        // string spaces;                                       json.hs:13

0x5597  0x24 0x02       SYSCALL0 0x02  // String.New

                        // spaces = spaces.Pad(' ', count);                     json.hs:14

0x5599  0x4E            PUSHLOCALB00
0x559A  0x1A 0x20       PUSHIB 0x20
0x559C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x559E  0x34 0x10 0x01  CALLW 0x0110   // String.Pad
0x55A1  0x5D            POPCOPYLOCALB00

                        // return spaces;                                       json.hs:15

0x55A2  0x4E            PUSHLOCALB00
0x55A3  0x2B 0x04       RETRETB 0x04


// /source/compiler/json/json.hs:8
// ####  JSON.eol(..)  ####                                                     0x0185

0x55A5  0x49            ENTER

                        // return "" + char(0x0A);                              json.hs:9

0x55A6  0x24 0x02       SYSCALL0 0x02  // String.New
0x55A8  0x1A 0x0A       PUSHIB 0x0A
0x55AA  0x25 0x03       SYSCALL1 0x03  // String.Append
0x55AC  0x4A            RET0


// /source/compiler/json/json.hs:20
// ####  JSON.ExportList(..)  ####                                              0x0187


                        // uint entries;                                        json.hs:21

0x55AD  0x5F 0x01       ENTERB 0x01

                        // string content;                                      json.hs:22

0x55AF  0x24 0x02       SYSCALL0 0x02  // String.New

                        // string comma;                                        json.hs:23

0x55B1  0x24 0x02       SYSCALL0 0x02  // String.New

                        // indent = indent + 2;                                 json.hs:24

0x55B3  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x55B5  0x1A 0x02       PUSHIB 0x02
0x55B7  0x00            ADD
0x55B8  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // content = spaces(indent) + '[';                      json.hs:25

0x55BA  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x55BC  0x34 0x86 0x01  CALLW 0x0186   // JSON.spaces
0x55BF  0x1A 0x5B       PUSHIB 0x5B
0x55C1  0x25 0x03       SYSCALL1 0x03  // String.Append
0x55C3  0x5E            POPCOPYLOCALB02

                        // foreach (var vv in lst)                              json.hs:26

0x55C4  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x55C6  0x44            PUSHI0
0x55C7  0x44            PUSHI0
0x55C8  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x55CA  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x55CC  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x55CE  0x05            EQ
0x55CF  0x32 0x85 0x01  JNZW 0x5754 (+389)
0x55D2  0x56 0x06 0x0A  PUSHLOCALBB 0x0A06
0x55D5  0x24 0x14       SYSCALL0 0x14  // List.GetItemAsVariant
0x55D7  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // String.Build(ref content, comma);                    json.hs:28

0x55D9  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x55DB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x55DD  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // switch(typeof(vv))                                   json.hs:29

0x55DF  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x55E1  0x24 0x81       SYSCALL0 0x81  // Types.BoxTypeOf

                        // case byte:                                           json.hs:31

0x55E3  0x1A 0x03       PUSHIB 0x03
0x55E5  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x55E7  0x05            EQ
0x55E8  0x2E 0x44       JZB 0x562C (+68)

                        // byte v = byte(vv);                                   json.hs:33

0x55EA  0x44            PUSHI0
0x55EB  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x55ED  0x27 0x00       DUP 0x00
0x55EF  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x55F1  0x1A 0x14       PUSHIB 0x14
0x55F3  0x05            EQ
0x55F4  0x2E 0x04       JZB 0x55F8 (+4)
0x55F6  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x55F8  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // entries++;                                           json.hs:34

0x55FA  0x22 0x00       INCLOCALB 0x00 (BP+0)

                        // if ((entries % 16) == 0)                             json.hs:35

0x55FC  0x4E            PUSHLOCALB00
0x55FD  0x1A 0x10       PUSHIB 0x10
0x55FF  0x04            MOD
0x5600  0x2F 0x14       JNZB 0x5614 (+20)

                        // jsonFile.Append(content + eol());                    json.hs:37

0x5602  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5604  0x4F            PUSHLOCALB02
0x5605  0x34 0x85 0x01  CALLW 0x0185   // JSON.eol
0x5608  0x24 0x03       SYSCALL0 0x03  // String.Append
0x560A  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // content = spaces(indent+1);                          json.hs:38

0x560C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x560E  0x45            PUSHI1
0x560F  0x00            ADD
0x5610  0x34 0x86 0x01  CALLW 0x0186   // JSON.spaces
0x5613  0x5E            POPCOPYLOCALB02

                        // String.Build(ref content, "0x");                     json.hs:40

0x5614  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x5616  0x37 0x30 0x78  PUSHIW 0x7830
0x5619  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x561B  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, v.ToHexString(2));

0x561D  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x561F  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x5621  0x1A 0x02       PUSHIB 0x02
0x5623  0x2C 0xE2       CALLB 0xE2     // Byte.ToHexString
0x5625  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:42

0x5627  0x28 0x02       DECSP 0x02
0x5629  0x33 0x1D 0x01  JW 0x5746 (+285)

                        // case uint:                                           json.hs:43

0x562C  0x1A 0x04       PUSHIB 0x04
0x562E  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x5630  0x05            EQ
0x5631  0x2E 0x1F       JZB 0x5650 (+31)

                        // uint v = uint(vv);                                   json.hs:45

0x5633  0x44            PUSHI0
0x5634  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5636  0x27 0x00       DUP 0x00
0x5638  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x563A  0x1A 0x14       PUSHIB 0x14
0x563C  0x05            EQ
0x563D  0x2E 0x04       JZB 0x5641 (+4)
0x563F  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x5641  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // String.Build(ref content, v.ToString());             json.hs:46

0x5643  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x5645  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x5647  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x5649  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:47

0x564B  0x28 0x02       DECSP 0x02
0x564D  0x33 0xF9 0x00  JW 0x5746 (+249)

                        // case int:                                            json.hs:48

0x5650  0x1A 0x02       PUSHIB 0x02
0x5652  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x5654  0x05            EQ
0x5655  0x2E 0x1F       JZB 0x5674 (+31)

                        // int v = int(vv);                                     json.hs:50

0x5657  0x44            PUSHI0
0x5658  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x565A  0x27 0x00       DUP 0x00
0x565C  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x565E  0x1A 0x14       PUSHIB 0x14
0x5660  0x05            EQ
0x5661  0x2E 0x04       JZB 0x5665 (+4)
0x5663  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x5665  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // String.Build(ref content, v.ToString());             json.hs:51

0x5667  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x5669  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x566B  0x2C 0xE3       CALLB 0xE3     // Int.ToString
0x566D  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:52

0x566F  0x28 0x02       DECSP 0x02
0x5671  0x33 0xD5 0x00  JW 0x5746 (+213)

                        // case long:                                           json.hs:53

0x5674  0x1A 0x0E       PUSHIB 0x0E
0x5676  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x5678  0x05            EQ
0x5679  0x2E 0x20       JZB 0x5699 (+32)

                        // long v = long(vv);                                   json.hs:55

0x567B  0x24 0x3D       SYSCALL0 0x3D  // Long.New
0x567D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x567F  0x27 0x00       DUP 0x00
0x5681  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x5683  0x1A 0x14       PUSHIB 0x14
0x5685  0x05            EQ
0x5686  0x2E 0x04       JZB 0x568A (+4)
0x5688  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x568A  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // String.Build(ref content, v.ToString());             json.hs:56

0x568C  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x568E  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x5690  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x5692  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:57

0x5694  0x28 0x02       DECSP 0x02
0x5696  0x33 0xB0 0x00  JW 0x5746 (+176)

                        // case float:                                          json.hs:58

0x5699  0x1A 0x0D       PUSHIB 0x0D
0x569B  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x569D  0x05            EQ
0x569E  0x2E 0x20       JZB 0x56BE (+32)

                        // float v = float(vv);                                 json.hs:60

0x56A0  0x24 0x4C       SYSCALL0 0x4C  // Float.New
0x56A2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x56A4  0x27 0x00       DUP 0x00
0x56A6  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x56A8  0x1A 0x14       PUSHIB 0x14
0x56AA  0x05            EQ
0x56AB  0x2E 0x04       JZB 0x56AF (+4)
0x56AD  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x56AF  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // String.Build(ref content, v.ToString());             json.hs:61

0x56B1  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x56B3  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x56B5  0x24 0x4A       SYSCALL0 0x4A  // Float.ToString
0x56B7  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:62

0x56B9  0x28 0x02       DECSP 0x02
0x56BB  0x33 0x8B 0x00  JW 0x5746 (+139)

                        // case string:                                         json.hs:63

0x56BE  0x1A 0x0F       PUSHIB 0x0F
0x56C0  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x56C2  0x05            EQ
0x56C3  0x2E 0x1E       JZB 0x56E1 (+30)

                        // string v = vv;                                       json.hs:65

0x56C5  0x24 0x02       SYSCALL0 0x02  // String.New
0x56C7  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x56C9  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // String.Build(ref content, '"');                      json.hs:66

0x56CB  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x56CD  0x1A 0x22       PUSHIB 0x22
0x56CF  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // String.Build(ref content, v);                        json.hs:67

0x56D1  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x56D3  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x56D5  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, '"');                      json.hs:68

0x56D7  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x56D9  0x1A 0x22       PUSHIB 0x22
0x56DB  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // }                                                    json.hs:69

0x56DD  0x28 0x02       DECSP 0x02
0x56DF  0x30 0x67       JB 0x5746 (+103)

                        // case bool:                                           json.hs:70

0x56E1  0x1A 0x06       PUSHIB 0x06
0x56E3  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x56E5  0x05            EQ
0x56E6  0x2E 0x32       JZB 0x5718 (+50)

                        // bool v = bool(vv);                                   json.hs:72

0x56E8  0x44            PUSHI0
0x56E9  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x56EB  0x27 0x00       DUP 0x00
0x56ED  0x24 0x7E       SYSCALL0 0x7E  // Types.TypeOf
0x56EF  0x1A 0x14       PUSHIB 0x14
0x56F1  0x05            EQ
0x56F2  0x2E 0x04       JZB 0x56F6 (+4)
0x56F4  0x24 0x28       SYSCALL0 0x28  // Variant.UnBox
0x56F6  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // if (v)                                               json.hs:73

0x56F8  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x56FA  0x2E 0x0F       JZB 0x5709 (+15)

                        // String.Build(ref content, "true");                   json.hs:75

0x56FC  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x56FE  0x37 0x45 0x07  PUSHIW 0x0745
0x5701  0x1A 0x04       PUSHIB 0x04
0x5703  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5705  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:76

0x5707  0x30 0x0D       JB 0x5714 (+13)

                        // String.Build(ref content, "false");                  json.hs:79

0x5709  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x570B  0x37 0x49 0x07  PUSHIW 0x0749
0x570E  0x1A 0x05       PUSHIB 0x05
0x5710  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5712  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:81

0x5714  0x28 0x02       DECSP 0x02
0x5716  0x30 0x30       JB 0x5746 (+48)

                        // type tt = typeof(vv);                                json.hs:85

0x5718  0x44            PUSHI0
0x5719  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x571B  0x24 0x81       SYSCALL0 0x81  // Types.BoxTypeOf
0x571D  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // string ts = tt.ToString();                           json.hs:86

0x571F  0x24 0x02       SYSCALL0 0x02  // String.New
0x5721  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x5723  0x34 0x45 0x01  CALLW 0x0145   // Type.ToString
0x5726  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // String.Build(ref content, "unsupported '");

0x5728  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x572A  0x37 0x8F 0x0E  PUSHIW 0x0E8F
0x572D  0x1A 0x0D       PUSHIB 0x0D
0x572F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5731  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, ts);                       json.hs:88

0x5733  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x5735  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x5737  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // String.Build(ref content, "' in <variant>");

0x5739  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x573B  0x37 0xB9 0x0E  PUSHIW 0x0EB9
0x573E  0x1A 0x0E       PUSHIB 0x0E
0x5740  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5742  0x24 0x83       SYSCALL0 0x83  // String.Build

                        // }                                                    json.hs:91

0x5744  0x28 0x04       DECSP 0x04

                        // }                                                    json.hs:92

0x5746  0x28 0x02       DECSP 0x02

                        // comma = ", ";                                        json.hs:93

0x5748  0x37 0x2C 0x20  PUSHIW 0x202C
0x574B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x574D  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // }                                                    json.hs:94

0x574F  0x22 0x0A       INCLOCALB 0x0A (BP+10)
0x5751  0x33 0x77 0xFE  JW 0x55C8 (-393)
0x5754  0x28 0x06       DECSP 0x06

                        // String.Build(ref content, ']');                      json.hs:95

0x5756  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x5758  0x1A 0x5D       PUSHIB 0x5D
0x575A  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // String.Build(ref content, char(0x0A));               json.hs:96

0x575C  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x575E  0x1A 0x0A       PUSHIB 0x0A
0x5760  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // jsonFile.Append(content);                            json.hs:97

0x5762  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5764  0x4F            PUSHLOCALB02
0x5765  0x25 0x66       SYSCALL1 0x66  // File.Append

                        // }                                                    json.hs:98

0x5767  0x2A 0x0C       RETB 0x0C


// /source/compiler/types.hs:835
// ####  Types.ArgumentsEqual(..)  ####                                         0x01AD


                        // bool equal = true;                                   types.hs:836

0x5769  0x5F 0x01       ENTERB 0x01

                        // bool equal = true;                                   types.hs:836

0x576B  0x45            PUSHI1
0x576C  0x4C            POPLOCALB00

                        // uint lActual = actual.Length;                        types.hs:839

0x576D  0x44            PUSHI0
0x576E  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5770  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x5772  0x4D            POPLOCALB02

                        // uint lTarget = target.Length;                        types.hs:840

0x5773  0x44            PUSHI0
0x5774  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5776  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x5778  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (lActual != lTarget)                              types.hs:841

0x577A  0x4F            PUSHLOCALB02
0x577B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x577D  0x06            NE
0x577E  0x2E 0x09       JZB 0x5787 (+9)

                        // equal = false;                                       types.hs:843

0x5780  0x44            PUSHI0
0x5781  0x4C            POPLOCALB00

                        // break;                                               types.hs:844

0x5782  0x28 0x04       DECSP 0x04
0x5784  0x33 0x15 0x02  JW 0x5999 (+533)

                        // for (uint i=0; i < lActual; i++)                     types.hs:846

0x5787  0x44            PUSHI0
0x5788  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x578A  0x4F            PUSHLOCALB02
0x578B  0x08            LT
0x578C  0x31 0x09 0x02  JZW 0x5995 (+521)

                        // <string> actualList = actual[i];                     types.hs:848

0x578F  0x1A 0x0F       PUSHIB 0x0F
0x5791  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x5793  0x56 0xF8 0x06  PUSHLOCALBB 0x06F8
0x5796  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5798  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // <string> targetList = target[i];                     types.hs:849

0x579A  0x1A 0x0F       PUSHIB 0x0F
0x579C  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x579E  0x56 0xFA 0x06  PUSHLOCALBB 0x06FA
0x57A1  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x57A3  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (actualList.Length != 3)                          types.hs:850

0x57A5  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x57A7  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x57A9  0x1A 0x03       PUSHIB 0x03
0x57AB  0x06            NE
0x57AC  0x2E 0x09       JZB 0x57B5 (+9)

                        // equal = false;                                       types.hs:852

0x57AE  0x44            PUSHI0
0x57AF  0x4C            POPLOCALB00

                        // break;                                               types.hs:853

0x57B0  0x28 0x06       DECSP 0x06
0x57B2  0x33 0xE5 0x01  JW 0x5997 (+485)

                        // if (targetList.Length != 3)                          types.hs:855

0x57B5  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x57B7  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x57B9  0x1A 0x03       PUSHIB 0x03
0x57BB  0x06            NE
0x57BC  0x2E 0x09       JZB 0x57C5 (+9)

                        // equal = false;                                       types.hs:857

0x57BE  0x44            PUSHI0
0x57BF  0x4C            POPLOCALB00

                        // break;                                               types.hs:858

0x57C0  0x28 0x06       DECSP 0x06
0x57C2  0x33 0xD5 0x01  JW 0x5997 (+469)

                        // if (actualList[0] != targetList[0]) // ref           types.hs:860

0x57C5  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x57C7  0x44            PUSHI0
0x57C8  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x57CA  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x57CC  0x44            PUSHI0
0x57CD  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x57CF  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x57D1  0x2E 0x09       JZB 0x57DA (+9)

                        // equal = false;                                       types.hs:862

0x57D3  0x44            PUSHI0
0x57D4  0x4C            POPLOCALB00

                        // break;                                               types.hs:863

0x57D5  0x28 0x06       DECSP 0x06
0x57D7  0x33 0xC0 0x01  JW 0x5997 (+448)

                        // bool localUpCastAllowed = upCastAllowed;             types.hs:866

0x57DA  0x44            PUSHI0
0x57DB  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x57DD  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // if (!localUpCastAllowed && nameCastAllowed)

0x57DF  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x57E1  0x41            BOOLNOT
0x57E2  0x27 0x00       DUP 0x00
0x57E4  0x2E 0x05       JZB 0x57E9 (+5)
0x57E6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x57E8  0x0C            BOOLAND
0x57E9  0x31 0x7E 0x00  JZW 0x5867 (+126)

                        // localUpCastAllowed = (actualList[1] == "enum") ||

0x57EC  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x57EE  0x45            PUSHI1
0x57EF  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x57F1  0x37 0xB9 0x01  PUSHIW 0x01B9
0x57F4  0x1A 0x04       PUSHIB 0x04
0x57F6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x57F8  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x57FA  0x44            PUSHI0
0x57FB  0x05            EQ
0x57FC  0x27 0x00       DUP 0x00
0x57FE  0x2F 0x67       JNZB 0x5865 (+103)
0x5800  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5802  0x45            PUSHI1
0x5803  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5805  0x37 0xBD 0x01  PUSHIW 0x01BD
0x5808  0x1A 0x05       PUSHIB 0x05
0x580A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x580C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x580E  0x44            PUSHI0
0x580F  0x05            EQ
0x5810  0x0B            BOOLOR
0x5811  0x27 0x00       DUP 0x00
0x5813  0x2F 0x52       JNZB 0x5865 (+82)
0x5815  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5817  0x45            PUSHI1
0x5818  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x581A  0x37 0xA5 0x01  PUSHIW 0x01A5
0x581D  0x1A 0x08       PUSHIB 0x08
0x581F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5821  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5823  0x44            PUSHI0
0x5824  0x05            EQ
0x5825  0x0B            BOOLOR
0x5826  0x27 0x00       DUP 0x00
0x5828  0x2F 0x3D       JNZB 0x5865 (+61)
0x582A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x582C  0x45            PUSHI1
0x582D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x582F  0x37 0xB9 0x01  PUSHIW 0x01B9
0x5832  0x1A 0x04       PUSHIB 0x04
0x5834  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5836  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5838  0x44            PUSHI0
0x5839  0x05            EQ
0x583A  0x0B            BOOLOR
0x583B  0x27 0x00       DUP 0x00
0x583D  0x2F 0x28       JNZB 0x5865 (+40)
0x583F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5841  0x45            PUSHI1
0x5842  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5844  0x37 0xBD 0x01  PUSHIW 0x01BD
0x5847  0x1A 0x05       PUSHIB 0x05
0x5849  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x584B  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x584D  0x44            PUSHI0
0x584E  0x05            EQ
0x584F  0x0B            BOOLOR
0x5850  0x27 0x00       DUP 0x00
0x5852  0x2F 0x13       JNZB 0x5865 (+19)
0x5854  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5856  0x45            PUSHI1
0x5857  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5859  0x37 0xA5 0x01  PUSHIW 0x01A5
0x585C  0x1A 0x08       PUSHIB 0x08
0x585E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5860  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5862  0x44            PUSHI0
0x5863  0x05            EQ
0x5864  0x0B            BOOLOR
0x5865  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // if (actualList[0] == "ref")                          types.hs:876

0x5867  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5869  0x44            PUSHI0
0x586A  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x586C  0x37 0xA5 0x04  PUSHIW 0x04A5
0x586F  0x1A 0x03       PUSHIB 0x03
0x5871  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5873  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5875  0x2F 0x05       JNZB 0x587A (+5)

                        // localUpCastAllowed = false;                          types.hs:878

0x5877  0x44            PUSHI0
0x5878  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // if (actualList[1] != targetList[1]) // type

0x587A  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x587C  0x45            PUSHI1
0x587D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x587F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5881  0x45            PUSHI1
0x5882  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5884  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5886  0x31 0x08 0x01  JZW 0x598E (+264)

                        // if (!localUpCastAllowed)                             types.hs:890

0x5889  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x588B  0x2F 0x09       JNZB 0x5894 (+9)

                        // equal = false;                                       types.hs:892

0x588D  0x44            PUSHI0
0x588E  0x4C            POPLOCALB00

                        // break;                                               types.hs:893

0x588F  0x28 0x08       DECSP 0x08
0x5891  0x33 0x06 0x01  JW 0x5997 (+262)

                        // else if (AutomaticUpCast(actualList[1], targetList[1], false, false))

0x5894  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5896  0x45            PUSHI1
0x5897  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5899  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x589B  0x45            PUSHI1
0x589C  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x589E  0x44            PUSHI0
0x589F  0x44            PUSHI0
0x58A0  0x34 0x91 0x01  CALLW 0x0191   // Types.AutomaticUpCast
0x58A3  0x32 0xEB 0x00  JNZW 0x598E (+235)

                        // string targetString = targetList[1];                 types.hs:901

0x58A6  0x24 0x02       SYSCALL0 0x02  // String.New
0x58A8  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x58AA  0x45            PUSHI1
0x58AB  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x58AD  0x57 0x0E       POPCOPYLOCALB 0x0E (BP+14)

                        // if ( (targetString == "K")                           types.hs:902

0x58AF  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x58B1  0x1A 0x4B       PUSHIB 0x4B
0x58B3  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x58B5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x58B7  0x44            PUSHI0
0x58B8  0x05            EQ
0x58B9  0x27 0x00       DUP 0x00
0x58BB  0x2F 0x43       JNZB 0x58FE (+67)
0x58BD  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x58BF  0x1A 0x56       PUSHIB 0x56
0x58C1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x58C3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x58C5  0x44            PUSHI0
0x58C6  0x05            EQ
0x58C7  0x0B            BOOLOR
0x58C8  0x27 0x00       DUP 0x00
0x58CA  0x2F 0x34       JNZB 0x58FE (+52)
0x58CC  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x58CE  0x37 0x62 0x03  PUSHIW 0x0362
0x58D1  0x1A 0x05       PUSHIB 0x05
0x58D3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x58D5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x58D7  0x44            PUSHI0
0x58D8  0x05            EQ
0x58D9  0x0B            BOOLOR
0x58DA  0x27 0x00       DUP 0x00
0x58DC  0x2F 0x22       JNZB 0x58FE (+34)
0x58DE  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x58E0  0x37 0x55 0x03  PUSHIW 0x0355
0x58E3  0x1A 0x03       PUSHIB 0x03
0x58E5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x58E7  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x58E9  0x44            PUSHI0
0x58EA  0x05            EQ
0x58EB  0x0B            BOOLOR
0x58EC  0x27 0x00       DUP 0x00
0x58EE  0x2F 0x10       JNZB 0x58FE (+16)
0x58F0  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x58F2  0x37 0x4E 0x03  PUSHIW 0x034E
0x58F5  0x1A 0x03       PUSHIB 0x03
0x58F7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x58F9  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x58FB  0x44            PUSHI0
0x58FC  0x05            EQ
0x58FD  0x0B            BOOLOR
0x58FE  0x32 0x8E 0x00  JNZW 0x598C (+142)

                        // else if (Types.IsEnum(actualList[1]) && Types.IsEnum(targetList[1]))

0x5901  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5903  0x45            PUSHI1
0x5904  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5906  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x5909  0x27 0x00       DUP 0x00
0x590B  0x2E 0x0B       JZB 0x5916 (+11)
0x590D  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x590F  0x45            PUSHI1
0x5910  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5912  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x5915  0x0C            BOOLAND
0x5916  0x2E 0x0D       JZB 0x5923 (+13)

                        // Die(10);                                             types.hs:914

0x5918  0x1A 0x0A       PUSHIB 0x0A
0x591A  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // equal = false;                                       types.hs:915

0x591C  0x44            PUSHI0
0x591D  0x4C            POPLOCALB00

                        // break;                                               types.hs:916

0x591E  0x28 0x0A       DECSP 0x0A
0x5920  0x33 0x77 0x00  JW 0x5997 (+119)

                        // else if (Types.IsFlags(actualList[1]) && Types.IsFlags(targetList[1]))

0x5923  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5925  0x45            PUSHI1
0x5926  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5928  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x592B  0x27 0x00       DUP 0x00
0x592D  0x2E 0x0B       JZB 0x5938 (+11)
0x592F  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5931  0x45            PUSHI1
0x5932  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5934  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x5937  0x0C            BOOLAND
0x5938  0x2E 0x0C       JZB 0x5944 (+12)

                        // Die(10);                                             types.hs:921

0x593A  0x1A 0x0A       PUSHIB 0x0A
0x593C  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // equal = false;                                       types.hs:922

0x593E  0x44            PUSHI0
0x593F  0x4C            POPLOCALB00

                        // break;                                               types.hs:923

0x5940  0x28 0x0A       DECSP 0x0A
0x5942  0x30 0x55       JB 0x5997 (+85)

                        // else if (Types.IsDelegate(actualList[1]) && Types.IsDelegate(targetList[1]))

0x5944  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x5946  0x45            PUSHI1
0x5947  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5949  0x34 0xAB 0x01  CALLW 0x01AB   // Types.IsDelegate
0x594C  0x27 0x00       DUP 0x00
0x594E  0x2E 0x0B       JZB 0x5959 (+11)
0x5950  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x5952  0x45            PUSHI1
0x5953  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5955  0x34 0xAB 0x01  CALLW 0x01AB   // Types.IsDelegate
0x5958  0x0C            BOOLAND
0x5959  0x2E 0x2D       JZB 0x5986 (+45)

                        // string leftType  = Symbols.QualifyDelegate(actualList[1], currentNamespace);

0x595B  0x24 0x02       SYSCALL0 0x02  // String.New
0x595D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x595F  0x45            PUSHI1
0x5960  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x5962  0x20 0x9A       PUSHGLOBALB 0x9A
0x5964  0x2C 0xA4       CALLB 0xA4     // Symbols.QualifyDelegate
0x5966  0x57 0x10       POPCOPYLOCALB 0x10 (BP+16)

                        // string rightType = Symbols.QualifyDelegate(targetList[1], currentNamespace);

0x5968  0x24 0x02       SYSCALL0 0x02  // String.New
0x596A  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x596C  0x45            PUSHI1
0x596D  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x596F  0x20 0x9A       PUSHGLOBALB 0x9A
0x5971  0x2C 0xA4       CALLB 0xA4     // Symbols.QualifyDelegate
0x5973  0x57 0x12       POPCOPYLOCALB 0x12 (BP+18)

                        // if (leftType == rightType)                           types.hs:930

0x5975  0x56 0x10 0x12  PUSHLOCALBB 0x1210
0x5978  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x597A  0x2E 0x08       JZB 0x5982 (+8)

                        // equal = false;                                       types.hs:936

0x597C  0x44            PUSHI0
0x597D  0x4C            POPLOCALB00

                        // break;                                               types.hs:937

0x597E  0x28 0x0E       DECSP 0x0E
0x5980  0x30 0x17       JB 0x5997 (+23)

                        // }                                                    types.hs:939

0x5982  0x28 0x04       DECSP 0x04
0x5984  0x30 0x08       JB 0x598C (+8)

                        // equal = false;                                       types.hs:942

0x5986  0x44            PUSHI0
0x5987  0x4C            POPLOCALB00

                        // break;                                               types.hs:943

0x5988  0x28 0x0A       DECSP 0x0A
0x598A  0x30 0x0D       JB 0x5997 (+13)

                        // }                                                    types.hs:945

0x598C  0x28 0x02       DECSP 0x02

                        // }                                                    types.hs:948

0x598E  0x28 0x06       DECSP 0x06
0x5990  0x22 0x06       INCLOCALB 0x06 (BP+6)
0x5992  0x33 0xF6 0xFD  JW 0x5788 (-522)
0x5995  0x28 0x02       DECSP 0x02

                        // break;                                               types.hs:949

0x5997  0x28 0x04       DECSP 0x04

                        // return equal;                                        types.hs:951

0x5999  0x4E            PUSHLOCALB00
0x599A  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/types.hs:28
// ####  Types.EnumValue(..)  ####                                              0x018F


                        // bool success = false;                                types.hs:29

0x599C  0x5F 0x03       ENTERB 0x03

                        // if (candidate.IndexOf('.', ref fDot))                types.hs:32

0x599E  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x59A0  0x1A 0x2E       PUSHIB 0x2E
0x59A2  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x59A4  0x34 0x07 0x01  CALLW 0x0107   // String.IndexOf
0x59A7  0x2E 0x44       JZB 0x59EB (+68)

                        // if (candidate.LastIndexOf('.', ref sDot))            types.hs:34

0x59A9  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x59AB  0x1A 0x2E       PUSHIB 0x2E
0x59AD  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x59AF  0x34 0x0E 0x01  CALLW 0x010E   // String.LastIndexOf
0x59B2  0x2E 0x39       JZB 0x59EB (+57)

                        // if (fDot != sDot)                                    types.hs:36

0x59B4  0x4F            PUSHLOCALB02
0x59B5  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x59B7  0x06            NE
0x59B8  0x2E 0x1C       JZB 0x59D4 (+28)

                        // typeName = candidate.Substring(0, sDot);             types.hs:39

0x59BA  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x59BC  0x44            PUSHI0
0x59BD  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x59BF  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x59C1  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // valueName = candidate.Substring(sDot+1);             types.hs:40

0x59C3  0x56 0xF8 0x04  PUSHLOCALBB 0x04F8
0x59C6  0x45            PUSHI1
0x59C7  0x00            ADD
0x59C8  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x59CA  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // success = IsEnum(typeName);                          types.hs:41

0x59CC  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x59CE  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x59D1  0x4C            POPLOCALB00

                        // }                                                    types.hs:42

0x59D2  0x30 0x19       JB 0x59EB (+25)

                        // typeName = candidate.Substring(0, fDot);             types.hs:46

0x59D4  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x59D6  0x44            PUSHI0
0x59D7  0x4F            PUSHLOCALB02
0x59D8  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x59DA  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // valueName = candidate.Substring(fDot+1);             types.hs:47

0x59DC  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x59DE  0x4F            PUSHLOCALB02
0x59DF  0x45            PUSHI1
0x59E0  0x00            ADD
0x59E1  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x59E3  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // success = IsEnum(typeName);                          types.hs:48

0x59E5  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x59E7  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x59EA  0x4C            POPLOCALB00

                        // if (success)                                         types.hs:56

0x59EB  0x4E            PUSHLOCALB00
0x59EC  0x2E 0x21       JZB 0x5A0D (+33)

                        // typeName = Symbols.QualifyEnum(typeName, currentNamespace);

0x59EE  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x59F0  0x20 0x9A       PUSHGLOBALB 0x9A
0x59F2  0x2C 0xA5       CALLB 0xA5     // Symbols.QualifyEnum
0x59F4  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // valueName = typeName + "." + valueName;              types.hs:59

0x59F6  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x59F8  0x1A 0x2E       PUSHIB 0x2E
0x59FA  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x59FC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x59FE  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x5A00  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5A02  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // success = Symbols.FindEnum(typeName, valueName, ref value);

0x5A04  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x5A06  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x5A08  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5A0A  0x2C 0x8E       CALLB 0x8E     // Symbols.FindEnum
0x5A0C  0x4C            POPLOCALB00

                        // return success;                                      types.hs:62

0x5A0D  0x4E            PUSHLOCALB00
0x5A0E  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/types.hs:66
// ####  Types.FlagsValue(..)  ####                                             0x0190


                        // bool success = false;                                types.hs:67

0x5A10  0x5F 0x03       ENTERB 0x03

                        // if (candidate.IndexOf('.', ref fDot))                types.hs:70

0x5A12  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5A14  0x1A 0x2E       PUSHIB 0x2E
0x5A16  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x5A18  0x34 0x07 0x01  CALLW 0x0107   // String.IndexOf
0x5A1B  0x2E 0x44       JZB 0x5A5F (+68)

                        // if (candidate.LastIndexOf('.', ref sDot))            types.hs:72

0x5A1D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5A1F  0x1A 0x2E       PUSHIB 0x2E
0x5A21  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x5A23  0x34 0x0E 0x01  CALLW 0x010E   // String.LastIndexOf
0x5A26  0x2E 0x39       JZB 0x5A5F (+57)

                        // if (fDot != sDot)                                    types.hs:74

0x5A28  0x4F            PUSHLOCALB02
0x5A29  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5A2B  0x06            NE
0x5A2C  0x2E 0x1C       JZB 0x5A48 (+28)

                        // typeName = candidate.Substring(0, sDot);             types.hs:77

0x5A2E  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5A30  0x44            PUSHI0
0x5A31  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5A33  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x5A35  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // valueName = candidate.Substring(sDot+1);             types.hs:78

0x5A37  0x56 0xF8 0x04  PUSHLOCALBB 0x04F8
0x5A3A  0x45            PUSHI1
0x5A3B  0x00            ADD
0x5A3C  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x5A3E  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // success = IsFlags(typeName);                         types.hs:79

0x5A40  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x5A42  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x5A45  0x4C            POPLOCALB00

                        // }                                                    types.hs:80

0x5A46  0x30 0x19       JB 0x5A5F (+25)

                        // typeName = candidate.Substring(0, fDot);             types.hs:84

0x5A48  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5A4A  0x44            PUSHI0
0x5A4B  0x4F            PUSHLOCALB02
0x5A4C  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x5A4E  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // valueName = candidate.Substring(fDot+1);             types.hs:85

0x5A50  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5A52  0x4F            PUSHLOCALB02
0x5A53  0x45            PUSHI1
0x5A54  0x00            ADD
0x5A55  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x5A57  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // success = IsFlags(typeName);                         types.hs:86

0x5A59  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x5A5B  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x5A5E  0x4C            POPLOCALB00

                        // if (success)                                         types.hs:94

0x5A5F  0x4E            PUSHLOCALB00
0x5A60  0x2E 0x21       JZB 0x5A81 (+33)

                        // typeName = Symbols.QualifyFlags(typeName, currentNamespace);

0x5A62  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x5A64  0x20 0x9A       PUSHGLOBALB 0x9A
0x5A66  0x2C 0xA6       CALLB 0xA6     // Symbols.QualifyFlags
0x5A68  0x58 0xFA       POPCOPYRELB 0xFA (BP-6)

                        // valueName = typeName + "." + valueName;              types.hs:97

0x5A6A  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x5A6C  0x1A 0x2E       PUSHIB 0x2E
0x5A6E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x5A70  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5A72  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x5A74  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5A76  0x58 0xFC       POPCOPYRELB 0xFC (BP-4)

                        // success = Symbols.FindFlags(typeName, valueName, ref value);

0x5A78  0x1E 0xFA       PUSHRELB 0xFA (BP-6)
0x5A7A  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x5A7C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5A7E  0x2C 0x90       CALLB 0x90     // Symbols.FindFlags
0x5A80  0x4C            POPLOCALB00

                        // return success;                                      types.hs:100

0x5A81  0x4E            PUSHLOCALB00
0x5A82  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/types.hs:387
// ####  Types.ToByte(..)  ####                                                 0x019B


                        // byte b;                                              types.hs:388

0x5A84  0x5F 0x01       ENTERB 0x01

                        // switch (typeName)                                    types.hs:389

0x5A86  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case "byte":                                         types.hs:391

0x5A88  0x37 0xBD 0x02  PUSHIW 0x02BD
0x5A8B  0x1A 0x04       PUSHIB 0x04
0x5A8D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5A8F  0x4F            PUSHLOCALB02
0x5A90  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5A92  0x2F 0x08       JNZB 0x5A9A (+8)

                        // b = byte(byte);                                      types.hs:393

0x5A94  0x1A 0x03       PUSHIB 0x03
0x5A96  0x4C            POPLOCALB00

                        // }                                                    types.hs:394

0x5A97  0x33 0x93 0x01  JW 0x5C2A (+403)

                        // case "char":                                         types.hs:395

0x5A9A  0x37 0xC2 0x02  PUSHIW 0x02C2
0x5A9D  0x1A 0x04       PUSHIB 0x04
0x5A9F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5AA1  0x4F            PUSHLOCALB02
0x5AA2  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5AA4  0x2F 0x07       JNZB 0x5AAB (+7)

                        // b = byte(char);                                      types.hs:397

0x5AA6  0x45            PUSHI1
0x5AA7  0x4C            POPLOCALB00

                        // }                                                    types.hs:398

0x5AA8  0x33 0x82 0x01  JW 0x5C2A (+386)

                        // case "bool":                                         types.hs:399

0x5AAB  0x37 0xB8 0x02  PUSHIW 0x02B8
0x5AAE  0x1A 0x04       PUSHIB 0x04
0x5AB0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5AB2  0x4F            PUSHLOCALB02
0x5AB3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5AB5  0x2F 0x08       JNZB 0x5ABD (+8)

                        // b = byte(bool);                                      types.hs:401

0x5AB7  0x1A 0x06       PUSHIB 0x06
0x5AB9  0x4C            POPLOCALB00

                        // }                                                    types.hs:402

0x5ABA  0x33 0x70 0x01  JW 0x5C2A (+368)

                        // case "int":                                          types.hs:403

0x5ABD  0x37 0x7E 0x01  PUSHIW 0x017E
0x5AC0  0x1A 0x03       PUSHIB 0x03
0x5AC2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5AC4  0x4F            PUSHLOCALB02
0x5AC5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5AC7  0x2F 0x08       JNZB 0x5ACF (+8)

                        // b = byte(int);                                       types.hs:405

0x5AC9  0x1A 0x02       PUSHIB 0x02
0x5ACB  0x4C            POPLOCALB00

                        // }                                                    types.hs:406

0x5ACC  0x33 0x5E 0x01  JW 0x5C2A (+350)

                        // case "uint":                                         types.hs:407

0x5ACF  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5AD2  0x1A 0x04       PUSHIB 0x04
0x5AD4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5AD6  0x4F            PUSHLOCALB02
0x5AD7  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5AD9  0x2F 0x08       JNZB 0x5AE1 (+8)

                        // b = byte(uint);                                      types.hs:409

0x5ADB  0x1A 0x04       PUSHIB 0x04
0x5ADD  0x4C            POPLOCALB00

                        // }                                                    types.hs:410

0x5ADE  0x33 0x4C 0x01  JW 0x5C2A (+332)

                        // case "long":                                         types.hs:411

0x5AE1  0x37 0x63 0x02  PUSHIW 0x0263
0x5AE4  0x1A 0x04       PUSHIB 0x04
0x5AE6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5AE8  0x4F            PUSHLOCALB02
0x5AE9  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5AEB  0x2F 0x08       JNZB 0x5AF3 (+8)

                        // b = byte(long);                                      types.hs:413

0x5AED  0x1A 0x0E       PUSHIB 0x0E
0x5AEF  0x4C            POPLOCALB00

                        // }                                                    types.hs:414

0x5AF0  0x33 0x3A 0x01  JW 0x5C2A (+314)

                        // case "float":                                        types.hs:415

0x5AF3  0x37 0x5E 0x02  PUSHIW 0x025E
0x5AF6  0x1A 0x05       PUSHIB 0x05
0x5AF8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5AFA  0x4F            PUSHLOCALB02
0x5AFB  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5AFD  0x2F 0x08       JNZB 0x5B05 (+8)

                        // b = byte(float);                                     types.hs:417

0x5AFF  0x1A 0x0D       PUSHIB 0x0D
0x5B01  0x4C            POPLOCALB00

                        // }                                                    types.hs:418

0x5B02  0x33 0x28 0x01  JW 0x5C2A (+296)

                        // case "file":                                         types.hs:419

0x5B05  0x1A 0xC0       PUSHIB 0xC0
0x5B07  0x1A 0x04       PUSHIB 0x04
0x5B09  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B0B  0x4F            PUSHLOCALB02
0x5B0C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B0E  0x2F 0x08       JNZB 0x5B16 (+8)

                        // b = byte(file);                                      types.hs:421

0x5B10  0x1A 0x15       PUSHIB 0x15
0x5B12  0x4C            POPLOCALB00

                        // }                                                    types.hs:422

0x5B13  0x33 0x17 0x01  JW 0x5C2A (+279)

                        // case "directory":                                    types.hs:423

0x5B16  0x37 0xF4 0x02  PUSHIW 0x02F4
0x5B19  0x1A 0x09       PUSHIB 0x09
0x5B1B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B1D  0x4F            PUSHLOCALB02
0x5B1E  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B20  0x2F 0x08       JNZB 0x5B28 (+8)

                        // b = byte(directory);                                 types.hs:425

0x5B22  0x1A 0x16       PUSHIB 0x16
0x5B24  0x4C            POPLOCALB00

                        // }                                                    types.hs:426

0x5B25  0x33 0x05 0x01  JW 0x5C2A (+261)

                        // case "string":                                       types.hs:427

0x5B28  0x37 0x67 0x02  PUSHIW 0x0267
0x5B2B  0x1A 0x06       PUSHIB 0x06
0x5B2D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B2F  0x4F            PUSHLOCALB02
0x5B30  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B32  0x2F 0x08       JNZB 0x5B3A (+8)

                        // b = byte(string);                                    types.hs:429

0x5B34  0x1A 0x0F       PUSHIB 0x0F
0x5B36  0x4C            POPLOCALB00

                        // }                                                    types.hs:430

0x5B37  0x33 0xF3 0x00  JW 0x5C2A (+243)

                        // case "variant":                                      types.hs:431

0x5B3A  0x37 0xE7 0x02  PUSHIW 0x02E7
0x5B3D  0x1A 0x07       PUSHIB 0x07
0x5B3F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B41  0x4F            PUSHLOCALB02
0x5B42  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B44  0x2F 0x08       JNZB 0x5B4C (+8)

                        // b = byte(variant);                                   types.hs:433

0x5B46  0x1A 0x14       PUSHIB 0x14
0x5B48  0x4C            POPLOCALB00

                        // }                                                    types.hs:434

0x5B49  0x33 0xE1 0x00  JW 0x5C2A (+225)

                        // case "type":                                         types.hs:435

0x5B4C  0x37 0x51 0x02  PUSHIW 0x0251
0x5B4F  0x1A 0x04       PUSHIB 0x04
0x5B51  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B53  0x4F            PUSHLOCALB02
0x5B54  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B56  0x2F 0x08       JNZB 0x5B5E (+8)

                        // b = byte(type);                                      types.hs:437

0x5B58  0x1A 0x0C       PUSHIB 0x0C
0x5B5A  0x4C            POPLOCALB00

                        // }                                                    types.hs:438

0x5B5B  0x33 0xCF 0x00  JW 0x5C2A (+207)

                        // case "list":                                         types.hs:439

0x5B5E  0x37 0x51 0x03  PUSHIW 0x0351
0x5B61  0x1A 0x04       PUSHIB 0x04
0x5B63  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B65  0x4F            PUSHLOCALB02
0x5B66  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B68  0x2F 0x08       JNZB 0x5B70 (+8)

                        // b = byte(list);                                      types.hs:441

0x5B6A  0x1A 0x19       PUSHIB 0x19
0x5B6C  0x4C            POPLOCALB00

                        // }                                                    types.hs:442

0x5B6D  0x33 0xBD 0x00  JW 0x5C2A (+189)

                        // case "array":                                        types.hs:443

0x5B70  0x37 0xFE 0x02  PUSHIW 0x02FE
0x5B73  0x1A 0x05       PUSHIB 0x05
0x5B75  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B77  0x4F            PUSHLOCALB02
0x5B78  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B7A  0x2F 0x08       JNZB 0x5B82 (+8)

                        // b = byte(array);                                     types.hs:445

0x5B7C  0x1A 0x12       PUSHIB 0x12
0x5B7E  0x4C            POPLOCALB00

                        // }                                                    types.hs:446

0x5B7F  0x33 0xAB 0x00  JW 0x5C2A (+171)

                        // case "dictionary":                                   types.hs:447

0x5B82  0x37 0x58 0x03  PUSHIW 0x0358
0x5B85  0x1A 0x0A       PUSHIB 0x0A
0x5B87  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B89  0x4F            PUSHLOCALB02
0x5B8A  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B8C  0x2F 0x08       JNZB 0x5B94 (+8)

                        // b = byte(dictionary);                                types.hs:449

0x5B8E  0x1A 0x13       PUSHIB 0x13
0x5B90  0x4C            POPLOCALB00

                        // }                                                    types.hs:450

0x5B91  0x33 0x99 0x00  JW 0x5C2A (+153)

                        // case "enum":                                         types.hs:451

0x5B94  0x37 0xB9 0x01  PUSHIW 0x01B9
0x5B97  0x1A 0x04       PUSHIB 0x04
0x5B99  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5B9B  0x4F            PUSHLOCALB02
0x5B9C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5B9E  0x2F 0x08       JNZB 0x5BA6 (+8)

                        // b = byte(enum);                                      types.hs:453

0x5BA0  0x1A 0x07       PUSHIB 0x07
0x5BA2  0x4C            POPLOCALB00

                        // }                                                    types.hs:454

0x5BA3  0x33 0x87 0x00  JW 0x5C2A (+135)

                        // case "flags":                                        types.hs:455

0x5BA6  0x37 0xBD 0x01  PUSHIW 0x01BD
0x5BA9  0x1A 0x05       PUSHIB 0x05
0x5BAB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5BAD  0x4F            PUSHLOCALB02
0x5BAE  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5BB0  0x2F 0x08       JNZB 0x5BB8 (+8)

                        // b = byte(flags);                                     types.hs:457

0x5BB2  0x1A 0x08       PUSHIB 0x08
0x5BB4  0x4C            POPLOCALB00

                        // }                                                    types.hs:458

0x5BB5  0x33 0x75 0x00  JW 0x5C2A (+117)

                        // case "pair":                                         types.hs:459

0x5BB8  0x37 0xC7 0x0E  PUSHIW 0x0EC7
0x5BBB  0x1A 0x04       PUSHIB 0x04
0x5BBD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5BBF  0x4F            PUSHLOCALB02
0x5BC0  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5BC2  0x2F 0x07       JNZB 0x5BC9 (+7)

                        // b = byte(pair);                                      types.hs:461

0x5BC4  0x1A 0x10       PUSHIB 0x10
0x5BC6  0x4C            POPLOCALB00

                        // }                                                    types.hs:462

0x5BC7  0x30 0x63       JB 0x5C2A (+99)

                        // case "delegate":                                     types.hs:463

0x5BC9  0x37 0xA5 0x01  PUSHIW 0x01A5
0x5BCC  0x1A 0x08       PUSHIB 0x08
0x5BCE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5BD0  0x4F            PUSHLOCALB02
0x5BD1  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5BD3  0x2F 0x07       JNZB 0x5BDA (+7)

                        // b = byte(delegate);                                  types.hs:465

0x5BD5  0x1A 0x0B       PUSHIB 0x0B
0x5BD7  0x4C            POPLOCALB00

                        // }                                                    types.hs:466

0x5BD8  0x30 0x52       JB 0x5C2A (+82)

                        // if (Types.IsList(typeName))                          types.hs:470

0x5BDA  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5BDC  0x34 0xA3 0x01  CALLW 0x01A3   // Types.IsList
0x5BDF  0x2E 0x07       JZB 0x5BE6 (+7)

                        // b = byte(list);                                      types.hs:472

0x5BE1  0x1A 0x19       PUSHIB 0x19
0x5BE3  0x4C            POPLOCALB00

                        // }                                                    types.hs:473

0x5BE4  0x30 0x46       JB 0x5C2A (+70)

                        // else if (Types.IsArray(typeName))                    types.hs:474

0x5BE6  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5BE8  0x34 0xA4 0x01  CALLW 0x01A4   // Types.IsArray
0x5BEB  0x2E 0x07       JZB 0x5BF2 (+7)

                        // b = byte(array);                                     types.hs:476

0x5BED  0x1A 0x12       PUSHIB 0x12
0x5BEF  0x4C            POPLOCALB00

                        // }                                                    types.hs:477

0x5BF0  0x30 0x3A       JB 0x5C2A (+58)

                        // else if (Types.IsDictionary(typeName))               types.hs:478

0x5BF2  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5BF4  0x34 0xA2 0x01  CALLW 0x01A2   // Types.IsDictionary
0x5BF7  0x2E 0x07       JZB 0x5BFE (+7)

                        // b = byte(dictionary);                                types.hs:480

0x5BF9  0x1A 0x13       PUSHIB 0x13
0x5BFB  0x4C            POPLOCALB00

                        // }                                                    types.hs:481

0x5BFC  0x30 0x2E       JB 0x5C2A (+46)

                        // else if (Types.IsEnum(typeName))                     types.hs:484

0x5BFE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C00  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x5C03  0x2E 0x07       JZB 0x5C0A (+7)

                        // b = byte(enum);                                      types.hs:486

0x5C05  0x1A 0x07       PUSHIB 0x07
0x5C07  0x4C            POPLOCALB00

                        // }                                                    types.hs:487

0x5C08  0x30 0x22       JB 0x5C2A (+34)

                        // else if (Types.IsFlags(typeName))                    types.hs:488

0x5C0A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C0C  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x5C0F  0x2E 0x07       JZB 0x5C16 (+7)

                        // b = byte(flags);                                     types.hs:490

0x5C11  0x1A 0x08       PUSHIB 0x08
0x5C13  0x4C            POPLOCALB00

                        // }                                                    types.hs:491

0x5C14  0x30 0x16       JB 0x5C2A (+22)

                        // else if (Types.IsDelegate(typeName))                 types.hs:492

0x5C16  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C18  0x34 0xAB 0x01  CALLW 0x01AB   // Types.IsDelegate
0x5C1B  0x2E 0x07       JZB 0x5C22 (+7)

                        // b = byte(delegate);                                  types.hs:494

0x5C1D  0x1A 0x0B       PUSHIB 0x0B
0x5C1F  0x4C            POPLOCALB00

                        // }                                                    types.hs:495

0x5C20  0x30 0x0A       JB 0x5C2A (+10)

                        // PrintLn(typeName);                                   types.hs:498

0x5C22  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C24  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:499

0x5C26  0x1A 0x0A       PUSHIB 0x0A
0x5C28  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:502

0x5C2A  0x28 0x02       DECSP 0x02

                        // if (b == 26)                                         types.hs:503

0x5C2C  0x4E            PUSHLOCALB00
0x5C2D  0x1A 0x1A       PUSHIB 0x1A
0x5C2F  0x05            EQ
0x5C30  0x2E 0x05       JZB 0x5C35 (+5)

                        // b = 19; // tHashDictionary -> tDictionary            types.hs:505

0x5C32  0x1A 0x13       PUSHIB 0x13
0x5C34  0x4C            POPLOCALB00

                        // if (b == 27)                                         types.hs:507

0x5C35  0x4E            PUSHLOCALB00
0x5C36  0x1A 0x1B       PUSHIB 0x1B
0x5C38  0x05            EQ
0x5C39  0x2E 0x05       JZB 0x5C3E (+5)

                        // b = 16; // tHashPair -> tPair                        types.hs:509

0x5C3B  0x1A 0x10       PUSHIB 0x10
0x5C3D  0x4C            POPLOCALB00

                        // return b;                                            types.hs:511

0x5C3E  0x4E            PUSHLOCALB00
0x5C3F  0x2B 0x04       RETRETB 0x04


// /source/compiler/types.hs:821
// ####  Types.IsFlags(..)  ####                                                0x01AA

0x5C41  0x49            ENTER

                        // return Symbols.IsFlagsType(identifier, currentNamespace);

0x5C42  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C44  0x20 0x9A       PUSHGLOBALB 0x9A
0x5C46  0x2C 0xA2       CALLB 0xA2     // Symbols.IsFlagsType
0x5C48  0x2B 0x02       RETRETB 0x02


// /source/compiler/types.hs:798
// ####  Types.QualifyFlags(..)  ####                                           0x01A5

0x5C4A  0x49            ENTER

                        // return Symbols.QualifyFlags(identifier, currentNamespace);

0x5C4B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C4D  0x20 0x9A       PUSHGLOBALB 0x9A
0x5C4F  0x2C 0xA6       CALLB 0xA6     // Symbols.QualifyFlags
0x5C51  0x2B 0x02       RETRETB 0x02


// /source/compiler/types.hs:816
// ####  Types.IsEnum(..)  ####                                                 0x01A9

0x5C53  0x49            ENTER

                        // return Symbols.IsEnumType(identifier, currentNamespace);

0x5C54  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C56  0x20 0x9A       PUSHGLOBALB 0x9A
0x5C58  0x2C 0xA1       CALLB 0xA1     // Symbols.IsEnumType
0x5C5A  0x2B 0x02       RETRETB 0x02


// /source/compiler/types.hs:802
// ####  Types.QualifyEnum(..)  ####                                            0x01A6

0x5C5C  0x49            ENTER

                        // return Symbols.QualifyEnum(identifier, currentNamespace);

0x5C5D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5C5F  0x20 0x9A       PUSHGLOBALB 0x9A
0x5C61  0x2C 0xA5       CALLB 0xA5     // Symbols.QualifyEnum
0x5C63  0x2B 0x02       RETRETB 0x02


// /source/compiler/types.hs:104
// ####  Types.AutomaticUpCast(..)  ####                                        0x0191


                        // bool ok = false;                                     types.hs:107

0x5C65  0x5F 0x02       ENTERB 0x02

                        // if (actualType == "byte")                            types.hs:111

0x5C67  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5C69  0x37 0xBD 0x02  PUSHIW 0x02BD
0x5C6C  0x1A 0x04       PUSHIB 0x04
0x5C6E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5C70  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5C72  0x2F 0x69       JNZB 0x5CDB (+105)

                        // ok = ((desiredType == "+int")                        types.hs:113

0x5C74  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5C76  0x37 0xCB 0x0E  PUSHIW 0x0ECB
0x5C79  0x1A 0x04       PUSHIB 0x04
0x5C7B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5C7D  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5C7F  0x44            PUSHI0
0x5C80  0x05            EQ
0x5C81  0x27 0x00       DUP 0x00
0x5C83  0x2F 0x46       JNZB 0x5CC9 (+70)
0x5C85  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5C87  0x37 0x7E 0x01  PUSHIW 0x017E
0x5C8A  0x1A 0x03       PUSHIB 0x03
0x5C8C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5C8E  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5C90  0x44            PUSHI0
0x5C91  0x05            EQ
0x5C92  0x0B            BOOLOR
0x5C93  0x27 0x00       DUP 0x00
0x5C95  0x2F 0x34       JNZB 0x5CC9 (+52)
0x5C97  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5C99  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5C9C  0x1A 0x04       PUSHIB 0x04
0x5C9E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5CA0  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5CA2  0x44            PUSHI0
0x5CA3  0x05            EQ
0x5CA4  0x0B            BOOLOR
0x5CA5  0x27 0x00       DUP 0x00
0x5CA7  0x2F 0x22       JNZB 0x5CC9 (+34)
0x5CA9  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5CAB  0x37 0x63 0x02  PUSHIW 0x0263
0x5CAE  0x1A 0x04       PUSHIB 0x04
0x5CB0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5CB2  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5CB4  0x44            PUSHI0
0x5CB5  0x05            EQ
0x5CB6  0x0B            BOOLOR
0x5CB7  0x27 0x00       DUP 0x00
0x5CB9  0x2F 0x10       JNZB 0x5CC9 (+16)
0x5CBB  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5CBD  0x37 0x5E 0x02  PUSHIW 0x025E
0x5CC0  0x1A 0x05       PUSHIB 0x05
0x5CC2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5CC4  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5CC6  0x44            PUSHI0
0x5CC7  0x05            EQ
0x5CC8  0x0B            BOOLOR
0x5CC9  0x4C            POPLOCALB00

                        // nop = (desiredType == "uint");                       types.hs:119

0x5CCA  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5CCC  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5CCF  0x1A 0x04       PUSHIB 0x04
0x5CD1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5CD3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5CD5  0x44            PUSHI0
0x5CD6  0x05            EQ
0x5CD7  0x4D            POPLOCALB02

                        // }                                                    types.hs:120

0x5CD8  0x33 0x32 0x01  JW 0x5E0A (+306)

                        // else if (actualType == "+int")                       types.hs:121

0x5CDB  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5CDD  0x37 0xCB 0x0E  PUSHIW 0x0ECB
0x5CE0  0x1A 0x04       PUSHIB 0x04
0x5CE2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5CE4  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5CE6  0x2F 0x57       JNZB 0x5D3D (+87)

                        // ok = ((desiredType == "int")                         types.hs:123

0x5CE8  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5CEA  0x37 0x7E 0x01  PUSHIW 0x017E
0x5CED  0x1A 0x03       PUSHIB 0x03
0x5CEF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5CF1  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5CF3  0x44            PUSHI0
0x5CF4  0x05            EQ
0x5CF5  0x27 0x00       DUP 0x00
0x5CF7  0x2F 0x34       JNZB 0x5D2B (+52)
0x5CF9  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5CFB  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5CFE  0x1A 0x04       PUSHIB 0x04
0x5D00  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D02  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D04  0x44            PUSHI0
0x5D05  0x05            EQ
0x5D06  0x0B            BOOLOR
0x5D07  0x27 0x00       DUP 0x00
0x5D09  0x2F 0x22       JNZB 0x5D2B (+34)
0x5D0B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5D0D  0x37 0x63 0x02  PUSHIW 0x0263
0x5D10  0x1A 0x04       PUSHIB 0x04
0x5D12  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D14  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D16  0x44            PUSHI0
0x5D17  0x05            EQ
0x5D18  0x0B            BOOLOR
0x5D19  0x27 0x00       DUP 0x00
0x5D1B  0x2F 0x10       JNZB 0x5D2B (+16)
0x5D1D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5D1F  0x37 0x5E 0x02  PUSHIW 0x025E
0x5D22  0x1A 0x05       PUSHIB 0x05
0x5D24  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D26  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D28  0x44            PUSHI0
0x5D29  0x05            EQ
0x5D2A  0x0B            BOOLOR
0x5D2B  0x4C            POPLOCALB00

                        // nop = (desiredType == "uint");                       types.hs:128

0x5D2C  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5D2E  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5D31  0x1A 0x04       PUSHIB 0x04
0x5D33  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D35  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D37  0x44            PUSHI0
0x5D38  0x05            EQ
0x5D39  0x4D            POPLOCALB02

                        // }                                                    types.hs:129

0x5D3A  0x33 0xD0 0x00  JW 0x5E0A (+208)

                        // else if (actualType == "int")                        types.hs:130

0x5D3D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5D3F  0x37 0x7E 0x01  PUSHIW 0x017E
0x5D42  0x1A 0x03       PUSHIB 0x03
0x5D44  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D46  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D48  0x2F 0x25       JNZB 0x5D6D (+37)

                        // ok = ((desiredType == "long")                        types.hs:132

0x5D4A  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5D4C  0x37 0x63 0x02  PUSHIW 0x0263
0x5D4F  0x1A 0x04       PUSHIB 0x04
0x5D51  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D53  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D55  0x44            PUSHI0
0x5D56  0x05            EQ
0x5D57  0x27 0x00       DUP 0x00
0x5D59  0x2F 0x10       JNZB 0x5D69 (+16)
0x5D5B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5D5D  0x37 0x5E 0x02  PUSHIW 0x025E
0x5D60  0x1A 0x05       PUSHIB 0x05
0x5D62  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D64  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D66  0x44            PUSHI0
0x5D67  0x05            EQ
0x5D68  0x0B            BOOLOR
0x5D69  0x4C            POPLOCALB00

                        // }                                                    types.hs:135

0x5D6A  0x33 0xA0 0x00  JW 0x5E0A (+160)

                        // else if (actualType == "uint")                       types.hs:136

0x5D6D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5D6F  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5D72  0x1A 0x04       PUSHIB 0x04
0x5D74  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D76  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D78  0x2F 0x24       JNZB 0x5D9C (+36)

                        // ok = ((desiredType == "long")                        types.hs:138

0x5D7A  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5D7C  0x37 0x63 0x02  PUSHIW 0x0263
0x5D7F  0x1A 0x04       PUSHIB 0x04
0x5D81  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D83  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D85  0x44            PUSHI0
0x5D86  0x05            EQ
0x5D87  0x27 0x00       DUP 0x00
0x5D89  0x2F 0x10       JNZB 0x5D99 (+16)
0x5D8B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5D8D  0x37 0x5E 0x02  PUSHIW 0x025E
0x5D90  0x1A 0x05       PUSHIB 0x05
0x5D92  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5D94  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5D96  0x44            PUSHI0
0x5D97  0x05            EQ
0x5D98  0x0B            BOOLOR
0x5D99  0x4C            POPLOCALB00

                        // }                                                    types.hs:141

0x5D9A  0x30 0x70       JB 0x5E0A (+112)

                        // else if (actualType == "-int")                       types.hs:142

0x5D9C  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5D9E  0x37 0xCF 0x0E  PUSHIW 0x0ECF
0x5DA1  0x1A 0x04       PUSHIB 0x04
0x5DA3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5DA5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5DA7  0x2F 0x36       JNZB 0x5DDD (+54)

                        // ok = ((desiredType == "int")                         types.hs:144

0x5DA9  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5DAB  0x37 0x7E 0x01  PUSHIW 0x017E
0x5DAE  0x1A 0x03       PUSHIB 0x03
0x5DB0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5DB2  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5DB4  0x44            PUSHI0
0x5DB5  0x05            EQ
0x5DB6  0x27 0x00       DUP 0x00
0x5DB8  0x2F 0x22       JNZB 0x5DDA (+34)
0x5DBA  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5DBC  0x37 0x63 0x02  PUSHIW 0x0263
0x5DBF  0x1A 0x04       PUSHIB 0x04
0x5DC1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5DC3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5DC5  0x44            PUSHI0
0x5DC6  0x05            EQ
0x5DC7  0x0B            BOOLOR
0x5DC8  0x27 0x00       DUP 0x00
0x5DCA  0x2F 0x10       JNZB 0x5DDA (+16)
0x5DCC  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5DCE  0x37 0x5E 0x02  PUSHIW 0x025E
0x5DD1  0x1A 0x05       PUSHIB 0x05
0x5DD3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5DD5  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5DD7  0x44            PUSHI0
0x5DD8  0x05            EQ
0x5DD9  0x0B            BOOLOR
0x5DDA  0x4C            POPLOCALB00

                        // }                                                    types.hs:148

0x5DDB  0x30 0x2F       JB 0x5E0A (+47)

                        // else if (actualType == "long")                       types.hs:149

0x5DDD  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5DDF  0x37 0x63 0x02  PUSHIW 0x0263
0x5DE2  0x1A 0x04       PUSHIB 0x04
0x5DE4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5DE6  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5DE8  0x2F 0x22       JNZB 0x5E0A (+34)

                        // ok = ((desiredType == "float")                       types.hs:151

0x5DEA  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5DEC  0x37 0x5E 0x02  PUSHIW 0x025E
0x5DEF  0x1A 0x05       PUSHIB 0x05
0x5DF1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5DF3  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5DF5  0x44            PUSHI0
0x5DF6  0x05            EQ
0x5DF7  0x27 0x00       DUP 0x00
0x5DF9  0x2F 0x10       JNZB 0x5E09 (+16)
0x5DFB  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5DFD  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5E00  0x1A 0x04       PUSHIB 0x04
0x5E02  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E04  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5E06  0x44            PUSHI0
0x5E07  0x05            EQ
0x5E08  0x0B            BOOLOR
0x5E09  0x4C            POPLOCALB00

                        // if (!nop && ok && ((desiredType == "long") || (desiredType == "float") || (desiredType == "uint"))) // cast to new reference types?

0x5E0A  0x4F            PUSHLOCALB02
0x5E0B  0x41            BOOLNOT
0x5E0C  0x27 0x00       DUP 0x00
0x5E0E  0x2E 0x3A       JZB 0x5E48 (+58)
0x5E10  0x4E            PUSHLOCALB00
0x5E11  0x0C            BOOLAND
0x5E12  0x27 0x00       DUP 0x00
0x5E14  0x2E 0x34       JZB 0x5E48 (+52)
0x5E16  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5E18  0x37 0x63 0x02  PUSHIW 0x0263
0x5E1B  0x1A 0x04       PUSHIB 0x04
0x5E1D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E1F  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5E21  0x44            PUSHI0
0x5E22  0x05            EQ
0x5E23  0x27 0x00       DUP 0x00
0x5E25  0x2F 0x22       JNZB 0x5E47 (+34)
0x5E27  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5E29  0x37 0x5E 0x02  PUSHIW 0x025E
0x5E2C  0x1A 0x05       PUSHIB 0x05
0x5E2E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E30  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5E32  0x44            PUSHI0
0x5E33  0x05            EQ
0x5E34  0x0B            BOOLOR
0x5E35  0x27 0x00       DUP 0x00
0x5E37  0x2F 0x10       JNZB 0x5E47 (+16)
0x5E39  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5E3B  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5E3E  0x1A 0x04       PUSHIB 0x04
0x5E40  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E42  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5E44  0x44            PUSHI0
0x5E45  0x05            EQ
0x5E46  0x0B            BOOLOR
0x5E47  0x0C            BOOLAND
0x5E48  0x31 0xE1 0x02  JZW 0x6129 (+737)

                        // if (codeGenNext)                                     types.hs:159

0x5E4B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x5E4D  0x2E 0x07       JZB 0x5E54 (+7)

                        // CodeStream.AddInstruction(Instruction.SWAP); // [next] <-> [top]

0x5E4F  0x1A 0x43       PUSHIB 0x43
0x5E51  0x34 0xE1 0x01  CALLW 0x01E1   // CodeStream.AddInstruction

                        // switch (actualType)                                  types.hs:163

0x5E54  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)

                        // case "long":                                         types.hs:165

0x5E56  0x37 0x63 0x02  PUSHIW 0x0263
0x5E59  0x1A 0x04       PUSHIB 0x04
0x5E5B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E5D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5E5F  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5E61  0x2F 0x5A       JNZB 0x5EBB (+90)

                        // if (desiredType == "float")                          types.hs:167

0x5E63  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5E65  0x37 0x5E 0x02  PUSHIW 0x025E
0x5E68  0x1A 0x05       PUSHIB 0x05
0x5E6A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E6C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5E6E  0x2F 0x15       JNZB 0x5E83 (+21)

                        // CodeStream.AddInstructionSysCall0("Long", "ToFloat");

0x5E70  0x37 0x9F 0x08  PUSHIW 0x089F
0x5E73  0x1A 0x04       PUSHIB 0x04
0x5E75  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E77  0x37 0x96 0x08  PUSHIW 0x0896
0x5E7A  0x1A 0x07       PUSHIB 0x07
0x5E7C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E7E  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:170

0x5E81  0x30 0x37       JB 0x5EB8 (+55)

                        // else if (desiredType == "uint")                      types.hs:171

0x5E83  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5E85  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5E88  0x1A 0x04       PUSHIB 0x04
0x5E8A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E8C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5E8E  0x2F 0x15       JNZB 0x5EA3 (+21)

                        // CodeStream.AddInstructionSysCall0("Long", "ToUInt");

0x5E90  0x37 0x9F 0x08  PUSHIW 0x089F
0x5E93  0x1A 0x04       PUSHIB 0x04
0x5E95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E97  0x37 0xBB 0x08  PUSHIW 0x08BB
0x5E9A  0x1A 0x06       PUSHIB 0x06
0x5E9C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5E9E  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:174

0x5EA1  0x30 0x17       JB 0x5EB8 (+23)

                        // PrintLn(actualType + " -> " + desiredType);

0x5EA3  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5EA5  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x5EA8  0x1A 0x04       PUSHIB 0x04
0x5EAA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5EAC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5EAE  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5EB0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5EB2  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:178

0x5EB4  0x1A 0x0A       PUSHIB 0x0A
0x5EB6  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:180

0x5EB8  0x33 0x66 0x02  JW 0x611E (+614)

                        // case "float":                                        types.hs:181

0x5EBB  0x37 0x5E 0x02  PUSHIW 0x025E
0x5EBE  0x1A 0x05       PUSHIB 0x05
0x5EC0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5EC2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5EC4  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5EC6  0x2F 0x3A       JNZB 0x5F00 (+58)

                        // if (desiredType == "long")                           types.hs:183

0x5EC8  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5ECA  0x37 0x63 0x02  PUSHIW 0x0263
0x5ECD  0x1A 0x04       PUSHIB 0x04
0x5ECF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5ED1  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5ED3  0x2F 0x15       JNZB 0x5EE8 (+21)

                        // CodeStream.AddInstructionSysCall0("Float", "ToLong");

0x5ED5  0x37 0x98 0x08  PUSHIW 0x0898
0x5ED8  0x1A 0x05       PUSHIB 0x05
0x5EDA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5EDC  0x37 0x9D 0x08  PUSHIW 0x089D
0x5EDF  0x1A 0x06       PUSHIB 0x06
0x5EE1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5EE3  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:186

0x5EE6  0x30 0x17       JB 0x5EFD (+23)

                        // PrintLn(actualType + " -> " + desiredType);

0x5EE8  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5EEA  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x5EED  0x1A 0x04       PUSHIB 0x04
0x5EEF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5EF1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5EF3  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5EF5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5EF7  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:190

0x5EF9  0x1A 0x0A       PUSHIB 0x0A
0x5EFB  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:192

0x5EFD  0x33 0x21 0x02  JW 0x611E (+545)

                        // case "byte":                                         types.hs:193

0x5F00  0x37 0xBD 0x02  PUSHIW 0x02BD
0x5F03  0x1A 0x04       PUSHIB 0x04
0x5F05  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F07  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5F09  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5F0B  0x2F 0x5A       JNZB 0x5F65 (+90)

                        // if (desiredType == "float")                          types.hs:195

0x5F0D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5F0F  0x37 0x5E 0x02  PUSHIW 0x025E
0x5F12  0x1A 0x05       PUSHIB 0x05
0x5F14  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F16  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5F18  0x2F 0x15       JNZB 0x5F2D (+21)

                        // CodeStream.AddInstructionSysCall0("Int", "ToFloat");

0x5F1A  0x37 0x93 0x08  PUSHIW 0x0893
0x5F1D  0x1A 0x03       PUSHIB 0x03
0x5F1F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F21  0x37 0x96 0x08  PUSHIW 0x0896
0x5F24  0x1A 0x07       PUSHIB 0x07
0x5F26  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F28  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:198

0x5F2B  0x30 0x37       JB 0x5F62 (+55)

                        // else if (desiredType == "long")                      types.hs:199

0x5F2D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5F2F  0x37 0x63 0x02  PUSHIW 0x0263
0x5F32  0x1A 0x04       PUSHIB 0x04
0x5F34  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F36  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5F38  0x2F 0x15       JNZB 0x5F4D (+21)

                        // CodeStream.AddInstructionSysCall0("UInt", "ToLong");

0x5F3A  0x37 0xA3 0x08  PUSHIW 0x08A3
0x5F3D  0x1A 0x04       PUSHIB 0x04
0x5F3F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F41  0x37 0x9D 0x08  PUSHIW 0x089D
0x5F44  0x1A 0x06       PUSHIB 0x06
0x5F46  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F48  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:202

0x5F4B  0x30 0x17       JB 0x5F62 (+23)

                        // PrintLn(actualType + " -> " + desiredType);

0x5F4D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5F4F  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x5F52  0x1A 0x04       PUSHIB 0x04
0x5F54  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F56  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5F58  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5F5A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5F5C  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:206

0x5F5E  0x1A 0x0A       PUSHIB 0x0A
0x5F60  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:208

0x5F62  0x33 0xBC 0x01  JW 0x611E (+444)

                        // case "uint":                                         types.hs:209

0x5F65  0x37 0xC7 0x02  PUSHIW 0x02C7
0x5F68  0x1A 0x04       PUSHIB 0x04
0x5F6A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F6C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5F6E  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5F70  0x2F 0x6B       JNZB 0x5FDB (+107)

                        // if (desiredType == "float")                          types.hs:211

0x5F72  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5F74  0x37 0x5E 0x02  PUSHIW 0x025E
0x5F77  0x1A 0x05       PUSHIB 0x05
0x5F79  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F7B  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5F7D  0x2F 0x26       JNZB 0x5FA3 (+38)

                        // CodeStream.AddInstructionSysCall0("UInt", "ToLong");

0x5F7F  0x37 0xA3 0x08  PUSHIW 0x08A3
0x5F82  0x1A 0x04       PUSHIB 0x04
0x5F84  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F86  0x37 0x9D 0x08  PUSHIW 0x089D
0x5F89  0x1A 0x06       PUSHIB 0x06
0x5F8B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F8D  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // CodeStream.AddInstructionSysCall0("Long", "ToFloat");

0x5F90  0x37 0x9F 0x08  PUSHIW 0x089F
0x5F93  0x1A 0x04       PUSHIB 0x04
0x5F95  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F97  0x37 0x96 0x08  PUSHIW 0x0896
0x5F9A  0x1A 0x07       PUSHIB 0x07
0x5F9C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5F9E  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:215

0x5FA1  0x30 0x37       JB 0x5FD8 (+55)

                        // else if (desiredType == "long")                      types.hs:216

0x5FA3  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5FA5  0x37 0x63 0x02  PUSHIW 0x0263
0x5FA8  0x1A 0x04       PUSHIB 0x04
0x5FAA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5FAC  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5FAE  0x2F 0x15       JNZB 0x5FC3 (+21)

                        // CodeStream.AddInstructionSysCall0("UInt", "ToLong");

0x5FB0  0x37 0xA3 0x08  PUSHIW 0x08A3
0x5FB3  0x1A 0x04       PUSHIB 0x04
0x5FB5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5FB7  0x37 0x9D 0x08  PUSHIW 0x089D
0x5FBA  0x1A 0x06       PUSHIB 0x06
0x5FBC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5FBE  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:219

0x5FC1  0x30 0x17       JB 0x5FD8 (+23)

                        // PrintLn(actualType + " -> " + desiredType);

0x5FC3  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x5FC5  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x5FC8  0x1A 0x04       PUSHIB 0x04
0x5FCA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5FCC  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5FCE  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5FD0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x5FD2  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:223

0x5FD4  0x1A 0x0A       PUSHIB 0x0A
0x5FD6  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:225

0x5FD8  0x33 0x46 0x01  JW 0x611E (+326)

                        // case "int":                                          types.hs:226

0x5FDB  0x37 0x7E 0x01  PUSHIW 0x017E
0x5FDE  0x1A 0x03       PUSHIB 0x03
0x5FE0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5FE2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x5FE4  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5FE6  0x2F 0x5A       JNZB 0x6040 (+90)

                        // if (desiredType == "float")                          types.hs:228

0x5FE8  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x5FEA  0x37 0x5E 0x02  PUSHIW 0x025E
0x5FED  0x1A 0x05       PUSHIB 0x05
0x5FEF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5FF1  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x5FF3  0x2F 0x15       JNZB 0x6008 (+21)

                        // CodeStream.AddInstructionSysCall0("Int", "ToFloat");

0x5FF5  0x37 0x93 0x08  PUSHIW 0x0893
0x5FF8  0x1A 0x03       PUSHIB 0x03
0x5FFA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x5FFC  0x37 0x96 0x08  PUSHIW 0x0896
0x5FFF  0x1A 0x07       PUSHIB 0x07
0x6001  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6003  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:231

0x6006  0x30 0x37       JB 0x603D (+55)

                        // else if (desiredType == "long")                      types.hs:232

0x6008  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x600A  0x37 0x63 0x02  PUSHIW 0x0263
0x600D  0x1A 0x04       PUSHIB 0x04
0x600F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6011  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6013  0x2F 0x15       JNZB 0x6028 (+21)

                        // CodeStream.AddInstructionSysCall0("Int", "ToLong");

0x6015  0x37 0x93 0x08  PUSHIW 0x0893
0x6018  0x1A 0x03       PUSHIB 0x03
0x601A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x601C  0x37 0x9D 0x08  PUSHIW 0x089D
0x601F  0x1A 0x06       PUSHIB 0x06
0x6021  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6023  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:235

0x6026  0x30 0x17       JB 0x603D (+23)

                        // PrintLn(actualType + " -> " + desiredType);

0x6028  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x602A  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x602D  0x1A 0x04       PUSHIB 0x04
0x602F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6031  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6033  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6035  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6037  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:239

0x6039  0x1A 0x0A       PUSHIB 0x0A
0x603B  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:241

0x603D  0x33 0xE1 0x00  JW 0x611E (+225)

                        // case "+int":                                         types.hs:242

0x6040  0x37 0xCB 0x0E  PUSHIW 0x0ECB
0x6043  0x1A 0x04       PUSHIB 0x04
0x6045  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6047  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6049  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x604B  0x2F 0x5A       JNZB 0x60A5 (+90)

                        // if (desiredType == "float")                          types.hs:244

0x604D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x604F  0x37 0x5E 0x02  PUSHIW 0x025E
0x6052  0x1A 0x05       PUSHIB 0x05
0x6054  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6056  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6058  0x2F 0x15       JNZB 0x606D (+21)

                        // CodeStream.AddInstructionSysCall0("Int", "ToFloat");

0x605A  0x37 0x93 0x08  PUSHIW 0x0893
0x605D  0x1A 0x03       PUSHIB 0x03
0x605F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6061  0x37 0x96 0x08  PUSHIW 0x0896
0x6064  0x1A 0x07       PUSHIB 0x07
0x6066  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6068  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:247

0x606B  0x30 0x37       JB 0x60A2 (+55)

                        // else if (desiredType == "long")                      types.hs:248

0x606D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x606F  0x37 0x63 0x02  PUSHIW 0x0263
0x6072  0x1A 0x04       PUSHIB 0x04
0x6074  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6076  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6078  0x2F 0x15       JNZB 0x608D (+21)

                        // CodeStream.AddInstructionSysCall0("Int", "ToLong");

0x607A  0x37 0x93 0x08  PUSHIW 0x0893
0x607D  0x1A 0x03       PUSHIB 0x03
0x607F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6081  0x37 0x9D 0x08  PUSHIW 0x089D
0x6084  0x1A 0x06       PUSHIB 0x06
0x6086  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6088  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:251

0x608B  0x30 0x17       JB 0x60A2 (+23)

                        // PrintLn(actualType + " -> " + desiredType);

0x608D  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x608F  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x6092  0x1A 0x04       PUSHIB 0x04
0x6094  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6096  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6098  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x609A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x609C  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:255

0x609E  0x1A 0x0A       PUSHIB 0x0A
0x60A0  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:257

0x60A2  0x33 0x7C 0x00  JW 0x611E (+124)

                        // case "-int":                                         types.hs:258

0x60A5  0x37 0xCF 0x0E  PUSHIW 0x0ECF
0x60A8  0x1A 0x04       PUSHIB 0x04
0x60AA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60AC  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x60AE  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x60B0  0x2F 0x59       JNZB 0x6109 (+89)

                        // if (desiredType == "float")                          types.hs:260

0x60B2  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x60B4  0x37 0x5E 0x02  PUSHIW 0x025E
0x60B7  0x1A 0x05       PUSHIB 0x05
0x60B9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60BB  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x60BD  0x2F 0x15       JNZB 0x60D2 (+21)

                        // CodeStream.AddInstructionSysCall0("Int", "ToFloat");

0x60BF  0x37 0x93 0x08  PUSHIW 0x0893
0x60C2  0x1A 0x03       PUSHIB 0x03
0x60C4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60C6  0x37 0x96 0x08  PUSHIW 0x0896
0x60C9  0x1A 0x07       PUSHIB 0x07
0x60CB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60CD  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:263

0x60D0  0x30 0x4E       JB 0x611E (+78)

                        // else if (desiredType == "long")                      types.hs:264

0x60D2  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x60D4  0x37 0x63 0x02  PUSHIW 0x0263
0x60D7  0x1A 0x04       PUSHIB 0x04
0x60D9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60DB  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x60DD  0x2F 0x15       JNZB 0x60F2 (+21)

                        // CodeStream.AddInstructionSysCall0("Int", "ToLong");

0x60DF  0x37 0x93 0x08  PUSHIW 0x0893
0x60E2  0x1A 0x03       PUSHIB 0x03
0x60E4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60E6  0x37 0x9D 0x08  PUSHIW 0x089D
0x60E9  0x1A 0x06       PUSHIB 0x06
0x60EB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60ED  0x34 0xDC 0x01  CALLW 0x01DC   // CodeStream.AddInstructionSysCall0

                        // }                                                    types.hs:267

0x60F0  0x30 0x2E       JB 0x611E (+46)

                        // PrintLn(actualType + " -> " + desiredType);

0x60F2  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x60F4  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x60F7  0x1A 0x04       PUSHIB 0x04
0x60F9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x60FB  0x24 0x03       SYSCALL0 0x03  // String.Append
0x60FD  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x60FF  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6101  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:271

0x6103  0x1A 0x0A       PUSHIB 0x0A
0x6105  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:273

0x6107  0x30 0x17       JB 0x611E (+23)

                        // PrintLn(actualType + " -> " + desiredType);

0x6109  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x610B  0x37 0xD3 0x0E  PUSHIW 0x0ED3
0x610E  0x1A 0x04       PUSHIB 0x04
0x6110  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6112  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6114  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6116  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6118  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(0x0A);                                           types.hs:278

0x611A  0x1A 0x0A       PUSHIB 0x0A
0x611C  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    types.hs:280

0x611E  0x28 0x02       DECSP 0x02

                        // if (codeGenNext)                                     types.hs:281

0x6120  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6122  0x2E 0x07       JZB 0x6129 (+7)

                        // CodeStream.AddInstruction(Instruction.SWAP); // [next] <-> [top]

0x6124  0x1A 0x43       PUSHIB 0x43
0x6126  0x34 0xE1 0x01  CALLW 0x01E1   // CodeStream.AddInstruction

                        // if (!ok && (actualType == "enum"))                   types.hs:286

0x6129  0x4E            PUSHLOCALB00
0x612A  0x41            BOOLNOT
0x612B  0x27 0x00       DUP 0x00
0x612D  0x2E 0x10       JZB 0x613D (+16)
0x612F  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x6131  0x37 0xB9 0x01  PUSHIW 0x01B9
0x6134  0x1A 0x04       PUSHIB 0x04
0x6136  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6138  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x613A  0x44            PUSHI0
0x613B  0x05            EQ
0x613C  0x0C            BOOLAND
0x613D  0x2E 0x08       JZB 0x6145 (+8)

                        // ok = Types.IsEnum(desiredType);                      types.hs:288

0x613F  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6141  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x6144  0x4C            POPLOCALB00

                        // if (!ok && (actualType == "flags"))                  types.hs:290

0x6145  0x4E            PUSHLOCALB00
0x6146  0x41            BOOLNOT
0x6147  0x27 0x00       DUP 0x00
0x6149  0x2E 0x10       JZB 0x6159 (+16)
0x614B  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x614D  0x37 0xBD 0x01  PUSHIW 0x01BD
0x6150  0x1A 0x05       PUSHIB 0x05
0x6152  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6154  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6156  0x44            PUSHI0
0x6157  0x05            EQ
0x6158  0x0C            BOOLAND
0x6159  0x2E 0x08       JZB 0x6161 (+8)

                        // ok = Types.IsFlags(desiredType);                     types.hs:292

0x615B  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x615D  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x6160  0x4C            POPLOCALB00

                        // if (!ok && (desiredType == "enum"))                  types.hs:294

0x6161  0x4E            PUSHLOCALB00
0x6162  0x41            BOOLNOT
0x6163  0x27 0x00       DUP 0x00
0x6165  0x2E 0x10       JZB 0x6175 (+16)
0x6167  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6169  0x37 0xB9 0x01  PUSHIW 0x01B9
0x616C  0x1A 0x04       PUSHIB 0x04
0x616E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6170  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6172  0x44            PUSHI0
0x6173  0x05            EQ
0x6174  0x0C            BOOLAND
0x6175  0x2E 0x08       JZB 0x617D (+8)

                        // ok = Types.IsEnum(actualType);                       types.hs:296

0x6177  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x6179  0x34 0xA9 0x01  CALLW 0x01A9   // Types.IsEnum
0x617C  0x4C            POPLOCALB00

                        // if (!ok && (desiredType == "flags"))                 types.hs:298

0x617D  0x4E            PUSHLOCALB00
0x617E  0x41            BOOLNOT
0x617F  0x27 0x00       DUP 0x00
0x6181  0x2E 0x10       JZB 0x6191 (+16)
0x6183  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6185  0x37 0xBD 0x01  PUSHIW 0x01BD
0x6188  0x1A 0x05       PUSHIB 0x05
0x618A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x618C  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x618E  0x44            PUSHI0
0x618F  0x05            EQ
0x6190  0x0C            BOOLAND
0x6191  0x2E 0x08       JZB 0x6199 (+8)

                        // ok = Types.IsFlags(actualType);                      types.hs:300

0x6193  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x6195  0x34 0xAA 0x01  CALLW 0x01AA   // Types.IsFlags
0x6198  0x4C            POPLOCALB00

                        // return ok;                                           types.hs:302

0x6199  0x4E            PUSHLOCALB00
0x619A  0x2B 0x0C       RETRETB 0x0C


// /source/compiler/types.hs:825
// ####  Types.IsDelegate(..)  ####                                             0x01AB

0x619C  0x49            ENTER

                        // return Symbols.IsDelegateType(identifier, currentNamespace);

0x619D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x619F  0x20 0x9A       PUSHGLOBALB 0x9A
0x61A1  0x2C 0xA7       CALLB 0xA7     // Symbols.IsDelegateType
0x61A3  0x2B 0x02       RETRETB 0x02


// /source/compiler/types.hs:751
// ####  Types.IsList(..)  ####                                                 0x01A3


                        // uint length = typeString.Length;                     types.hs:753

0x61A5  0x5F 0x01       ENTERB 0x01

                        // uint length = typeString.Length;                     types.hs:753

0x61A7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x61A9  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x61AB  0x4C            POPLOCALB00

                        // bool isList = (length > 2);                          types.hs:754

0x61AC  0x44            PUSHI0
0x61AD  0x4E            PUSHLOCALB00
0x61AE  0x1A 0x02       PUSHIB 0x02
0x61B0  0x07            GT
0x61B1  0x4D            POPLOCALB02

                        // uint i = 0;                                          types.hs:755

0x61B2  0x44            PUSHI0

                        // uint nesting = 0;                                    types.hs:756

0x61B3  0x44            PUSHI0

                        // if (i == length)                                     types.hs:759

0x61B4  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x61B6  0x4E            PUSHLOCALB00
0x61B7  0x05            EQ
0x61B8  0x2F 0x35       JNZB 0x61ED (+53)

                        // char c = typeString[i];                              types.hs:763

0x61BA  0x44            PUSHI0
0x61BB  0x56 0xFE 0x04  PUSHLOCALBB 0x04FE
0x61BE  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x61C0  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // if (c == '<')                                        types.hs:764

0x61C2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x61C4  0x1A 0x3C       PUSHIB 0x3C
0x61C6  0x05            EQ
0x61C7  0x2E 0x06       JZB 0x61CD (+6)

                        // nesting++;                                           types.hs:766

0x61C9  0x22 0x06       INCLOCALB 0x06 (BP+6)

                        // }                                                    types.hs:767

0x61CB  0x30 0x1C       JB 0x61E7 (+28)

                        // else if (c == '>')                                   types.hs:768

0x61CD  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x61CF  0x1A 0x3E       PUSHIB 0x3E
0x61D1  0x05            EQ
0x61D2  0x2E 0x06       JZB 0x61D8 (+6)

                        // nesting--;                                           types.hs:770

0x61D4  0x23 0x06       DECLOCALB 0x06 (BP+6)

                        // }                                                    types.hs:771

0x61D6  0x30 0x11       JB 0x61E7 (+17)

                        // else if (c == ',')                                   types.hs:772

0x61D8  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x61DA  0x1A 0x2C       PUSHIB 0x2C
0x61DC  0x05            EQ
0x61DD  0x2E 0x0A       JZB 0x61E7 (+10)

                        // if (nesting == 1)                                    types.hs:774

0x61DF  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x61E1  0x45            PUSHI1
0x61E2  0x05            EQ
0x61E3  0x2E 0x04       JZB 0x61E7 (+4)

                        // isList = false;                                      types.hs:776

0x61E5  0x44            PUSHI0
0x61E6  0x4D            POPLOCALB02

                        // i++;                                                 types.hs:779

0x61E7  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // }                                                    types.hs:780

0x61E9  0x28 0x02       DECSP 0x02
0x61EB  0x30 0xC9       JB 0x61B4 (-55)

                        // if (isList)                                          types.hs:781

0x61ED  0x4F            PUSHLOCALB02
0x61EE  0x2E 0x23       JZB 0x6211 (+35)

                        // isList = (typeString[0] == '<') && (typeString[length-1] == '>') && (nesting == 0);

0x61F0  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x61F2  0x44            PUSHI0
0x61F3  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x61F5  0x1A 0x3C       PUSHIB 0x3C
0x61F7  0x05            EQ
0x61F8  0x27 0x00       DUP 0x00
0x61FA  0x2E 0x16       JZB 0x6210 (+22)
0x61FC  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x61FE  0x4E            PUSHLOCALB00
0x61FF  0x45            PUSHI1
0x6200  0x01            SUB
0x6201  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6203  0x1A 0x3E       PUSHIB 0x3E
0x6205  0x05            EQ
0x6206  0x0C            BOOLAND
0x6207  0x27 0x00       DUP 0x00
0x6209  0x2E 0x07       JZB 0x6210 (+7)
0x620B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x620D  0x44            PUSHI0
0x620E  0x05            EQ
0x620F  0x0C            BOOLAND
0x6210  0x4D            POPLOCALB02

                        // return isList;                                       types.hs:785

0x6211  0x4F            PUSHLOCALB02
0x6212  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/types.hs:788
// ####  Types.IsArray(..)  ####                                                0x01A4


                        // bool isArray= false;                                 types.hs:789

0x6214  0x5F 0x01       ENTERB 0x01

                        // if (typeString.Contains('['))                        types.hs:790

0x6216  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6218  0x1A 0x5B       PUSHIB 0x5B
0x621A  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x621D  0x2E 0x04       JZB 0x6221 (+4)

                        // isArray = true;                                      types.hs:792

0x621F  0x45            PUSHI1
0x6220  0x4C            POPLOCALB00

                        // return isArray;                                      types.hs:794

0x6221  0x4E            PUSHLOCALB00
0x6222  0x2B 0x04       RETRETB 0x04


// /source/compiler/types.hs:713
// ####  Types.IsDictionary(..)  ####                                           0x01A2


                        // bool isDictionary = false;                           types.hs:714

0x6224  0x5F 0x02       ENTERB 0x02

                        // uint length = typeString.Length;                     types.hs:716

0x6226  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6228  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x622A  0x4D            POPLOCALB02

                        // uint i = 0;                                          types.hs:717

0x622B  0x44            PUSHI0

                        // uint nesting = 0;                                    types.hs:718

0x622C  0x44            PUSHI0

                        // if (i == length)                                     types.hs:721

0x622D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x622F  0x4F            PUSHLOCALB02
0x6230  0x05            EQ
0x6231  0x2F 0x35       JNZB 0x6266 (+53)

                        // char c = typeString[i];                              types.hs:725

0x6233  0x44            PUSHI0
0x6234  0x56 0xFE 0x04  PUSHLOCALBB 0x04FE
0x6237  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6239  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // if (c == '<')                                        types.hs:726

0x623B  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x623D  0x1A 0x3C       PUSHIB 0x3C
0x623F  0x05            EQ
0x6240  0x2E 0x06       JZB 0x6246 (+6)

                        // nesting++;                                           types.hs:728

0x6242  0x22 0x06       INCLOCALB 0x06 (BP+6)

                        // }                                                    types.hs:729

0x6244  0x30 0x1C       JB 0x6260 (+28)

                        // else if (c == '>')                                   types.hs:730

0x6246  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6248  0x1A 0x3E       PUSHIB 0x3E
0x624A  0x05            EQ
0x624B  0x2E 0x06       JZB 0x6251 (+6)

                        // nesting--;                                           types.hs:732

0x624D  0x23 0x06       DECLOCALB 0x06 (BP+6)

                        // }                                                    types.hs:733

0x624F  0x30 0x11       JB 0x6260 (+17)

                        // else if (c == ',')                                   types.hs:734

0x6251  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6253  0x1A 0x2C       PUSHIB 0x2C
0x6255  0x05            EQ
0x6256  0x2E 0x0A       JZB 0x6260 (+10)

                        // if (nesting == 1)                                    types.hs:736

0x6258  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x625A  0x45            PUSHI1
0x625B  0x05            EQ
0x625C  0x2E 0x04       JZB 0x6260 (+4)

                        // isDictionary = true;                                 types.hs:738

0x625E  0x45            PUSHI1
0x625F  0x4C            POPLOCALB00

                        // i++;                                                 types.hs:741

0x6260  0x22 0x04       INCLOCALB 0x04 (BP+4)

                        // }                                                    types.hs:742

0x6262  0x28 0x02       DECSP 0x02
0x6264  0x30 0xC9       JB 0x622D (-55)

                        // if (isDictionary)                                    types.hs:743

0x6266  0x4E            PUSHLOCALB00
0x6267  0x2E 0x23       JZB 0x628A (+35)

                        // isDictionary = (typeString[0] == '<') && (typeString[length-1] == '>') && (nesting == 0);

0x6269  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x626B  0x44            PUSHI0
0x626C  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x626E  0x1A 0x3C       PUSHIB 0x3C
0x6270  0x05            EQ
0x6271  0x27 0x00       DUP 0x00
0x6273  0x2E 0x16       JZB 0x6289 (+22)
0x6275  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6277  0x4F            PUSHLOCALB02
0x6278  0x45            PUSHI1
0x6279  0x01            SUB
0x627A  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x627C  0x1A 0x3E       PUSHIB 0x3E
0x627E  0x05            EQ
0x627F  0x0C            BOOLAND
0x6280  0x27 0x00       DUP 0x00
0x6282  0x2E 0x07       JZB 0x6289 (+7)
0x6284  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6286  0x44            PUSHI0
0x6287  0x05            EQ
0x6288  0x0C            BOOLAND
0x6289  0x4C            POPLOCALB00

                        // return isDictionary;                                 types.hs:747

0x628A  0x4E            PUSHLOCALB00
0x628B  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/tokens/token.hs:113
// ####  Token.Initialize(..)  ####                                             0x0047

0x628D  0x49            ENTER

                        // reservedIdentifiers.Clear();                         token.hs:114

0x628E  0x20 0x04       PUSHGLOBALB 0x04
0x6290  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // reservedZopperIdentifiers.Clear();                   token.hs:115

0x6292  0x20 0x06       PUSHGLOBALB 0x06
0x6294  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // typeKeywords.Clear();                                token.hs:116

0x6296  0x20 0x08       PUSHGLOBALB 0x08
0x6298  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // statementKeywords.Clear();                           token.hs:117

0x629A  0x20 0x0A       PUSHGLOBALB 0x0A
0x629C  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // hopperTokenTypes.Clear();                            token.hs:119

0x629E  0x20 0x0E       PUSHGLOBALB 0x0E
0x62A0  0x24 0x1F       SYSCALL0 0x1F  // Dictionary.Clear

                        // hopperTokenTypes["EOF"] = HopperToken.EOF;           token.hs:121

0x62A2  0x20 0x0E       PUSHGLOBALB 0x0E
0x62A4  0x37 0xD7 0x0E  PUSHIW 0x0ED7
0x62A7  0x1A 0x03       PUSHIB 0x03
0x62A9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x62AB  0x1A 0x2D       PUSHIB 0x2D
0x62AD  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Undefined"] = HopperToken.Undefined;

0x62AF  0x20 0x0E       PUSHGLOBALB 0x0E
0x62B1  0x37 0xDA 0x0E  PUSHIW 0x0EDA
0x62B4  0x1A 0x09       PUSHIB 0x09
0x62B6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x62B8  0x44            PUSHI0
0x62B9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Error"] = HopperToken.Error;

0x62BB  0x20 0x0E       PUSHGLOBALB 0x0E
0x62BD  0x37 0x4A 0x05  PUSHIW 0x054A
0x62C0  0x1A 0x05       PUSHIB 0x05
0x62C2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x62C4  0x45            PUSHI1
0x62C5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Char"] = HopperToken.Char;

0x62C7  0x20 0x0E       PUSHGLOBALB 0x0E
0x62C9  0x37 0x98 0x07  PUSHIW 0x0798
0x62CC  0x1A 0x04       PUSHIB 0x04
0x62CE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x62D0  0x1A 0x08       PUSHIB 0x08
0x62D2  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Bool"] = HopperToken.Bool;

0x62D4  0x20 0x0E       PUSHGLOBALB 0x0E
0x62D6  0x37 0xE3 0x0E  PUSHIW 0x0EE3
0x62D9  0x1A 0x04       PUSHIB 0x04
0x62DB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x62DD  0x1A 0x07       PUSHIB 0x07
0x62DF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Keyword"] = HopperToken.Keyword;

0x62E1  0x20 0x0E       PUSHGLOBALB 0x0E
0x62E3  0x37 0xE7 0x0E  PUSHIW 0x0EE7
0x62E6  0x1A 0x07       PUSHIB 0x07
0x62E8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x62EA  0x1A 0x05       PUSHIB 0x05
0x62EC  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Directive"] = HopperToken.Directive;

0x62EE  0x20 0x0E       PUSHGLOBALB 0x0E
0x62F0  0x37 0x11 0x0D  PUSHIW 0x0D11
0x62F3  0x1A 0x09       PUSHIB 0x09
0x62F5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x62F7  0x1A 0x06       PUSHIB 0x06
0x62F9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Identifier"] = HopperToken.Identifier;

0x62FB  0x20 0x0E       PUSHGLOBALB 0x0E
0x62FD  0x37 0xEE 0x0E  PUSHIW 0x0EEE
0x6300  0x1A 0x0A       PUSHIB 0x0A
0x6302  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6304  0x1A 0x03       PUSHIB 0x03
0x6306  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["DottedIdentifier"] = HopperToken.DottedIdentifier;

0x6308  0x20 0x0E       PUSHGLOBALB 0x0E
0x630A  0x37 0xF8 0x0E  PUSHIW 0x0EF8
0x630D  0x1A 0x10       PUSHIB 0x10
0x630F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6311  0x1A 0x02       PUSHIB 0x02
0x6313  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Integer"] = HopperToken.Integer;

0x6315  0x20 0x0E       PUSHGLOBALB 0x0E
0x6317  0x37 0x08 0x0F  PUSHIW 0x0F08
0x631A  0x1A 0x07       PUSHIB 0x07
0x631C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x631E  0x1A 0x09       PUSHIB 0x09
0x6320  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Float"] = HopperToken.Float;

0x6322  0x20 0x0E       PUSHGLOBALB 0x0E
0x6324  0x37 0x98 0x08  PUSHIW 0x0898
0x6327  0x1A 0x05       PUSHIB 0x05
0x6329  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x632B  0x1A 0x0A       PUSHIB 0x0A
0x632D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["StringConstant"] = HopperToken.StringConstant;

0x632F  0x20 0x0E       PUSHGLOBALB 0x0E
0x6331  0x37 0x0F 0x0F  PUSHIW 0x0F0F
0x6334  0x1A 0x0E       PUSHIB 0x0E
0x6336  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6338  0x1A 0x0B       PUSHIB 0x0B
0x633A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Assign"] = HopperToken.Assign;

0x633C  0x20 0x0E       PUSHGLOBALB 0x0E
0x633E  0x37 0x1D 0x0F  PUSHIW 0x0F1D
0x6341  0x1A 0x06       PUSHIB 0x06
0x6343  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6345  0x1A 0x2C       PUSHIB 0x2C
0x6347  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitAnd"] = HopperToken.BitAnd;

0x6349  0x20 0x0E       PUSHGLOBALB 0x0E
0x634B  0x37 0x23 0x0F  PUSHIW 0x0F23
0x634E  0x1A 0x06       PUSHIB 0x06
0x6350  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6352  0x1A 0x21       PUSHIB 0x21
0x6354  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitOr"] = HopperToken.BitOr;

0x6356  0x20 0x0E       PUSHGLOBALB 0x0E
0x6358  0x37 0x29 0x0F  PUSHIW 0x0F29
0x635B  0x1A 0x05       PUSHIB 0x05
0x635D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x635F  0x1A 0x22       PUSHIB 0x22
0x6361  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LParen"] = HopperToken.LParen;

0x6363  0x20 0x0E       PUSHGLOBALB 0x0E
0x6365  0x37 0x2E 0x0F  PUSHIW 0x0F2E
0x6368  0x1A 0x06       PUSHIB 0x06
0x636A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x636C  0x1A 0x10       PUSHIB 0x10
0x636E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["RParen"] = HopperToken.RParen;

0x6370  0x20 0x0E       PUSHGLOBALB 0x0E
0x6372  0x37 0x34 0x0F  PUSHIW 0x0F34
0x6375  0x1A 0x06       PUSHIB 0x06
0x6377  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6379  0x1A 0x11       PUSHIB 0x11
0x637B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LBrace"] = HopperToken.LBrace;

0x637D  0x20 0x0E       PUSHGLOBALB 0x0E
0x637F  0x37 0x3A 0x0F  PUSHIW 0x0F3A
0x6382  0x1A 0x06       PUSHIB 0x06
0x6384  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6386  0x1A 0x12       PUSHIB 0x12
0x6388  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["RBrace"] = HopperToken.RBrace;

0x638A  0x20 0x0E       PUSHGLOBALB 0x0E
0x638C  0x37 0x40 0x0F  PUSHIW 0x0F40
0x638F  0x1A 0x06       PUSHIB 0x06
0x6391  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6393  0x1A 0x13       PUSHIB 0x13
0x6395  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LBracket"] = HopperToken.LBracket;

0x6397  0x20 0x0E       PUSHGLOBALB 0x0E
0x6399  0x37 0x46 0x0F  PUSHIW 0x0F46
0x639C  0x1A 0x08       PUSHIB 0x08
0x639E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63A0  0x1A 0x14       PUSHIB 0x14
0x63A2  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["RBracket"] = HopperToken.RBracket;

0x63A4  0x20 0x0E       PUSHGLOBALB 0x0E
0x63A6  0x37 0x4E 0x0F  PUSHIW 0x0F4E
0x63A9  0x1A 0x08       PUSHIB 0x08
0x63AB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63AD  0x1A 0x15       PUSHIB 0x15
0x63AF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["SemiColon"] = HopperToken.SemiColon;

0x63B1  0x20 0x0E       PUSHGLOBALB 0x0E
0x63B3  0x37 0x56 0x0F  PUSHIW 0x0F56
0x63B6  0x1A 0x09       PUSHIB 0x09
0x63B8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63BA  0x1A 0x0C       PUSHIB 0x0C
0x63BC  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Colon"] = HopperToken.Colon;

0x63BE  0x20 0x0E       PUSHGLOBALB 0x0E
0x63C0  0x37 0x5A 0x0F  PUSHIW 0x0F5A
0x63C3  0x1A 0x05       PUSHIB 0x05
0x63C5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63C7  0x1A 0x0E       PUSHIB 0x0E
0x63C9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Comma"] = HopperToken.Comma;

0x63CB  0x20 0x0E       PUSHGLOBALB 0x0E
0x63CD  0x37 0x5F 0x0F  PUSHIW 0x0F5F
0x63D0  0x1A 0x05       PUSHIB 0x05
0x63D2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63D4  0x1A 0x0D       PUSHIB 0x0D
0x63D6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Dot"] = HopperToken.Dot;           token.hs:145

0x63D8  0x20 0x0E       PUSHGLOBALB 0x0E
0x63DA  0x37 0xF8 0x0E  PUSHIW 0x0EF8
0x63DD  0x1A 0x03       PUSHIB 0x03
0x63DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63E1  0x1A 0x04       PUSHIB 0x04
0x63E3  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Add"] = HopperToken.Add;           token.hs:146

0x63E5  0x20 0x0E       PUSHGLOBALB 0x0E
0x63E7  0x37 0xC1 0x08  PUSHIW 0x08C1
0x63EA  0x1A 0x03       PUSHIB 0x03
0x63EC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63EE  0x1A 0x25       PUSHIB 0x25
0x63F0  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Subtract"] = HopperToken.Subtract;

0x63F2  0x20 0x0E       PUSHGLOBALB 0x0E
0x63F4  0x37 0x64 0x0F  PUSHIW 0x0F64
0x63F7  0x1A 0x08       PUSHIB 0x08
0x63F9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x63FB  0x1A 0x26       PUSHIB 0x26
0x63FD  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Multiply"] = HopperToken.Multiply;

0x63FF  0x20 0x0E       PUSHGLOBALB 0x0E
0x6401  0x37 0x6C 0x0F  PUSHIW 0x0F6C
0x6404  0x1A 0x08       PUSHIB 0x08
0x6406  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6408  0x1A 0x27       PUSHIB 0x27
0x640A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Divide"] = HopperToken.Divide;

0x640C  0x20 0x0E       PUSHGLOBALB 0x0E
0x640E  0x37 0x74 0x0F  PUSHIW 0x0F74
0x6411  0x1A 0x06       PUSHIB 0x06
0x6413  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6415  0x1A 0x28       PUSHIB 0x28
0x6417  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Modulus"] = HopperToken.Modulus;

0x6419  0x20 0x0E       PUSHGLOBALB 0x0E
0x641B  0x37 0x7A 0x0F  PUSHIW 0x0F7A
0x641E  0x1A 0x07       PUSHIB 0x07
0x6420  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6422  0x1A 0x29       PUSHIB 0x29
0x6424  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Increment"] = HopperToken.Increment;

0x6426  0x20 0x0E       PUSHGLOBALB 0x0E
0x6428  0x37 0x81 0x0F  PUSHIW 0x0F81
0x642B  0x1A 0x09       PUSHIB 0x09
0x642D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x642F  0x1A 0x2A       PUSHIB 0x2A
0x6431  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["Decrement"] = HopperToken.Decrement;

0x6433  0x20 0x0E       PUSHGLOBALB 0x0E
0x6435  0x37 0x8A 0x0F  PUSHIW 0x0F8A
0x6438  0x1A 0x09       PUSHIB 0x09
0x643A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x643C  0x1A 0x2B       PUSHIB 0x2B
0x643E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["NE"] = HopperToken.NE;             token.hs:153

0x6440  0x20 0x0E       PUSHGLOBALB 0x0E
0x6442  0x37 0x4E 0x45  PUSHIW 0x454E
0x6445  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6447  0x1A 0x1B       PUSHIB 0x1B
0x6449  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["EQ"] = HopperToken.EQ;             token.hs:154

0x644B  0x20 0x0E       PUSHGLOBALB 0x0E
0x644D  0x37 0x45 0x51  PUSHIW 0x5145
0x6450  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6452  0x1A 0x18       PUSHIB 0x18
0x6454  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["GT"] = HopperToken.GT;             token.hs:155

0x6456  0x20 0x0E       PUSHGLOBALB 0x0E
0x6458  0x37 0x47 0x54  PUSHIW 0x5447
0x645B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x645D  0x1A 0x17       PUSHIB 0x17
0x645F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LT"] = HopperToken.LT;             token.hs:156

0x6461  0x20 0x0E       PUSHGLOBALB 0x0E
0x6463  0x37 0x4C 0x54  PUSHIW 0x544C
0x6466  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6468  0x1A 0x16       PUSHIB 0x16
0x646A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["LE"] = HopperToken.LE;             token.hs:157

0x646C  0x20 0x0E       PUSHGLOBALB 0x0E
0x646E  0x37 0x4C 0x45  PUSHIW 0x454C
0x6471  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6473  0x1A 0x19       PUSHIB 0x19
0x6475  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["GE"] = HopperToken.GE;             token.hs:158

0x6477  0x20 0x0E       PUSHGLOBALB 0x0E
0x6479  0x37 0x47 0x45  PUSHIW 0x4547
0x647C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x647E  0x1A 0x1A       PUSHIB 0x1A
0x6480  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["ShiftLeft"] = HopperToken.ShiftLeft;

0x6482  0x20 0x0E       PUSHGLOBALB 0x0E
0x6484  0x37 0x93 0x0F  PUSHIW 0x0F93
0x6487  0x1A 0x09       PUSHIB 0x09
0x6489  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x648B  0x1A 0x1C       PUSHIB 0x1C
0x648D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["ShiftRight"] = HopperToken.ShiftRight;

0x648F  0x20 0x0E       PUSHGLOBALB 0x0E
0x6491  0x37 0x9C 0x0F  PUSHIW 0x0F9C
0x6494  0x1A 0x0A       PUSHIB 0x0A
0x6496  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6498  0x1A 0x1D       PUSHIB 0x1D
0x649A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BooleanNot"] = HopperToken.BooleanNot;

0x649C  0x20 0x0E       PUSHGLOBALB 0x0E
0x649E  0x37 0xA6 0x0F  PUSHIW 0x0FA6
0x64A1  0x1A 0x0A       PUSHIB 0x0A
0x64A3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x64A5  0x1A 0x20       PUSHIB 0x20
0x64A7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BooleanOr"] = HopperToken.BooleanOr;

0x64A9  0x20 0x0E       PUSHGLOBALB 0x0E
0x64AB  0x37 0xB0 0x0F  PUSHIW 0x0FB0
0x64AE  0x1A 0x09       PUSHIB 0x09
0x64B0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x64B2  0x1A 0x1F       PUSHIB 0x1F
0x64B4  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BooleanAnd"] = HopperToken.BooleanAnd;

0x64B6  0x20 0x0E       PUSHGLOBALB 0x0E
0x64B8  0x37 0xB9 0x0F  PUSHIW 0x0FB9
0x64BB  0x1A 0x0A       PUSHIB 0x0A
0x64BD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x64BF  0x1A 0x1E       PUSHIB 0x1E
0x64C1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitAnd"] = HopperToken.BitAnd;

0x64C3  0x20 0x0E       PUSHGLOBALB 0x0E
0x64C5  0x37 0x23 0x0F  PUSHIW 0x0F23
0x64C8  0x1A 0x06       PUSHIB 0x06
0x64CA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x64CC  0x1A 0x21       PUSHIB 0x21
0x64CE  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitOr"] = HopperToken.BitOr;

0x64D0  0x20 0x0E       PUSHGLOBALB 0x0E
0x64D2  0x37 0x29 0x0F  PUSHIW 0x0F29
0x64D5  0x1A 0x05       PUSHIB 0x05
0x64D7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x64D9  0x1A 0x22       PUSHIB 0x22
0x64DB  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitNot"] = HopperToken.BitNot;

0x64DD  0x20 0x0E       PUSHGLOBALB 0x0E
0x64DF  0x37 0xC3 0x0F  PUSHIW 0x0FC3
0x64E2  0x1A 0x06       PUSHIB 0x06
0x64E4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x64E6  0x1A 0x23       PUSHIB 0x23
0x64E8  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // hopperTokenTypes["BitXor"] = HopperToken.BitXor;

0x64EA  0x20 0x0E       PUSHGLOBALB 0x0E
0x64EC  0x37 0xC9 0x0F  PUSHIW 0x0FC9
0x64EF  0x1A 0x06       PUSHIB 0x06
0x64F1  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x64F3  0x1A 0x24       PUSHIB 0x24
0x64F5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // foreach (var kv in hopperTokenTypes)                 token.hs:170

0x64F7  0x20 0x0E       PUSHGLOBALB 0x0E
0x64F9  0x1A 0x0F       PUSHIB 0x0F
0x64FB  0x1A 0x0F       PUSHIB 0x0F
0x64FD  0x24 0x20       SYSCALL0 0x20  // Pair.New
0x64FF  0x44            PUSHI0
0x6500  0x4E            PUSHLOCALB00
0x6501  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6503  0x24 0x1E       SYSCALL0 0x1E  // Dictionary.Next
0x6505  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x6507  0x4D            POPLOCALB02
0x6508  0x2E 0x0E       JZB 0x6516 (+14)

                        // hopperTokenNames[kv.value] = kv.key;                 token.hs:172

0x650A  0x20 0x10       PUSHGLOBALB 0x10
0x650C  0x4F            PUSHLOCALB02
0x650D  0x24 0x24       SYSCALL0 0x24  // Pair.Value
0x650F  0x4F            PUSHLOCALB02
0x6510  0x24 0x22       SYSCALL0 0x22  // Pair.Key
0x6512  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    token.hs:173

0x6514  0x30 0xEC       JB 0x6500 (-20)
0x6516  0x28 0x06       DECSP 0x06

                        // reservedIdentifiers["line"] = true;                  token.hs:175

0x6518  0x20 0x04       PUSHGLOBALB 0x04
0x651A  0x37 0xD2 0x03  PUSHIW 0x03D2
0x651D  0x1A 0x04       PUSHIB 0x04
0x651F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6521  0x45            PUSHI1
0x6522  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedIdentifiers["source"] = true;                token.hs:176

0x6524  0x20 0x04       PUSHGLOBALB 0x04
0x6526  0x1A 0xB9       PUSHIB 0xB9
0x6528  0x1A 0x06       PUSHIB 0x06
0x652A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x652C  0x45            PUSHI1
0x652D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["port"] = true;            token.hs:178

0x652F  0x20 0x06       PUSHGLOBALB 0x06
0x6531  0x1A 0x6C       PUSHIB 0x6C
0x6533  0x1A 0x04       PUSHIB 0x04
0x6535  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6537  0x45            PUSHI1
0x6538  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["memory"] = true;

0x653A  0x20 0x06       PUSHGLOBALB 0x06
0x653C  0x37 0xCF 0x0F  PUSHIW 0x0FCF
0x653F  0x1A 0x06       PUSHIB 0x06
0x6541  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6543  0x45            PUSHI1
0x6544  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["memoryword"] = true;

0x6546  0x20 0x06       PUSHGLOBALB 0x06
0x6548  0x37 0xD5 0x0F  PUSHIW 0x0FD5
0x654B  0x1A 0x0A       PUSHIB 0x0A
0x654D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x654F  0x45            PUSHI1
0x6550  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["sp"] = true;              token.hs:181

0x6552  0x20 0x06       PUSHGLOBALB 0x06
0x6554  0x37 0x73 0x70  PUSHIW 0x7073
0x6557  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6559  0x45            PUSHI1
0x655A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["pc"] = true;              token.hs:182

0x655C  0x20 0x06       PUSHGLOBALB 0x06
0x655E  0x37 0x70 0x63  PUSHIW 0x6370
0x6561  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6563  0x45            PUSHI1
0x6564  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // reservedZopperIdentifiers["iy"] = true;              token.hs:183

0x6566  0x20 0x06       PUSHGLOBALB 0x06
0x6568  0x37 0x69 0x79  PUSHIW 0x7969
0x656B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x656D  0x45            PUSHI1
0x656E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["array"] = true;                        token.hs:186

0x6570  0x20 0x08       PUSHGLOBALB 0x08
0x6572  0x37 0xFE 0x02  PUSHIW 0x02FE
0x6575  0x1A 0x05       PUSHIB 0x05
0x6577  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6579  0x45            PUSHI1
0x657A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["bool"] = true;                         token.hs:187

0x657C  0x20 0x08       PUSHGLOBALB 0x08
0x657E  0x37 0xB8 0x02  PUSHIW 0x02B8
0x6581  0x1A 0x04       PUSHIB 0x04
0x6583  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6585  0x45            PUSHI1
0x6586  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["byte"] = true;                         token.hs:188

0x6588  0x20 0x08       PUSHGLOBALB 0x08
0x658A  0x37 0xBD 0x02  PUSHIW 0x02BD
0x658D  0x1A 0x04       PUSHIB 0x04
0x658F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6591  0x45            PUSHI1
0x6592  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["char"] = true;                         token.hs:189

0x6594  0x20 0x08       PUSHGLOBALB 0x08
0x6596  0x37 0xC2 0x02  PUSHIW 0x02C2
0x6599  0x1A 0x04       PUSHIB 0x04
0x659B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x659D  0x45            PUSHI1
0x659E  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["delegate"] = true;                     token.hs:190

0x65A0  0x20 0x08       PUSHGLOBALB 0x08
0x65A2  0x37 0xA5 0x01  PUSHIW 0x01A5
0x65A5  0x1A 0x08       PUSHIB 0x08
0x65A7  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65A9  0x45            PUSHI1
0x65AA  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["dictionary"] = true;                   token.hs:191

0x65AC  0x20 0x08       PUSHGLOBALB 0x08
0x65AE  0x37 0x58 0x03  PUSHIW 0x0358
0x65B1  0x1A 0x0A       PUSHIB 0x0A
0x65B3  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65B5  0x45            PUSHI1
0x65B6  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["directory"] = true;                    token.hs:192

0x65B8  0x20 0x08       PUSHGLOBALB 0x08
0x65BA  0x37 0xF4 0x02  PUSHIW 0x02F4
0x65BD  0x1A 0x09       PUSHIB 0x09
0x65BF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65C1  0x45            PUSHI1
0x65C2  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["enum"] = true;                         token.hs:193

0x65C4  0x20 0x08       PUSHGLOBALB 0x08
0x65C6  0x37 0xB9 0x01  PUSHIW 0x01B9
0x65C9  0x1A 0x04       PUSHIB 0x04
0x65CB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65CD  0x45            PUSHI1
0x65CE  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["file"] = true;                         token.hs:194

0x65D0  0x20 0x08       PUSHGLOBALB 0x08
0x65D2  0x1A 0xC0       PUSHIB 0xC0
0x65D4  0x1A 0x04       PUSHIB 0x04
0x65D6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65D8  0x45            PUSHI1
0x65D9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["flags"] = true;                        token.hs:195

0x65DB  0x20 0x08       PUSHGLOBALB 0x08
0x65DD  0x37 0xBD 0x01  PUSHIW 0x01BD
0x65E0  0x1A 0x05       PUSHIB 0x05
0x65E2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65E4  0x45            PUSHI1
0x65E5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["float"] = true;                        token.hs:196

0x65E7  0x20 0x08       PUSHGLOBALB 0x08
0x65E9  0x37 0x5E 0x02  PUSHIW 0x025E
0x65EC  0x1A 0x05       PUSHIB 0x05
0x65EE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65F0  0x45            PUSHI1
0x65F1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["int"] = true;                          token.hs:197

0x65F3  0x20 0x08       PUSHGLOBALB 0x08
0x65F5  0x37 0x7E 0x01  PUSHIW 0x017E
0x65F8  0x1A 0x03       PUSHIB 0x03
0x65FA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x65FC  0x45            PUSHI1
0x65FD  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["uint"] = true;                         token.hs:198

0x65FF  0x20 0x08       PUSHGLOBALB 0x08
0x6601  0x37 0xC7 0x02  PUSHIW 0x02C7
0x6604  0x1A 0x04       PUSHIB 0x04
0x6606  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6608  0x45            PUSHI1
0x6609  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["list"] = true;                         token.hs:199

0x660B  0x20 0x08       PUSHGLOBALB 0x08
0x660D  0x37 0x51 0x03  PUSHIW 0x0351
0x6610  0x1A 0x04       PUSHIB 0x04
0x6612  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6614  0x45            PUSHI1
0x6615  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["long"] = true;                         token.hs:200

0x6617  0x20 0x08       PUSHGLOBALB 0x08
0x6619  0x37 0x63 0x02  PUSHIW 0x0263
0x661C  0x1A 0x04       PUSHIB 0x04
0x661E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6620  0x45            PUSHI1
0x6621  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["pair"] = true;                         token.hs:201

0x6623  0x20 0x08       PUSHGLOBALB 0x08
0x6625  0x37 0xC7 0x0E  PUSHIW 0x0EC7
0x6628  0x1A 0x04       PUSHIB 0x04
0x662A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x662C  0x45            PUSHI1
0x662D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["string"] = true;                       token.hs:202

0x662F  0x20 0x08       PUSHGLOBALB 0x08
0x6631  0x37 0x67 0x02  PUSHIW 0x0267
0x6634  0x1A 0x06       PUSHIB 0x06
0x6636  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6638  0x45            PUSHI1
0x6639  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["type"] = true;                         token.hs:203

0x663B  0x20 0x08       PUSHGLOBALB 0x08
0x663D  0x37 0x51 0x02  PUSHIW 0x0251
0x6640  0x1A 0x04       PUSHIB 0x04
0x6642  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6644  0x45            PUSHI1
0x6645  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["variant"] = true;                      token.hs:204

0x6647  0x20 0x08       PUSHGLOBALB 0x08
0x6649  0x37 0xE7 0x02  PUSHIW 0x02E7
0x664C  0x1A 0x07       PUSHIB 0x07
0x664E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6650  0x45            PUSHI1
0x6651  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["const"] = true;                        token.hs:206

0x6653  0x20 0x08       PUSHGLOBALB 0x08
0x6655  0x37 0xB4 0x01  PUSHIW 0x01B4
0x6658  0x1A 0x05       PUSHIB 0x05
0x665A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x665C  0x45            PUSHI1
0x665D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["false"] = true;                        token.hs:207

0x665F  0x20 0x08       PUSHGLOBALB 0x08
0x6661  0x37 0x49 0x07  PUSHIW 0x0749
0x6664  0x1A 0x05       PUSHIB 0x05
0x6666  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6668  0x45            PUSHI1
0x6669  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["ref"] = true;                          token.hs:208

0x666B  0x20 0x08       PUSHGLOBALB 0x08
0x666D  0x37 0xA5 0x04  PUSHIW 0x04A5
0x6670  0x1A 0x03       PUSHIB 0x03
0x6672  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6674  0x45            PUSHI1
0x6675  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["true"] = true;                         token.hs:209

0x6677  0x20 0x08       PUSHGLOBALB 0x08
0x6679  0x37 0x45 0x07  PUSHIW 0x0745
0x667C  0x1A 0x04       PUSHIB 0x04
0x667E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6680  0x45            PUSHI1
0x6681  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // typeKeywords["var"] = true;                          token.hs:210

0x6683  0x20 0x08       PUSHGLOBALB 0x08
0x6685  0x37 0xE7 0x02  PUSHIW 0x02E7
0x6688  0x1A 0x03       PUSHIB 0x03
0x668A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x668C  0x45            PUSHI1
0x668D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#if"] = true;                     token.hs:212

0x668F  0x20 0x0C       PUSHGLOBALB 0x0C
0x6691  0x37 0xF8 0x0C  PUSHIW 0x0CF8
0x6694  0x1A 0x03       PUSHIB 0x03
0x6696  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6698  0x45            PUSHI1
0x6699  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#ifdef"] = true;                  token.hs:213

0x669B  0x20 0x0C       PUSHGLOBALB 0x0C
0x669D  0x37 0xF8 0x0C  PUSHIW 0x0CF8
0x66A0  0x1A 0x06       PUSHIB 0x06
0x66A2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66A4  0x45            PUSHI1
0x66A5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#ifndef"] = true;                 token.hs:214

0x66A7  0x20 0x0C       PUSHGLOBALB 0x0C
0x66A9  0x37 0xFE 0x0C  PUSHIW 0x0CFE
0x66AC  0x1A 0x07       PUSHIB 0x07
0x66AE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66B0  0x45            PUSHI1
0x66B1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#else"] = true;                   token.hs:215

0x66B3  0x20 0x0C       PUSHGLOBALB 0x0C
0x66B5  0x37 0x31 0x0D  PUSHIW 0x0D31
0x66B8  0x1A 0x05       PUSHIB 0x05
0x66BA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66BC  0x45            PUSHI1
0x66BD  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#endif"] = true;                  token.hs:216

0x66BF  0x20 0x0C       PUSHGLOBALB 0x0C
0x66C1  0x37 0x82 0x01  PUSHIW 0x0182
0x66C4  0x1A 0x06       PUSHIB 0x06
0x66C6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66C8  0x45            PUSHI1
0x66C9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // directiveKeywords["#define"] = true;                 token.hs:217

0x66CB  0x20 0x0C       PUSHGLOBALB 0x0C
0x66CD  0x37 0xAD 0x01  PUSHIW 0x01AD
0x66D0  0x1A 0x07       PUSHIB 0x07
0x66D2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66D4  0x45            PUSHI1
0x66D5  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["break"] = true;                   token.hs:219

0x66D7  0x20 0x0A       PUSHGLOBALB 0x0A
0x66D9  0x37 0xDF 0x0F  PUSHIW 0x0FDF
0x66DC  0x1A 0x05       PUSHIB 0x05
0x66DE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66E0  0x45            PUSHI1
0x66E1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["case"] = true;                    token.hs:220

0x66E3  0x20 0x0A       PUSHGLOBALB 0x0A
0x66E5  0x37 0x2C 0x0E  PUSHIW 0x0E2C
0x66E8  0x1A 0x04       PUSHIB 0x04
0x66EA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66EC  0x45            PUSHI1
0x66ED  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["continue"] = true;                token.hs:221

0x66EF  0x20 0x0A       PUSHGLOBALB 0x0A
0x66F1  0x37 0xE4 0x0F  PUSHIW 0x0FE4
0x66F4  0x1A 0x08       PUSHIB 0x08
0x66F6  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x66F8  0x45            PUSHI1
0x66F9  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["default"] = true;                 token.hs:222

0x66FB  0x20 0x0A       PUSHGLOBALB 0x0A
0x66FD  0x37 0xEC 0x0F  PUSHIW 0x0FEC
0x6700  0x1A 0x07       PUSHIB 0x07
0x6702  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6704  0x45            PUSHI1
0x6705  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["embed"] = true;                   token.hs:223

0x6707  0x20 0x0A       PUSHGLOBALB 0x0A
0x6709  0x37 0xF3 0x0F  PUSHIW 0x0FF3
0x670C  0x1A 0x05       PUSHIB 0x05
0x670E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6710  0x45            PUSHI1
0x6711  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["else"] = true;                    token.hs:224

0x6713  0x20 0x0A       PUSHGLOBALB 0x0A
0x6715  0x37 0x32 0x0D  PUSHIW 0x0D32
0x6718  0x1A 0x04       PUSHIB 0x04
0x671A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x671C  0x45            PUSHI1
0x671D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["for"] = true;                     token.hs:225

0x671F  0x20 0x0A       PUSHGLOBALB 0x0A
0x6721  0x1A 0x95       PUSHIB 0x95
0x6723  0x1A 0x03       PUSHIB 0x03
0x6725  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6727  0x45            PUSHI1
0x6728  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["foreach"] = true;                 token.hs:226

0x672A  0x20 0x0A       PUSHGLOBALB 0x0A
0x672C  0x37 0xF8 0x0F  PUSHIW 0x0FF8
0x672F  0x1A 0x07       PUSHIB 0x07
0x6731  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6733  0x45            PUSHI1
0x6734  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["get"] = true;                     token.hs:227

0x6736  0x20 0x0A       PUSHGLOBALB 0x0A
0x6738  0x37 0x2D 0x03  PUSHIW 0x032D
0x673B  0x1A 0x03       PUSHIB 0x03
0x673D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x673F  0x45            PUSHI1
0x6740  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["if"] = true;                      token.hs:228

0x6742  0x20 0x0A       PUSHGLOBALB 0x0A
0x6744  0x37 0x69 0x66  PUSHIW 0x6669
0x6747  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6749  0x45            PUSHI1
0x674A  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["in"] = true;                      token.hs:229

0x674C  0x20 0x0A       PUSHGLOBALB 0x0A
0x674E  0x37 0x69 0x6E  PUSHIW 0x6E69
0x6751  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6753  0x45            PUSHI1
0x6754  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["loop"] = true;                    token.hs:230

0x6756  0x20 0x0A       PUSHGLOBALB 0x0A
0x6758  0x37 0xFF 0x0F  PUSHIW 0x0FFF
0x675B  0x1A 0x04       PUSHIB 0x04
0x675D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x675F  0x45            PUSHI1
0x6760  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["program"] = true;                 token.hs:231

0x6762  0x20 0x0A       PUSHGLOBALB 0x0A
0x6764  0x1A 0xF2       PUSHIB 0xF2
0x6766  0x1A 0x07       PUSHIB 0x07
0x6768  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x676A  0x45            PUSHI1
0x676B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["return"] = true;                  token.hs:232

0x676D  0x20 0x0A       PUSHGLOBALB 0x0A
0x676F  0x37 0x98 0x05  PUSHIW 0x0598
0x6772  0x1A 0x06       PUSHIB 0x06
0x6774  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6776  0x45            PUSHI1
0x6777  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["set"] = true;                     token.hs:233

0x6779  0x20 0x0A       PUSHGLOBALB 0x0A
0x677B  0x37 0x6B 0x03  PUSHIW 0x036B
0x677E  0x1A 0x03       PUSHIB 0x03
0x6780  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6782  0x45            PUSHI1
0x6783  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["switch"] = true;                  token.hs:234

0x6785  0x20 0x0A       PUSHGLOBALB 0x0A
0x6787  0x37 0x03 0x10  PUSHIW 0x1003
0x678A  0x1A 0x06       PUSHIB 0x06
0x678C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x678E  0x45            PUSHI1
0x678F  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["system"] = true;                  token.hs:235

0x6791  0x20 0x0A       PUSHGLOBALB 0x0A
0x6793  0x37 0xD6 0x03  PUSHIW 0x03D6
0x6796  0x1A 0x06       PUSHIB 0x06
0x6798  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x679A  0x45            PUSHI1
0x679B  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["typeof"] = true;                  token.hs:236

0x679D  0x20 0x0A       PUSHGLOBALB 0x0A
0x679F  0x37 0x09 0x10  PUSHIW 0x1009
0x67A2  0x1A 0x06       PUSHIB 0x06
0x67A4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x67A6  0x45            PUSHI1
0x67A7  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["unit"] = true;                    token.hs:237

0x67A9  0x20 0x0A       PUSHGLOBALB 0x0A
0x67AB  0x37 0x2B 0x01  PUSHIW 0x012B
0x67AE  0x1A 0x04       PUSHIB 0x04
0x67B0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x67B2  0x45            PUSHI1
0x67B3  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["uses"] = true;                    token.hs:238

0x67B5  0x20 0x0A       PUSHGLOBALB 0x0A
0x67B7  0x37 0xC2 0x01  PUSHIW 0x01C2
0x67BA  0x1A 0x04       PUSHIB 0x04
0x67BC  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x67BE  0x45            PUSHI1
0x67BF  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // statementKeywords["while"] = true;                   token.hs:239

0x67C1  0x20 0x0A       PUSHGLOBALB 0x0A
0x67C3  0x37 0x0F 0x10  PUSHIW 0x100F
0x67C6  0x1A 0x05       PUSHIB 0x05
0x67C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x67CA  0x45            PUSHI1
0x67CB  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    token.hs:240

0x67CD  0x4A            RET0


// /source/compiler/tokens/token.hs:506
// ####  Token.New(..)  ####                                                    0x0056

0x67CE  0x49            ENTER

                        // <string,string> token;                               token.hs:507

0x67CF  0x1A 0x0F       PUSHIB 0x0F
0x67D1  0x1A 0x0F       PUSHIB 0x0F
0x67D3  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // token["type"] = HopperTokenToString(tokenType);

0x67D5  0x4E            PUSHLOCALB00
0x67D6  0x37 0x51 0x02  PUSHIW 0x0251
0x67D9  0x1A 0x04       PUSHIB 0x04
0x67DB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x67DD  0x1C 0xF6       PUSHLOCALB 0xF6 (BP-10)
0x67DF  0x2C 0x45       CALLB 0x45     // Token.HopperTokenToString
0x67E1  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["lexeme"] = lexeme;                            token.hs:509

0x67E3  0x4E            PUSHLOCALB00
0x67E4  0x37 0x5B 0x01  PUSHIW 0x015B
0x67E7  0x1A 0x06       PUSHIB 0x06
0x67E9  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x67EB  0x1C 0xF8       PUSHLOCALB 0xF8 (BP-8)
0x67ED  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["line"] = ln.ToString();                       token.hs:510

0x67EF  0x4E            PUSHLOCALB00
0x67F0  0x37 0xD2 0x03  PUSHIW 0x03D2
0x67F3  0x1A 0x04       PUSHIB 0x04
0x67F5  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x67F7  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x67F9  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x67FB  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["source"] = sourcePath;                        token.hs:511

0x67FD  0x4E            PUSHLOCALB00
0x67FE  0x1A 0xB9       PUSHIB 0xB9
0x6800  0x1A 0x06       PUSHIB 0x06
0x6802  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6804  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6806  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // token["pos"] = pos.ToString();                       token.hs:512

0x6808  0x4E            PUSHLOCALB00
0x6809  0x37 0xCF 0x03  PUSHIW 0x03CF
0x680C  0x1A 0x03       PUSHIB 0x03
0x680E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6810  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6812  0x24 0x38       SYSCALL0 0x38  // Long.ToString
0x6814  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // return token;                                        token.hs:513

0x6816  0x4E            PUSHLOCALB00
0x6817  0x2B 0x0C       RETRETB 0x0C


// /source/compiler/tokens/token.hs:516
// ####  Token.ToString(..)  ####                                               0x0057


                        // HopperToken tokenType;                               token.hs:517

0x6819  0x5F 0x01       ENTERB 0x01

                        // string content = "Undefined";                        token.hs:518

0x681B  0x24 0x02       SYSCALL0 0x02  // String.New
0x681D  0x37 0xDA 0x0E  PUSHIW 0x0EDA
0x6820  0x1A 0x09       PUSHIB 0x09
0x6822  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6824  0x5E            POPCOPYLOCALB02

                        // if (token.Count > 0)                                 token.hs:519

0x6825  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6827  0x24 0x1A       SYSCALL0 0x1A  // Dictionary.Count_Get
0x6829  0x44            PUSHI0
0x682A  0x07            GT
0x682B  0x31 0x1F 0x01  JZW 0x694A (+287)

                        // content = token["type"];                             token.hs:521

0x682E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6830  0x37 0x51 0x02  PUSHIW 0x0251
0x6833  0x1A 0x04       PUSHIB 0x04
0x6835  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6837  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6839  0x5E            POPCOPYLOCALB02

                        // tokenType = Token.GetType(token);                    token.hs:522

0x683A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x683C  0x2C 0x46       CALLB 0x46     // Token.GetType
0x683E  0x4C            POPLOCALB00

                        // switch (tokenType)                                   token.hs:523

0x683F  0x4E            PUSHLOCALB00

                        // case HopperToken.Identifier:                         token.hs:525

0x6840  0x1A 0x03       PUSHIB 0x03
0x6842  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6844  0x05            EQ
0x6845  0x2E 0x21       JZB 0x6866 (+33)

                        // content = content + " '" + token["lexeme"] + "'";

0x6847  0x4F            PUSHLOCALB02
0x6848  0x37 0x20 0x27  PUSHIW 0x2720
0x684B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x684D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x684F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6851  0x37 0x5B 0x01  PUSHIW 0x015B
0x6854  0x1A 0x06       PUSHIB 0x06
0x6856  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6858  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x685A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x685C  0x1A 0x27       PUSHIB 0x27
0x685E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6860  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6862  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:528

0x6863  0x33 0xA4 0x00  JW 0x6907 (+164)

                        // case HopperToken.StringConstant:                     token.hs:529

0x6866  0x1A 0x0B       PUSHIB 0x0B
0x6868  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x686A  0x05            EQ
0x686B  0x2E 0x1F       JZB 0x688A (+31)

                        // content = content + " \"" + token["lexeme"] + '"';

0x686D  0x4F            PUSHLOCALB02
0x686E  0x37 0x20 0x22  PUSHIW 0x2220
0x6871  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6873  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6875  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6877  0x37 0x5B 0x01  PUSHIW 0x015B
0x687A  0x1A 0x06       PUSHIB 0x06
0x687C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x687E  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6880  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6882  0x1A 0x22       PUSHIB 0x22
0x6884  0x25 0x03       SYSCALL1 0x03  // String.Append
0x6886  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:532

0x6887  0x33 0x80 0x00  JW 0x6907 (+128)

                        // case HopperToken.Char:                               token.hs:533

0x688A  0x1A 0x08       PUSHIB 0x08
0x688C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x688E  0x05            EQ
0x688F  0x2E 0x20       JZB 0x68AF (+32)

                        // content = content + " '" + token["lexeme"] + "'";

0x6891  0x4F            PUSHLOCALB02
0x6892  0x37 0x20 0x27  PUSHIW 0x2720
0x6895  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6897  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6899  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x689B  0x37 0x5B 0x01  PUSHIW 0x015B
0x689E  0x1A 0x06       PUSHIB 0x06
0x68A0  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x68A2  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x68A4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x68A6  0x1A 0x27       PUSHIB 0x27
0x68A8  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x68AA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x68AC  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:536

0x68AD  0x30 0x5A       JB 0x6907 (+90)

                        // case HopperToken.Keyword:                            token.hs:537

0x68AF  0x1A 0x05       PUSHIB 0x05
0x68B1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x68B3  0x05            EQ
0x68B4  0x2E 0x19       JZB 0x68CD (+25)

                        // content = content + " " + token["lexeme"];           token.hs:539

0x68B6  0x4F            PUSHLOCALB02
0x68B7  0x1A 0x20       PUSHIB 0x20
0x68B9  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x68BB  0x24 0x03       SYSCALL0 0x03  // String.Append
0x68BD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x68BF  0x37 0x5B 0x01  PUSHIW 0x015B
0x68C2  0x1A 0x06       PUSHIB 0x06
0x68C4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x68C6  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x68C8  0x24 0x03       SYSCALL0 0x03  // String.Append
0x68CA  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:540

0x68CB  0x30 0x3C       JB 0x6907 (+60)

                        // case HopperToken.Integer:                            token.hs:541

0x68CD  0x1A 0x09       PUSHIB 0x09
0x68CF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x68D1  0x05            EQ
0x68D2  0x2E 0x19       JZB 0x68EB (+25)

                        // content = content + " " + token["lexeme"];           token.hs:543

0x68D4  0x4F            PUSHLOCALB02
0x68D5  0x1A 0x20       PUSHIB 0x20
0x68D7  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x68D9  0x24 0x03       SYSCALL0 0x03  // String.Append
0x68DB  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x68DD  0x37 0x5B 0x01  PUSHIW 0x015B
0x68E0  0x1A 0x06       PUSHIB 0x06
0x68E2  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x68E4  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x68E6  0x24 0x03       SYSCALL0 0x03  // String.Append
0x68E8  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:544

0x68E9  0x30 0x1E       JB 0x6907 (+30)

                        // case HopperToken.Bool:                               token.hs:545

0x68EB  0x1A 0x07       PUSHIB 0x07
0x68ED  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x68EF  0x05            EQ
0x68F0  0x2E 0x17       JZB 0x6907 (+23)

                        // content = content + " " + token["lexeme"];           token.hs:547

0x68F2  0x4F            PUSHLOCALB02
0x68F3  0x1A 0x20       PUSHIB 0x20
0x68F5  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x68F7  0x24 0x03       SYSCALL0 0x03  // String.Append
0x68F9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x68FB  0x37 0x5B 0x01  PUSHIW 0x015B
0x68FE  0x1A 0x06       PUSHIB 0x06
0x6900  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6902  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6904  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6906  0x5E            POPCOPYLOCALB02

                        // }                                                    token.hs:549

0x6907  0x28 0x02       DECSP 0x02

                        // content = content + "[" + token["source"] + ":" + token["line"] + "->" + token["pos"] + "]";

0x6909  0x4F            PUSHLOCALB02
0x690A  0x1A 0x5B       PUSHIB 0x5B
0x690C  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x690E  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6910  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6912  0x1A 0xB9       PUSHIB 0xB9
0x6914  0x1A 0x06       PUSHIB 0x06
0x6916  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6918  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x691A  0x24 0x03       SYSCALL0 0x03  // String.Append
0x691C  0x1A 0x3A       PUSHIB 0x3A
0x691E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6920  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6922  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6924  0x37 0xD2 0x03  PUSHIW 0x03D2
0x6927  0x1A 0x04       PUSHIB 0x04
0x6929  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x692B  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x692D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x692F  0x37 0x2D 0x3E  PUSHIW 0x3E2D
0x6932  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6934  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6936  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6938  0x37 0xCF 0x03  PUSHIW 0x03CF
0x693B  0x1A 0x03       PUSHIB 0x03
0x693D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x693F  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6941  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6943  0x1A 0x5D       PUSHIB 0x5D
0x6945  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6947  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6949  0x5E            POPCOPYLOCALB02

                        // return content;                                      token.hs:552

0x694A  0x4F            PUSHLOCALB02
0x694B  0x2B 0x06       RETRETB 0x06


// /source/compiler/tokens/token.hs:440
// ####  Token.TryParseFloat(..)  ####                                          0x0055


                        // bool success;                                        token.hs:441

0x694D  0x5F 0x02       ENTERB 0x02

                        // long longValue;                                      token.hs:443

0x694F  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // float floatValue;                                    token.hs:444

0x6951  0x24 0x4C       SYSCALL0 0x4C  // Float.New

                        // string digits;                                       token.hs:445

0x6953  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (content.IndexOf('.', ref iDot))                  token.hs:448

0x6955  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6957  0x1A 0x2E       PUSHIB 0x2E
0x6959  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x695B  0x34 0x07 0x01  CALLW 0x0107   // String.IndexOf
0x695E  0x31 0x79 0x00  JZW 0x69D7 (+121)

                        // digits = content.Substring(0, iDot);                 token.hs:450

0x6961  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6963  0x44            PUSHI0
0x6964  0x4F            PUSHLOCALB02
0x6965  0x25 0x08       SYSCALL1 0x08  // String.Substring
0x6967  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // if (!TryParseLong(digits, ref longValue))            token.hs:451

0x6969  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x696B  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x696D  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x696F  0x2E 0x78       JZB 0x69E7 (+120)

                        // floatValue = longValue.ToFloat();                    token.hs:455

0x6971  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6973  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x6975  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // digits = content.Substring(iDot+1);                  token.hs:456

0x6977  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6979  0x4F            PUSHLOCALB02
0x697A  0x45            PUSHI1
0x697B  0x00            ADD
0x697C  0x24 0x08       SYSCALL0 0x08  // String.Substring
0x697E  0x57 0x08       POPCOPYLOCALB 0x08 (BP+8)

                        // uint length = digits.Length;                         token.hs:457

0x6980  0x44            PUSHI0
0x6981  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6983  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x6985  0x1B 0x0A       POPLOCALB 0x0A (BP+10)

                        // if (length > 0)                                      token.hs:458

0x6987  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x6989  0x44            PUSHI0
0x698A  0x07            GT
0x698B  0x2E 0x46       JZB 0x69D1 (+70)

                        // if (!TryParseLong(digits, ref longValue))            token.hs:460

0x698D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x698F  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x6991  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x6993  0x2F 0x06       JNZB 0x6999 (+6)

                        // break;                                               token.hs:462

0x6995  0x28 0x02       DECSP 0x02
0x6997  0x30 0x50       JB 0x69E7 (+80)

                        // float decimalValue = longValue.ToFloat();            token.hs:464

0x6999  0x24 0x4C       SYSCALL0 0x4C  // Float.New
0x699B  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x699D  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x699F  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // while (length > 0)                                   token.hs:465

0x69A1  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x69A3  0x44            PUSHI0
0x69A4  0x07            GT
0x69A5  0x2E 0x11       JZB 0x69B6 (+17)

                        // decimalValue = decimalValue / 10.0;                  token.hs:467

0x69A7  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x69A9  0x37 0x14 0x10  PUSHIW 0x1014
0x69AC  0x24 0x4D       SYSCALL0 0x4D  // Float.NewFromConstant
0x69AE  0x24 0x50       SYSCALL0 0x50  // Float.Div
0x69B0  0x57 0x0C       POPCOPYLOCALB 0x0C (BP+12)

                        // length--;                                            token.hs:468

0x69B2  0x23 0x0A       DECLOCALB 0x0A (BP+10)

                        // }                                                    token.hs:469

0x69B4  0x30 0xED       JB 0x69A1 (-19)

                        // if (floatValue > 0)                                  token.hs:470

0x69B6  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x69B8  0x44            PUSHI0
0x69B9  0x24 0x34       SYSCALL0 0x34  // Int.ToFloat
0x69BB  0x24 0x55       SYSCALL0 0x55  // Float.GT
0x69BD  0x2E 0x0B       JZB 0x69C8 (+11)

                        // floatValue = floatValue + decimalValue;              token.hs:472

0x69BF  0x56 0x06 0x0C  PUSHLOCALBB 0x0C06
0x69C2  0x24 0x4E       SYSCALL0 0x4E  // Float.Add
0x69C4  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // }                                                    token.hs:473

0x69C6  0x30 0x09       JB 0x69CF (+9)

                        // floatValue = floatValue - decimalValue;              token.hs:476

0x69C8  0x56 0x06 0x0C  PUSHLOCALBB 0x0C06
0x69CB  0x24 0x4F       SYSCALL0 0x4F  // Float.Sub
0x69CD  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // }                                                    token.hs:478

0x69CF  0x28 0x02       DECSP 0x02

                        // success = true;                                      token.hs:479

0x69D1  0x45            PUSHI1
0x69D2  0x4C            POPLOCALB00

                        // }                                                    token.hs:480

0x69D3  0x28 0x02       DECSP 0x02
0x69D5  0x30 0x12       JB 0x69E7 (+18)

                        // if (TryParseLong(content, ref longValue))            token.hs:483

0x69D7  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x69D9  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x69DB  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x69DD  0x2E 0x0A       JZB 0x69E7 (+10)

                        // floatValue = longValue.ToFloat();                    token.hs:485

0x69DF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x69E1  0x24 0x3A       SYSCALL0 0x3A  // Long.ToFloat
0x69E3  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // success = true;                                      token.hs:486

0x69E5  0x45            PUSHI1
0x69E6  0x4C            POPLOCALB00

                        // if (success)                                         token.hs:491

0x69E7  0x4E            PUSHLOCALB00
0x69E8  0x2E 0x06       JZB 0x69EE (+6)

                        // returnValue = floatValue;                            token.hs:493

0x69EA  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x69EC  0x58 0xFE       POPCOPYRELB 0xFE (BP-2)

                        // return success;                                      token.hs:495

0x69EE  0x4E            PUSHLOCALB00
0x69EF  0x2B 0x0E       RETRETB 0x0E


// /source/compiler/tokens/token.hs:268
// ####  Token.IsKeyword(..)  ####                                              0x004E

0x69F1  0x49            ENTER

                        // return typeKeywords.Contains(candidate) || statementKeywords.Contains(candidate);

0x69F2  0x20 0x08       PUSHGLOBALB 0x08
0x69F4  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x69F6  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x69F8  0x27 0x00       DUP 0x00
0x69FA  0x2F 0x09       JNZB 0x6A03 (+9)
0x69FC  0x20 0x0A       PUSHGLOBALB 0x0A
0x69FE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A00  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6A02  0x0B            BOOLOR
0x6A03  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/token.hs:242
// ####  Token.IsDirectiveKeyword(..)  ####                                     0x0048

0x6A05  0x49            ENTER

                        // return directiveKeywords.Contains(candidate);

0x6A06  0x20 0x0C       PUSHGLOBALB 0x0C
0x6A08  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A0A  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6A0C  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/token.hs:306
// ####  Token.TryParseInt(..)  ####                                            0x0050


                        // bool success;                                        token.hs:307

0x6A0E  0x5F 0x01       ENTERB 0x01

                        // long rv;                                             token.hs:308

0x6A10  0x24 0x3D       SYSCALL0 0x3D  // Long.New

                        // if (TryParseLong(content, ref rv))                   token.hs:309

0x6A12  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6A14  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x6A16  0x2C 0x4F       CALLB 0x4F     // Token.TryParseLong
0x6A18  0x2E 0x22       JZB 0x6A3A (+34)

                        // if ((rv >= -32768) && (rv <= 32767))                 token.hs:311

0x6A1A  0x4F            PUSHLOCALB02
0x6A1B  0x37 0x00 0x80  PUSHIW 0x8000
0x6A1E  0x24 0x36       SYSCALL0 0x36  // UInt.ToLong
0x6A20  0x24 0x49       SYSCALL0 0x49  // Long.Negate
0x6A22  0x24 0x48       SYSCALL0 0x48  // Long.GE
0x6A24  0x27 0x00       DUP 0x00
0x6A26  0x2E 0x0B       JZB 0x6A31 (+11)
0x6A28  0x4F            PUSHLOCALB02
0x6A29  0x37 0xFF 0x7F  PUSHIW 0x7FFF
0x6A2C  0x24 0x35       SYSCALL0 0x35  // Int.ToLong
0x6A2E  0x24 0x46       SYSCALL0 0x46  // Long.LE
0x6A30  0x0C            BOOLAND
0x6A31  0x2E 0x09       JZB 0x6A3A (+9)

                        // returnValue = int(rv);                               token.hs:313

0x6A33  0x4F            PUSHLOCALB02
0x6A34  0x24 0x3B       SYSCALL0 0x3B  // Long.ToInt
0x6A36  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // success = true;                                      token.hs:314

0x6A38  0x45            PUSHI1
0x6A39  0x4C            POPLOCALB00

                        // return success;                                      token.hs:317

0x6A3A  0x4E            PUSHLOCALB00
0x6A3B  0x2B 0x08       RETRETB 0x08


// /source/compiler/tokens/token.hs:254
// ####  Token.IsTypeKeyword(..)  ####                                          0x004B

0x6A3D  0x49            ENTER

                        // return typeKeywords.Contains(candidate);             token.hs:255

0x6A3E  0x20 0x08       PUSHGLOBALB 0x08
0x6A40  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A42  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6A44  0x2B 0x02       RETRETB 0x02


// /source/compiler/tokens/token.hs:69
// ####  Token.HopperTokenToString(..)  ####                                    0x0045

0x6A46  0x49            ENTER

                        // string content;                                      token.hs:71

0x6A47  0x24 0x02       SYSCALL0 0x02  // String.New

                        // uint i;                                              token.hs:72

0x6A49  0x44            PUSHI0

                        // if (hopperTokenNames.Contains(tokenType))            token.hs:73

0x6A4A  0x20 0x10       PUSHGLOBALB 0x10
0x6A4C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A4E  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6A50  0x2E 0x0B       JZB 0x6A5B (+11)

                        // content = hopperTokenNames[tokenType];               token.hs:75

0x6A52  0x20 0x10       PUSHGLOBALB 0x10
0x6A54  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A56  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6A58  0x5D            POPCOPYLOCALB00

                        // }                                                    token.hs:76

0x6A59  0x30 0x1B       JB 0x6A74 (+27)

                        // i = uint(tokenType);                                 token.hs:79

0x6A5B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A5D  0x4D            POPLOCALB02

                        // content = "0x" + i.ToHexString(4);                   token.hs:80

0x6A5E  0x37 0x30 0x78  PUSHIW 0x7830
0x6A61  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6A63  0x4F            PUSHLOCALB02
0x6A64  0x1A 0x04       PUSHIB 0x04
0x6A66  0x2C 0xEA       CALLB 0xEA     // UInt.ToHexString
0x6A68  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6A6A  0x5D            POPCOPYLOCALB00

                        // PrintLn("TODO : token not implemented in Token.HopperTokenToString");

0x6A6B  0x37 0x18 0x10  PUSHIW 0x1018
0x6A6E  0x1A 0x39       PUSHIB 0x39
0x6A70  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6A72  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // return content;                                      token.hs:83

0x6A74  0x4E            PUSHLOCALB00
0x6A75  0x2B 0x06       RETRETB 0x06


// /source/system/color.hs:21
// ####  Color.Red_Get(..)  ####                                                0x0155

0x6A77  0x49            ENTER

                        // uint Red         { get { return 0xF00; }}            color.hs:21

0x6A78  0x37 0x00 0x0F  PUSHIW 0x0F00
0x6A7B  0x4A            RET0


// /source/compiler/symbols.hs:296
// ####  Symbols.DefineExists(..)  ####                                         0x0092


                        // bool exists = false;                                 symbols.hs:297

0x6A7C  0x5F 0x01       ENTERB 0x01

                        // if (pdValues.Contains(name))                         symbols.hs:298

0x6A7E  0x20 0x88       PUSHGLOBALB 0x88
0x6A80  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A82  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6A84  0x2E 0x04       JZB 0x6A88 (+4)

                        // exists = true;                                       symbols.hs:300

0x6A86  0x45            PUSHI1
0x6A87  0x4C            POPLOCALB00

                        // return exists;                                       symbols.hs:302

0x6A88  0x4E            PUSHLOCALB00
0x6A89  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:314
// ####  Symbols.AddDefine(..)  ####                                            0x0094

0x6A8B  0x49            ENTER

                        // pdValues[name] = value;                              symbols.hs:315

0x6A8C  0x20 0x88       PUSHGLOBALB 0x88
0x6A8E  0x56 0xFC 0xFE  PUSHLOCALBB 0xFEFC
0x6A91  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:316

0x6A93  0x2A 0x04       RETB 0x04


// /source/compiler/symbols.hs:319
// ####  Symbols.ConstantExists(..)  ####                                       0x0095


                        // bool exists = false;                                 symbols.hs:320

0x6A95  0x5F 0x01       ENTERB 0x01

                        // if (cValues.Contains(name))                          symbols.hs:321

0x6A97  0x20 0x8A       PUSHGLOBALB 0x8A
0x6A99  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6A9B  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6A9D  0x2E 0x04       JZB 0x6AA1 (+4)

                        // exists = true;                                       symbols.hs:323

0x6A9F  0x45            PUSHI1
0x6AA0  0x4C            POPLOCALB00

                        // return exists;                                       symbols.hs:325

0x6AA1  0x4E            PUSHLOCALB00
0x6AA2  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:328
// ####  Symbols.GetConstantValue(..)  ####                                     0x0096

0x6AA4  0x49            ENTER

                        // string value;                                        symbols.hs:329

0x6AA5  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (ConstantExists(name))                            symbols.hs:330

0x6AA7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6AA9  0x2C 0x95       CALLB 0x95     // Symbols.ConstantExists
0x6AAB  0x2E 0x09       JZB 0x6AB4 (+9)

                        // value = cValues[name];                               symbols.hs:332

0x6AAD  0x20 0x8A       PUSHGLOBALB 0x8A
0x6AAF  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6AB1  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6AB3  0x5D            POPCOPYLOCALB00

                        // return value;                                        symbols.hs:334

0x6AB4  0x4E            PUSHLOCALB00
0x6AB5  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:610
// ####  Symbols.QualifyDelegate(..)  ####                                      0x00A4

0x6AB7  0x49            ENTER

                        // if (!name.Contains('.'))                             symbols.hs:611

0x6AB8  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6ABA  0x1A 0x2E       PUSHIB 0x2E
0x6ABC  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x6ABF  0x32 0x6A 0x00  JNZW 0x6B29 (+106)

                        // string candidate = currentNamespace + "." + name;

0x6AC2  0x24 0x02       SYSCALL0 0x02  // String.New
0x6AC4  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6AC6  0x1A 0x2E       PUSHIB 0x2E
0x6AC8  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6ACA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6ACC  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6ACE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6AD0  0x5D            POPCOPYLOCALB00

                        // if (fdNames.Contains(candidate))                     symbols.hs:616

0x6AD1  0x20 0x6C       PUSHGLOBALB 0x6C
0x6AD3  0x4E            PUSHLOCALB00
0x6AD4  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6AD6  0x2E 0x09       JZB 0x6ADF (+9)

                        // name = candidate;                                    symbols.hs:618

0x6AD8  0x4E            PUSHLOCALB00
0x6AD9  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // break;                                               symbols.hs:619

0x6ADB  0x28 0x02       DECSP 0x02
0x6ADD  0x30 0x4C       JB 0x6B29 (+76)

                        // char f = name[0];                                    symbols.hs:621

0x6ADF  0x44            PUSHI0
0x6AE0  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6AE2  0x44            PUSHI0
0x6AE3  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6AE5  0x4D            POPLOCALB02

                        // if (f.IsUpper())                                     symbols.hs:622

0x6AE6  0x4F            PUSHLOCALB02
0x6AE7  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x6AE9  0x2E 0x3E       JZB 0x6B27 (+62)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:624

0x6AEB  0x20 0x8C       PUSHGLOBALB 0x8C
0x6AED  0x44            PUSHI0
0x6AEE  0x44            PUSHI0
0x6AEF  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6AF1  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x6AF3  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6AF5  0x05            EQ
0x6AF6  0x2F 0x2F       JNZB 0x6B25 (+47)
0x6AF8  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x6AFB  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x6AFD  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if (nameSpace == currentNamespace)                   symbols.hs:626

0x6AFF  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
0x6B02  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6B04  0x2E 0x1D       JZB 0x6B21 (+29)

                        // candidate = nameSpace + "." + name;                  symbols.hs:630

0x6B06  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6B08  0x1A 0x2E       PUSHIB 0x2E
0x6B0A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6B0C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6B0E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6B10  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6B12  0x5D            POPCOPYLOCALB00

                        // if (fdNames.Contains(candidate))                     symbols.hs:631

0x6B13  0x20 0x6C       PUSHGLOBALB 0x6C
0x6B15  0x4E            PUSHLOCALB00
0x6B16  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6B18  0x2E 0x09       JZB 0x6B21 (+9)

                        // name = candidate;                                    symbols.hs:633

0x6B1A  0x4E            PUSHLOCALB00
0x6B1B  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // break;                                               symbols.hs:634

0x6B1D  0x28 0x06       DECSP 0x06
0x6B1F  0x30 0x08       JB 0x6B27 (+8)

                        // }                                                    symbols.hs:636

0x6B21  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x6B23  0x30 0xCC       JB 0x6AEF (-52)
0x6B25  0x28 0x06       DECSP 0x06

                        // break;                                               symbols.hs:638

0x6B27  0x28 0x04       DECSP 0x04

                        // return name;                                         symbols.hs:641

0x6B29  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6B2B  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:645
// ####  Symbols.QualifyEnum(..)  ####                                          0x00A5

0x6B2D  0x49            ENTER

                        // if (!name.Contains('.'))                             symbols.hs:646

0x6B2E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6B30  0x1A 0x2E       PUSHIB 0x2E
0x6B32  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x6B35  0x32 0x6A 0x00  JNZW 0x6B9F (+106)

                        // string candidate = currentNamespace + "." + name;

0x6B38  0x24 0x02       SYSCALL0 0x02  // String.New
0x6B3A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6B3C  0x1A 0x2E       PUSHIB 0x2E
0x6B3E  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6B40  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6B42  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6B44  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6B46  0x5D            POPCOPYLOCALB00

                        // if (eIndex.Contains(candidate))                      symbols.hs:651

0x6B47  0x20 0x7A       PUSHGLOBALB 0x7A
0x6B49  0x4E            PUSHLOCALB00
0x6B4A  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6B4C  0x2E 0x09       JZB 0x6B55 (+9)

                        // name = candidate;                                    symbols.hs:653

0x6B4E  0x4E            PUSHLOCALB00
0x6B4F  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // break;                                               symbols.hs:654

0x6B51  0x28 0x02       DECSP 0x02
0x6B53  0x30 0x4C       JB 0x6B9F (+76)

                        // char f = name[0];                                    symbols.hs:656

0x6B55  0x44            PUSHI0
0x6B56  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6B58  0x44            PUSHI0
0x6B59  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6B5B  0x4D            POPLOCALB02

                        // if (f.IsUpper())                                     symbols.hs:657

0x6B5C  0x4F            PUSHLOCALB02
0x6B5D  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x6B5F  0x2E 0x3E       JZB 0x6B9D (+62)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:659

0x6B61  0x20 0x8C       PUSHGLOBALB 0x8C
0x6B63  0x44            PUSHI0
0x6B64  0x44            PUSHI0
0x6B65  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6B67  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x6B69  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6B6B  0x05            EQ
0x6B6C  0x2F 0x2F       JNZB 0x6B9B (+47)
0x6B6E  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x6B71  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x6B73  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if (nameSpace == currentNamespace)                   symbols.hs:661

0x6B75  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
0x6B78  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6B7A  0x2E 0x1D       JZB 0x6B97 (+29)

                        // candidate = nameSpace + "." + name;                  symbols.hs:665

0x6B7C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6B7E  0x1A 0x2E       PUSHIB 0x2E
0x6B80  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6B82  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6B84  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6B86  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6B88  0x5D            POPCOPYLOCALB00

                        // if (eIndex.Contains(candidate))                      symbols.hs:666

0x6B89  0x20 0x7A       PUSHGLOBALB 0x7A
0x6B8B  0x4E            PUSHLOCALB00
0x6B8C  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6B8E  0x2E 0x09       JZB 0x6B97 (+9)

                        // name = candidate;                                    symbols.hs:668

0x6B90  0x4E            PUSHLOCALB00
0x6B91  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // break;                                               symbols.hs:669

0x6B93  0x28 0x06       DECSP 0x06
0x6B95  0x30 0x08       JB 0x6B9D (+8)

                        // }                                                    symbols.hs:671

0x6B97  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x6B99  0x30 0xCC       JB 0x6B65 (-52)
0x6B9B  0x28 0x06       DECSP 0x06

                        // break;                                               symbols.hs:673

0x6B9D  0x28 0x04       DECSP 0x04

                        // return name;                                         symbols.hs:676

0x6B9F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6BA1  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:222
// ####  Symbols.FindEnum(..)  ####                                             0x008E


                        // bool found = false;                                  symbols.hs:223

0x6BA3  0x5F 0x01       ENTERB 0x01

                        // if (eIndex.Contains(enumName))                       symbols.hs:224

0x6BA5  0x20 0x7A       PUSHGLOBALB 0x7A
0x6BA7  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6BA9  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6BAB  0x2E 0x29       JZB 0x6BD4 (+41)

                        // uint index = eIndex[enumName];                       symbols.hs:226

0x6BAD  0x44            PUSHI0
0x6BAE  0x20 0x7A       PUSHGLOBALB 0x7A
0x6BB0  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6BB2  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6BB4  0x4D            POPLOCALB02

                        // <string,uint> members = eMembers[index];             symbols.hs:227

0x6BB5  0x1A 0x0F       PUSHIB 0x0F
0x6BB7  0x1A 0x04       PUSHIB 0x04
0x6BB9  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x6BBB  0x20 0x7C       PUSHGLOBALB 0x7C
0x6BBD  0x4F            PUSHLOCALB02
0x6BBE  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6BC0  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (members.Contains(memberName))                    symbols.hs:228

0x6BC2  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
0x6BC5  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6BC7  0x2E 0x0B       JZB 0x6BD2 (+11)

                        // value = members[memberName];                         symbols.hs:230

0x6BC9  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
0x6BCC  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6BCE  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // found = true;                                        symbols.hs:231

0x6BD0  0x45            PUSHI1
0x6BD1  0x4C            POPLOCALB00

                        // }                                                    symbols.hs:233

0x6BD2  0x28 0x04       DECSP 0x04

                        // return found;                                        symbols.hs:234

0x6BD4  0x4E            PUSHLOCALB00
0x6BD5  0x2B 0x08       RETRETB 0x08


// /source/compiler/symbols.hs:680
// ####  Symbols.QualifyFlags(..)  ####                                         0x00A6

0x6BD7  0x49            ENTER

                        // if (!name.Contains('.'))                             symbols.hs:681

0x6BD8  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6BDA  0x1A 0x2E       PUSHIB 0x2E
0x6BDC  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x6BDF  0x32 0x6A 0x00  JNZW 0x6C49 (+106)

                        // string candidate = currentNamespace + "." + name;

0x6BE2  0x24 0x02       SYSCALL0 0x02  // String.New
0x6BE4  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6BE6  0x1A 0x2E       PUSHIB 0x2E
0x6BE8  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6BEA  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6BEC  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6BEE  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6BF0  0x5D            POPCOPYLOCALB00

                        // if (flIndex.Contains(candidate))                     symbols.hs:686

0x6BF1  0x20 0x80       PUSHGLOBALB 0x80
0x6BF3  0x4E            PUSHLOCALB00
0x6BF4  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6BF6  0x2E 0x09       JZB 0x6BFF (+9)

                        // name = candidate;                                    symbols.hs:688

0x6BF8  0x4E            PUSHLOCALB00
0x6BF9  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // break;                                               symbols.hs:689

0x6BFB  0x28 0x02       DECSP 0x02
0x6BFD  0x30 0x4C       JB 0x6C49 (+76)

                        // char f = name[0];                                    symbols.hs:691

0x6BFF  0x44            PUSHI0
0x6C00  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6C02  0x44            PUSHI0
0x6C03  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6C05  0x4D            POPLOCALB02

                        // if (f.IsUpper())                                     symbols.hs:692

0x6C06  0x4F            PUSHLOCALB02
0x6C07  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x6C09  0x2E 0x3E       JZB 0x6C47 (+62)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:694

0x6C0B  0x20 0x8C       PUSHGLOBALB 0x8C
0x6C0D  0x44            PUSHI0
0x6C0E  0x44            PUSHI0
0x6C0F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6C11  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x6C13  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6C15  0x05            EQ
0x6C16  0x2F 0x2F       JNZB 0x6C45 (+47)
0x6C18  0x56 0x04 0x08  PUSHLOCALBB 0x0804
0x6C1B  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x6C1D  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // if (nameSpace == currentNamespace)                   symbols.hs:696

0x6C1F  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
0x6C22  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6C24  0x2E 0x1D       JZB 0x6C41 (+29)

                        // candidate = nameSpace + "." + name;                  symbols.hs:700

0x6C26  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6C28  0x1A 0x2E       PUSHIB 0x2E
0x6C2A  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6C2C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6C2E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6C30  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6C32  0x5D            POPCOPYLOCALB00

                        // if (flIndex.Contains(candidate))                     symbols.hs:701

0x6C33  0x20 0x80       PUSHGLOBALB 0x80
0x6C35  0x4E            PUSHLOCALB00
0x6C36  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6C38  0x2E 0x09       JZB 0x6C41 (+9)

                        // name = candidate;                                    symbols.hs:703

0x6C3A  0x4E            PUSHLOCALB00
0x6C3B  0x57 0xFC       POPCOPYLOCALB 0xFC (BP-4)

                        // break;                                               symbols.hs:704

0x6C3D  0x28 0x06       DECSP 0x06
0x6C3F  0x30 0x08       JB 0x6C47 (+8)

                        // }                                                    symbols.hs:706

0x6C41  0x22 0x08       INCLOCALB 0x08 (BP+8)
0x6C43  0x30 0xCC       JB 0x6C0F (-52)
0x6C45  0x28 0x06       DECSP 0x06

                        // break;                                               symbols.hs:708

0x6C47  0x28 0x04       DECSP 0x04

                        // return name;                                         symbols.hs:711

0x6C49  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6C4B  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:272
// ####  Symbols.FindFlags(..)  ####                                            0x0090


                        // bool found = false;                                  symbols.hs:273

0x6C4D  0x5F 0x01       ENTERB 0x01

                        // if (flIndex.Contains(flagsName))                     symbols.hs:274

0x6C4F  0x20 0x80       PUSHGLOBALB 0x80
0x6C51  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6C53  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6C55  0x2E 0x29       JZB 0x6C7E (+41)

                        // uint index = flIndex[flagsName];                     symbols.hs:276

0x6C57  0x44            PUSHI0
0x6C58  0x20 0x80       PUSHGLOBALB 0x80
0x6C5A  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x6C5C  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6C5E  0x4D            POPLOCALB02

                        // <string,uint> members = flMembers[index];            symbols.hs:277

0x6C5F  0x1A 0x0F       PUSHIB 0x0F
0x6C61  0x1A 0x04       PUSHIB 0x04
0x6C63  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x6C65  0x20 0x82       PUSHGLOBALB 0x82
0x6C67  0x4F            PUSHLOCALB02
0x6C68  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6C6A  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (members.Contains(memberName))                    symbols.hs:278

0x6C6C  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
0x6C6F  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6C71  0x2E 0x0B       JZB 0x6C7C (+11)

                        // value = members[memberName];                         symbols.hs:280

0x6C73  0x56 0x04 0xFC  PUSHLOCALBB 0xFC04
0x6C76  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x6C78  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // found = true;                                        symbols.hs:281

0x6C7A  0x45            PUSHI1
0x6C7B  0x4C            POPLOCALB00

                        // }                                                    symbols.hs:283

0x6C7C  0x28 0x04       DECSP 0x04

                        // return found;                                        symbols.hs:284

0x6C7E  0x4E            PUSHLOCALB00
0x6C7F  0x2B 0x08       RETRETB 0x08


// /source/compiler/symbols.hs:493
// ####  Symbols.IsFlagsType(..)  ####                                          0x00A2


                        // bool isFlags = false;                                symbols.hs:494

0x6C81  0x5F 0x02       ENTERB 0x02

                        // if (!name.Contains('.') && (name.Length != 0))

0x6C83  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6C85  0x1A 0x2E       PUSHIB 0x2E
0x6C87  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x6C8A  0x41            BOOLNOT
0x6C8B  0x27 0x00       DUP 0x00
0x6C8D  0x2E 0x09       JZB 0x6C96 (+9)
0x6C8F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6C91  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x6C93  0x44            PUSHI0
0x6C94  0x06            NE
0x6C95  0x0C            BOOLAND
0x6C96  0x31 0xA4 0x00  JZW 0x6D3A (+164)

                        // string candidate = currentNamespace + "." + name;

0x6C99  0x24 0x02       SYSCALL0 0x02  // String.New
0x6C9B  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6C9D  0x1A 0x2E       PUSHIB 0x2E
0x6C9F  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6CA1  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6CA3  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6CA5  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6CA7  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (eIndex.Contains(candidate))                      symbols.hs:501

0x6CA9  0x20 0x7A       PUSHGLOBALB 0x7A
0x6CAB  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6CAD  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6CAF  0x2E 0x04       JZB 0x6CB3 (+4)

                        // winner++;                                            symbols.hs:503

0x6CB1  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(candidate))                     symbols.hs:505

0x6CB3  0x20 0x80       PUSHGLOBALB 0x80
0x6CB5  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6CB7  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6CB9  0x2E 0x06       JZB 0x6CBF (+6)

                        // winner++;                                            symbols.hs:507

0x6CBB  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isFlags = true;                                      symbols.hs:508

0x6CBD  0x45            PUSHI1
0x6CBE  0x4C            POPLOCALB00

                        // if (fdNames.Contains(candidate))                     symbols.hs:510

0x6CBF  0x20 0x6C       PUSHGLOBALB 0x6C
0x6CC1  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6CC3  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6CC5  0x2E 0x04       JZB 0x6CC9 (+4)

                        // winner++;                                            symbols.hs:512

0x6CC7  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (isFlags && (winner == 1))                        symbols.hs:514

0x6CC9  0x4E            PUSHLOCALB00
0x6CCA  0x27 0x00       DUP 0x00
0x6CCC  0x2E 0x06       JZB 0x6CD2 (+6)
0x6CCE  0x4F            PUSHLOCALB02
0x6CCF  0x45            PUSHI1
0x6CD0  0x05            EQ
0x6CD1  0x0C            BOOLAND
0x6CD2  0x2E 0x07       JZB 0x6CD9 (+7)

                        // break; // don't look at other namespaces if current wins

0x6CD4  0x28 0x02       DECSP 0x02
0x6CD6  0x33 0x84 0x00  JW 0x6D5A (+132)

                        // char f = name[0];                                    symbols.hs:519

0x6CD9  0x44            PUSHI0
0x6CDA  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6CDC  0x44            PUSHI0
0x6CDD  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6CDF  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (f.IsUpper())                                     symbols.hs:520

0x6CE1  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6CE3  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x6CE5  0x2E 0x51       JZB 0x6D36 (+81)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:522

0x6CE7  0x20 0x8C       PUSHGLOBALB 0x8C
0x6CE9  0x44            PUSHI0
0x6CEA  0x44            PUSHI0
0x6CEB  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6CED  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x6CEF  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x6CF1  0x05            EQ
0x6CF2  0x2F 0x42       JNZB 0x6D34 (+66)
0x6CF4  0x56 0x08 0x0C  PUSHLOCALBB 0x0C08
0x6CF7  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x6CF9  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (currentNamespace == nameSpace)                   symbols.hs:524

0x6CFB  0x56 0xFE 0x0A  PUSHLOCALBB 0x0AFE
0x6CFE  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6D00  0x2E 0x30       JZB 0x6D30 (+48)

                        // candidate = nameSpace + "." + name;                  symbols.hs:528

0x6D02  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x6D04  0x1A 0x2E       PUSHIB 0x2E
0x6D06  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6D08  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6D0A  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6D0C  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6D0E  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (eIndex.Contains(candidate))                      symbols.hs:529

0x6D10  0x20 0x7A       PUSHGLOBALB 0x7A
0x6D12  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6D14  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6D16  0x2E 0x04       JZB 0x6D1A (+4)

                        // winner++;                                            symbols.hs:531

0x6D18  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(candidate))                     symbols.hs:533

0x6D1A  0x20 0x80       PUSHGLOBALB 0x80
0x6D1C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6D1E  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6D20  0x2E 0x06       JZB 0x6D26 (+6)

                        // winner++;                                            symbols.hs:535

0x6D22  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isFlags = true;                                      symbols.hs:536

0x6D24  0x45            PUSHI1
0x6D25  0x4C            POPLOCALB00

                        // if (fdNames.Contains(candidate))                     symbols.hs:538

0x6D26  0x20 0x6C       PUSHGLOBALB 0x6C
0x6D28  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6D2A  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6D2C  0x2E 0x04       JZB 0x6D30 (+4)

                        // winner++;                                            symbols.hs:540

0x6D2E  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // }                                                    symbols.hs:542

0x6D30  0x22 0x0C       INCLOCALB 0x0C (BP+12)
0x6D32  0x30 0xB9       JB 0x6CEB (-71)
0x6D34  0x28 0x06       DECSP 0x06

                        // break;                                               symbols.hs:544

0x6D36  0x28 0x04       DECSP 0x04
0x6D38  0x30 0x22       JB 0x6D5A (+34)

                        // if (eIndex.Contains(name))                           symbols.hs:546

0x6D3A  0x20 0x7A       PUSHGLOBALB 0x7A
0x6D3C  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6D3E  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6D40  0x2E 0x04       JZB 0x6D44 (+4)

                        // winner++;                                            symbols.hs:548

0x6D42  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(name))                          symbols.hs:550

0x6D44  0x20 0x80       PUSHGLOBALB 0x80
0x6D46  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6D48  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6D4A  0x2E 0x06       JZB 0x6D50 (+6)

                        // winner++;                                            symbols.hs:552

0x6D4C  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isFlags = true;                                      symbols.hs:553

0x6D4E  0x45            PUSHI1
0x6D4F  0x4C            POPLOCALB00

                        // if (fdNames.Contains(name))                          symbols.hs:555

0x6D50  0x20 0x6C       PUSHGLOBALB 0x6C
0x6D52  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6D54  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6D56  0x2E 0x04       JZB 0x6D5A (+4)

                        // winner++;                                            symbols.hs:557

0x6D58  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (winner > 1)                                      symbols.hs:561

0x6D5A  0x4F            PUSHLOCALB02
0x6D5B  0x45            PUSHI1
0x6D5C  0x07            GT
0x6D5D  0x2E 0x0D       JZB 0x6D6A (+13)

                        // Parser.ErrorAtCurrent("ambiguous undecorated named type name");

0x6D5F  0x37 0x51 0x10  PUSHIW 0x1051
0x6D62  0x1A 0x25       PUSHIB 0x25
0x6D64  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6D66  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // isFlags = false;                                     symbols.hs:564

0x6D68  0x44            PUSHI0
0x6D69  0x4C            POPLOCALB00

                        // return isFlags;                                      symbols.hs:566

0x6D6A  0x4E            PUSHLOCALB00
0x6D6B  0x2B 0x08       RETRETB 0x08


// /source/compiler/symbols.hs:418
// ####  Symbols.IsEnumType(..)  ####                                           0x00A1


                        // bool isEnum = false;                                 symbols.hs:419

0x6D6D  0x5F 0x02       ENTERB 0x02

                        // if (!name.Contains('.') && (name.Length != 0))

0x6D6F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6D71  0x1A 0x2E       PUSHIB 0x2E
0x6D73  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x6D76  0x41            BOOLNOT
0x6D77  0x27 0x00       DUP 0x00
0x6D79  0x2E 0x09       JZB 0x6D82 (+9)
0x6D7B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6D7D  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x6D7F  0x44            PUSHI0
0x6D80  0x06            NE
0x6D81  0x0C            BOOLAND
0x6D82  0x31 0xA4 0x00  JZW 0x6E26 (+164)

                        // string candidate = currentNamespace + "." + name;

0x6D85  0x24 0x02       SYSCALL0 0x02  // String.New
0x6D87  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6D89  0x1A 0x2E       PUSHIB 0x2E
0x6D8B  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6D8D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6D8F  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6D91  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6D93  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (eIndex.Contains(candidate))                      symbols.hs:426

0x6D95  0x20 0x7A       PUSHGLOBALB 0x7A
0x6D97  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6D99  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6D9B  0x2E 0x06       JZB 0x6DA1 (+6)

                        // winner++;                                            symbols.hs:428

0x6D9D  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isEnum = true;                                       symbols.hs:429

0x6D9F  0x45            PUSHI1
0x6DA0  0x4C            POPLOCALB00

                        // if (flIndex.Contains(candidate))                     symbols.hs:431

0x6DA1  0x20 0x80       PUSHGLOBALB 0x80
0x6DA3  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6DA5  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6DA7  0x2E 0x04       JZB 0x6DAB (+4)

                        // winner++;                                            symbols.hs:433

0x6DA9  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(candidate))                     symbols.hs:435

0x6DAB  0x20 0x6C       PUSHGLOBALB 0x6C
0x6DAD  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6DAF  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6DB1  0x2E 0x04       JZB 0x6DB5 (+4)

                        // winner++;                                            symbols.hs:437

0x6DB3  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (isEnum && (winner == 1))                         symbols.hs:439

0x6DB5  0x4E            PUSHLOCALB00
0x6DB6  0x27 0x00       DUP 0x00
0x6DB8  0x2E 0x06       JZB 0x6DBE (+6)
0x6DBA  0x4F            PUSHLOCALB02
0x6DBB  0x45            PUSHI1
0x6DBC  0x05            EQ
0x6DBD  0x0C            BOOLAND
0x6DBE  0x2E 0x07       JZB 0x6DC5 (+7)

                        // break; // don't look at other namespaces if current wins

0x6DC0  0x28 0x02       DECSP 0x02
0x6DC2  0x33 0x84 0x00  JW 0x6E46 (+132)

                        // char f = name[0];                                    symbols.hs:443

0x6DC5  0x44            PUSHI0
0x6DC6  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6DC8  0x44            PUSHI0
0x6DC9  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6DCB  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (f.IsUpper())                                     symbols.hs:444

0x6DCD  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6DCF  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x6DD1  0x2E 0x51       JZB 0x6E22 (+81)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:446

0x6DD3  0x20 0x8C       PUSHGLOBALB 0x8C
0x6DD5  0x44            PUSHI0
0x6DD6  0x44            PUSHI0
0x6DD7  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6DD9  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x6DDB  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x6DDD  0x05            EQ
0x6DDE  0x2F 0x42       JNZB 0x6E20 (+66)
0x6DE0  0x56 0x08 0x0C  PUSHLOCALBB 0x0C08
0x6DE3  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x6DE5  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (currentNamespace == nameSpace)                   symbols.hs:448

0x6DE7  0x56 0xFE 0x0A  PUSHLOCALBB 0x0AFE
0x6DEA  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6DEC  0x2E 0x30       JZB 0x6E1C (+48)

                        // candidate = nameSpace + "." + name;                  symbols.hs:452

0x6DEE  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x6DF0  0x1A 0x2E       PUSHIB 0x2E
0x6DF2  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6DF4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6DF6  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6DF8  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6DFA  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (eIndex.Contains(candidate))                      symbols.hs:453

0x6DFC  0x20 0x7A       PUSHGLOBALB 0x7A
0x6DFE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6E00  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6E02  0x2E 0x06       JZB 0x6E08 (+6)

                        // winner++;                                            symbols.hs:455

0x6E04  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isEnum = true;                                       symbols.hs:456

0x6E06  0x45            PUSHI1
0x6E07  0x4C            POPLOCALB00

                        // if (flIndex.Contains(candidate))                     symbols.hs:458

0x6E08  0x20 0x80       PUSHGLOBALB 0x80
0x6E0A  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6E0C  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6E0E  0x2E 0x04       JZB 0x6E12 (+4)

                        // winner++;                                            symbols.hs:460

0x6E10  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(candidate))                     symbols.hs:462

0x6E12  0x20 0x6C       PUSHGLOBALB 0x6C
0x6E14  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6E16  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6E18  0x2E 0x04       JZB 0x6E1C (+4)

                        // winner++;                                            symbols.hs:464

0x6E1A  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // }                                                    symbols.hs:466

0x6E1C  0x22 0x0C       INCLOCALB 0x0C (BP+12)
0x6E1E  0x30 0xB9       JB 0x6DD7 (-71)
0x6E20  0x28 0x06       DECSP 0x06

                        // break;                                               symbols.hs:468

0x6E22  0x28 0x04       DECSP 0x04
0x6E24  0x30 0x22       JB 0x6E46 (+34)

                        // if (eIndex.Contains(name))                           symbols.hs:470

0x6E26  0x20 0x7A       PUSHGLOBALB 0x7A
0x6E28  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6E2A  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6E2C  0x2E 0x06       JZB 0x6E32 (+6)

                        // winner++;                                            symbols.hs:472

0x6E2E  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isEnum = true;                                       symbols.hs:473

0x6E30  0x45            PUSHI1
0x6E31  0x4C            POPLOCALB00

                        // if (flIndex.Contains(name))                          symbols.hs:475

0x6E32  0x20 0x80       PUSHGLOBALB 0x80
0x6E34  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6E36  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6E38  0x2E 0x04       JZB 0x6E3C (+4)

                        // winner++;                                            symbols.hs:477

0x6E3A  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(name))                          symbols.hs:479

0x6E3C  0x20 0x6C       PUSHGLOBALB 0x6C
0x6E3E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6E40  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6E42  0x2E 0x04       JZB 0x6E46 (+4)

                        // winner++;                                            symbols.hs:481

0x6E44  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (winner > 1)                                      symbols.hs:485

0x6E46  0x4F            PUSHLOCALB02
0x6E47  0x45            PUSHI1
0x6E48  0x07            GT
0x6E49  0x2E 0x0D       JZB 0x6E56 (+13)

                        // Parser.ErrorAtCurrent("ambiguous undecorated named type name");

0x6E4B  0x37 0x51 0x10  PUSHIW 0x1051
0x6E4E  0x1A 0x25       PUSHIB 0x25
0x6E50  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6E52  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // isEnum = false;                                      symbols.hs:488

0x6E54  0x44            PUSHI0
0x6E55  0x4C            POPLOCALB00

                        // return isEnum;                                       symbols.hs:490

0x6E56  0x4E            PUSHLOCALB00
0x6E57  0x2B 0x08       RETRETB 0x08


// /source/compiler/symbols.hs:715
// ####  Symbols.IsDelegateType(..)  ####                                       0x00A7


                        // bool isDelegate = false;                             symbols.hs:716

0x6E59  0x5F 0x02       ENTERB 0x02

                        // if (!name.Contains('.') && (name.Length != 0))

0x6E5B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6E5D  0x1A 0x2E       PUSHIB 0x2E
0x6E5F  0x34 0x03 0x01  CALLW 0x0103   // String.Contains
0x6E62  0x41            BOOLNOT
0x6E63  0x27 0x00       DUP 0x00
0x6E65  0x2E 0x09       JZB 0x6E6E (+9)
0x6E67  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6E69  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x6E6B  0x44            PUSHI0
0x6E6C  0x06            NE
0x6E6D  0x0C            BOOLAND
0x6E6E  0x31 0xA4 0x00  JZW 0x6F12 (+164)

                        // string candidate = currentNamespace + "." + name;

0x6E71  0x24 0x02       SYSCALL0 0x02  // String.New
0x6E73  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6E75  0x1A 0x2E       PUSHIB 0x2E
0x6E77  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6E79  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6E7B  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6E7D  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6E7F  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (eIndex.Contains(candidate))                      symbols.hs:723

0x6E81  0x20 0x7A       PUSHGLOBALB 0x7A
0x6E83  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6E85  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6E87  0x2E 0x04       JZB 0x6E8B (+4)

                        // winner++;                                            symbols.hs:725

0x6E89  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(candidate))                     symbols.hs:727

0x6E8B  0x20 0x80       PUSHGLOBALB 0x80
0x6E8D  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6E8F  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6E91  0x2E 0x04       JZB 0x6E95 (+4)

                        // winner++;                                            symbols.hs:729

0x6E93  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(candidate))                     symbols.hs:731

0x6E95  0x20 0x6C       PUSHGLOBALB 0x6C
0x6E97  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6E99  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6E9B  0x2E 0x06       JZB 0x6EA1 (+6)

                        // winner++;                                            symbols.hs:733

0x6E9D  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isDelegate = true;                                   symbols.hs:734

0x6E9F  0x45            PUSHI1
0x6EA0  0x4C            POPLOCALB00

                        // if (isDelegate && (winner == 1))                     symbols.hs:736

0x6EA1  0x4E            PUSHLOCALB00
0x6EA2  0x27 0x00       DUP 0x00
0x6EA4  0x2E 0x06       JZB 0x6EAA (+6)
0x6EA6  0x4F            PUSHLOCALB02
0x6EA7  0x45            PUSHI1
0x6EA8  0x05            EQ
0x6EA9  0x0C            BOOLAND
0x6EAA  0x2E 0x07       JZB 0x6EB1 (+7)

                        // break; // don't look at other namespaces if current wins

0x6EAC  0x28 0x02       DECSP 0x02
0x6EAE  0x33 0x84 0x00  JW 0x6F32 (+132)

                        // char f = name[0];                                    symbols.hs:741

0x6EB1  0x44            PUSHI0
0x6EB2  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6EB4  0x44            PUSHI0
0x6EB5  0x24 0x0A       SYSCALL0 0x0A  // String.GetChar
0x6EB7  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (f.IsUpper())                                     symbols.hs:742

0x6EB9  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6EBB  0x2C 0xD5       CALLB 0xD5     // Char.IsUpper
0x6EBD  0x2E 0x51       JZB 0x6F0E (+81)

                        // foreach (var nameSpace in nameSpaces)                symbols.hs:744

0x6EBF  0x20 0x8C       PUSHGLOBALB 0x8C
0x6EC1  0x44            PUSHI0
0x6EC2  0x44            PUSHI0
0x6EC3  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x6EC5  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x6EC7  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x6EC9  0x05            EQ
0x6ECA  0x2F 0x42       JNZB 0x6F0C (+66)
0x6ECC  0x56 0x08 0x0C  PUSHLOCALBB 0x0C08
0x6ECF  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x6ED1  0x57 0x0A       POPCOPYLOCALB 0x0A (BP+10)

                        // if (currentNamespace == nameSpace)                   symbols.hs:746

0x6ED3  0x56 0xFE 0x0A  PUSHLOCALBB 0x0AFE
0x6ED6  0x24 0x05       SYSCALL0 0x05  // String.Compare
0x6ED8  0x2E 0x30       JZB 0x6F08 (+48)

                        // candidate = nameSpace + "." + name;                  symbols.hs:750

0x6EDA  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x6EDC  0x1A 0x2E       PUSHIB 0x2E
0x6EDE  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x6EE0  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6EE2  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6EE4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x6EE6  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (eIndex.Contains(candidate))                      symbols.hs:751

0x6EE8  0x20 0x7A       PUSHGLOBALB 0x7A
0x6EEA  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6EEC  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6EEE  0x2E 0x04       JZB 0x6EF2 (+4)

                        // winner++;                                            symbols.hs:753

0x6EF0  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(candidate))                     symbols.hs:755

0x6EF2  0x20 0x80       PUSHGLOBALB 0x80
0x6EF4  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6EF6  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6EF8  0x2E 0x04       JZB 0x6EFC (+4)

                        // winner++;                                            symbols.hs:757

0x6EFA  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(candidate))                     symbols.hs:759

0x6EFC  0x20 0x6C       PUSHGLOBALB 0x6C
0x6EFE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6F00  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6F02  0x2E 0x06       JZB 0x6F08 (+6)

                        // winner++;                                            symbols.hs:761

0x6F04  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isDelegate = true;                                   symbols.hs:762

0x6F06  0x45            PUSHI1
0x6F07  0x4C            POPLOCALB00

                        // }                                                    symbols.hs:764

0x6F08  0x22 0x0C       INCLOCALB 0x0C (BP+12)
0x6F0A  0x30 0xB9       JB 0x6EC3 (-71)
0x6F0C  0x28 0x06       DECSP 0x06

                        // break;                                               symbols.hs:766

0x6F0E  0x28 0x04       DECSP 0x04
0x6F10  0x30 0x22       JB 0x6F32 (+34)

                        // if (eIndex.Contains(name))                           symbols.hs:768

0x6F12  0x20 0x7A       PUSHGLOBALB 0x7A
0x6F14  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6F16  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6F18  0x2E 0x04       JZB 0x6F1C (+4)

                        // winner++;                                            symbols.hs:770

0x6F1A  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (flIndex.Contains(name))                          symbols.hs:772

0x6F1C  0x20 0x80       PUSHGLOBALB 0x80
0x6F1E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6F20  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x6F22  0x2E 0x04       JZB 0x6F26 (+4)

                        // winner++;                                            symbols.hs:774

0x6F24  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // if (fdNames.Contains(name))                          symbols.hs:776

0x6F26  0x20 0x6C       PUSHGLOBALB 0x6C
0x6F28  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6F2A  0x24 0x18       SYSCALL0 0x18  // List.Contains
0x6F2C  0x2E 0x06       JZB 0x6F32 (+6)

                        // winner++;                                            symbols.hs:778

0x6F2E  0x22 0x02       INCLOCALB 0x02 (BP+2)

                        // isDelegate = true;                                   symbols.hs:779

0x6F30  0x45            PUSHI1
0x6F31  0x4C            POPLOCALB00

                        // if (winner > 1)                                      symbols.hs:783

0x6F32  0x4F            PUSHLOCALB02
0x6F33  0x45            PUSHI1
0x6F34  0x07            GT
0x6F35  0x2E 0x0D       JZB 0x6F42 (+13)

                        // Parser.ErrorAtCurrent("ambiguous undecorated named type name");

0x6F37  0x37 0x51 0x10  PUSHIW 0x1051
0x6F3A  0x1A 0x25       PUSHIB 0x25
0x6F3C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6F3E  0x2C 0x7B       CALLB 0x7B     // Parser.ErrorAtCurrent

                        // isDelegate = false;                                  symbols.hs:786

0x6F40  0x44            PUSHI0
0x6F41  0x4C            POPLOCALB00

                        // return isDelegate;                                   symbols.hs:788

0x6F42  0x4E            PUSHLOCALB00
0x6F43  0x2B 0x08       RETRETB 0x08


// /source/system/byte.hs:4
// ####  Byte.ToString(..)  ####                                                0x00E1


                        // int value;                                           byte.hs:5

0x6F45  0x5F 0x01       ENTERB 0x01

                        // value = int(this);                                   byte.hs:6

0x6F47  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6F49  0x4C            POPLOCALB00

                        // return value.ToString();                             byte.hs:7

0x6F4A  0x4E            PUSHLOCALB00
0x6F4B  0x2C 0xE3       CALLB 0xE3     // Int.ToString
0x6F4D  0x2B 0x04       RETRETB 0x04


// /source/system/byte.hs:10
// ####  Byte.ToHexString(..)  ####                                             0x00E2


                        // int digit;                                           byte.hs:11

0x6F4F  0x5F 0x03       ENTERB 0x03

                        // string result;                                       byte.hs:14

0x6F51  0x24 0x02       SYSCALL0 0x02  // String.New

                        // for (i = digits; i > 0; i--)                         byte.hs:15

0x6F53  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6F55  0x1B 0x04       POPLOCALB 0x04 (BP+4)
0x6F57  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6F59  0x44            PUSHI0
0x6F5A  0x16            GTI
0x6F5B  0x2E 0x1E       JZB 0x6F79 (+30)

                        // digit = this % 16;                                   byte.hs:17

0x6F5D  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6F5F  0x1A 0x10       PUSHIB 0x10
0x6F61  0x04            MOD
0x6F62  0x4C            POPLOCALB00

                        // c = Char.ToHex(byte(digit));                         byte.hs:18

0x6F63  0x4E            PUSHLOCALB00
0x6F64  0x51 0x03       CAST 0x03
0x6F66  0x2C 0xDB       CALLB 0xDB     // Char.ToHex
0x6F68  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    byte.hs:19

0x6F69  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x6F6B  0x4F            PUSHLOCALB02
0x6F6C  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 16;                                    byte.hs:20

0x6F6E  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x6F70  0x1A 0x10       PUSHIB 0x10
0x6F72  0x02            DIV
0x6F73  0x1B 0xFC       POPLOCALB 0xFC (BP-4)

                        // }                                                    byte.hs:21

0x6F75  0x23 0x04       DECLOCALB 0x04 (BP+4)
0x6F77  0x30 0xE0       JB 0x6F57 (-32)

                        // return result;                                       byte.hs:22

0x6F79  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6F7B  0x2B 0x0C       RETRETB 0x0C


// /source/system/char.hs:56
// ####  Char.ToHex(..)  ####                                                   0x00DB

0x6F7D  0x49            ENTER

                        // if (h < 10)                                          char.hs:57

0x6F7E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6F80  0x1A 0x0A       PUSHIB 0x0A
0x6F82  0x08            LT
0x6F83  0x2E 0x0B       JZB 0x6F8E (+11)

                        // h = h + 48; // +0                                    char.hs:59

0x6F85  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6F87  0x1A 0x30       PUSHIB 0x30
0x6F89  0x00            ADD
0x6F8A  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    char.hs:60

0x6F8C  0x30 0x09       JB 0x6F95 (+9)

                        // h = h + 55; // +A - 10                               char.hs:63

0x6F8E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6F90  0x1A 0x37       PUSHIB 0x37
0x6F92  0x00            ADD
0x6F93  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // return char(h);                                      char.hs:65

0x6F95  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6F97  0x2B 0x02       RETRETB 0x02


// /source/system/int.hs:4
// ####  Int.ToString(..)  ####                                                 0x00E3


                        // int digit;                                           int.hs:5

0x6F99  0x5F 0x03       ENTERB 0x03

                        // string result;                                       int.hs:8

0x6F9B  0x24 0x02       SYSCALL0 0x02  // String.New

                        // if (this < 0)                                        int.hs:9

0x6F9D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6F9F  0x44            PUSHI0
0x6FA0  0x17            LTI
0x6FA1  0x2E 0x0D       JZB 0x6FAE (+13)

                        // negative = true;                                     int.hs:11

0x6FA3  0x45            PUSHI1
0x6FA4  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // this = 0 - this;                                     int.hs:12

0x6FA6  0x44            PUSHI0
0x6FA7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6FA9  0x12            SUBI
0x6FAA  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    int.hs:13

0x6FAC  0x30 0x0C       JB 0x6FB8 (+12)

                        // else if (this == 0)                                  int.hs:14

0x6FAE  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6FB0  0x2F 0x08       JNZB 0x6FB8 (+8)

                        // String.Build(ref result, '0');                       int.hs:16

0x6FB2  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x6FB4  0x1A 0x30       PUSHIB 0x30
0x6FB6  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // while (this != 0)                                    int.hs:18

0x6FB8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6FBA  0x2E 0x1C       JZB 0x6FD6 (+28)

                        // digit = this % 10;                                   int.hs:20

0x6FBC  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6FBE  0x1A 0x0A       PUSHIB 0x0A
0x6FC0  0x15            MODI
0x6FC1  0x4C            POPLOCALB00

                        // c = Char.ToDigit(byte(digit));                       int.hs:21

0x6FC2  0x4E            PUSHLOCALB00
0x6FC3  0x51 0x03       CAST 0x03
0x6FC5  0x2C 0xD8       CALLB 0xD8     // Char.ToDigit
0x6FC7  0x4D            POPLOCALB02

                        // String.BuildFront(ref result, c);                    int.hs:22

0x6FC8  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x6FCA  0x4F            PUSHLOCALB02
0x6FCB  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // this = this / 10;                                    int.hs:23

0x6FCD  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x6FCF  0x1A 0x0A       PUSHIB 0x0A
0x6FD1  0x13            DIVI
0x6FD2  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // }                                                    int.hs:24

0x6FD4  0x30 0xE4       JB 0x6FB8 (-28)

                        // if (negative)                                        int.hs:25

0x6FD6  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x6FD8  0x2E 0x08       JZB 0x6FE0 (+8)

                        // String.BuildFront(ref result, '-');                  int.hs:27

0x6FDA  0x21 0x06       PUSHSTACKADDRB 0x06 (BP+6)
0x6FDC  0x1A 0x2D       PUSHIB 0x2D
0x6FDE  0x24 0xB5       SYSCALL0 0xB5  // String.BuildFront

                        // return result;                                       int.hs:29

0x6FE0  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x6FE2  0x2B 0x0A       RETRETB 0x0A


// /source/system/type.hs:4
// ####  Type.ToString(..)  ####                                                0x0145

0x6FE4  0x49            ENTER

                        // string result;                                       type.hs:5

0x6FE5  0x24 0x02       SYSCALL0 0x02  // String.New

                        // switch (this)                                        type.hs:6

0x6FE7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case int:                                            type.hs:8

0x6FE9  0x1A 0x02       PUSHIB 0x02
0x6FEB  0x4F            PUSHLOCALB02
0x6FEC  0x05            EQ
0x6FED  0x2E 0x0D       JZB 0x6FFA (+13)

                        // result = "int";                                      type.hs:10

0x6FEF  0x37 0x7E 0x01  PUSHIW 0x017E
0x6FF2  0x1A 0x03       PUSHIB 0x03
0x6FF4  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x6FF6  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:11

0x6FF7  0x33 0x3D 0x01  JW 0x7134 (+317)

                        // case char:                                           type.hs:12

0x6FFA  0x45            PUSHI1
0x6FFB  0x4F            PUSHLOCALB02
0x6FFC  0x05            EQ
0x6FFD  0x2E 0x0D       JZB 0x700A (+13)

                        // result = "char";                                     type.hs:14

0x6FFF  0x37 0xC2 0x02  PUSHIW 0x02C2
0x7002  0x1A 0x04       PUSHIB 0x04
0x7004  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7006  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:15

0x7007  0x33 0x2D 0x01  JW 0x7134 (+301)

                        // case uint:                                           type.hs:16

0x700A  0x1A 0x04       PUSHIB 0x04
0x700C  0x4F            PUSHLOCALB02
0x700D  0x05            EQ
0x700E  0x2E 0x0D       JZB 0x701B (+13)

                        // result = "uint";                                     type.hs:18

0x7010  0x37 0xC7 0x02  PUSHIW 0x02C7
0x7013  0x1A 0x04       PUSHIB 0x04
0x7015  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7017  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:19

0x7018  0x33 0x1C 0x01  JW 0x7134 (+284)

                        // case byte:                                           type.hs:20

0x701B  0x1A 0x03       PUSHIB 0x03
0x701D  0x4F            PUSHLOCALB02
0x701E  0x05            EQ
0x701F  0x2E 0x0D       JZB 0x702C (+13)

                        // result = "byte";                                     type.hs:22

0x7021  0x37 0xBD 0x02  PUSHIW 0x02BD
0x7024  0x1A 0x04       PUSHIB 0x04
0x7026  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7028  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:23

0x7029  0x33 0x0B 0x01  JW 0x7134 (+267)

                        // case bool:                                           type.hs:24

0x702C  0x1A 0x06       PUSHIB 0x06
0x702E  0x4F            PUSHLOCALB02
0x702F  0x05            EQ
0x7030  0x2E 0x0D       JZB 0x703D (+13)

                        // result = "bool";                                     type.hs:26

0x7032  0x37 0xB8 0x02  PUSHIW 0x02B8
0x7035  0x1A 0x04       PUSHIB 0x04
0x7037  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7039  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:27

0x703A  0x33 0xFA 0x00  JW 0x7134 (+250)

                        // case long:                                           type.hs:28

0x703D  0x1A 0x0E       PUSHIB 0x0E
0x703F  0x4F            PUSHLOCALB02
0x7040  0x05            EQ
0x7041  0x2E 0x0D       JZB 0x704E (+13)

                        // result = "long";                                     type.hs:30

0x7043  0x37 0x63 0x02  PUSHIW 0x0263
0x7046  0x1A 0x04       PUSHIB 0x04
0x7048  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x704A  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:31

0x704B  0x33 0xE9 0x00  JW 0x7134 (+233)

                        // case float:                                          type.hs:32

0x704E  0x1A 0x0D       PUSHIB 0x0D
0x7050  0x4F            PUSHLOCALB02
0x7051  0x05            EQ
0x7052  0x2E 0x0D       JZB 0x705F (+13)

                        // result = "float";                                    type.hs:34

0x7054  0x37 0x5E 0x02  PUSHIW 0x025E
0x7057  0x1A 0x05       PUSHIB 0x05
0x7059  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x705B  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:35

0x705C  0x33 0xD8 0x00  JW 0x7134 (+216)

                        // case string:                                         type.hs:36

0x705F  0x1A 0x0F       PUSHIB 0x0F
0x7061  0x4F            PUSHLOCALB02
0x7062  0x05            EQ
0x7063  0x2E 0x0D       JZB 0x7070 (+13)

                        // result = "string";                                   type.hs:38

0x7065  0x37 0x67 0x02  PUSHIW 0x0267
0x7068  0x1A 0x06       PUSHIB 0x06
0x706A  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x706C  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:39

0x706D  0x33 0xC7 0x00  JW 0x7134 (+199)

                        // case enum:                                           type.hs:40

0x7070  0x1A 0x07       PUSHIB 0x07
0x7072  0x4F            PUSHLOCALB02
0x7073  0x05            EQ
0x7074  0x2E 0x0D       JZB 0x7081 (+13)

                        // result = "enum";                                     type.hs:42

0x7076  0x37 0xB9 0x01  PUSHIW 0x01B9
0x7079  0x1A 0x04       PUSHIB 0x04
0x707B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x707D  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:43

0x707E  0x33 0xB6 0x00  JW 0x7134 (+182)

                        // case flags:                                          type.hs:44

0x7081  0x1A 0x08       PUSHIB 0x08
0x7083  0x4F            PUSHLOCALB02
0x7084  0x05            EQ
0x7085  0x2E 0x0D       JZB 0x7092 (+13)

                        // result = "flags";                                    type.hs:46

0x7087  0x37 0xBD 0x01  PUSHIW 0x01BD
0x708A  0x1A 0x05       PUSHIB 0x05
0x708C  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x708E  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:47

0x708F  0x33 0xA5 0x00  JW 0x7134 (+165)

                        // case pair:                                           type.hs:48

0x7092  0x1A 0x10       PUSHIB 0x10
0x7094  0x4F            PUSHLOCALB02
0x7095  0x05            EQ
0x7096  0x2E 0x0D       JZB 0x70A3 (+13)

                        // result = "pair";                                     type.hs:50

0x7098  0x37 0xC7 0x0E  PUSHIW 0x0EC7
0x709B  0x1A 0x04       PUSHIB 0x04
0x709D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x709F  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:51

0x70A0  0x33 0x94 0x00  JW 0x7134 (+148)

                        // case file:                                           type.hs:52

0x70A3  0x1A 0x15       PUSHIB 0x15
0x70A5  0x4F            PUSHLOCALB02
0x70A6  0x05            EQ
0x70A7  0x2E 0x0C       JZB 0x70B3 (+12)

                        // result = "file";                                     type.hs:54

0x70A9  0x1A 0xC0       PUSHIB 0xC0
0x70AB  0x1A 0x04       PUSHIB 0x04
0x70AD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x70AF  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:55

0x70B0  0x33 0x84 0x00  JW 0x7134 (+132)

                        // case directory:                                      type.hs:56

0x70B3  0x1A 0x16       PUSHIB 0x16
0x70B5  0x4F            PUSHLOCALB02
0x70B6  0x05            EQ
0x70B7  0x2E 0x0D       JZB 0x70C4 (+13)

                        // result = "directory";                                type.hs:58

0x70B9  0x37 0xF4 0x02  PUSHIW 0x02F4
0x70BC  0x1A 0x09       PUSHIB 0x09
0x70BE  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x70C0  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:59

0x70C1  0x33 0x73 0x00  JW 0x7134 (+115)

                        // case array:                                          type.hs:60

0x70C4  0x1A 0x12       PUSHIB 0x12
0x70C6  0x4F            PUSHLOCALB02
0x70C7  0x05            EQ
0x70C8  0x2E 0x0C       JZB 0x70D4 (+12)

                        // result = "array";                                    type.hs:62

0x70CA  0x37 0xFE 0x02  PUSHIW 0x02FE
0x70CD  0x1A 0x05       PUSHIB 0x05
0x70CF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x70D1  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:63

0x70D2  0x30 0x62       JB 0x7134 (+98)

                        // case list:                                           type.hs:64

0x70D4  0x1A 0x19       PUSHIB 0x19
0x70D6  0x4F            PUSHLOCALB02
0x70D7  0x05            EQ
0x70D8  0x2E 0x0C       JZB 0x70E4 (+12)

                        // result = "list";                                     type.hs:66

0x70DA  0x37 0x51 0x03  PUSHIW 0x0351
0x70DD  0x1A 0x04       PUSHIB 0x04
0x70DF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x70E1  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:67

0x70E2  0x30 0x52       JB 0x7134 (+82)

                        // case dictionary:                                     type.hs:68

0x70E4  0x1A 0x13       PUSHIB 0x13
0x70E6  0x4F            PUSHLOCALB02
0x70E7  0x05            EQ
0x70E8  0x2E 0x0C       JZB 0x70F4 (+12)

                        // result = "dictionary";                               type.hs:70

0x70EA  0x37 0x58 0x03  PUSHIW 0x0358
0x70ED  0x1A 0x0A       PUSHIB 0x0A
0x70EF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x70F1  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:71

0x70F2  0x30 0x42       JB 0x7134 (+66)

                        // case variant:                                        type.hs:72

0x70F4  0x1A 0x14       PUSHIB 0x14
0x70F6  0x4F            PUSHLOCALB02
0x70F7  0x05            EQ
0x70F8  0x2E 0x0C       JZB 0x7104 (+12)

                        // result = "variant";                                  type.hs:74

0x70FA  0x37 0xE7 0x02  PUSHIW 0x02E7
0x70FD  0x1A 0x07       PUSHIB 0x07
0x70FF  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7101  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:75

0x7102  0x30 0x32       JB 0x7134 (+50)

                        // case delegate:                                       type.hs:76

0x7104  0x1A 0x0B       PUSHIB 0x0B
0x7106  0x4F            PUSHLOCALB02
0x7107  0x05            EQ
0x7108  0x2E 0x0C       JZB 0x7114 (+12)

                        // result = "delegate";                                 type.hs:78

0x710A  0x37 0xA5 0x01  PUSHIW 0x01A5
0x710D  0x1A 0x08       PUSHIB 0x08
0x710F  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7111  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:79

0x7112  0x30 0x22       JB 0x7134 (+34)

                        // byte b = byte(this);                                 type.hs:82

0x7114  0x44            PUSHI0
0x7115  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7117  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // result = "unknown type 0x" + b.ToHexString(2) +"in Type.ToString()";

0x7119  0x37 0x76 0x10  PUSHIW 0x1076
0x711C  0x1A 0x0F       PUSHIB 0x0F
0x711E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7120  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x7122  0x1A 0x02       PUSHIB 0x02
0x7124  0x2C 0xE2       CALLB 0xE2     // Byte.ToHexString
0x7126  0x24 0x03       SYSCALL0 0x03  // String.Append
0x7128  0x37 0x85 0x10  PUSHIW 0x1085
0x712B  0x1A 0x12       PUSHIB 0x12
0x712D  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x712F  0x24 0x03       SYSCALL0 0x03  // String.Append
0x7131  0x5D            POPCOPYLOCALB00

                        // }                                                    type.hs:84

0x7132  0x28 0x02       DECSP 0x02

                        // }                                                    type.hs:85

0x7134  0x28 0x02       DECSP 0x02

                        // return result;                                       type.hs:86

0x7136  0x4E            PUSHLOCALB00
0x7137  0x2B 0x04       RETRETB 0x04


// /source/system/string.hs:438
// ####  String.Pad(..)  ####                                                   0x0110


                        // uint length;                                         string.hs:439

0x7139  0x5F 0x02       ENTERB 0x02

                        // string result;                                       string.hs:441

0x713B  0x24 0x02       SYSCALL0 0x02  // String.New

                        // result = this;                                       string.hs:442

0x713D  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x713F  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // length = this.Length;                                string.hs:443

0x7141  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x7143  0x24 0x06       SYSCALL0 0x06  // String.Length_Get
0x7145  0x4C            POPLOCALB00

                        // if (width > length)                                  string.hs:444

0x7146  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7148  0x4E            PUSHLOCALB00
0x7149  0x07            GT
0x714A  0x2E 0x16       JZB 0x7160 (+22)

                        // padding = width - length;                            string.hs:446

0x714C  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x714E  0x4E            PUSHLOCALB00
0x714F  0x01            SUB
0x7150  0x4D            POPLOCALB02

                        // while (padding > 0)                                  string.hs:447

0x7151  0x4F            PUSHLOCALB02
0x7152  0x44            PUSHI0
0x7153  0x07            GT
0x7154  0x2E 0x0C       JZB 0x7160 (+12)

                        // String.Build(ref result, append);                    string.hs:449

0x7156  0x21 0x04       PUSHSTACKADDRB 0x04 (BP+4)
0x7158  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x715A  0x25 0x83       SYSCALL1 0x83  // String.Build

                        // padding--;                                           string.hs:450

0x715C  0x23 0x02       DECLOCALB 0x02 (BP+2)

                        // }                                                    string.hs:451

0x715E  0x30 0xF3       JB 0x7151 (-13)

                        // return result;                                       string.hs:453

0x7160  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x7162  0x2B 0x0C       RETRETB 0x0C


// /source/compiler/codegen/codestream.hs:422
// ####  CodeStream.AddInstruction(..)  ####                                    0x01E1

0x7164  0x49            ENTER

                        // switch (instruction)                                 codestream.hs:423

0x7165  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)

                        // case Instruction.JB:                                 codestream.hs:425

0x7167  0x1A 0x30       PUSHIB 0x30
0x7169  0x4E            PUSHLOCALB00
0x716A  0x05            EQ
0x716B  0x2F 0x20       JNZB 0x718B (+32)

                        // case Instruction.JZB:                                codestream.hs:426

0x716D  0x1A 0x2E       PUSHIB 0x2E
0x716F  0x4E            PUSHLOCALB00
0x7170  0x05            EQ
0x7171  0x2F 0x1A       JNZB 0x718B (+26)

                        // case Instruction.JNZB:                               codestream.hs:427

0x7173  0x1A 0x2F       PUSHIB 0x2F
0x7175  0x4E            PUSHLOCALB00
0x7176  0x05            EQ
0x7177  0x2F 0x14       JNZB 0x718B (+20)

                        // case Instruction.JW:                                 codestream.hs:428

0x7179  0x1A 0x33       PUSHIB 0x33
0x717B  0x4E            PUSHLOCALB00
0x717C  0x05            EQ
0x717D  0x2F 0x0E       JNZB 0x718B (+14)

                        // case Instruction.JZW:                                codestream.hs:429

0x717F  0x1A 0x31       PUSHIB 0x31
0x7181  0x4E            PUSHLOCALB00
0x7182  0x05            EQ
0x7183  0x2F 0x08       JNZB 0x718B (+8)

                        // case Instruction.JNZW:                               codestream.hs:430

0x7185  0x1A 0x32       PUSHIB 0x32
0x7187  0x4E            PUSHLOCALB00
0x7188  0x05            EQ
0x7189  0x2E 0x06       JZB 0x718F (+6)

                        // Die(0x0B); // illegal to not use th Jump-specific AddInstructions

0x718B  0x1A 0x0B       PUSHIB 0x0B
0x718D  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // }                                                    codestream.hs:434

0x718F  0x28 0x02       DECSP 0x02

                        // internalAddInstruction(instruction);                 codestream.hs:435

0x7191  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7193  0x34 0xE0 0x01  CALLW 0x01E0   // CodeStream.internalAddInstruction

                        // PeepholeOptimize(ref currentStream);                 codestream.hs:436

0x7196  0x1A 0xA2       PUSHIB 0xA2
0x7198  0x47            PUSHGP
0x7199  0x00            ADD
0x719A  0x34 0xF6 0x01  CALLW 0x01F6   // Peephole.PeepholeOptimize

                        // }                                                    codestream.hs:437

0x719D  0x2A 0x02       RETB 0x02


// /source/compiler/codegen/codestream.hs:317
// ####  CodeStream.AddInstructionSysCall0(..)  ####                            0x01DC


                        // byte iSysCall;                                       codestream.hs:320

0x719F  0x5F 0x01       ENTERB 0x01

                        // string name = sysCallUnit + '.' + sysCallMethod;

0x71A1  0x24 0x02       SYSCALL0 0x02  // String.New
0x71A3  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x71A5  0x1A 0x2E       PUSHIB 0x2E
0x71A7  0x25 0x03       SYSCALL1 0x03  // String.Append
0x71A9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x71AB  0x24 0x03       SYSCALL0 0x03  // String.Append
0x71AD  0x5E            POPCOPYLOCALB02

                        // if (TryUserSysCall(name))                            codestream.hs:322

0x71AE  0x4F            PUSHLOCALB02
0x71AF  0x34 0xDB 0x01  CALLW 0x01DB   // CodeStream.TryUserSysCall
0x71B2  0x2E 0x06       JZB 0x71B8 (+6)

                        // break;                                               codestream.hs:324

0x71B4  0x28 0x04       DECSP 0x04
0x71B6  0x2A 0x04       RETB 0x04

                        // if (!TryParseSysCall(name, ref iSysCall))            codestream.hs:326

0x71B8  0x4F            PUSHLOCALB02
0x71B9  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x71BB  0x2C 0x86       CALLB 0x86     // SysCalls.TryParseSysCall
0x71BD  0x2F 0x18       JNZB 0x71D5 (+24)

                        // PrintLn("'" + name + "' not found");                 codestream.hs:328

0x71BF  0x1A 0x27       PUSHIB 0x27
0x71C1  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x71C3  0x4F            PUSHLOCALB02
0x71C4  0x24 0x03       SYSCALL0 0x03  // String.Append
0x71C6  0x37 0x95 0x02  PUSHIW 0x0295
0x71C9  0x1A 0x0B       PUSHIB 0x0B
0x71CB  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x71CD  0x24 0x03       SYSCALL0 0x03  // String.Append
0x71CF  0x2C 0x38       CALLB 0x38     // Screen.PrintLn

                        // Die(3); // key not found                             codestream.hs:329

0x71D1  0x1A 0x03       PUSHIB 0x03
0x71D3  0x24 0x7C       SYSCALL0 0x7C  // Diagnostics.Die

                        // CodeStream.AddInstruction(Instruction.SYSCALL0, iSysCall);

0x71D5  0x1A 0x24       PUSHIB 0x24
0x71D7  0x4E            PUSHLOCALB00
0x71D8  0x34 0xE2 0x01  CALLW 0x01E2   // CodeStream.AddInstruction

                        // break;                                               codestream.hs:332

0x71DB  0x28 0x04       DECSP 0x04
0x71DD  0x2A 0x04       RETB 0x04


// /source/compiler/codegen/codestream.hs:415
// ####  CodeStream.internalAddInstruction(..)  ####                            0x01E0


                        // byte instr = byte(instruction);                      codestream.hs:416

0x71DF  0x5F 0x01       ENTERB 0x01

                        // byte instr = byte(instruction);                      codestream.hs:416

0x71E1  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x71E3  0x51 0x03       CAST 0x03
0x71E5  0x4C            POPLOCALB00

                        // currentStream.Append(instr);                         codestream.hs:417

0x71E6  0x20 0xA2       PUSHGLOBALB 0xA2
0x71E8  0x4E            PUSHLOCALB00
0x71E9  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // LastInstructionIndex = currentStream.Length-1;

0x71EB  0x20 0xA2       PUSHGLOBALB 0xA2
0x71ED  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x71EF  0x45            PUSHI1
0x71F0  0x01            SUB
0x71F1  0x34 0xF4 0x01  CALLW 0x01F4   // Peephole.LastInstructionIndex_Set

                        // }                                                    codestream.hs:419

0x71F4  0x2A 0x04       RETB 0x04


// /source/compiler/codegen/codestream.hs:267
// ####  CodeStream.TryUserSysCall(..)  ####                                    0x01DB


                        // bool userSupplied = false;                           codestream.hs:268

0x71F6  0x5F 0x02       ENTERB 0x02

                        // if (DefineExists("H6502"))                           codestream.hs:273

0x71F8  0x37 0x97 0x10  PUSHIW 0x1097
0x71FB  0x1A 0x05       PUSHIB 0x05
0x71FD  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x71FF  0x2C 0x92       CALLB 0x92     // Symbols.DefineExists
0x7201  0x31 0x8C 0x00  JZW 0x728D (+140)

                        // if (GetFunctionIndex(name, ref fIndex))              codestream.hs:276

0x7204  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7206  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x7208  0x2C 0xAB       CALLB 0xAB     // Symbols.GetFunctionIndex
0x720A  0x31 0x83 0x00  JZW 0x728D (+131)

                        // <uint> iOverloads = GetFunctionOverloads(fIndex);

0x720D  0x1A 0x04       PUSHIB 0x04
0x720F  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x7211  0x4F            PUSHLOCALB02
0x7212  0x2C 0xAC       CALLB 0xAC     // Symbols.GetFunctionOverloads
0x7214  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (iOverloads.Length == 1)                          codestream.hs:279

0x7216  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x7218  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x721A  0x45            PUSHI1
0x721B  0x05            EQ
0x721C  0x2E 0x6F       JZB 0x728B (+111)

                        // uint iOverload = iOverloads[0];                      codestream.hs:281

0x721E  0x44            PUSHI0
0x721F  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x7221  0x44            PUSHI0
0x7222  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7224  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (!IsSysCall(iOverload))                           codestream.hs:282

0x7226  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x7228  0x2C 0xAF       CALLB 0xAF     // Symbols.IsSysCall
0x722A  0x2F 0x5F       JNZB 0x7289 (+95)

                        // Symbols.OverloadToCompile(iOverload); // User supplied SysCall as Hopper source

0x722C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x722E  0x2C 0xC6       CALLB 0xC6     // Symbols.OverloadToCompile

                        // if (DefineExists("H6502"))                           codestream.hs:286

0x7230  0x37 0x97 0x10  PUSHIW 0x1097
0x7233  0x1A 0x05       PUSHIB 0x05
0x7235  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7237  0x2C 0x92       CALLB 0x92     // Symbols.DefineExists
0x7239  0x2E 0x35       JZB 0x726E (+53)

                        // if (iOverload <= 0x3FFF)                             codestream.hs:288

0x723B  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x723D  0x40 0xFF 0x3F  PUSHIWLE 0x3FFF
0x7240  0x2E 0x16       JZB 0x7256 (+22)

                        // uint beOverload = 0xC000 | iOverload;                codestream.hs:290

0x7242  0x44            PUSHI0
0x7243  0x37 0x00 0xC0  PUSHIW 0xC000
0x7246  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x7248  0x0D            BITOR
0x7249  0x1B 0x08       POPLOCALB 0x08 (BP+8)

                        // CodeStream.AddInstruction(Instruction.CALLW, beOverload);

0x724B  0x1A 0x34       PUSHIB 0x34
0x724D  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x724F  0x34 0xE3 0x01  CALLW 0x01E3   // CodeStream.AddInstruction

                        // }                                                    codestream.hs:292

0x7252  0x28 0x02       DECSP 0x02
0x7254  0x30 0x33       JB 0x7287 (+51)

                        // Parser.Error("H6502 has a limit of 16383 for function indices, (was '" + iOverload.ToString() + "')");

0x7256  0x37 0x9C 0x10  PUSHIW 0x109C
0x7259  0x1A 0x37       PUSHIB 0x37
0x725B  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x725D  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x725F  0x2C 0xE7       CALLB 0xE7     // UInt.ToString
0x7261  0x24 0x03       SYSCALL0 0x03  // String.Append
0x7263  0x37 0x27 0x29  PUSHIW 0x2927
0x7266  0x25 0x00       SYSCALL1 0x00  // String.NewFromConstant
0x7268  0x24 0x03       SYSCALL0 0x03  // String.Append
0x726A  0x2C 0x79       CALLB 0x79     // Parser.Error

                        // }                                                    codestream.hs:297

0x726C  0x30 0x1B       JB 0x7287 (+27)

                        // else if (iOverload < 256)                            codestream.hs:298

0x726E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x7270  0x55 0x00 0x01  PUSHIWLT 0x0100
0x7273  0x2E 0x0D       JZB 0x7280 (+13)

                        // CodeStream.AddInstruction(Instruction.CALLB, byte(iOverload));

0x7275  0x1A 0x2C       PUSHIB 0x2C
0x7277  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x7279  0x51 0x03       CAST 0x03
0x727B  0x34 0xE2 0x01  CALLW 0x01E2   // CodeStream.AddInstruction

                        // }                                                    codestream.hs:301

0x727E  0x30 0x09       JB 0x7287 (+9)

                        // CodeStream.AddInstruction(Instruction.CALLW, iOverload);

0x7280  0x1A 0x34       PUSHIB 0x34
0x7282  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x7284  0x34 0xE3 0x01  CALLW 0x01E3   // CodeStream.AddInstruction

                        // userSupplied = true;                                 codestream.hs:307

0x7287  0x45            PUSHI1
0x7288  0x4C            POPLOCALB00

                        // }                                                    codestream.hs:309

0x7289  0x28 0x02       DECSP 0x02

                        // }                                                    codestream.hs:310

0x728B  0x28 0x02       DECSP 0x02

                        // return userSupplied;                                 codestream.hs:313

0x728D  0x4E            PUSHLOCALB00
0x728E  0x2B 0x06       RETRETB 0x06


// /source/compiler/codegen/codestream.hs:439
// ####  CodeStream.AddInstruction(..)  ####                                    0x01E2

0x7290  0x49            ENTER

                        // internalAddInstruction(instruction);                 codestream.hs:440

0x7291  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x7293  0x34 0xE0 0x01  CALLW 0x01E0   // CodeStream.internalAddInstruction

                        // currentStream.Append(operand);                       codestream.hs:441

0x7296  0x20 0xA2       PUSHGLOBALB 0xA2
0x7298  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x729A  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // PeepholeOptimize(ref currentStream);                 codestream.hs:442

0x729C  0x1A 0xA2       PUSHIB 0xA2
0x729E  0x47            PUSHGP
0x729F  0x00            ADD
0x72A0  0x34 0xF6 0x01  CALLW 0x01F6   // Peephole.PeepholeOptimize

                        // }                                                    codestream.hs:443

0x72A3  0x2A 0x04       RETB 0x04


// /source/compiler/codegen/codestream.hs:445
// ####  CodeStream.AddInstruction(..)  ####                                    0x01E3

0x72A5  0x49            ENTER

                        // internalAddInstruction(instruction);                 codestream.hs:446

0x72A6  0x1C 0xFC       PUSHLOCALB 0xFC (BP-4)
0x72A8  0x34 0xE0 0x01  CALLW 0x01E0   // CodeStream.internalAddInstruction

                        // uint lsb = operand & 0xFF;                           codestream.hs:447

0x72AB  0x44            PUSHI0
0x72AC  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x72AE  0x1A 0xFF       PUSHIB 0xFF
0x72B0  0x0E            BITAND
0x72B1  0x4C            POPLOCALB00

                        // currentStream.Append(byte(lsb));                     codestream.hs:448

0x72B2  0x20 0xA2       PUSHGLOBALB 0xA2
0x72B4  0x4E            PUSHLOCALB00
0x72B5  0x51 0x03       CAST 0x03
0x72B7  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // uint msb = operand >> 8;                             codestream.hs:449

0x72B9  0x44            PUSHI0
0x72BA  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x72BC  0x1A 0x08       PUSHIB 0x08
0x72BE  0x10            BITSHR
0x72BF  0x4D            POPLOCALB02

                        // currentStream.Append(byte(msb));                     codestream.hs:450

0x72C0  0x20 0xA2       PUSHGLOBALB 0xA2
0x72C2  0x4F            PUSHLOCALB02
0x72C3  0x51 0x03       CAST 0x03
0x72C5  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // PeepholeOptimize(ref currentStream);                 codestream.hs:451

0x72C7  0x1A 0xA2       PUSHIB 0xA2
0x72C9  0x47            PUSHGP
0x72CA  0x00            ADD
0x72CB  0x34 0xF6 0x01  CALLW 0x01F6   // Peephole.PeepholeOptimize

                        // }                                                    codestream.hs:452

0x72CE  0x2A 0x08       RETB 0x08


// /source/system/char.hs:37
// ####  Char.ToDigit(..)  ####                                                 0x00D8

0x72D0  0x49            ENTER

                        // d = d + 48; // +0                                    char.hs:38

0x72D1  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x72D3  0x1A 0x30       PUSHIB 0x30
0x72D5  0x00            ADD
0x72D6  0x1B 0xFE       POPLOCALB 0xFE (BP-2)

                        // return char(d);                                      char.hs:39

0x72D8  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x72DA  0x2B 0x02       RETRETB 0x02


// /source/compiler/codegen/peephole.hs:62
// ####  Peephole.PeepholeOptimize(..)  ####                                    0x01F6

0x72DC  0x49            ENTER

                        // if (!CodeStream.CheckedBuild || DefineExists("PEEPHOLEOPT"))

0x72DD  0x34 0xC6 0x01  CALLW 0x01C6   // CodeStream.CheckedBuild_Get
0x72E0  0x41            BOOLNOT
0x72E1  0x27 0x00       DUP 0x00
0x72E3  0x2F 0x0C       JNZB 0x72EF (+12)
0x72E5  0x37 0xD3 0x10  PUSHIW 0x10D3
0x72E8  0x1A 0x0B       PUSHIB 0x0B
0x72EA  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x72EC  0x2C 0x92       CALLB 0x92     // Symbols.DefineExists
0x72EE  0x0B            BOOLOR
0x72EF  0x2E 0x35       JZB 0x7324 (+53)

                        // if (lastInstruction0 > peephholeBoundary)            peephole.hs:71

0x72F1  0x52 0xA8 0xB2  PUSHGLOBALBB 0xB2A8
0x72F4  0x07            GT
0x72F5  0x2E 0x09       JZB 0x72FE (+9)

                        // if (peepholeOptimize1(ref currentStream))            peephole.hs:73

0x72F7  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x72F9  0x34 0xFC 0x01  CALLW 0x01FC   // Peephole.peepholeOptimize1
0x72FC  0x2F 0xF5       JNZB 0x72F1 (-11)

                        // if (lastInstruction1 > peephholeBoundary)            peephole.hs:79

0x72FE  0x52 0xAA 0xB2  PUSHGLOBALBB 0xB2AA
0x7301  0x07            GT
0x7302  0x2E 0x0F       JZB 0x7311 (+15)

                        // if (lastInstruction1 != lastInstruction0) // why?! it does happen

0x7304  0x52 0xAA 0xA8  PUSHGLOBALBB 0xA8AA
0x7307  0x06            NE
0x7308  0x2E 0x09       JZB 0x7311 (+9)

                        // if (peepholeOptimize2(ref currentStream))            peephole.hs:83

0x730A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x730C  0x34 0xFD 0x01  CALLW 0x01FD   // Peephole.peepholeOptimize2
0x730F  0x2F 0xE2       JNZB 0x72F1 (-30)

                        // if (lastInstruction3 > peephholeBoundary)            peephole.hs:90

0x7311  0x52 0xAE 0xB2  PUSHGLOBALBB 0xB2AE
0x7314  0x07            GT
0x7315  0x2E 0x0F       JZB 0x7324 (+15)

                        // if (lastInstruction1 != lastInstruction0) // why?!

0x7317  0x52 0xAA 0xA8  PUSHGLOBALBB 0xA8AA
0x731A  0x06            NE
0x731B  0x2E 0x09       JZB 0x7324 (+9)

                        // if (peepholeOptimize4(ref currentStream))            peephole.hs:94

0x731D  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x731F  0x34 0xFB 0x01  CALLW 0x01FB   // Peephole.peepholeOptimize4
0x7322  0x2F 0xCF       JNZB 0x72F1 (-49)

                        // }                                                    peephole.hs:103

0x7324  0x2A 0x02       RETB 0x02


// /source/compiler/codegen/peephole.hs:43
// ####  Peephole.LastInstructionIndex_Set(..)  ####                            0x01F4

0x7326  0x49            ENTER

                        // lastInstruction4 = lastInstruction3;                 peephole.hs:44

0x7327  0x20 0xAE       PUSHGLOBALB 0xAE
0x7329  0x1F 0xB0       POPGLOBALB 0xB0

                        // lastInstruction3 = lastInstruction2;                 peephole.hs:45

0x732B  0x20 0xAC       PUSHGLOBALB 0xAC
0x732D  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction2 = lastInstruction1;                 peephole.hs:46

0x732F  0x20 0xAA       PUSHGLOBALB 0xAA
0x7331  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction1 = lastInstruction0;                 peephole.hs:47

0x7333  0x20 0xA8       PUSHGLOBALB 0xA8
0x7335  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction0 = value;                            peephole.hs:48

0x7337  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7339  0x1F 0xA8       POPGLOBALB 0xA8

                        // }                                                    peephole.hs:49

0x733B  0x2A 0x02       RETB 0x02


// /source/compiler/codegen/peephole.hs:294
// ####  Peephole.peepholeOptimize1(..)  ####                                   0x01FC


                        // byte offset0 = 0;                                    peephole.hs:295

0x733D  0x5F 0x03       ENTERB 0x03

                        // bool isPushLocalB = IsPushLocalB(ref currentStream, lastInstruction0, ref offset0, ref length0);

0x733F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7341  0x20 0xA8       PUSHGLOBALB 0xA8
0x7343  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x7345  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x7347  0x34 0xF9 0x01  CALLW 0x01F9   // Peephole.IsPushLocalB
0x734A  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // if (isPushLocalB && (length0 == 2) && ((offset0 == 0) || (offset0 == 2)))

0x734C  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x734E  0x27 0x00       DUP 0x00
0x7350  0x2E 0x18       JZB 0x7368 (+24)
0x7352  0x4F            PUSHLOCALB02
0x7353  0x1A 0x02       PUSHIB 0x02
0x7355  0x05            EQ
0x7356  0x0C            BOOLAND
0x7357  0x27 0x00       DUP 0x00
0x7359  0x2E 0x0F       JZB 0x7368 (+15)
0x735B  0x4E            PUSHLOCALB00
0x735C  0x44            PUSHI0
0x735D  0x05            EQ
0x735E  0x27 0x00       DUP 0x00
0x7360  0x2F 0x07       JNZB 0x7367 (+7)
0x7362  0x4E            PUSHLOCALB00
0x7363  0x1A 0x02       PUSHIB 0x02
0x7365  0x05            EQ
0x7366  0x0B            BOOLOR
0x7367  0x0C            BOOLAND
0x7368  0x2E 0x28       JZB 0x7390 (+40)

                        // if (offset0 == 0)                                    peephole.hs:301

0x736A  0x4E            PUSHLOCALB00
0x736B  0x2F 0x0C       JNZB 0x7377 (+12)

                        // currentStream.SetItem(lastInstruction0, byte(Instruction.PUSHLOCALB00));

0x736D  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x736F  0x20 0xA8       PUSHGLOBALB 0xA8
0x7371  0x1A 0x4E       PUSHIB 0x4E
0x7373  0x51 0x03       CAST 0x03
0x7375  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // if (offset0 == 2)                                    peephole.hs:307

0x7377  0x4E            PUSHLOCALB00
0x7378  0x1A 0x02       PUSHIB 0x02
0x737A  0x05            EQ
0x737B  0x2E 0x0C       JZB 0x7387 (+12)

                        // currentStream.SetItem(lastInstruction0, byte(Instruction.PUSHLOCALB02));

0x737D  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x737F  0x20 0xA8       PUSHGLOBALB 0xA8
0x7381  0x1A 0x4F       PUSHIB 0x4F
0x7383  0x51 0x03       CAST 0x03
0x7385  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // TrimTail(ref currentStream, 1);                      peephole.hs:313

0x7387  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7389  0x45            PUSHI1
0x738A  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // return true; // hunt for more                        peephole.hs:314

0x738D  0x45            PUSHI1
0x738E  0x2B 0x08       RETRETB 0x08

                        // bool isPopLocalB = IsPopLocalB(ref currentStream, lastInstruction0, ref offset0, ref length0);

0x7390  0x44            PUSHI0
0x7391  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7393  0x20 0xA8       PUSHGLOBALB 0xA8
0x7395  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x7397  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x7399  0x34 0xFA 0x01  CALLW 0x01FA   // Peephole.IsPopLocalB
0x739C  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // if (isPopLocalB && (length0 == 2) && ((offset0 == 0) || (offset0 == 2)))

0x739E  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x73A0  0x27 0x00       DUP 0x00
0x73A2  0x2E 0x18       JZB 0x73BA (+24)
0x73A4  0x4F            PUSHLOCALB02
0x73A5  0x1A 0x02       PUSHIB 0x02
0x73A7  0x05            EQ
0x73A8  0x0C            BOOLAND
0x73A9  0x27 0x00       DUP 0x00
0x73AB  0x2E 0x0F       JZB 0x73BA (+15)
0x73AD  0x4E            PUSHLOCALB00
0x73AE  0x44            PUSHI0
0x73AF  0x05            EQ
0x73B0  0x27 0x00       DUP 0x00
0x73B2  0x2F 0x07       JNZB 0x73B9 (+7)
0x73B4  0x4E            PUSHLOCALB00
0x73B5  0x1A 0x02       PUSHIB 0x02
0x73B7  0x05            EQ
0x73B8  0x0B            BOOLOR
0x73B9  0x0C            BOOLAND
0x73BA  0x2E 0x28       JZB 0x73E2 (+40)

                        // if (offset0 == 0)                                    peephole.hs:320

0x73BC  0x4E            PUSHLOCALB00
0x73BD  0x2F 0x0C       JNZB 0x73C9 (+12)

                        // currentStream.SetItem(lastInstruction0, byte(Instruction.POPLOCALB00));

0x73BF  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x73C1  0x20 0xA8       PUSHGLOBALB 0xA8
0x73C3  0x1A 0x4C       PUSHIB 0x4C
0x73C5  0x51 0x03       CAST 0x03
0x73C7  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // if (offset0 == 2)                                    peephole.hs:326

0x73C9  0x4E            PUSHLOCALB00
0x73CA  0x1A 0x02       PUSHIB 0x02
0x73CC  0x05            EQ
0x73CD  0x2E 0x0C       JZB 0x73D9 (+12)

                        // currentStream.SetItem(lastInstruction0, byte(Instruction.POPLOCALB02));

0x73CF  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x73D1  0x20 0xA8       PUSHGLOBALB 0xA8
0x73D3  0x1A 0x4D       PUSHIB 0x4D
0x73D5  0x51 0x03       CAST 0x03
0x73D7  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // TrimTail(ref currentStream, 1);                      peephole.hs:332

0x73D9  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x73DB  0x45            PUSHI1
0x73DC  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // return true; // hunt for more                        peephole.hs:333

0x73DF  0x45            PUSHI1
0x73E0  0x2B 0x0A       RETRETB 0x0A

                        // return false;                                        peephole.hs:335

0x73E2  0x44            PUSHI0
0x73E3  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/codegen/peephole.hs:339
// ####  Peephole.peepholeOptimize2(..)  ####                                   0x01FD

0x73E5  0x49            ENTER

                        // if (                                                 peephole.hs:340

0x73E6  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x73E8  0x20 0xAA       PUSHGLOBALB 0xAA
0x73EA  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x73EC  0x1A 0x37       PUSHIB 0x37
0x73EE  0x05            EQ
0x73EF  0x27 0x00       DUP 0x00
0x73F1  0x2E 0x0C       JZB 0x73FD (+12)
0x73F3  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x73F5  0x20 0xA8       PUSHGLOBALB 0xA8
0x73F7  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x73F9  0x1A 0x0A       PUSHIB 0x0A
0x73FB  0x05            EQ
0x73FC  0x0C            BOOLAND
0x73FD  0x2E 0x28       JZB 0x7425 (+40)

                        // currentStream.SetItem(lastInstruction1, byte(Instruction.PUSHIWLE));

0x73FF  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7401  0x20 0xAA       PUSHGLOBALB 0xAA
0x7403  0x1A 0x40       PUSHIB 0x40
0x7405  0x51 0x03       CAST 0x03
0x7407  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // TrimTail(ref currentStream, 1);                      peephole.hs:348

0x7409  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x740B  0x45            PUSHI1
0x740C  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction1;                 peephole.hs:349

0x740F  0x20 0xAA       PUSHGLOBALB 0xAA
0x7411  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction2;                 peephole.hs:350

0x7413  0x20 0xAC       PUSHGLOBALB 0xAC
0x7415  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = lastInstruction3;                 peephole.hs:351

0x7417  0x20 0xAE       PUSHGLOBALB 0xAE
0x7419  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = lastInstruction4;                 peephole.hs:352

0x741B  0x20 0xB0       PUSHGLOBALB 0xB0
0x741D  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:353

0x741F  0x44            PUSHI0
0x7420  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:354

0x7422  0x45            PUSHI1
0x7423  0x2B 0x02       RETRETB 0x02

                        // if (                                                 peephole.hs:356

0x7425  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7427  0x20 0xAA       PUSHGLOBALB 0xAA
0x7429  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x742B  0x1A 0x37       PUSHIB 0x37
0x742D  0x05            EQ
0x742E  0x27 0x00       DUP 0x00
0x7430  0x2E 0x0C       JZB 0x743C (+12)
0x7432  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7434  0x20 0xA8       PUSHGLOBALB 0xA8
0x7436  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7438  0x1A 0x08       PUSHIB 0x08
0x743A  0x05            EQ
0x743B  0x0C            BOOLAND
0x743C  0x2E 0x28       JZB 0x7464 (+40)

                        // currentStream.SetItem(lastInstruction1, byte(Instruction.PUSHIWLT));

0x743E  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7440  0x20 0xAA       PUSHGLOBALB 0xAA
0x7442  0x1A 0x55       PUSHIB 0x55
0x7444  0x51 0x03       CAST 0x03
0x7446  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // TrimTail(ref currentStream, 1);                      peephole.hs:364

0x7448  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x744A  0x45            PUSHI1
0x744B  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction1;                 peephole.hs:365

0x744E  0x20 0xAA       PUSHGLOBALB 0xAA
0x7450  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction2;                 peephole.hs:366

0x7452  0x20 0xAC       PUSHGLOBALB 0xAC
0x7454  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = lastInstruction3;                 peephole.hs:367

0x7456  0x20 0xAE       PUSHGLOBALB 0xAE
0x7458  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = lastInstruction4;                 peephole.hs:368

0x745A  0x20 0xB0       PUSHGLOBALB 0xB0
0x745C  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:369

0x745E  0x44            PUSHI0
0x745F  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:370

0x7461  0x45            PUSHI1
0x7462  0x2B 0x02       RETRETB 0x02

                        // if (                                                 peephole.hs:372

0x7464  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7466  0x20 0xAA       PUSHGLOBALB 0xAA
0x7468  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x746A  0x1A 0x20       PUSHIB 0x20
0x746C  0x05            EQ
0x746D  0x27 0x00       DUP 0x00
0x746F  0x2E 0x0C       JZB 0x747B (+12)
0x7471  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7473  0x20 0xA8       PUSHGLOBALB 0xA8
0x7475  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7477  0x1A 0x20       PUSHIB 0x20
0x7479  0x05            EQ
0x747A  0x0C            BOOLAND
0x747B  0x2E 0x46       JZB 0x74C1 (+70)

                        // byte offset0 = currentStream[lastInstruction0+1];

0x747D  0x44            PUSHI0
0x747E  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7480  0x20 0xA8       PUSHGLOBALB 0xA8
0x7482  0x45            PUSHI1
0x7483  0x00            ADD
0x7484  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7486  0x4C            POPLOCALB00

                        // byte offset1 = currentStream[lastInstruction1+1];

0x7487  0x44            PUSHI0
0x7488  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x748A  0x20 0xAA       PUSHGLOBALB 0xAA
0x748C  0x45            PUSHI1
0x748D  0x00            ADD
0x748E  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7490  0x4D            POPLOCALB02

                        // currentStream.SetItem(lastInstruction1, byte(Instruction.PUSHGLOBALBB));

0x7491  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7493  0x20 0xAA       PUSHGLOBALB 0xAA
0x7495  0x1A 0x52       PUSHIB 0x52
0x7497  0x51 0x03       CAST 0x03
0x7499  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // currentStream.SetItem(lastInstruction1+2, offset0);

0x749B  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x749D  0x20 0xAA       PUSHGLOBALB 0xAA
0x749F  0x1A 0x02       PUSHIB 0x02
0x74A1  0x00            ADD
0x74A2  0x4E            PUSHLOCALB00
0x74A3  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // TrimTail(ref currentStream, 1);                      peephole.hs:384

0x74A5  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x74A7  0x45            PUSHI1
0x74A8  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction1;                 peephole.hs:385

0x74AB  0x20 0xAA       PUSHGLOBALB 0xAA
0x74AD  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction2;                 peephole.hs:386

0x74AF  0x20 0xAC       PUSHGLOBALB 0xAC
0x74B1  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = lastInstruction3;                 peephole.hs:387

0x74B3  0x20 0xAE       PUSHGLOBALB 0xAE
0x74B5  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = lastInstruction4;                 peephole.hs:388

0x74B7  0x20 0xB0       PUSHGLOBALB 0xB0
0x74B9  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:389

0x74BB  0x44            PUSHI0
0x74BC  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:390

0x74BE  0x45            PUSHI1
0x74BF  0x2B 0x06       RETRETB 0x06

                        // if (                                                 peephole.hs:393

0x74C1  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x74C3  0x20 0xAA       PUSHGLOBALB 0xAA
0x74C5  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x74C7  0x1A 0x1C       PUSHIB 0x1C
0x74C9  0x05            EQ
0x74CA  0x27 0x00       DUP 0x00
0x74CC  0x2E 0x0C       JZB 0x74D8 (+12)
0x74CE  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x74D0  0x20 0xA8       PUSHGLOBALB 0xA8
0x74D2  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x74D4  0x1A 0x1C       PUSHIB 0x1C
0x74D6  0x05            EQ
0x74D7  0x0C            BOOLAND
0x74D8  0x2E 0x46       JZB 0x751E (+70)

                        // byte offset0 = currentStream[lastInstruction0+1];

0x74DA  0x44            PUSHI0
0x74DB  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x74DD  0x20 0xA8       PUSHGLOBALB 0xA8
0x74DF  0x45            PUSHI1
0x74E0  0x00            ADD
0x74E1  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x74E3  0x4C            POPLOCALB00

                        // byte offset1 = currentStream[lastInstruction1+1];

0x74E4  0x44            PUSHI0
0x74E5  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x74E7  0x20 0xAA       PUSHGLOBALB 0xAA
0x74E9  0x45            PUSHI1
0x74EA  0x00            ADD
0x74EB  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x74ED  0x4D            POPLOCALB02

                        // currentStream.SetItem(lastInstruction1, byte(Instruction.PUSHLOCALBB));

0x74EE  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x74F0  0x20 0xAA       PUSHGLOBALB 0xAA
0x74F2  0x1A 0x56       PUSHIB 0x56
0x74F4  0x51 0x03       CAST 0x03
0x74F6  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // currentStream.SetItem(lastInstruction1+2, offset0);

0x74F8  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x74FA  0x20 0xAA       PUSHGLOBALB 0xAA
0x74FC  0x1A 0x02       PUSHIB 0x02
0x74FE  0x00            ADD
0x74FF  0x4E            PUSHLOCALB00
0x7500  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // TrimTail(ref currentStream, 1);                      peephole.hs:405

0x7502  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7504  0x45            PUSHI1
0x7505  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction1;                 peephole.hs:406

0x7508  0x20 0xAA       PUSHGLOBALB 0xAA
0x750A  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction2;                 peephole.hs:407

0x750C  0x20 0xAC       PUSHGLOBALB 0xAC
0x750E  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = lastInstruction3;                 peephole.hs:408

0x7510  0x20 0xAE       PUSHGLOBALB 0xAE
0x7512  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = lastInstruction4;                 peephole.hs:409

0x7514  0x20 0xB0       PUSHGLOBALB 0xB0
0x7516  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:410

0x7518  0x44            PUSHI0
0x7519  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:411

0x751B  0x45            PUSHI1
0x751C  0x2B 0x06       RETRETB 0x06

                        // return false;                                        peephole.hs:414

0x751E  0x44            PUSHI0
0x751F  0x2B 0x02       RETRETB 0x02


// /source/compiler/codegen/peephole.hs:184
// ####  Peephole.peepholeOptimize4(..)  ####                                   0x01FB


                        // byte offset3 = 0;                                    peephole.hs:185

0x7521  0x5F 0x03       ENTERB 0x03

                        // bool isPushLocalB3  = IsPushLocalB (ref currentStream, lastInstruction3, ref offset3, ref length3);

0x7523  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7525  0x20 0xAE       PUSHGLOBALB 0xAE
0x7527  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x7529  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x752B  0x34 0xF9 0x01  CALLW 0x01F9   // Peephole.IsPushLocalB
0x752E  0x1B 0x04       POPLOCALB 0x04 (BP+4)

                        // bool isPushGlobalB3 = IsPushGlobalB(ref currentStream, lastInstruction3, ref offset3, ref length3);

0x7530  0x44            PUSHI0
0x7531  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7533  0x20 0xAE       PUSHGLOBALB 0xAE
0x7535  0x21 0x00       PUSHSTACKADDRB 0x00 (BP+0)
0x7537  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x7539  0x34 0xF7 0x01  CALLW 0x01F7   // Peephole.IsPushGlobalB
0x753C  0x1B 0x06       POPLOCALB 0x06 (BP+6)

                        // byte offset0 = 0;                                    peephole.hs:190

0x753E  0x44            PUSHI0

                        // byte length0 = 0;                                    peephole.hs:191

0x753F  0x44            PUSHI0

                        // bool isPopLocalB0  = IsPopLocalB (ref currentStream, lastInstruction0, ref offset0, ref length0);

0x7540  0x44            PUSHI0
0x7541  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7543  0x20 0xA8       PUSHGLOBALB 0xA8
0x7545  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x7547  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x7549  0x34 0xFA 0x01  CALLW 0x01FA   // Peephole.IsPopLocalB
0x754C  0x1B 0x0C       POPLOCALB 0x0C (BP+12)

                        // bool isPopGlobalB0 = IsPopGlobalB(ref currentStream, lastInstruction0, ref offset0, ref length0);

0x754E  0x44            PUSHI0
0x754F  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7551  0x20 0xA8       PUSHGLOBALB 0xA8
0x7553  0x21 0x08       PUSHSTACKADDRB 0x08 (BP+8)
0x7555  0x21 0x0A       PUSHSTACKADDRB 0x0A (BP+10)
0x7557  0x34 0xF8 0x01  CALLW 0x01F8   // Peephole.IsPopGlobalB
0x755A  0x1B 0x0E       POPLOCALB 0x0E (BP+14)

                        // if (isPushGlobalB3 && isPopGlobalB0)                 peephole.hs:195

0x755C  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x755E  0x27 0x00       DUP 0x00
0x7560  0x2E 0x05       JZB 0x7565 (+5)
0x7562  0x1C 0x0E       PUSHLOCALB 0x0E (BP+14)
0x7564  0x0C            BOOLAND
0x7565  0x31 0xBD 0x00  JZW 0x7622 (+189)

                        // if ((offset3 == offset0)                             peephole.hs:197

0x7568  0x4E            PUSHLOCALB00
0x7569  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x756B  0x05            EQ
0x756C  0x27 0x00       DUP 0x00
0x756E  0x2E 0x19       JZB 0x7587 (+25)
0x7570  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7572  0x20 0xAC       PUSHGLOBALB 0xAC
0x7574  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7576  0x1A 0x45       PUSHIB 0x45
0x7578  0x05            EQ
0x7579  0x0C            BOOLAND
0x757A  0x27 0x00       DUP 0x00
0x757C  0x2E 0x0B       JZB 0x7587 (+11)
0x757E  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7580  0x20 0xAA       PUSHGLOBALB 0xAA
0x7582  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7584  0x44            PUSHI0
0x7585  0x05            EQ
0x7586  0x0C            BOOLAND
0x7587  0x2E 0x3E       JZB 0x75C5 (+62)

                        // currentStream.SetItem(lastInstruction3,   byte(Instruction.INCGLOBALB));

0x7589  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x758B  0x20 0xAE       PUSHGLOBALB 0xAE
0x758D  0x1A 0x53       PUSHIB 0x53
0x758F  0x51 0x03       CAST 0x03
0x7591  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // currentStream.SetItem(lastInstruction3+1, offset0);

0x7593  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7595  0x20 0xAE       PUSHGLOBALB 0xAE
0x7597  0x45            PUSHI1
0x7598  0x00            ADD
0x7599  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x759B  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // uint remove = (length0-1) + (length3-1) + 2;

0x759D  0x44            PUSHI0
0x759E  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x75A0  0x45            PUSHI1
0x75A1  0x01            SUB
0x75A2  0x4F            PUSHLOCALB02
0x75A3  0x45            PUSHI1
0x75A4  0x01            SUB
0x75A5  0x00            ADD
0x75A6  0x1A 0x02       PUSHIB 0x02
0x75A8  0x00            ADD
0x75A9  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // TrimTail(ref currentStream, remove);                 peephole.hs:208

0x75AB  0x56 0xFE 0x10  PUSHLOCALBB 0x10FE
0x75AE  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction3;                 peephole.hs:209

0x75B1  0x20 0xAE       PUSHGLOBALB 0xAE
0x75B3  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction4;                 peephole.hs:210

0x75B5  0x20 0xB0       PUSHGLOBALB 0xB0
0x75B7  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = 0;                                peephole.hs:211

0x75B9  0x44            PUSHI0
0x75BA  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = 0;                                peephole.hs:212

0x75BC  0x44            PUSHI0
0x75BD  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:213

0x75BF  0x44            PUSHI0
0x75C0  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:214

0x75C2  0x45            PUSHI1
0x75C3  0x2B 0x14       RETRETB 0x14

                        // if ((offset3 == offset0)                             peephole.hs:216

0x75C5  0x4E            PUSHLOCALB00
0x75C6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x75C8  0x05            EQ
0x75C9  0x27 0x00       DUP 0x00
0x75CB  0x2E 0x19       JZB 0x75E4 (+25)
0x75CD  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x75CF  0x20 0xAC       PUSHGLOBALB 0xAC
0x75D1  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x75D3  0x1A 0x45       PUSHIB 0x45
0x75D5  0x05            EQ
0x75D6  0x0C            BOOLAND
0x75D7  0x27 0x00       DUP 0x00
0x75D9  0x2E 0x0B       JZB 0x75E4 (+11)
0x75DB  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x75DD  0x20 0xAA       PUSHGLOBALB 0xAA
0x75DF  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x75E1  0x45            PUSHI1
0x75E2  0x05            EQ
0x75E3  0x0C            BOOLAND
0x75E4  0x2E 0x3E       JZB 0x7622 (+62)

                        // currentStream.SetItem(lastInstruction3,   byte(Instruction.DECGLOBALB));

0x75E6  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x75E8  0x20 0xAE       PUSHGLOBALB 0xAE
0x75EA  0x1A 0x54       PUSHIB 0x54
0x75EC  0x51 0x03       CAST 0x03
0x75EE  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // currentStream.SetItem(lastInstruction3+1, offset0);

0x75F0  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x75F2  0x20 0xAE       PUSHGLOBALB 0xAE
0x75F4  0x45            PUSHI1
0x75F5  0x00            ADD
0x75F6  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x75F8  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // uint remove = (length0-1) + (length3-1) + 2;

0x75FA  0x44            PUSHI0
0x75FB  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x75FD  0x45            PUSHI1
0x75FE  0x01            SUB
0x75FF  0x4F            PUSHLOCALB02
0x7600  0x45            PUSHI1
0x7601  0x01            SUB
0x7602  0x00            ADD
0x7603  0x1A 0x02       PUSHIB 0x02
0x7605  0x00            ADD
0x7606  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // TrimTail(ref currentStream, remove);                 peephole.hs:227

0x7608  0x56 0xFE 0x10  PUSHLOCALBB 0x10FE
0x760B  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction3;                 peephole.hs:228

0x760E  0x20 0xAE       PUSHGLOBALB 0xAE
0x7610  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction4;                 peephole.hs:229

0x7612  0x20 0xB0       PUSHGLOBALB 0xB0
0x7614  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = 0;                                peephole.hs:230

0x7616  0x44            PUSHI0
0x7617  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = 0;                                peephole.hs:231

0x7619  0x44            PUSHI0
0x761A  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:232

0x761C  0x44            PUSHI0
0x761D  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:233

0x761F  0x45            PUSHI1
0x7620  0x2B 0x14       RETRETB 0x14

                        // if (isPushLocalB3 && isPopLocalB0)                   peephole.hs:236

0x7622  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x7624  0x27 0x00       DUP 0x00
0x7626  0x2E 0x05       JZB 0x762B (+5)
0x7628  0x1C 0x0C       PUSHLOCALB 0x0C (BP+12)
0x762A  0x0C            BOOLAND
0x762B  0x31 0xF2 0x00  JZW 0x771D (+242)

                        // if ((offset3 == offset0)                             peephole.hs:238

0x762E  0x4E            PUSHLOCALB00
0x762F  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x7631  0x05            EQ
0x7632  0x27 0x00       DUP 0x00
0x7634  0x2E 0x19       JZB 0x764D (+25)
0x7636  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7638  0x20 0xAC       PUSHGLOBALB 0xAC
0x763A  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x763C  0x1A 0x45       PUSHIB 0x45
0x763E  0x05            EQ
0x763F  0x0C            BOOLAND
0x7640  0x27 0x00       DUP 0x00
0x7642  0x2E 0x0B       JZB 0x764D (+11)
0x7644  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7646  0x20 0xAA       PUSHGLOBALB 0xAA
0x7648  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x764A  0x44            PUSHI0
0x764B  0x05            EQ
0x764C  0x0C            BOOLAND
0x764D  0x2E 0x3E       JZB 0x768B (+62)

                        // currentStream.SetItem(lastInstruction3,   byte(Instruction.INCLOCALB));

0x764F  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x7651  0x20 0xAE       PUSHGLOBALB 0xAE
0x7653  0x1A 0x22       PUSHIB 0x22
0x7655  0x51 0x03       CAST 0x03
0x7657  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // currentStream.SetItem(lastInstruction3+1, offset0);

0x7659  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x765B  0x20 0xAE       PUSHGLOBALB 0xAE
0x765D  0x45            PUSHI1
0x765E  0x00            ADD
0x765F  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x7661  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // uint remove = (length0-1) + (length3-1) + 2;

0x7663  0x44            PUSHI0
0x7664  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x7666  0x45            PUSHI1
0x7667  0x01            SUB
0x7668  0x4F            PUSHLOCALB02
0x7669  0x45            PUSHI1
0x766A  0x01            SUB
0x766B  0x00            ADD
0x766C  0x1A 0x02       PUSHIB 0x02
0x766E  0x00            ADD
0x766F  0x1B 0x10       POPLOCALB 0x10 (BP+16)

                        // TrimTail(ref currentStream, remove);                 peephole.hs:249

0x7671  0x56 0xFE 0x10  PUSHLOCALBB 0x10FE
0x7674  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction3;                 peephole.hs:250

0x7677  0x20 0xAE       PUSHGLOBALB 0xAE
0x7679  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction4;                 peephole.hs:251

0x767B  0x20 0xB0       PUSHGLOBALB 0xB0
0x767D  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = 0;                                peephole.hs:252

0x767F  0x44            PUSHI0
0x7680  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = 0;                                peephole.hs:253

0x7682  0x44            PUSHI0
0x7683  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:254

0x7685  0x44            PUSHI0
0x7686  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:255

0x7688  0x45            PUSHI1
0x7689  0x2B 0x14       RETRETB 0x14

                        // byte offset2 = 0;                                    peephole.hs:257

0x768B  0x44            PUSHI0

                        // byte length2 = 0;                                    peephole.hs:258

0x768C  0x44            PUSHI0

                        // bool isPushLocalB2 = IsPushLocalB(ref currentStream, lastInstruction2, ref offset2, ref length2);

0x768D  0x44            PUSHI0
0x768E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7690  0x20 0xAC       PUSHGLOBALB 0xAC
0x7692  0x21 0x10       PUSHSTACKADDRB 0x10 (BP+16)
0x7694  0x21 0x12       PUSHSTACKADDRB 0x12 (BP+18)
0x7696  0x34 0xF9 0x01  CALLW 0x01F9   // Peephole.IsPushLocalB
0x7699  0x1B 0x14       POPLOCALB 0x14 (BP+20)

                        // if (isPushLocalB2                                    peephole.hs:261

0x769B  0x1C 0x14       PUSHLOCALB 0x14 (BP+20)
0x769D  0x27 0x00       DUP 0x00
0x769F  0x2E 0x1D       JZB 0x76BC (+29)
0x76A1  0x4E            PUSHLOCALB00
0x76A2  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x76A4  0x05            EQ
0x76A5  0x27 0x00       DUP 0x00
0x76A7  0x2F 0x07       JNZB 0x76AE (+7)
0x76A9  0x56 0x10 0x08  PUSHLOCALBB 0x0810
0x76AC  0x05            EQ
0x76AD  0x0B            BOOLOR
0x76AE  0x0C            BOOLAND
0x76AF  0x27 0x00       DUP 0x00
0x76B1  0x2E 0x0B       JZB 0x76BC (+11)
0x76B3  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x76B5  0x20 0xAA       PUSHGLOBALB 0xAA
0x76B7  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x76B9  0x44            PUSHI0
0x76BA  0x05            EQ
0x76BB  0x0C            BOOLAND
0x76BC  0x2E 0x5F       JZB 0x771B (+95)

                        // currentStream.SetItem(lastInstruction3, byte(Instruction.INCLOCALBB));

0x76BE  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x76C0  0x20 0xAE       PUSHGLOBALB 0xAE
0x76C2  0x1A 0x3F       PUSHIB 0x3F
0x76C4  0x51 0x03       CAST 0x03
0x76C6  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // currentStream.SetItem(lastInstruction3+1, offset0);

0x76C8  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x76CA  0x20 0xAE       PUSHGLOBALB 0xAE
0x76CC  0x45            PUSHI1
0x76CD  0x00            ADD
0x76CE  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x76D0  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // if (offset3 == offset0)                              peephole.hs:270

0x76D2  0x4E            PUSHLOCALB00
0x76D3  0x1C 0x08       PUSHLOCALB 0x08 (BP+8)
0x76D5  0x05            EQ
0x76D6  0x2E 0x0F       JZB 0x76E5 (+15)

                        // currentStream.SetItem(lastInstruction3+2, offset2);

0x76D8  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x76DA  0x20 0xAE       PUSHGLOBALB 0xAE
0x76DC  0x1A 0x02       PUSHIB 0x02
0x76DE  0x00            ADD
0x76DF  0x1C 0x10       PUSHLOCALB 0x10 (BP+16)
0x76E1  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // }                                                    peephole.hs:273

0x76E3  0x30 0x0C       JB 0x76EF (+12)

                        // currentStream.SetItem(lastInstruction3+2, offset3);

0x76E5  0x1E 0xFE       PUSHRELB 0xFE (BP-2)
0x76E7  0x20 0xAE       PUSHGLOBALB 0xAE
0x76E9  0x1A 0x02       PUSHIB 0x02
0x76EB  0x00            ADD
0x76EC  0x4E            PUSHLOCALB00
0x76ED  0x24 0x15       SYSCALL0 0x15  // List.SetItem

                        // uint remove = (length0-1) + (length2-1) + (length3-1) + 1;

0x76EF  0x44            PUSHI0
0x76F0  0x1C 0x0A       PUSHLOCALB 0x0A (BP+10)
0x76F2  0x45            PUSHI1
0x76F3  0x01            SUB
0x76F4  0x1C 0x12       PUSHLOCALB 0x12 (BP+18)
0x76F6  0x45            PUSHI1
0x76F7  0x01            SUB
0x76F8  0x00            ADD
0x76F9  0x4F            PUSHLOCALB02
0x76FA  0x45            PUSHI1
0x76FB  0x01            SUB
0x76FC  0x00            ADD
0x76FD  0x45            PUSHI1
0x76FE  0x00            ADD
0x76FF  0x1B 0x16       POPLOCALB 0x16 (BP+22)

                        // TrimTail(ref currentStream, remove);                 peephole.hs:281

0x7701  0x56 0xFE 0x16  PUSHLOCALBB 0x16FE
0x7704  0x34 0xF5 0x01  CALLW 0x01F5   // Peephole.TrimTail

                        // lastInstruction0 = lastInstruction3;                 peephole.hs:282

0x7707  0x20 0xAE       PUSHGLOBALB 0xAE
0x7709  0x1F 0xA8       POPGLOBALB 0xA8

                        // lastInstruction1 = lastInstruction4;                 peephole.hs:283

0x770B  0x20 0xB0       PUSHGLOBALB 0xB0
0x770D  0x1F 0xAA       POPGLOBALB 0xAA

                        // lastInstruction2 = 0;                                peephole.hs:284

0x770F  0x44            PUSHI0
0x7710  0x1F 0xAC       POPGLOBALB 0xAC

                        // lastInstruction3 = 0;                                peephole.hs:285

0x7712  0x44            PUSHI0
0x7713  0x1F 0xAE       POPGLOBALB 0xAE

                        // lastInstruction4 = 0;                                peephole.hs:286

0x7715  0x44            PUSHI0
0x7716  0x1F 0xB0       POPGLOBALB 0xB0

                        // return true; // hunt for more                        peephole.hs:287

0x7718  0x45            PUSHI1
0x7719  0x2B 0x1A       RETRETB 0x1A

                        // }                                                    peephole.hs:289

0x771B  0x28 0x06       DECSP 0x06

                        // return false;                                        peephole.hs:290

0x771D  0x44            PUSHI0
0x771E  0x2B 0x12       RETRETB 0x12


// /source/compiler/codegen/peephole.hs:130
// ####  Peephole.IsPushLocalB(..)  ####                                        0x01F9


                        // Instruction opCode = Instruction(currentStream[index]);

0x7720  0x5F 0x01       ENTERB 0x01

                        // Instruction opCode = Instruction(currentStream[index]);

0x7722  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x7724  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x7726  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7728  0x4C            POPLOCALB00

                        // switch (opCode)                                      peephole.hs:132

0x7729  0x4E            PUSHLOCALB00

                        // case Instruction.PUSHLOCALB:                         peephole.hs:134

0x772A  0x1A 0x1C       PUSHIB 0x1C
0x772C  0x4F            PUSHLOCALB02
0x772D  0x05            EQ
0x772E  0x2E 0x13       JZB 0x7741 (+19)

                        // offset = currentStream[index+1];                     peephole.hs:136

0x7730  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x7732  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x7734  0x45            PUSHI1
0x7735  0x00            ADD
0x7736  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7738  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 2;                                          peephole.hs:137

0x773A  0x1A 0x02       PUSHIB 0x02
0x773C  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:138

0x773E  0x45            PUSHI1
0x773F  0x2B 0x0C       RETRETB 0x0C

                        // case Instruction.PUSHLOCALB00:                       peephole.hs:140

0x7741  0x1A 0x4E       PUSHIB 0x4E
0x7743  0x4F            PUSHLOCALB02
0x7744  0x05            EQ
0x7745  0x2E 0x0B       JZB 0x7750 (+11)

                        // offset = 0;                                          peephole.hs:142

0x7747  0x44            PUSHI0
0x7748  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 1;                                          peephole.hs:143

0x774A  0x45            PUSHI1
0x774B  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:144

0x774D  0x45            PUSHI1
0x774E  0x2B 0x0C       RETRETB 0x0C

                        // case Instruction.PUSHLOCALB02:                       peephole.hs:146

0x7750  0x1A 0x4F       PUSHIB 0x4F
0x7752  0x4F            PUSHLOCALB02
0x7753  0x05            EQ
0x7754  0x2E 0x0C       JZB 0x7760 (+12)

                        // offset = 2;                                          peephole.hs:148

0x7756  0x1A 0x02       PUSHIB 0x02
0x7758  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 1;                                          peephole.hs:149

0x775A  0x45            PUSHI1
0x775B  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:150

0x775D  0x45            PUSHI1
0x775E  0x2B 0x0C       RETRETB 0x0C

                        // }                                                    peephole.hs:152

0x7760  0x28 0x02       DECSP 0x02

                        // return false;                                        peephole.hs:153

0x7762  0x44            PUSHI0
0x7763  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/codegen/peephole.hs:53
// ####  Peephole.TrimTail(..)  ####                                            0x01F5

0x7765  0x49            ENTER

                        // while (remove > 0)                                   peephole.hs:54

0x7766  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7768  0x44            PUSHI0
0x7769  0x07            GT
0x776A  0x2E 0x10       JZB 0x777A (+16)

                        // currentStream.Remove(currentStream.Length-1);

0x776C  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x776E  0x1E 0xFC       PUSHRELB 0xFC (BP-4)
0x7770  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x7772  0x45            PUSHI1
0x7773  0x01            SUB
0x7774  0x24 0x17       SYSCALL0 0x17  // List.Remove

                        // remove--;                                            peephole.hs:57

0x7776  0x23 0xFE       DECLOCALB 0xFE (BP-2)

                        // }                                                    peephole.hs:58

0x7778  0x30 0xEE       JB 0x7766 (-18)

                        // }                                                    peephole.hs:59

0x777A  0x2A 0x04       RETB 0x04


// /source/compiler/codegen/peephole.hs:157
// ####  Peephole.IsPopLocalB(..)  ####                                         0x01FA


                        // Instruction opCode = Instruction(currentStream[index]);

0x777C  0x5F 0x01       ENTERB 0x01

                        // Instruction opCode = Instruction(currentStream[index]);

0x777E  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x7780  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x7782  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7784  0x4C            POPLOCALB00

                        // switch (opCode)                                      peephole.hs:159

0x7785  0x4E            PUSHLOCALB00

                        // case Instruction.POPLOCALB:                          peephole.hs:161

0x7786  0x1A 0x1B       PUSHIB 0x1B
0x7788  0x4F            PUSHLOCALB02
0x7789  0x05            EQ
0x778A  0x2E 0x13       JZB 0x779D (+19)

                        // offset = currentStream[index+1];                     peephole.hs:163

0x778C  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x778E  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x7790  0x45            PUSHI1
0x7791  0x00            ADD
0x7792  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x7794  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 2;                                          peephole.hs:164

0x7796  0x1A 0x02       PUSHIB 0x02
0x7798  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:165

0x779A  0x45            PUSHI1
0x779B  0x2B 0x0C       RETRETB 0x0C

                        // case Instruction.POPLOCALB00:                        peephole.hs:167

0x779D  0x1A 0x4C       PUSHIB 0x4C
0x779F  0x4F            PUSHLOCALB02
0x77A0  0x05            EQ
0x77A1  0x2E 0x0B       JZB 0x77AC (+11)

                        // offset = 0;                                          peephole.hs:169

0x77A3  0x44            PUSHI0
0x77A4  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 1;                                          peephole.hs:170

0x77A6  0x45            PUSHI1
0x77A7  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:171

0x77A9  0x45            PUSHI1
0x77AA  0x2B 0x0C       RETRETB 0x0C

                        // case Instruction.POPLOCALB02:                        peephole.hs:173

0x77AC  0x1A 0x4D       PUSHIB 0x4D
0x77AE  0x4F            PUSHLOCALB02
0x77AF  0x05            EQ
0x77B0  0x2E 0x0C       JZB 0x77BC (+12)

                        // offset = 2;                                          peephole.hs:175

0x77B2  0x1A 0x02       PUSHIB 0x02
0x77B4  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 1;                                          peephole.hs:176

0x77B6  0x45            PUSHI1
0x77B7  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:177

0x77B9  0x45            PUSHI1
0x77BA  0x2B 0x0C       RETRETB 0x0C

                        // }                                                    peephole.hs:179

0x77BC  0x28 0x02       DECSP 0x02

                        // return false;                                        peephole.hs:180

0x77BE  0x44            PUSHI0
0x77BF  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/codegen/peephole.hs:106
// ####  Peephole.IsPushGlobalB(..)  ####                                       0x01F7


                        // Instruction opCode = Instruction(currentStream[index]);

0x77C1  0x5F 0x01       ENTERB 0x01

                        // Instruction opCode = Instruction(currentStream[index]);

0x77C3  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x77C5  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x77C7  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x77C9  0x4C            POPLOCALB00

                        // if (opCode == Instruction.PUSHGLOBALB)               peephole.hs:108

0x77CA  0x4E            PUSHLOCALB00
0x77CB  0x1A 0x20       PUSHIB 0x20
0x77CD  0x05            EQ
0x77CE  0x2E 0x13       JZB 0x77E1 (+19)

                        // offset = currentStream[index+1];                     peephole.hs:110

0x77D0  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x77D2  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x77D4  0x45            PUSHI1
0x77D5  0x00            ADD
0x77D6  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x77D8  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 2;                                          peephole.hs:111

0x77DA  0x1A 0x02       PUSHIB 0x02
0x77DC  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:112

0x77DE  0x45            PUSHI1
0x77DF  0x2B 0x0A       RETRETB 0x0A

                        // return false;                                        peephole.hs:114

0x77E1  0x44            PUSHI0
0x77E2  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/codegen/peephole.hs:118
// ####  Peephole.IsPopGlobalB(..)  ####                                        0x01F8


                        // Instruction opCode = Instruction(currentStream[index]);

0x77E4  0x5F 0x01       ENTERB 0x01

                        // Instruction opCode = Instruction(currentStream[index]);

0x77E6  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x77E8  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x77EA  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x77EC  0x4C            POPLOCALB00

                        // if (opCode == Instruction.POPGLOBALB)                peephole.hs:120

0x77ED  0x4E            PUSHLOCALB00
0x77EE  0x1A 0x1F       PUSHIB 0x1F
0x77F0  0x05            EQ
0x77F1  0x2E 0x13       JZB 0x7804 (+19)

                        // offset = currentStream[index+1];                     peephole.hs:122

0x77F3  0x1E 0xF8       PUSHRELB 0xF8 (BP-8)
0x77F5  0x1C 0xFA       PUSHLOCALB 0xFA (BP-6)
0x77F7  0x45            PUSHI1
0x77F8  0x00            ADD
0x77F9  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x77FB  0x1D 0xFC       POPRELB 0xFC (BP-4)

                        // length = 2;                                          peephole.hs:123

0x77FD  0x1A 0x02       PUSHIB 0x02
0x77FF  0x1D 0xFE       POPRELB 0xFE (BP-2)

                        // return true;                                         peephole.hs:124

0x7801  0x45            PUSHI1
0x7802  0x2B 0x0A       RETRETB 0x0A

                        // return false;                                        peephole.hs:126

0x7804  0x44            PUSHI0
0x7805  0x2B 0x0A       RETRETB 0x0A


// /source/compiler/symbols.hs:894
// ####  Symbols.GetFunctionOverloads(..)  ####                                 0x00AC

0x7807  0x49            ENTER

                        // <uint> overloads = fOverloads[fIndex];               symbols.hs:895

0x7808  0x1A 0x04       PUSHIB 0x04
0x780A  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x780C  0x20 0x50       PUSHGLOBALB 0x50
0x780E  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7810  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x7812  0x5D            POPCOPYLOCALB00

                        // return overloads;                                    symbols.hs:896

0x7813  0x4E            PUSHLOCALB00
0x7814  0x2B 0x04       RETRETB 0x04


// /source/compiler/symbols.hs:914
// ####  Symbols.IsSysCall(..)  ####                                            0x00AF

0x7816  0x49            ENTER

                        // return fSysCall.Contains(iOverload);                 symbols.hs:915

0x7817  0x20 0x5E       PUSHGLOBALB 0x5E
0x7819  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x781B  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x781D  0x2B 0x02       RETRETB 0x02


// /source/compiler/symbols.hs:1891
// ####  Symbols.OverloadToCompile(..)  ####                                    0x00C6

0x781F  0x49            ENTER

                        // if (!overloadsCompiled.Contains(iOverload))

0x7820  0x20 0x92       PUSHGLOBALB 0x92
0x7822  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7824  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x7826  0x32 0x77 0x00  JNZW 0x789D (+119)

                        // if (IsSysCall(iOverload))                            symbols.hs:1894

0x7829  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x782B  0x2C 0xAF       CALLB 0xAF     // Symbols.IsSysCall
0x782D  0x2E 0x0B       JZB 0x7838 (+11)

                        // overloadsCompiled[iOverload] = true; // syscall : pretend it is already compiled

0x782F  0x20 0x92       PUSHGLOBALB 0x92
0x7831  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x7833  0x45            PUSHI1
0x7834  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1897

0x7836  0x2A 0x02       RETB 0x02

                        // overloadsCompiled[iOverload] = false;                symbols.hs:1900

0x7838  0x20 0x92       PUSHGLOBALB 0x92
0x783A  0x1C 0xFE       PUSHLOCALB 0xFE (BP-2)
0x783C  0x44            PUSHI0
0x783D  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // <string,variant> methodBlock = Block.GetMethodBlock();

0x783F  0x1A 0x0F       PUSHIB 0x0F
0x7841  0x1A 0x14       PUSHIB 0x14
0x7843  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x7845  0x34 0xB8 0x01  CALLW 0x01B8   // Block.GetMethodBlock
0x7848  0x5D            POPCOPYLOCALB00

                        // uint iCaller;                                        symbols.hs:1903

0x7849  0x44            PUSHI0

                        // if (methodBlock.Contains("iOverload"))               symbols.hs:1904

0x784A  0x4E            PUSHLOCALB00
0x784B  0x37 0xDE 0x10  PUSHIW 0x10DE
0x784E  0x1A 0x09       PUSHIB 0x09
0x7850  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7852  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x7854  0x2E 0x47       JZB 0x789B (+71)

                        // string sCaller = methodBlock["iOverload"];           symbols.hs:1906

0x7856  0x24 0x02       SYSCALL0 0x02  // String.New
0x7858  0x4E            PUSHLOCALB00
0x7859  0x37 0xDE 0x10  PUSHIW 0x10DE
0x785C  0x1A 0x09       PUSHIB 0x09
0x785E  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x7860  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x7862  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (TryParseUInt(sCaller, ref iCaller))              symbols.hs:1907

0x7864  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x7866  0x21 0x02       PUSHSTACKADDRB 0x02 (BP+2)
0x7868  0x2C 0x51       CALLB 0x51     // Token.TryParseUInt
0x786A  0x2E 0x2F       JZB 0x7899 (+47)

                        // if (!fTouches.Contains(iCaller))                     symbols.hs:1909

0x786C  0x20 0x94       PUSHGLOBALB 0x94
0x786E  0x4F            PUSHLOCALB02
0x786F  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x7871  0x2F 0x0F       JNZB 0x7880 (+15)

                        // <uint> empty;                                        symbols.hs:1911

0x7873  0x1A 0x04       PUSHIB 0x04
0x7875  0x24 0x0F       SYSCALL0 0x0F  // List.New

                        // fTouches[iCaller] = empty;                           symbols.hs:1912

0x7877  0x20 0x94       PUSHGLOBALB 0x94
0x7879  0x4F            PUSHLOCALB02
0x787A  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x787C  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1913

0x787E  0x28 0x02       DECSP 0x02

                        // <uint> touchesList = fTouches[iCaller];              symbols.hs:1914

0x7880  0x1A 0x04       PUSHIB 0x04
0x7882  0x24 0x0F       SYSCALL0 0x0F  // List.New
0x7884  0x20 0x94       PUSHGLOBALB 0x94
0x7886  0x4F            PUSHLOCALB02
0x7887  0x24 0x1D       SYSCALL0 0x1D  // Dictionary.Get
0x7889  0x57 0x06       POPCOPYLOCALB 0x06 (BP+6)

                        // touchesList.Append(iOverload);                       symbols.hs:1915

0x788B  0x56 0x06 0xFE  PUSHLOCALBB 0xFE06
0x788E  0x24 0x11       SYSCALL0 0x11  // List.Append

                        // fTouches[iCaller] = touchesList;                     symbols.hs:1916

0x7890  0x20 0x94       PUSHGLOBALB 0x94
0x7892  0x4F            PUSHLOCALB02
0x7893  0x1C 0x06       PUSHLOCALB 0x06 (BP+6)
0x7895  0x24 0x1B       SYSCALL0 0x1B  // Dictionary.Set

                        // }                                                    symbols.hs:1917

0x7897  0x28 0x02       DECSP 0x02

                        // }                                                    symbols.hs:1918

0x7899  0x28 0x02       DECSP 0x02

                        // }                                                    symbols.hs:1919

0x789B  0x28 0x04       DECSP 0x04

                        // }                                                    symbols.hs:1921

0x789D  0x2A 0x02       RETB 0x02


// /source/compiler/codegen/codestream.hs:18
// ####  CodeStream.CheckedBuild_Get(..)  ####                                  0x01C6

0x789F  0x49            ENTER

                        // get { return checkedBuild; }                         codestream.hs:18

0x78A0  0x20 0xA6       PUSHGLOBALB 0xA6
0x78A2  0x4A            RET0


// /source/compiler/codegen/block.hs:27
// ####  Block.GetMethodBlock(..)  ####                                         0x01B8

0x78A3  0x49            ENTER

                        // <string,variant> methodBlock;                        block.hs:28

0x78A4  0x1A 0x0F       PUSHIB 0x0F
0x78A6  0x1A 0x14       PUSHIB 0x14
0x78A8  0x24 0x19       SYSCALL0 0x19  // Dictionary.New

                        // uint iBlock = blockList.Length;                      block.hs:29

0x78AA  0x44            PUSHI0
0x78AB  0x20 0x9C       PUSHGLOBALB 0x9C
0x78AD  0x24 0x10       SYSCALL0 0x10  // List.Length_Get
0x78AF  0x4D            POPLOCALB02

                        // if (iBlock == 0)                                     block.hs:32

0x78B0  0x4F            PUSHLOCALB02
0x78B1  0x2E 0x28       JZB 0x78D9 (+40)

                        // iBlock--;                                            block.hs:36

0x78B3  0x23 0x02       DECLOCALB 0x02 (BP+2)

                        // <string,variant> blockContext = blockList[iBlock];

0x78B5  0x1A 0x0F       PUSHIB 0x0F
0x78B7  0x1A 0x14       PUSHIB 0x14
0x78B9  0x24 0x19       SYSCALL0 0x19  // Dictionary.New
0x78BB  0x20 0x9C       PUSHGLOBALB 0x9C
0x78BD  0x4F            PUSHLOCALB02
0x78BE  0x24 0x13       SYSCALL0 0x13  // List.GetItem
0x78C0  0x57 0x04       POPCOPYLOCALB 0x04 (BP+4)

                        // if (blockContext.Contains("arguments"))              block.hs:38

0x78C2  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x78C4  0x1A 0x8B       PUSHIB 0x8B
0x78C6  0x1A 0x09       PUSHIB 0x09
0x78C8  0x24 0x00       SYSCALL0 0x00  // String.NewFromConstant
0x78CA  0x24 0x1C       SYSCALL0 0x1C  // Dictionary.Contains
0x78CC  0x2E 0x09       JZB 0x78D5 (+9)

                        // methodBlock = blockContext;                          block.hs:40

0x78CE  0x1C 0x04       PUSHLOCALB 0x04 (BP+4)
0x78D0  0x5D            POPCOPYLOCALB00

                        // break;                                               block.hs:41

0x78D1  0x28 0x02       DECSP 0x02
0x78D3  0x30 0x06       JB 0x78D9 (+6)

                        // }                                                    block.hs:43

0x78D5  0x28 0x02       DECSP 0x02
0x78D7  0x30 0xD9       JB 0x78B0 (-39)

                        // return methodBlock;                                  block.hs:44

0x78D9  0x4E            PUSHLOCALB00
0x78DA  0x2B 0x04       RETRETB 0x04
